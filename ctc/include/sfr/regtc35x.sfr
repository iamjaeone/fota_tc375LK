/**************************************************************************
**
** Generated by mira2xml
** 
** This file contains all SFR and BIT names and on-chip register definitions
** It is based on the following document(s):
** - mira/tc35x.xml (V2.5.1)
** 
** Copyright 2002-2018 TASKING BV
**
**************************************************************************/
#ifndef _REGTC35X_H
#define _REGTC35X_H

/* Core Base */
#define core_base	0xf881	/* The base address off the memory for the CSFR's */
#define core_base_0	0xf881	/* The base address off the memory for the CSFR's CPU0 */
#define core_base_1	0xf883	/* The base address off the memory for the CSFR's CPU1 */
#define core_base_2	0xf885	/* The base address off the memory for the CSFR's CPU2 */

/* Core Special Function Registers (CSFR). Macros, such as SMACON, that expand to a 16-bit number do not directly represent a memory address.
   They are intended to be used with the intrinsic functions __mfcr(...) and __mtcr(...). */
#define SMACON	0x900c	/* CPUx SIST Mode Access Control Register */
#define DIEAR	0x9020	/* CPUx Data Integrity Error Address Register */
#define DIETR	0x9024	/* CPUx Data Integrity Error Trap Register */
#define PIEAR	0x9210	/* CPUx Program Integrity Error Address Register */
#define PIETR	0x9214	/* CPUx Program Integrity Error Trap Register */
#define TASK_ASI	0x8004	/* CPUx Task Address Space Identifier Register */
#define PMA0	0x8100	/* CPUx Data Access CacheabilityRegister */
#define PMA1	0x8104	/* CPUx Code Access CacheabilityRegister */
#define PMA2	0x8108	/* CPUx Peripheral Space Identifier register */
#define COMPAT	0x9400	/* CPUx Compatibility Control Register */
#define PCXI	0xfe00	/* CPUx Previous Context Information Register */
#define PSW	0xfe04	/* CPUx Program Status Word */
#define PC	0xfe08	/* CPUx Program Counter */
#define SYSCON	0xfe14	/* CPUx System Configuration Register */
#define CPU_ID	0xfe18	/* CPUx Identification Register TC1.6.2P */
#define CORE_ID	0xfe1c	/* CPUx Core Identification Register */
#define BIV	0xfe20	/* CPUx Base Interrupt Vector Table Pointer */
#define BTV	0xfe24	/* CPUx Base Trap Vector Table Pointer */
#define ISP	0xfe28	/* CPUx Interrupt Stack Pointer */
#define ICR	0xfe2c	/* CPUx Interrupt Control Register */
#define FCX	0xfe38	/* CPUx Free CSA List Head Pointer */
#define LCX	0xfe3c	/* CPUx Free CSA List Limit Pointer */
#define CUS_ID	0xfe50	/* CPUx Customer ID register */
#define DPR0_L	0xc000	/* CPUx Data Protection Range 0, Lower Bound Register */
#define DPR1_L	0xc008	/* CPUx Data Protection Range 1, Lower Bound Register */
#define DPR2_L	0xc010	/* CPUx Data Protection Range 2, Lower Bound Register */
#define DPR3_L	0xc018	/* CPUx Data Protection Range 3, Lower Bound Register */
#define DPR4_L	0xc020	/* CPUx Data Protection Range 4, Lower Bound Register */
#define DPR5_L	0xc028	/* CPUx Data Protection Range 5, Lower Bound Register */
#define DPR6_L	0xc030	/* CPUx Data Protection Range 6, Lower Bound Register */
#define DPR7_L	0xc038	/* CPUx Data Protection Range 7, Lower Bound Register */
#define DPR8_L	0xc040	/* CPUx Data Protection Range 8, Lower Bound Register */
#define DPR9_L	0xc048	/* CPUx Data Protection Range 9, Lower Bound Register */
#define DPR10_L	0xc050	/* CPUx Data Protection Range 10, Lower Bound Register */
#define DPR11_L	0xc058	/* CPUx Data Protection Range 11, Lower Bound Register */
#define DPR12_L	0xc060	/* CPUx Data Protection Range 12, Lower Bound Register */
#define DPR13_L	0xc068	/* CPUx Data Protection Range 13, Lower Bound Register */
#define DPR14_L	0xc070	/* CPUx Data Protection Range 14, Lower Bound Register */
#define DPR15_L	0xc078	/* CPUx Data Protection Range 15, Lower Bound Register */
#define DPR16_L	0xc080	/* CPUx Data Protection Range 16, Lower Bound Register */
#define DPR17_L	0xc088	/* CPUx Data Protection Range 17, Lower Bound Register */
#define DPR0_U	0xc004	/* CPUx Data Protection Range 0, Upper Bound Register */
#define DPR1_U	0xc00c	/* CPUx Data Protection Range 1, Upper Bound Register */
#define DPR2_U	0xc014	/* CPUx Data Protection Range 2, Upper Bound Register */
#define DPR3_U	0xc01c	/* CPUx Data Protection Range 3, Upper Bound Register */
#define DPR4_U	0xc024	/* CPUx Data Protection Range 4, Upper Bound Register */
#define DPR5_U	0xc02c	/* CPUx Data Protection Range 5, Upper Bound Register */
#define DPR6_U	0xc034	/* CPUx Data Protection Range 6, Upper Bound Register */
#define DPR7_U	0xc03c	/* CPUx Data Protection Range 7, Upper Bound Register */
#define DPR8_U	0xc044	/* CPUx Data Protection Range 8, Upper Bound Register */
#define DPR9_U	0xc04c	/* CPUx Data Protection Range 9, Upper Bound Register */
#define DPR10_U	0xc054	/* CPUx Data Protection Range 10, Upper Bound Register */
#define DPR11_U	0xc05c	/* CPUx Data Protection Range 11, Upper Bound Register */
#define DPR12_U	0xc064	/* CPUx Data Protection Range 12, Upper Bound Register */
#define DPR13_U	0xc06c	/* CPUx Data Protection Range 13, Upper Bound Register */
#define DPR14_U	0xc074	/* CPUx Data Protection Range 14, Upper Bound Register */
#define DPR15_U	0xc07c	/* CPUx Data Protection Range 15, Upper Bound Register */
#define DPR16_U	0xc084	/* CPUx Data Protection Range 16, Upper Bound Register */
#define DPR17_U	0xc08c	/* CPUx Data Protection Range 17, Upper Bound Register */
#define CPR0_L	0xd000	/* CPUx Code Protection Range 0 Lower Bound Register */
#define CPR1_L	0xd008	/* CPUx Code Protection Range 1 Lower Bound Register */
#define CPR2_L	0xd010	/* CPUx Code Protection Range 2 Lower Bound Register */
#define CPR3_L	0xd018	/* CPUx Code Protection Range 3 Lower Bound Register */
#define CPR4_L	0xd020	/* CPUx Code Protection Range 4 Lower Bound Register */
#define CPR5_L	0xd028	/* CPUx Code Protection Range 5 Lower Bound Register */
#define CPR6_L	0xd030	/* CPUx Code Protection Range 6 Lower Bound Register */
#define CPR7_L	0xd038	/* CPUx Code Protection Range 7 Lower Bound Register */
#define CPR8_L	0xd040	/* CPUx Code Protection Range 8 Lower Bound Register */
#define CPR9_L	0xd048	/* CPUx Code Protection Range 9 Lower Bound Register */
#define CPR0_U	0xd004	/* CPUx Code Protection Range 0 Upper Bound Register */
#define CPR1_U	0xd00c	/* CPUx Code Protection Range 1 Upper Bound Register */
#define CPR2_U	0xd014	/* CPUx Code Protection Range 2 Upper Bound Register */
#define CPR3_U	0xd01c	/* CPUx Code Protection Range 3 Upper Bound Register */
#define CPR4_U	0xd024	/* CPUx Code Protection Range 4 Upper Bound Register */
#define CPR5_U	0xd02c	/* CPUx Code Protection Range 5 Upper Bound Register */
#define CPR6_U	0xd034	/* CPUx Code Protection Range 6 Upper Bound Register */
#define CPR7_U	0xd03c	/* CPUx Code Protection Range 7 Upper Bound Register */
#define CPR8_U	0xd044	/* CPUx Code Protection Range 8 Upper Bound Register */
#define CPR9_U	0xd04c	/* CPUx Code Protection Range 9 Upper Bound Register */
#define CPXE_0	0xe000	/* CPUx Code Protection Execute Enable Register Set 0 */
#define CPXE_1	0xe004	/* CPUx Code Protection Execute Enable Register Set 1 */
#define CPXE_2	0xe008	/* CPUx Code Protection Execute Enable Register Set 2 */
#define CPXE_3	0xe00c	/* CPUx Code Protection Execute Enable Register Set 3 */
#define CPXE_4	0xe040	/* CPUx Code Protection Execute Enable Register Set 4 */
#define CPXE_5	0xe044	/* CPUx Code Protection Execute Enable Register Set 5 */
#define DPRE_0	0xe010	/* CPUx Data Protection Read Enable Register Set 0 */
#define DPRE_1	0xe014	/* CPUx Data Protection Read Enable Register Set 1 */
#define DPRE_2	0xe018	/* CPUx Data Protection Read Enable Register Set 2 */
#define DPRE_3	0xe01c	/* CPUx Data Protection Read Enable Register Set 3 */
#define DPRE_4	0xe050	/* CPUx Data Protection Read Enable Register Set 4 */
#define DPRE_5	0xe054	/* CPUx Data Protection Read Enable Register Set 5 */
#define DPWE_0	0xe020	/* CPUx Data Protection Write Enable Register Set 0 */
#define DPWE_1	0xe024	/* CPUx Data Protection Write Enable Register Set 1 */
#define DPWE_2	0xe028	/* CPUx Data Protection Write Enable Register Set 2 */
#define DPWE_3	0xe02c	/* CPUx Data Protection Write Enable Register Set 3 */
#define DPWE_4	0xe060	/* CPUx Data Protection Write Enable Register Set 4 */
#define DPWE_5	0xe064	/* CPUx Data Protection Write Enable Register Set 5 */
#define TPS_CON	0xe400	/* CPUx Temporal Protection System Control Register */
#define TPS_TIMER0	0xe404	/* CPUx Temporal Protection System Timer Register 0 */
#define TPS_TIMER1	0xe408	/* CPUx Temporal Protection System Timer Register 1 */
#define TPS_TIMER2	0xe40c	/* CPUx Temporal Protection System Timer Register 2 */
#define TPS_EXTIM_ENTRY_LVAL	0xe440	/* CPUx Exception Entry Timer Load Value */
#define TPS_EXTIM_ENTRY_CVAL	0xe444	/* CPUx Exception Entry Timer Current Value */
#define TPS_EXTIM_EXIT_LVAL	0xe448	/* CPUx Exception Exit Timer Load Value */
#define TPS_EXTIM_EXIT_CVAL	0xe44c	/* CPUx Exception Exit Timer Current Value */
#define TPS_EXTIM_CLASS_EN	0xe450	/* CPUx Exception Timer Class Enable Register */
#define TPS_EXTIM_STAT	0xe454	/* CPUx Exception Timer Status Register */
#define TPS_EXTIM_FCX	0xe458	/* CPUx Exception Timer FCX Register */
#define FPU_TRAP_CON	0xa000	/* CPUx Trap Control Register */
#define FPU_TRAP_PC	0xa004	/* CPUx Trapping Instruction Program Counter Register */
#define FPU_TRAP_OPC	0xa008	/* CPUx Trapping Instruction Opcode Register */
#define FPU_TRAP_SRC1	0xa010	/* CPUx Trapping Instruction Operand Register */
#define FPU_TRAP_SRC2	0xa014	/* CPUx Trapping Instruction Operand Register */
#define FPU_TRAP_SRC3	0xa018	/* CPUx Trapping Instruction Operand Register */
#define TR0EVT	0xf000	/* CPUx Trigger Event 0 */
#define TR1EVT	0xf008	/* CPUx Trigger Event 1 */
#define TR2EVT	0xf010	/* CPUx Trigger Event 2 */
#define TR3EVT	0xf018	/* CPUx Trigger Event 3 */
#define TR4EVT	0xf020	/* CPUx Trigger Event 4 */
#define TR5EVT	0xf028	/* CPUx Trigger Event 5 */
#define TR6EVT	0xf030	/* CPUx Trigger Event 6 */
#define TR7EVT	0xf038	/* CPUx Trigger Event 7 */
#define TR0ADR	0xf004	/* CPUx Trigger Address 0 */
#define TR1ADR	0xf00c	/* CPUx Trigger Address 1 */
#define TR2ADR	0xf014	/* CPUx Trigger Address 2 */
#define TR3ADR	0xf01c	/* CPUx Trigger Address 3 */
#define TR4ADR	0xf024	/* CPUx Trigger Address 4 */
#define TR5ADR	0xf02c	/* CPUx Trigger Address 5 */
#define TR6ADR	0xf034	/* CPUx Trigger Address 6 */
#define TR7ADR	0xf03c	/* CPUx Trigger Address 7 */
#define CCTRL	0xfc00	/* CPUx Counter Control */
#define CCNT	0xfc04	/* CPUx CPU Clock Cycle Count */
#define ICNT	0xfc08	/* CPUx Instruction Count */
#define M1CNT	0xfc0c	/* CPUx Multi-Count Register 1 */
#define M2CNT	0xfc10	/* CPUx Multi-Count Register 2 */
#define M3CNT	0xfc14	/* CPUx Multi-Count Register 3 */
#define DBGSR	0xfd00	/* CPUx Debug Status Register */
#define EXEVT	0xfd08	/* CPUx External Event Register */
#define CREVT	0xfd0c	/* CPUx Core Register Access Event */
#define SWEVT	0xfd10	/* CPUx Software Debug Event */
#define TRIG_ACC	0xfd30	/* CPUx TriggerAddressx */
#define DMS	0xfd40	/* CPUx Debug Monitor Start Address */
#define DCX	0xfd44	/* CPUx Debug Context Save Area Pointer */
#define DBGTCR	0xfd48	/* CPUx Debug Trap Control Register */
#define SEGEN	0x1030	/* CPUx SRI Error Generation Register */
#define DCON2	0x9000	/* CPUx Data Control Register 2 */
#define DSTR	0x9010	/* CPUx Data Synchronous Trap Register */
#define DATR	0x9018	/* CPUx Data Asynchronous Trap Register */
#define DEADD	0x901c	/* CPUx Data Error Address Register */
#define DCON0	0x9040	/* CPUx Data Memory Control Register */
#define PSTR	0x9200	/* CPUx Program Synchronous Trap Register */
#define PCON1	0x9204	/* CPUx Program Control 1 */
#define PCON2	0x9208	/* CPUx Program Control 2 */
#define PCON0	0x920c	/* CPUx Program Control 0 */

/* ASCLIN */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_ACCEN0_type;
#define ASCLIN0_ACCEN0	(*( ASCLIN0_ACCEN0_type *) 0xf00006fcu)	/* Access Enable Register 0 */
#define ASCLIN1_ACCEN0	(*( ASCLIN0_ACCEN0_type *) 0xf00007fcu)	/* Access Enable Register 0 */
#define ASCLIN2_ACCEN0	(*( ASCLIN0_ACCEN0_type *) 0xf00008fcu)	/* Access Enable Register 0 */
#define ASCLIN3_ACCEN0	(*( ASCLIN0_ACCEN0_type *) 0xf00009fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int PRESCALER      : 12;	/* Prescaling of the Fractional Divider */
		unsigned int                : 4;
		unsigned int OVERSAMPLING   : 4;	/* Oversampling Factor */
		unsigned int                : 4;
		unsigned int SAMPLEPOINT    : 4;	/* Sample Point Position */
		unsigned int                : 3;
		unsigned int SM             : 1;	/* Sample Mode */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_BITCON_type;
#define ASCLIN0_BITCON	(*( ASCLIN0_BITCON_type *) 0xf0000614u)	/* Bit Configuration Register */
#define ASCLIN1_BITCON	(*( ASCLIN0_BITCON_type *) 0xf0000714u)	/* Bit Configuration Register */
#define ASCLIN2_BITCON	(*( ASCLIN0_BITCON_type *) 0xf0000814u)	/* Bit Configuration Register */
#define ASCLIN3_BITCON	(*( ASCLIN0_BITCON_type *) 0xf0000914u)	/* Bit Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LOWERLIMIT     : 8;	/* Lower Limit */
		unsigned int UPPERLIMIT     : 8;	/* Upper Limit */
		/* const */ unsigned int MEASURED       : 12;	/* Measured Value of 8-bits from Sync Field */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_BRD_type;
#define ASCLIN0_BRD	(*( ASCLIN0_BRD_type *) 0xf0000624u)	/* Baud Rate Detection Register */
#define ASCLIN1_BRD	(*( ASCLIN0_BRD_type *) 0xf0000724u)	/* Baud Rate Detection Register */
#define ASCLIN2_BRD	(*( ASCLIN0_BRD_type *) 0xf0000824u)	/* Baud Rate Detection Register */
#define ASCLIN3_BRD	(*( ASCLIN0_BRD_type *) 0xf0000924u)	/* Baud Rate Detection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DENOMINATOR    : 12;	/* Denominator */
		unsigned int                : 4;
		unsigned int NUMERATOR      : 12;	/* Numerator */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_BRG_type;
#define ASCLIN0_BRG	(*( ASCLIN0_BRG_type *) 0xf0000620u)	/* Baud Rate Generation Register */
#define ASCLIN1_BRG	(*( ASCLIN0_BRG_type *) 0xf0000720u)	/* Baud Rate Generation Register */
#define ASCLIN2_BRG	(*( ASCLIN0_BRG_type *) 0xf0000820u)	/* Baud Rate Generation Register */
#define ASCLIN3_BRG	(*( ASCLIN0_BRG_type *) 0xf0000920u)	/* Baud Rate Generation Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_CLC_type;
#define ASCLIN0_CLC	(*( ASCLIN0_CLC_type *) 0xf0000600u)	/* Clock Control Register */
#define ASCLIN1_CLC	(*( ASCLIN0_CLC_type *) 0xf0000700u)	/* Clock Control Register */
#define ASCLIN2_CLC	(*( ASCLIN0_CLC_type *) 0xf0000800u)	/* Clock Control Register */
#define ASCLIN3_CLC	(*( ASCLIN0_CLC_type *) 0xf0000900u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLKSEL         : 5;	/* Baud Rate Logic Clock Select */
		unsigned int                : 26;
		/* const */ unsigned int CON            : 1;	/* Clock On Flag */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_CSR_type;
#define ASCLIN0_CSR	(*( ASCLIN0_CSR_type *) 0xf000064cu)	/* Clock Selection Register */
#define ASCLIN1_CSR	(*( ASCLIN0_CSR_type *) 0xf000074cu)	/* Clock Selection Register */
#define ASCLIN2_CSR	(*( ASCLIN0_CSR_type *) 0xf000084cu)	/* Clock Selection Register */
#define ASCLIN3_CSR	(*( ASCLIN0_CSR_type *) 0xf000094cu)	/* Clock Selection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DATLEN         : 4;	/* Data Length */
		unsigned int                : 9;
		unsigned int HO             : 1;	/* Header Only */
		unsigned int RM             : 1;	/* Response Mode */
		unsigned int CSM            : 1;	/* Checksum Mode */
		unsigned int RESPONSE       : 8;	/* Response Timeout Threshold Value */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_DATCON_type;
#define ASCLIN0_DATCON	(*( ASCLIN0_DATCON_type *) 0xf000061cu)	/* Data Configuration Register */
#define ASCLIN1_DATCON	(*( ASCLIN0_DATCON_type *) 0xf000071cu)	/* Data Configuration Register */
#define ASCLIN2_DATCON	(*( ASCLIN0_DATCON_type *) 0xf000081cu)	/* Data Configuration Register */
#define ASCLIN3_DATCON	(*( ASCLIN0_DATCON_type *) 0xf000091cu)	/* Data Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TH             : 1;	/* Transmit Header End Flag */
		/* const */ unsigned int TR             : 1;	/* Transmit Response End Flag */
		/* const */ unsigned int RH             : 1;	/* Receive Header End Flag */
		/* const */ unsigned int RR             : 1;	/* Receive Response End Flag */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int FED            : 1;	/* Falling Edge from Level 1 to Level 0 Detected */
		/* const */ unsigned int RED            : 1;	/* Rising Edge from Level 0 to Level 1 Detected */
		/* const */ unsigned int                : 6;
		/* const */ unsigned int TWRQ           : 1;	/* Transmit Wake Request Flag */
		/* const */ unsigned int THRQ           : 1;	/* Transmit Header Request Flag */
		/* const */ unsigned int TRRQ           : 1;	/* Transmit Response Request Flag */
		/* const */ unsigned int PE             : 1;	/* Parity Error Flag */
		/* const */ unsigned int TC             : 1;	/* Transmission Completed Flag */
		/* const */ unsigned int FE             : 1;	/* Framing Error Flag */
		/* const */ unsigned int HT             : 1;	/* Header Timeout Flag */
		/* const */ unsigned int RT             : 1;	/* Response Timeout Flag */
		/* const */ unsigned int BD             : 1;	/* Break Detected Flag */
		/* const */ unsigned int LP             : 1;	/* LIN Parity Error Flag */
		/* const */ unsigned int LA             : 1;	/* LIN Autobaud Detection Error Flag */
		/* const */ unsigned int LC             : 1;	/* LIN Checksum Error Flag */
		/* const */ unsigned int CE             : 1;	/* Collision Detection Error Flag */
		/* const */ unsigned int RFO            : 1;	/* Receive FIFO Overflow Flag */
		/* const */ unsigned int RFU            : 1;	/* Receive FIFO Underflow Flag */
		/* const */ unsigned int RFL            : 1;	/* Receive FIFO Level Flag */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TFO            : 1;	/* Transmit FIFO Overflow Flag */
		/* const */ unsigned int TFL            : 1;	/* Transmit FIFO Level Flag */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FLAGS_type;
#define ASCLIN0_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xf0000634u)	/* Flags Register */
#define ASCLIN1_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xf0000734u)	/* Flags Register */
#define ASCLIN2_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xf0000834u)	/* Flags Register */
#define ASCLIN3_FLAGS	(*( ASCLIN0_FLAGS_type *) 0xf0000934u)	/* Flags Register */

typedef volatile union
{
	struct
	{ 
		unsigned int THC            : 1;	/* Flag Clear Bit */
		unsigned int TRC            : 1;	/* Flag Clear Bit */
		unsigned int RHC            : 1;	/* Flag Clear Bit */
		unsigned int RRC            : 1;	/* Flag Clear Bit */
		unsigned int                : 1;
		unsigned int FEDC           : 1;	/* Flag Clear Bit */
		unsigned int REDC           : 1;	/* Flag Clear Bit */
		unsigned int                : 6;
		unsigned int TWRQC          : 1;	/* Flag Clear Bit */
		unsigned int THRQC          : 1;	/* Flag Clear Bit */
		unsigned int TRRQC          : 1;	/* Flag Clear Bit */
		unsigned int PEC            : 1;	/* Flag Clear Bit */
		unsigned int TCC            : 1;	/* Flag Clear Bit */
		unsigned int FEC            : 1;	/* Flag Clear Bit */
		unsigned int HTC            : 1;	/* Flag Clear Bit */
		unsigned int RTC            : 1;	/* Flag Clear Bit */
		unsigned int BDC            : 1;	/* Flag Clear Bit */
		unsigned int LPC            : 1;	/* Flag Clear Bit */
		unsigned int LAC            : 1;	/* Flag Clear Bit */
		unsigned int LCC            : 1;	/* Flag Clear Bit */
		unsigned int CEC            : 1;	/* Flag Clear Bit */
		unsigned int RFOC           : 1;	/* Flag Clear Bit */
		unsigned int RFUC           : 1;	/* Flag Clear Bit */
		unsigned int RFLC           : 1;	/* Flag Clear Bit */
		unsigned int                : 1;
		unsigned int TFOC           : 1;	/* Flag Clear Bit */
		unsigned int TFLC           : 1;	/* Flag Clear Bit */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FLAGSCLEAR_type;
#define ASCLIN0_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xf000063cu)	/* Flags Clear Register */
#define ASCLIN1_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xf000073cu)	/* Flags Clear Register */
#define ASCLIN2_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xf000083cu)	/* Flags Clear Register */
#define ASCLIN3_FLAGSCLEAR	(*( ASCLIN0_FLAGSCLEAR_type *) 0xf000093cu)	/* Flags Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int THE            : 1;	/* Flag Enable Bit */
		unsigned int TRE            : 1;	/* Flag Enable Bit */
		unsigned int RHE            : 1;	/* Flag Enable Bit */
		unsigned int RRE            : 1;	/* Flag Enable Bit */
		unsigned int                : 1;
		unsigned int FEDE           : 1;	/* Flag Enable Bit */
		unsigned int REDE           : 1;	/* Flag Enable Bit */
		unsigned int                : 9;
		unsigned int PEE            : 1;	/* Flag Enable Bit */
		unsigned int TCE            : 1;	/* Flag Enable Bit */
		unsigned int FEE            : 1;	/* Flag Enable Bit */
		unsigned int HTE            : 1;	/* Flag Enable Bit */
		unsigned int RTE            : 1;	/* Flag Enable Bit */
		unsigned int BDE            : 1;	/* Flag Enable Bit */
		unsigned int LPE            : 1;	/* Flag Enable Bit */
		unsigned int LAE            : 1;	/* Flag Enable Bit */
		unsigned int LCE            : 1;	/* Flag Enable Bit */
		unsigned int CEE            : 1;	/* Flag Enable Bit */
		unsigned int RFOE           : 1;	/* Flag Enable Bit */
		unsigned int RFUE           : 1;	/* Flag Enable Bit */
		unsigned int RFLE           : 1;	/* Flag Enable Bit */
		unsigned int                : 1;
		unsigned int TFOE           : 1;	/* Flag Enable Bit */
		unsigned int TFLE           : 1;	/* Flag Enable Bit */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FLAGSENABLE_type;
#define ASCLIN0_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xf0000640u)	/* Flags Enable Register */
#define ASCLIN1_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xf0000740u)	/* Flags Enable Register */
#define ASCLIN2_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xf0000840u)	/* Flags Enable Register */
#define ASCLIN3_FLAGSENABLE	(*( ASCLIN0_FLAGSENABLE_type *) 0xf0000940u)	/* Flags Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int THS            : 1;	/* Flag Set Bit */
		unsigned int TRS            : 1;	/* Flag Set Bit */
		unsigned int RHS            : 1;	/* Flag Set Bit */
		unsigned int RRS            : 1;	/* Flag Set Bit */
		unsigned int                : 1;
		unsigned int FEDS           : 1;	/* Flag Set Bit */
		unsigned int REDS           : 1;	/* Flag Set Bit */
		unsigned int                : 6;
		unsigned int TWRQS          : 1;	/* Flag Set Bit */
		unsigned int THRQS          : 1;	/* Flag Set Bit */
		unsigned int TRRQS          : 1;	/* Flag Set Bit */
		unsigned int PES            : 1;	/* Flag Set Bit */
		unsigned int TCS            : 1;	/* Flag Set Bit */
		unsigned int FES            : 1;	/* Flag Set Bit */
		unsigned int HTS            : 1;	/* Flag Set Bit */
		unsigned int RTS            : 1;	/* Flag Set Bit */
		unsigned int BDS            : 1;	/* Flag Set Bit */
		unsigned int LPS            : 1;	/* Flag Set Bit */
		unsigned int LAS            : 1;	/* Flag Set Bit */
		unsigned int LCS            : 1;	/* Flag Set Bit */
		unsigned int CES            : 1;	/* Flag Set Bit */
		unsigned int RFOS           : 1;	/* Flag Set Bit */
		unsigned int RFUS           : 1;	/* Flag Set Bit */
		unsigned int RFLS           : 1;	/* Flag Set Bit */
		unsigned int                : 1;
		unsigned int TFOS           : 1;	/* Flag Set Bit */
		unsigned int TFLS           : 1;	/* Flag Set Bit */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FLAGSSET_type;
#define ASCLIN0_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xf0000638u)	/* Flags Set Register */
#define ASCLIN1_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xf0000738u)	/* Flags Set Register */
#define ASCLIN2_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xf0000838u)	/* Flags Set Register */
#define ASCLIN3_FLAGSSET	(*( ASCLIN0_FLAGSSET_type *) 0xf0000938u)	/* Flags Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 6;
		unsigned int IDLE           : 3;	/* Duration of the IDLE delay */
		unsigned int STOP           : 3;	/* Number of Stop Bits */
		unsigned int LEAD           : 3;	/* Duration of the Leading Delay */
		unsigned int                : 1;
		unsigned int MODE           : 2;	/* Mode Selection */
		unsigned int                : 10;
		unsigned int MSB            : 1;	/* Shift Direction */
		unsigned int CEN            : 1;	/* Collision Detection Enable */
		unsigned int PEN            : 1;	/* Parity Enable */
		unsigned int ODD            : 1;	/* Parity Type */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_FRAMECON_type;
#define ASCLIN0_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xf0000618u)	/* Frame Control Register */
#define ASCLIN1_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xf0000718u)	/* Frame Control Register */
#define ASCLIN2_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xf0000818u)	/* Frame Control Register */
#define ASCLIN3_FRAMECON	(*( ASCLIN0_FRAMECON_type *) 0xf0000918u)	/* Frame Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_ID_type;
#define ASCLIN0_ID	(*( ASCLIN0_ID_type *) 0xf0000608u)	/* Module Identification Register */
#define ASCLIN1_ID	(*( ASCLIN0_ID_type *) 0xf0000708u)	/* Module Identification Register */
#define ASCLIN2_ID	(*( ASCLIN0_ID_type *) 0xf0000808u)	/* Module Identification Register */
#define ASCLIN3_ID	(*( ASCLIN0_ID_type *) 0xf0000908u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALTI           : 3;	/* Alternate Input Select */
		unsigned int                : 1;
		unsigned int DEPTH          : 6;	/* Digital Glitch Filter Depth */
		unsigned int                : 6;
		unsigned int CTS            : 2;	/* CTS Select */
		unsigned int                : 7;
		unsigned int RCPOL          : 1;	/* RTS CTS Polarity */
		unsigned int CPOL           : 1;	/* Clock Polarity in Synchronous Mode */
		unsigned int SPOL           : 1;	/* Slave Polarity in Synchronous Mode */
		unsigned int LB             : 1;	/* Loop Back Mode */
		unsigned int CTSEN          : 1;	/* Input Signal CTS Enable */
		/* const */ unsigned int RXM            : 1;	/* Receive Monitor */
		/* const */ unsigned int TXM            : 1;	/* Transmit Monitor */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_IOCR_type;
#define ASCLIN0_IOCR	(*( ASCLIN0_IOCR_type *) 0xf0000604u)	/* Input and Output Control Register */
#define ASCLIN1_IOCR	(*( ASCLIN0_IOCR_type *) 0xf0000704u)	/* Input and Output Control Register */
#define ASCLIN2_IOCR	(*( ASCLIN0_IOCR_type *) 0xf0000804u)	/* Input and Output Control Register */
#define ASCLIN3_IOCR	(*( ASCLIN0_IOCR_type *) 0xf0000904u)	/* Input and Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_KRST0_type;
#define ASCLIN0_KRST0	(*( ASCLIN0_KRST0_type *) 0xf00006f4u)	/* Kernel Reset Register 0 */
#define ASCLIN1_KRST0	(*( ASCLIN0_KRST0_type *) 0xf00007f4u)	/* Kernel Reset Register 0 */
#define ASCLIN2_KRST0	(*( ASCLIN0_KRST0_type *) 0xf00008f4u)	/* Kernel Reset Register 0 */
#define ASCLIN3_KRST0	(*( ASCLIN0_KRST0_type *) 0xf00009f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_KRST1_type;
#define ASCLIN0_KRST1	(*( ASCLIN0_KRST1_type *) 0xf00006f0u)	/* Kernel Reset Register 1 */
#define ASCLIN1_KRST1	(*( ASCLIN0_KRST1_type *) 0xf00007f0u)	/* Kernel Reset Register 1 */
#define ASCLIN2_KRST1	(*( ASCLIN0_KRST1_type *) 0xf00008f0u)	/* Kernel Reset Register 1 */
#define ASCLIN3_KRST1	(*( ASCLIN0_KRST1_type *) 0xf00009f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_KRSTCLR_type;
#define ASCLIN0_KRSTCLR	(*( ASCLIN0_KRSTCLR_type *) 0xf00006ecu)	/* Kernel Reset Status Clear Register */
#define ASCLIN1_KRSTCLR	(*( ASCLIN0_KRSTCLR_type *) 0xf00007ecu)	/* Kernel Reset Status Clear Register */
#define ASCLIN2_KRSTCLR	(*( ASCLIN0_KRSTCLR_type *) 0xf00008ecu)	/* Kernel Reset Status Clear Register */
#define ASCLIN3_KRSTCLR	(*( ASCLIN0_KRSTCLR_type *) 0xf00009ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BREAK          : 6;	/* Break Pulse Generation and Detection */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_LINBTIMER_type;
#define ASCLIN0_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xf000062cu)	/* LIN Break Timer Register */
#define ASCLIN1_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xf000072cu)	/* LIN Break Timer Register */
#define ASCLIN2_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xf000082cu)	/* LIN Break Timer Register */
#define ASCLIN3_LINBTIMER	(*( ASCLIN0_LINBTIMER_type *) 0xf000092cu)	/* LIN Break Timer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 23;
		unsigned int CSI            : 1;	/* Checksum Injection */
		unsigned int                : 1;
		unsigned int CSEN           : 1;	/* Hardware Checksum Enable */
		unsigned int MS             : 1;	/* Master Slave Mode */
		unsigned int ABD            : 1;	/* Autobaud Detection */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_LINCON_type;
#define ASCLIN0_LINCON	(*( ASCLIN0_LINCON_type *) 0xf0000628u)	/* LIN Control Register */
#define ASCLIN1_LINCON	(*( ASCLIN0_LINCON_type *) 0xf0000728u)	/* LIN Control Register */
#define ASCLIN2_LINCON	(*( ASCLIN0_LINCON_type *) 0xf0000828u)	/* LIN Control Register */
#define ASCLIN3_LINCON	(*( ASCLIN0_LINCON_type *) 0xf0000928u)	/* LIN Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int HEADER         : 8;	/* Header Timeout Threshold Value */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_LINHTIMER_type;
#define ASCLIN0_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xf0000630u)	/* LIN Header Timer Register */
#define ASCLIN1_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xf0000730u)	/* LIN Header Timer Register */
#define ASCLIN2_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xf0000830u)	/* LIN Header Timer Register */
#define ASCLIN3_LINHTIMER	(*( ASCLIN0_LINHTIMER_type *) 0xf0000930u)	/* LIN Header Timer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_OCS_type;
#define ASCLIN0_OCS	(*( ASCLIN0_OCS_type *) 0xf00006e8u)	/* OCDS Control and Status */
#define ASCLIN1_OCS	(*( ASCLIN0_OCS_type *) 0xf00007e8u)	/* OCDS Control and Status */
#define ASCLIN2_OCS	(*( ASCLIN0_OCS_type *) 0xf00008e8u)	/* OCDS Control and Status */
#define ASCLIN3_OCS	(*( ASCLIN0_OCS_type *) 0xf00009e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DATA           : 32;	/* Data */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_RXDATA_type;
#define ASCLIN0_RXDATA	(*( ASCLIN0_RXDATA_type *) 0xf0000648u)	/* Receive Data Register */
#define ASCLIN0_RXDATAD	(*( ASCLIN0_RXDATA_type *) 0xf0000650u)	/* Receive Data Debug Register */
#define ASCLIN1_RXDATA	(*( ASCLIN0_RXDATA_type *) 0xf0000748u)	/* Receive Data Register */
#define ASCLIN1_RXDATAD	(*( ASCLIN0_RXDATA_type *) 0xf0000750u)	/* Receive Data Debug Register */
#define ASCLIN2_RXDATA	(*( ASCLIN0_RXDATA_type *) 0xf0000848u)	/* Receive Data Register */
#define ASCLIN2_RXDATAD	(*( ASCLIN0_RXDATA_type *) 0xf0000850u)	/* Receive Data Debug Register */
#define ASCLIN3_RXDATA	(*( ASCLIN0_RXDATA_type *) 0xf0000948u)	/* Receive Data Register */
#define ASCLIN3_RXDATAD	(*( ASCLIN0_RXDATA_type *) 0xf0000950u)	/* Receive Data Debug Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FLUSH          : 1;	/* Flush the receive FIFO */
		unsigned int ENI            : 1;	/* Receive FIFO Inlet Enable */
		unsigned int                : 2;
		unsigned int FM             : 2;	/* RXFIFO Mode */
		unsigned int OUTW           : 2;	/* Receive FIFO Outlet Width */
		unsigned int INTLEVEL       : 4;	/* FIFO Interrupt Level */
		unsigned int                : 4;
		/* const */ unsigned int FILL           : 5;	/* FIFO Filling Level */
		unsigned int                : 10;
		unsigned int BUF            : 1;	/* Receive Buffer Mode */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_RXFIFOCON_type;
#define ASCLIN0_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xf0000610u)	/* RX FIFO Configuration Register */
#define ASCLIN1_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xf0000710u)	/* RX FIFO Configuration Register */
#define ASCLIN2_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xf0000810u)	/* RX FIFO Configuration Register */
#define ASCLIN3_RXFIFOCON	(*( ASCLIN0_RXFIFOCON_type *) 0xf0000910u)	/* RX FIFO Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DATA           : 32;	/* Data */
	} B;
	int I;
	unsigned int U;

} ASCLIN0_TXDATA_type;
#define ASCLIN0_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xf0000644u)	/* Transmit Data Register */
#define ASCLIN1_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xf0000744u)	/* Transmit Data Register */
#define ASCLIN2_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xf0000844u)	/* Transmit Data Register */
#define ASCLIN3_TXDATA	(*( ASCLIN0_TXDATA_type *) 0xf0000944u)	/* Transmit Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FLUSH          : 1;	/* Flush the transmit FIFO */
		unsigned int ENO            : 1;	/* Transmit FIFO Outlet Enable */
		unsigned int                : 2;
		unsigned int FM             : 2;	/* TXFIFO Mode */
		unsigned int INW            : 2;	/* Transmit FIFO Inlet Width */
		unsigned int INTLEVEL       : 4;	/* FIFO Interrupt Level */
		unsigned int                : 4;
		/* const */ unsigned int FILL           : 5;	/* FIFO Filling Level */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} ASCLIN0_TXFIFOCON_type;
#define ASCLIN0_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xf000060cu)	/* TX FIFO Configuration Register */
#define ASCLIN1_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xf000070cu)	/* TX FIFO Configuration Register */
#define ASCLIN2_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xf000080cu)	/* TX FIFO Configuration Register */
#define ASCLIN3_TXFIFOCON	(*( ASCLIN0_TXFIFOCON_type *) 0xf000090cu)	/* TX FIFO Configuration Register */


/* CCU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} CCU60_ACCEN0_type;
#define CCU60_ACCEN0	(*( CCU60_ACCEN0_type *) 0xf0002afcu)	/* Access Enable Register 0 */
#define CCU61_ACCEN0	(*( CCU60_ACCEN0_type *) 0xf0002bfcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CCV            : 16;	/* Capture/Compare Value */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC60R_type;
#define CCU60_CC60R	(*( CCU60_CC60R_type *) 0xf0002a30u)	/* Capture/Compare Register for Channel CC60 */
#define CCU60_CC61R	(*( CCU60_CC60R_type *) 0xf0002a34u)	/* Capture/Compare Register for Channel CC61 */
#define CCU60_CC62R	(*( CCU60_CC60R_type *) 0xf0002a38u)	/* Capture/Compare Register for Channel CC62 */
#define CCU61_CC60R	(*( CCU60_CC60R_type *) 0xf0002b30u)	/* Capture/Compare Register for Channel CC60 */
#define CCU61_CC61R	(*( CCU60_CC60R_type *) 0xf0002b34u)	/* Capture/Compare Register for Channel CC61 */
#define CCU61_CC62R	(*( CCU60_CC60R_type *) 0xf0002b38u)	/* Capture/Compare Register for Channel CC62 */

typedef volatile union
{
	struct
	{ 
		unsigned int CCS            : 16;	/* Shadow Register for Channel x Capture/Compare Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC60SR_type;
#define CCU60_CC60SR	(*( CCU60_CC60SR_type *) 0xf0002a40u)	/* Capture/Compare Shadow Reg. for Channel CC60 */
#define CCU60_CC61SR	(*( CCU60_CC60SR_type *) 0xf0002a44u)	/* Capture/Compare Shadow Reg. for Channel CC61 */
#define CCU60_CC62SR	(*( CCU60_CC60SR_type *) 0xf0002a48u)	/* Capture/Compare Shadow Reg. for Channel CC62 */
#define CCU61_CC60SR	(*( CCU60_CC60SR_type *) 0xf0002b40u)	/* Capture/Compare Shadow Reg. for Channel CC60 */
#define CCU61_CC61SR	(*( CCU60_CC60SR_type *) 0xf0002b44u)	/* Capture/Compare Shadow Reg. for Channel CC61 */
#define CCU61_CC62SR	(*( CCU60_CC60SR_type *) 0xf0002b48u)	/* Capture/Compare Shadow Reg. for Channel CC62 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CCV            : 16;	/* Channel CC63 Compare Value */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC63R_type;
#define CCU60_CC63R	(*( CCU60_CC63R_type *) 0xf0002a58u)	/* Compare Register for T13 */
#define CCU61_CC63R	(*( CCU60_CC63R_type *) 0xf0002b58u)	/* Compare Register for T13 */

typedef volatile union
{
	struct
	{ 
		unsigned int CCS            : 16;	/* Shadow Register for Channel CC63 Compare Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CC63SR_type;
#define CCU60_CC63SR	(*( CCU60_CC63SR_type *) 0xf0002a5cu)	/* Compare Shadow Register for T13 */
#define CCU61_CC63SR	(*( CCU60_CC63SR_type *) 0xf0002b5cu)	/* Compare Shadow Register for T13 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} CCU60_CLC_type;
#define CCU60_CLC	(*( CCU60_CLC_type *) 0xf0002a00u)	/* Clock Control Register */
#define CCU61_CLC	(*( CCU60_CLC_type *) 0xf0002b00u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCC60S         : 1;	/* Capture/Compare Status Modification Bits MCC6xS (0 = 0, 1, 2) */
		unsigned int MCC61S         : 1;	/* Capture/Compare Status Modification Bits MCC6xS (1 = 0, 1, 2) */
		unsigned int MCC62S         : 1;	/* Capture/Compare Status Modification Bits MCC6xS (2 = 0, 1, 2) */
		unsigned int                : 3;
		unsigned int MCC63S         : 1;	/* Capture/Compare Status Modification Bit MCC63S */
		unsigned int                : 1;
		unsigned int MCC60R         : 1;	/* Capture/Compare Status Modification Bits MCC6xR (0 = 0, 1, 2) */
		unsigned int MCC61R         : 1;	/* Capture/Compare Status Modification Bits MCC6xR (1 = 0, 1, 2) */
		unsigned int MCC62R         : 1;	/* Capture/Compare Status Modification Bits MCC6xR (2 = 0, 1, 2) */
		unsigned int                : 3;
		unsigned int MCC63R         : 1;	/* Capture/Compare Status Modification Bits MCC63R */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CCU60_CMPMODIF_type;
#define CCU60_CMPMODIF	(*( CCU60_CMPMODIF_type *) 0xf0002a64u)	/* Compare State Modification Register */
#define CCU61_CMPMODIF	(*( CCU60_CMPMODIF_type *) 0xf0002b64u)	/* Compare State Modification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CC60ST         : 1;	/* Capture/Compare State Bits for CC60 (x = 0, 1, 2) */
		/* const */ unsigned int CC61ST         : 1;	/* Capture/Compare State Bits for CC61 (x = 0, 1, 2) */
		/* const */ unsigned int CC62ST         : 1;	/* Capture/Compare State Bits for CC62 (x = 0, 1, 2) */
		/* const */ unsigned int CCPOS60        : 1;	/* Sampled Hall Pattern Bits */
		/* const */ unsigned int CCPOS61        : 1;	/* Sampled Hall Pattern Bits */
		/* const */ unsigned int CCPOS62        : 1;	/* Sampled Hall Pattern Bits */
		/* const */ unsigned int CC63ST         : 1;	/* Capture/Compare State Bit for CC63 */
		unsigned int                : 1;
		unsigned int CC60PS         : 1;	/* Passive State Select for Compare Outputs CC60 (x = 0, 1, 2) */
		unsigned int COUT60PS       : 1;	/* Passive State Select for Compare Outputs COUT60 (x = 0, 1, 2) */
		unsigned int CC61PS         : 1;	/* Passive State Select for Compare Outputs CC61 (x = 0, 1, 2) */
		unsigned int COUT61PS       : 1;	/* Passive State Select for Compare Outputs COUT61 (x = 0, 1, 2) */
		unsigned int CC62PS         : 1;	/* Passive State Select for Compare Outputs CC62 (x = 0, 1, 2) */
		unsigned int COUT62PS       : 1;	/* Passive State Select for Compare Outputs COUT62 (x = 0, 1, 2) */
		unsigned int COUT63PS       : 1;	/* Passive State Select for Compare Output COUT63 */
		unsigned int T13IM          : 1;	/* T13 Inverted Modulation */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_CMPSTAT_type;
#define CCU60_CMPSTAT	(*( CCU60_CMPSTAT_type *) 0xf0002a60u)	/* Compare State Register */
#define CCU61_CMPSTAT	(*( CCU60_CMPSTAT_type *) 0xf0002b60u)	/* Compare State Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODNUM         : 8;	/* Module Number Value */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ID_type;
#define CCU60_ID	(*( CCU60_ID_type *) 0xf0002a08u)	/* Module Identification Register */
#define CCU61_ID	(*( CCU60_ID_type *) 0xf0002b08u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENCC60R        : 1;	/* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC60 ENCC6xF (x=0,1,2) */
		unsigned int ENCC60F        : 1;	/* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC60 ENCC6xF (x=0,1,2) */
		unsigned int ENCC61R        : 1;	/* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC61 ENCC6xF (x=0,1,2) */
		unsigned int ENCC61F        : 1;	/* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC61 ENCC6xF (x=0,1,2) */
		unsigned int ENCC62R        : 1;	/* Capture, Compare-Match Rising Edge Interrupt Enable for Channel CC62 ENCC6xF (x=0,1,2) */
		unsigned int ENCC62F        : 1;	/* Capture, Compare-Match Falling Edge Interrupt Enable for Channel CC62 ENCC6xF (x=0,1,2) */
		unsigned int ENT12OM        : 1;	/* Enable Interrupt for T12 One-Match */
		unsigned int ENT12PM        : 1;	/* Enable Interrupt for T12 Period-Match */
		unsigned int ENT13CM        : 1;	/* Enable Interrupt for T13 Compare-Match */
		unsigned int ENT13PM        : 1;	/* Enable Interrupt for T13 Period-Match */
		unsigned int ENTRPF         : 1;	/* Enable Interrupt for Trap Flag */
		unsigned int                : 1;
		unsigned int ENCHE          : 1;	/* Enable Interrupt for Correct Hall Event */
		unsigned int ENWHE          : 1;	/* Enable Interrupt for Wrong Hall Event */
		unsigned int ENIDLE         : 1;	/* Enable Idle */
		unsigned int ENSTR          : 1;	/* Enable Multi-Channel Mode Shadow Transfer Interrupt */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_IEN_type;
#define CCU60_IEN	(*( CCU60_IEN_type *) 0xf0002ab0u)	/* Interrupt Enable Register */
#define CCU61_IEN	(*( CCU60_IEN_type *) 0xf0002bb0u)	/* Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LBE            : 1;	/* Lost Bit Event */
		unsigned int CCPOS0I        : 1;	/* Event indication for input signal CCPOS0 */
		unsigned int CCPOS1I        : 1;	/* Event indication for input signal CCPOS1 */
		unsigned int CCPOS2I        : 1;	/* Event indication for input signal CCPOS2 */
		unsigned int CC60INI        : 1;	/* Event indication for input signal CC60IN */
		unsigned int CC61INI        : 1;	/* Event indication for input signal CC61IN */
		unsigned int CC62INI        : 1;	/* Event indication for input signal CC62IN */
		unsigned int CTRAPI         : 1;	/* Event indication for input signal CTRAP */
		unsigned int T12HRI         : 1;	/* Event indication for input signal T12HR */
		unsigned int T13HRI         : 1;	/* Event indication for input signal T13HR */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} CCU60_IMON_type;
#define CCU60_IMON	(*( CCU60_IMON_type *) 0xf0002a98u)	/* Input Monitoring Register */
#define CCU61_IMON	(*( CCU60_IMON_type *) 0xf0002b98u)	/* Input Monitoring Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INPCC60        : 2;	/* Interrupt Node Pointer for Channel CC60 Interrupts INPCC6x (x=0,1,2) */
		unsigned int INPCC61        : 2;	/* Interrupt Node Pointer for Channel CC61 Interrupts INPCC6x (x=0,1,2) */
		unsigned int INPCC62        : 2;	/* Interrupt Node Pointer for Channel CC62 Interrupts INPCC6x (x=0,1,2) */
		unsigned int INPCHE         : 2;	/* Interrupt Node Pointer for the CHE Interrupt */
		unsigned int INPERR         : 2;	/* Interrupt Node Pointer for Error Interrupts */
		unsigned int INPT12         : 2;	/* Interrupt Node Pointer for Timer12 Interrupts */
		unsigned int INPT13         : 2;	/* Interrupt Node Pointer for Timer13 Interrupt */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_INP_type;
#define CCU60_INP	(*( CCU60_INP_type *) 0xf0002aacu)	/* Interrupt Node Pointer Register */
#define CCU61_INP	(*( CCU60_INP_type *) 0xf0002bacu)	/* Interrupt Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ICC60R         : 1;	/* Capture, Compare-Match Rising Edge Flag ICC60R (x=0,1,2) */
		/* const */ unsigned int ICC60F         : 1;	/* Capture, Compare-Match Falling Edge Flag ICC60F (x=0,1,2) */
		/* const */ unsigned int ICC61R         : 1;	/* Capture, Compare-Match Rising Edge Flag ICC61R (x=0,1,2) */
		/* const */ unsigned int ICC61F         : 1;	/* Capture, Compare-Match Falling Edge Flag ICC61F (x=0,1,2) */
		/* const */ unsigned int ICC62R         : 1;	/* Capture, Compare-Match Rising Edge Flag ICC62R (x=0,1,2) */
		/* const */ unsigned int ICC62F         : 1;	/* Capture, Compare-Match Falling Edge Flag ICC62F (x=0,1,2) */
		/* const */ unsigned int T12OM          : 1;	/* Timer T12 One-Match Flag */
		/* const */ unsigned int T12PM          : 1;	/* Timer T12 Period-Match Flag */
		/* const */ unsigned int T13CM          : 1;	/* Timer T13 Compare-Match Flag */
		/* const */ unsigned int T13PM          : 1;	/* Timer T13 Period-Match Flag */
		/* const */ unsigned int TRPF           : 1;	/* Trap Flag */
		/* const */ unsigned int TRPS           : 1;	/* Trap State */
		/* const */ unsigned int CHE            : 1;	/* Correct Hall Event */
		/* const */ unsigned int WHE            : 1;	/* Wrong Hall Event */
		/* const */ unsigned int IDLE           : 1;	/* IDLE State */
		/* const */ unsigned int STR            : 1;	/* Multi-Channel Mode Shadow Transfer Request */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_IS_type;
#define CCU60_IS	(*( CCU60_IS_type *) 0xf0002aa0u)	/* Interrupt Status Register */
#define CCU61_IS	(*( CCU60_IS_type *) 0xf0002ba0u)	/* Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RCC60R         : 1;	/* Reset Capture, Compare-Match Rising Edge Flag */
		unsigned int RCC60F         : 1;	/* Reset Capture, Compare-Match Falling Edge Flag */
		unsigned int RCC61R         : 1;	/* Reset Capture, Compare-Match Rising Edge Flag */
		unsigned int RCC61F         : 1;	/* Reset Capture, Compare-Match Falling Edge Flag */
		unsigned int RCC62R         : 1;	/* Reset Capture, Compare-Match Rising Edge Flag */
		unsigned int RCC62F         : 1;	/* Reset Capture, Compare-Match Falling Edge Flag */
		unsigned int RT12OM         : 1;	/* Reset Timer T12 One-Match Flag */
		unsigned int RT12PM         : 1;	/* Reset Timer T12 Period-Match Flag */
		unsigned int RT13CM         : 1;	/* Reset Timer T13 Compare-Match Flag */
		unsigned int RT13PM         : 1;	/* Reset Timer T13 Period-Match Flag */
		unsigned int RTRPF          : 1;	/* Reset Trap Flag */
		unsigned int                : 1;
		unsigned int RCHE           : 1;	/* Reset Correct Hall Event Flag */
		unsigned int RWHE           : 1;	/* Reset Wrong Hall Event Flag */
		unsigned int RIDLE          : 1;	/* Reset IDLE Flag */
		unsigned int RSTR           : 1;	/* Reset STR Flag */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ISR_type;
#define CCU60_ISR	(*( CCU60_ISR_type *) 0xf0002aa8u)	/* Interrupt Status Reset Register */
#define CCU61_ISR	(*( CCU60_ISR_type *) 0xf0002ba8u)	/* Interrupt Status Reset Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SCC60R         : 1;	/* Set Capture, Compare-Match Rising Edge Flag */
		unsigned int SCC60F         : 1;	/* Set Capture, Compare-Match Falling Edge Flag */
		unsigned int SCC61R         : 1;	/* Set Capture, Compare-Match Rising Edge Flag */
		unsigned int SCC61F         : 1;	/* Set Capture, Compare-Match Falling Edge Flag */
		unsigned int SCC62R         : 1;	/* Set Capture, Compare-Match Rising Edge Flag */
		unsigned int SCC62F         : 1;	/* Set Capture, Compare-Match Falling Edge Flag */
		unsigned int ST12OM         : 1;	/* Set Timer T12 One-Match Flag */
		unsigned int ST12PM         : 1;	/* Set Timer T12 Period-Match Flag */
		unsigned int ST13CM         : 1;	/* Set Timer T13 Compare-Match Flag */
		unsigned int ST13PM         : 1;	/* Set Timer T13 Period-Match Flag */
		unsigned int STRPF          : 1;	/* Set Trap Flag */
		unsigned int SWHC           : 1;	/* Software Hall Compare */
		unsigned int SCHE           : 1;	/* Set Correct Hall Event Flag */
		unsigned int SWHE           : 1;	/* Set Wrong Hall Event Flag */
		unsigned int SIDLE          : 1;	/* Set IDLE Flag */
		unsigned int SSTR           : 1;	/* Set STR Flag */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_ISS_type;
#define CCU60_ISS	(*( CCU60_ISS_type *) 0xf0002aa4u)	/* Interrupt Status Set Register */
#define CCU61_ISS	(*( CCU60_ISS_type *) 0xf0002ba4u)	/* Interrupt Status Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} CCU60_KRST0_type;
#define CCU60_KRST0	(*( CCU60_KRST0_type *) 0xf0002af4u)	/* Kernel Reset Register 0 */
#define CCU61_KRST0	(*( CCU60_KRST0_type *) 0xf0002bf4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CCU60_KRST1_type;
#define CCU60_KRST1	(*( CCU60_KRST1_type *) 0xf0002af0u)	/* Kernel Reset Register 1 */
#define CCU61_KRST1	(*( CCU60_KRST1_type *) 0xf0002bf0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CCU60_KRSTCLR_type;
#define CCU60_KRSTCLR	(*( CCU60_KRSTCLR_type *) 0xf0002aecu)	/* Kernel Reset Status Clear Register */
#define CCU61_KRSTCLR	(*( CCU60_KRSTCLR_type *) 0xf0002becu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SB0            : 1;	/* Sensitivity Block 0 SBx (x=0,1,2,3) */
		unsigned int SB1            : 1;	/* Sensitivity Block 1 SBx (x=0,1,2,3) */
		unsigned int SB2            : 1;	/* Sensitivity Block 2 SBx (x=0,1,2,3) */
		unsigned int SB3            : 1;	/* Sensitivity Block 3 SBx (x=0,1,2,3) */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} CCU60_KSCSR_type;
#define CCU60_KSCSR	(*( CCU60_KSCSR_type *) 0xf0002a1cu)	/* Kernel State Control Sensitivity Register */
#define CCU61_KSCSR	(*( CCU60_KSCSR_type *) 0xf0002b1cu)	/* Kernel State Control Sensitivity Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int CCPOS0EN       : 1;	/* Lost Indicator Enable for input signal CCPOS0 */
		unsigned int CCPOS1EN       : 1;	/* Lost Indicator Enable for input signal CCPOS1 */
		unsigned int CCPOS2EN       : 1;	/* Lost Indicator Enable for input signal CCPOS2 */
		unsigned int CC60INEN       : 1;	/* Lost Indicator Enable for input signal CC60IN */
		unsigned int CC61INEN       : 1;	/* Lost Indicator Enable for input signal CC61IN */
		unsigned int CC62INEN       : 1;	/* Lost Indicator Enable for input signal CC62IN */
		unsigned int CTRAPEN        : 1;	/* Lost Indicator Enable for input signal CTRAP */
		unsigned int T12HREN        : 1;	/* Lost Indicator Enable for input signal T12HR */
		unsigned int T13HREN        : 1;	/* Lost Indicator Enable for input signal T13HR */
		unsigned int                : 3;
		unsigned int LBEEN          : 1;	/* Interrupt Enable for Lost Bit Event */
		unsigned int INPLBE         : 2;	/* Interrupt Node Pointer for lost bit event */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_LI_type;
#define CCU60_LI	(*( CCU60_LI_type *) 0xf0002a9cu)	/* Lost Indicator Register */
#define CCU61_LI	(*( CCU60_LI_type *) 0xf0002b9cu)	/* Lost Indicator Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int T12            : 1;	/* T12 Available */
		/* const */ unsigned int T13            : 1;	/* T13 Available */
		/* const */ unsigned int MCM            : 1;	/* Multi-Channel Mode Available */
		/* const */ unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} CCU60_MCFG_type;
#define CCU60_MCFG	(*( CCU60_MCFG_type *) 0xf0002a04u)	/* Module Configuration Register */
#define CCU61_MCFG	(*( CCU60_MCFG_type *) 0xf0002b04u)	/* Module Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SWSEL          : 3;	/* Switching Selection */
		unsigned int                : 1;
		unsigned int SWSYN          : 2;	/* Switching Synchronization */
		unsigned int                : 2;
		unsigned int STE12U         : 1;	/* Shadow Transfer Enable for T12 Upcounting */
		unsigned int STE12D         : 1;	/* Shadow Transfer Enable for T12 Downcounting */
		unsigned int STE13U         : 1;	/* Shadow Transfer Enable for T13 Upcounting */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMCTR_type;
#define CCU60_MCMCTR	(*( CCU60_MCMCTR_type *) 0xf0002a94u)	/* Multi-Channel Mode Control Register */
#define CCU61_MCMCTR	(*( CCU60_MCMCTR_type *) 0xf0002b94u)	/* Multi-Channel Mode Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MCMP           : 6;	/* Multi-Channel PWM Pattern */
		/* const */ unsigned int R              : 1;	/* Reminder Flag */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int EXPH           : 3;	/* Expected Hall Pattern */
		/* const */ unsigned int CURH           : 3;	/* Current Hall Pattern */
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMOUT_type;
#define CCU60_MCMOUT	(*( CCU60_MCMOUT_type *) 0xf0002a90u)	/* Multi-Channel Mode Output Register */
#define CCU61_MCMOUT	(*( CCU60_MCMOUT_type *) 0xf0002b90u)	/* Multi-Channel Mode Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCMPS          : 6;	/* Multi-Channel PWM Pattern Shadow */
		unsigned int                : 1;
		unsigned int STRMCM         : 1;	/* Shadow Transfer Request for MCMPS */
		unsigned int EXPHS          : 3;	/* Expected Hall Pattern Shadow */
		unsigned int CURHS          : 3;	/* Current Hall Pattern Shadow */
		unsigned int                : 1;
		unsigned int STRHP          : 1;	/* Shadow Transfer Request for the Hall Pattern */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_MCMOUTS_type;
#define CCU60_MCMOUTS	(*( CCU60_MCMOUTS_type *) 0xf0002a8cu)	/* Multi-Channel Mode Output Shadow Register */
#define CCU61_MCMOUTS	(*( CCU60_MCMOUTS_type *) 0xf0002b8cu)	/* Multi-Channel Mode Output Shadow Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12MODEN       : 6;	/* T12 Modulation Enable */
		unsigned int                : 1;
		unsigned int MCMEN          : 1;	/* Multi-Channel Mode Enable */
		unsigned int T13MODEN       : 6;	/* T13 Modulation Enable */
		unsigned int                : 1;
		unsigned int ECT13O         : 1;	/* Enable Compare Timer T13 Output */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_MODCTR_type;
#define CCU60_MODCTR	(*( CCU60_MODCTR_type *) 0xf0002a80u)	/* Modulation Control Register */
#define CCU61_MODCTR	(*( CCU60_MODCTR_type *) 0xf0002b80u)	/* Modulation Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TRIG0SEL       : 3;	/* Output Trigger Select for CCU6061 TRIG0 */
		unsigned int TRIG1SEL       : 3;	/* Output Trigger Select for CCU6061 TRIG1 */
		unsigned int TRIG2SEL       : 3;	/* Output Trigger Select for CCU6061 TRIG2 */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} CCU60_MOSEL_type;
#define CCU60_MOSEL	(*( CCU60_MOSEL_type *) 0xf0002a0cu)	/* CCU60 Module Output Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned int TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned int TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned int                : 20;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} CCU60_OCS_type;
#define CCU60_OCS	(*( CCU60_OCS_type *) 0xf0002ae8u)	/* OCDS Control and Status Register */
#define CCU61_OCS	(*( CCU60_OCS_type *) 0xf0002be8u)	/* OCDS Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ISCC60         : 2;	/* Input Select for CC60 ISCC60 (x=0,1,2) */
		unsigned int ISCC61         : 2;	/* Input Select for CC60 ISCC61 (x=0,1,2) */
		unsigned int ISCC62         : 2;	/* Input Select for CC60 ISCC62 (x=0,1,2) */
		unsigned int ISTRP          : 2;	/* Input Select for CTRAP */
		unsigned int ISPOS0         : 2;	/* Input Select for CCPOS0 ISPOS0 (x=0,1,2) */
		unsigned int ISPOS1         : 2;	/* Input Select for CCPOS0 ISPOS1 (x=0,1,2) */
		unsigned int ISPOS2         : 2;	/* Input Select for CCPOS0 ISPOS2 (x=0,1,2) */
		unsigned int IST12HR        : 2;	/* Input Select for T12HR */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_PISEL0_type;
#define CCU60_PISEL0	(*( CCU60_PISEL0_type *) 0xf0002a10u)	/* Port Input Select Register 0 */
#define CCU61_PISEL0	(*( CCU60_PISEL0_type *) 0xf0002b10u)	/* Port Input Select Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int IST13HR        : 2;	/* Input Select for T13HR */
		unsigned int ISCNT12        : 2;	/* Input Select for T12 Counting Input */
		unsigned int ISCNT13        : 2;	/* Input Select for T13 Counting Input */
		unsigned int T12EXT         : 1;	/* Extension for T12HR Inputs */
		unsigned int T13EXT         : 1;	/* Extension for T13HR Inputs */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CCU60_PISEL2_type;
#define CCU60_PISEL2	(*( CCU60_PISEL2_type *) 0xf0002a14u)	/* Port Input Select Register 2 */
#define CCU61_PISEL2	(*( CCU60_PISEL2_type *) 0xf0002b14u)	/* Port Input Select Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int PSL            : 6;	/* Compare Outputs Passive State Level */
		unsigned int                : 1;
		unsigned int PSL63          : 1;	/* Passive State Level of Output COUT63 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CCU60_PSLR_type;
#define CCU60_PSLR	(*( CCU60_PSLR_type *) 0xf0002a88u)	/* Passive State Level Register */
#define CCU61_PSLR	(*( CCU60_PSLR_type *) 0xf0002b88u)	/* Passive State Level Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12CV          : 16;	/* Timer 12 Counter Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12_type;
#define CCU60_T12	(*( CCU60_T12_type *) 0xf0002a20u)	/* Timer T12 Counter Register */
#define CCU61_T12	(*( CCU60_T12_type *) 0xf0002b20u)	/* Timer T12 Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DTM            : 8;	/* Dead-Time */
		unsigned int DTE0           : 1;	/* Dead Time Enable Bits DTE0 (x=0,1,2) */
		unsigned int DTE1           : 1;	/* Dead Time Enable Bits DTE1 (x=0,1,2) */
		unsigned int DTE2           : 1;	/* Dead Time Enable Bits DTE2 (x=0,1,2) */
		unsigned int                : 1;
		/* const */ unsigned int DTR0           : 1;	/* Dead Time Run Indication Bits DTR0 (x=1,2,3) */
		/* const */ unsigned int DTR1           : 1;	/* Dead Time Run Indication Bits DTR1 (x=1,2,3) */
		/* const */ unsigned int DTR2           : 1;	/* Dead Time Run Indication Bits DTR2 (x=1,2,3) */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CCU60_T12DTC_type;
#define CCU60_T12DTC	(*( CCU60_T12DTC_type *) 0xf0002a28u)	/* Dead-Time Control Register for Timer12 */
#define CCU61_T12DTC	(*( CCU60_T12DTC_type *) 0xf0002b28u)	/* Dead-Time Control Register for Timer12 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSEL60         : 4;	/* Capture/Compare Mode Selection MSEL60 (x=0,1,2) */
		unsigned int MSEL61         : 4;	/* Capture/Compare Mode Selection MSEL61 (x=0,1,2) */
		unsigned int MSEL62         : 4;	/* Capture/Compare Mode Selection MSEL62 (x=0,1,2) */
		unsigned int HSYNC          : 3;	/* Hall Synchronization */
		unsigned int DBYP           : 1;	/* Delay Bypass */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12MSEL_type;
#define CCU60_T12MSEL	(*( CCU60_T12MSEL_type *) 0xf0002a68u)	/* T12 Mode Select Register */
#define CCU61_T12MSEL	(*( CCU60_T12MSEL_type *) 0xf0002b68u)	/* T12 Mode Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12PV          : 16;	/* T12 Period Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T12PR_type;
#define CCU60_T12PR	(*( CCU60_T12PR_type *) 0xf0002a24u)	/* Timer 12 Period Register */
#define CCU61_T12PR	(*( CCU60_T12PR_type *) 0xf0002b24u)	/* Timer 12 Period Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T13CV          : 16;	/* Timer 13 Counter Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T13_type;
#define CCU60_T13	(*( CCU60_T13_type *) 0xf0002a50u)	/* Timer T13 Counter Register */
#define CCU61_T13	(*( CCU60_T13_type *) 0xf0002b50u)	/* Timer T13 Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T13PV          : 16;	/* T13 Period Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_T13PR_type;
#define CCU60_T13PR	(*( CCU60_T13PR_type *) 0xf0002a54u)	/* Timer 13 Period Register */
#define CCU61_T13PR	(*( CCU60_T13PR_type *) 0xf0002b54u)	/* Timer 13 Period Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T12CLK         : 3;	/* Timer T12 Input Clock Select */
		unsigned int T12PRE         : 1;	/* Timer T12 Prescaler Bit */
		/* const */ unsigned int T12R           : 1;	/* Timer T12 Run Bit */
		/* const */ unsigned int STE12          : 1;	/* Timer T12 Shadow Transfer Enable */
		/* const */ unsigned int CDIR           : 1;	/* Count Direction of Timer T12 */
		unsigned int CTM            : 1;	/* T12 Operating Mode */
		unsigned int T13CLK         : 3;	/* Timer T13 Input Clock Select */
		unsigned int T13PRE         : 1;	/* Timer T13 Prescaler Bit */
		/* const */ unsigned int T13R           : 1;	/* Timer T13 Run Bit */
		/* const */ unsigned int STE13          : 1;	/* Timer T13 Shadow Transfer Enable */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR0_type;
#define CCU60_TCTR0	(*( CCU60_TCTR0_type *) 0xf0002a70u)	/* Timer Control Register 0 */
#define CCU61_TCTR0	(*( CCU60_TCTR0_type *) 0xf0002b70u)	/* Timer Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12SSC         : 1;	/* Timer T12 Single Shot Control */
		unsigned int T13SSC         : 1;	/* Timer T13 Single Shot Control */
		unsigned int T13TEC         : 3;	/* T13 Trigger Event Control */
		unsigned int T13TED         : 2;	/* Timer T13 Trigger Event Direction */
		unsigned int                : 1;
		unsigned int T12RSEL        : 2;	/* Timer T12 External Run Selection */
		unsigned int T13RSEL        : 2;	/* Timer T13 External Run Selection */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR2_type;
#define CCU60_TCTR2	(*( CCU60_TCTR2_type *) 0xf0002a74u)	/* Timer Control Register 2 */
#define CCU61_TCTR2	(*( CCU60_TCTR2_type *) 0xf0002b74u)	/* Timer Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int T12RR          : 1;	/* Timer T12 Run Reset */
		unsigned int T12RS          : 1;	/* Timer T12 Run Set */
		unsigned int T12RES         : 1;	/* Timer T12 Reset */
		unsigned int DTRES          : 1;	/* Dead-Time Counter Reset */
		unsigned int                : 1;
		unsigned int T12CNT         : 1;	/* Timer T12 Count Event */
		unsigned int T12STR         : 1;	/* Timer T12 Shadow Transfer Request */
		unsigned int T12STD         : 1;	/* Timer T12 Shadow Transfer Disable */
		unsigned int T13RR          : 1;	/* Timer T13 Run Reset */
		unsigned int T13RS          : 1;	/* Timer T13 Run Set */
		unsigned int T13RES         : 1;	/* Timer T13 Reset */
		unsigned int                : 2;
		unsigned int T13CNT         : 1;	/* Timer T13 Count Event */
		unsigned int T13STR         : 1;	/* Timer T13 Shadow Transfer Request */
		unsigned int T13STD         : 1;	/* Timer T13 Shadow Transfer Disable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_TCTR4_type;
#define CCU60_TCTR4	(*( CCU60_TCTR4_type *) 0xf0002a78u)	/* Timer Control Register 4 */
#define CCU61_TCTR4	(*( CCU60_TCTR4_type *) 0xf0002b78u)	/* Timer Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int TRPM0          : 1;	/* Trap Mode Control Bit 0 */
		unsigned int TRPM1          : 1;	/* Trap Mode Control Bit 1 */
		unsigned int TRPM2          : 1;	/* Trap Mode Control Bit 2 */
		unsigned int                : 5;
		unsigned int TRPEN          : 6;	/* Trap Enable Control */
		unsigned int TRPEN13        : 1;	/* Trap Enable Control for Timer T13 */
		unsigned int TRPPEN         : 1;	/* Trap Pin Enable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CCU60_TRPCTR_type;
#define CCU60_TRPCTR	(*( CCU60_TRPCTR_type *) 0xf0002a84u)	/* Trap Control Register */
#define CCU61_TRPCTR	(*( CCU60_TRPCTR_type *) 0xf0002b84u)	/* Trap Control Register */


/* CONVCTRL */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} CONVCTRL_ACCEN0_type;
#define CONVCTRL_ACCEN0	(*( CONVCTRL_ACCEN0_type *) 0xf002503cu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 28;
		unsigned int TC             : 4;	/* Test Control */
	} B;
	int I;
	unsigned int U;

} CONVCTRL_CCCTRL_type;
#define CONVCTRL_CCCTRL	(*( CONVCTRL_CCCTRL_type *) 0xf002507cu)	/* Converter Control Block Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} CONVCTRL_CLC_type;
#define CONVCTRL_CLC	(*( CONVCTRL_CLC_type *) 0xf0025000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} CONVCTRL_ID_type;
#define CONVCTRL_ID	(*( CONVCTRL_ID_type *) 0xf0025008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} CONVCTRL_KRST0_type;
#define CONVCTRL_KRST0	(*( CONVCTRL_KRST0_type *) 0xf0025034u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CONVCTRL_KRST1_type;
#define CONVCTRL_KRST1	(*( CONVCTRL_KRST1_type *) 0xf0025030u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CONVCTRL_KRSTCLR_type;
#define CONVCTRL_KRSTCLR	(*( CONVCTRL_KRSTCLR_type *) 0xf002502cu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} CONVCTRL_OCS_type;
#define CONVCTRL_OCS	(*( CONVCTRL_OCS_type *) 0xf0025028u)	/* OCDS Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PHSDIV         : 4;	/* Phase Synchronizer Divider */
		unsigned int                : 11;
		unsigned int PDWC           : 1;	/* Write Control for Phase Sync. Divider */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CONVCTRL_PHSCFG_type;
#define CONVCTRL_PHSCFG	(*( CONVCTRL_PHSCFG_type *) 0xf0025080u)	/* Phase Synchronizer Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ALF            : 1;	/* Alarm Flag for Safety Features */
		unsigned int                : 3;
		unsigned int FIPD0          : 1;	/* Fault Injection Phase sync Divider */
		unsigned int FICN0          : 1;	/* Fault Injection Counter */
		unsigned int                : 10;
		unsigned int ALFCLR         : 1;	/* Alarm Flag ALF Clear */
		unsigned int                : 3;
		unsigned int FIPD1          : 1;	/* Fault Injection Phase sync Divider */
		unsigned int FICN1          : 1;	/* Fault Injection Phase sync Divider */
		unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} CONVCTRL_PHSSFTY_type;
#define CONVCTRL_PHSSFTY	(*( CONVCTRL_PHSSFTY_type *) 0xf0025084u)	/* Phase Synchronizer Safety Control Register */


/* CPU */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 VSS            : 1;	/* Vector Spacing Select */
		unsigned __sfrbit32 bBIV           : 31;	/* Base Address of Interrupt Vector Table */
	} B;
	int I;
	unsigned int U;

} CPU0_BIV_type;
#define CPU0_BIV	(*( CPU0_BIV_type *) 0xf881fe20u)	/* CPUx Base Interrupt Vector Table Pointer */
#define CPU1_BIV	(*( CPU0_BIV_type *) 0xf883fe20u)	/* CPUx Base Interrupt Vector Table Pointer */
#define CPU2_BIV	(*( CPU0_BIV_type *) 0xf885fe20u)	/* CPUx Base Interrupt Vector Table Pointer */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 bBTV           : 31;	/* Base Address of Trap Vector Table */
	} B;
	int I;
	unsigned int U;

} CPU0_BTV_type;
#define CPU0_BTV	(*( CPU0_BTV_type *) 0xf881fe24u)	/* CPUx Base Trap Vector Table Pointer */
#define CPU1_BTV	(*( CPU0_BTV_type *) 0xf883fe24u)	/* CPUx Base Trap Vector Table Pointer */
#define CPU2_BTV	(*( CPU0_BTV_type *) 0xf885fe24u)	/* CPUx Base Trap Vector Table Pointer */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CountValue     : 31;	/* Count Value */
		unsigned __sfrbit32 SOvf           : 1;	/* Sticky Overflow Bit */
	} B;
	int I;
	unsigned int U;

} CPU0_CCNT_type;
#define CPU0_CCNT	(*( CPU0_CCNT_type *) 0xf881fc04u)	/* CPUx CPU Clock Cycle Count */
#define CPU0_ICNT	(*( CPU0_CCNT_type *) 0xf881fc08u)	/* CPUx Instruction Count */
#define CPU0_M1CNT	(*( CPU0_CCNT_type *) 0xf881fc0cu)	/* CPUx Multi-Count Register 1 */
#define CPU0_M2CNT	(*( CPU0_CCNT_type *) 0xf881fc10u)	/* CPUx Multi-Count Register 2 */
#define CPU0_M3CNT	(*( CPU0_CCNT_type *) 0xf881fc14u)	/* CPUx Multi-Count Register 3 */
#define CPU1_CCNT	(*( CPU0_CCNT_type *) 0xf883fc04u)	/* CPUx CPU Clock Cycle Count */
#define CPU1_ICNT	(*( CPU0_CCNT_type *) 0xf883fc08u)	/* CPUx Instruction Count */
#define CPU1_M1CNT	(*( CPU0_CCNT_type *) 0xf883fc0cu)	/* CPUx Multi-Count Register 1 */
#define CPU1_M2CNT	(*( CPU0_CCNT_type *) 0xf883fc10u)	/* CPUx Multi-Count Register 2 */
#define CPU1_M3CNT	(*( CPU0_CCNT_type *) 0xf883fc14u)	/* CPUx Multi-Count Register 3 */
#define CPU2_CCNT	(*( CPU0_CCNT_type *) 0xf885fc04u)	/* CPUx CPU Clock Cycle Count */
#define CPU2_ICNT	(*( CPU0_CCNT_type *) 0xf885fc08u)	/* CPUx Instruction Count */
#define CPU2_M1CNT	(*( CPU0_CCNT_type *) 0xf885fc0cu)	/* CPUx Multi-Count Register 1 */
#define CPU2_M2CNT	(*( CPU0_CCNT_type *) 0xf885fc10u)	/* CPUx Multi-Count Register 2 */
#define CPU2_M3CNT	(*( CPU0_CCNT_type *) 0xf885fc14u)	/* CPUx Multi-Count Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CM             : 1;	/* Counter Mode */
		unsigned __sfrbit32 CE             : 1;	/* Count Enable */
		unsigned __sfrbit32 M1             : 3;	/* M1CNT Configuration */
		unsigned __sfrbit32 M2             : 3;	/* M2CNT Configuration */
		unsigned __sfrbit32 M3             : 3;	/* M3CNT Configuration */
		/* const */ unsigned __sfrbit32 RES            : 21;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CCTRL_type;
#define CPU0_CCTRL	(*( CPU0_CCTRL_type *) 0xf881fc00u)	/* CPUx Counter Control */
#define CPU1_CCTRL	(*( CPU0_CCTRL_type *) 0xf883fc00u)	/* CPUx Counter Control */
#define CPU2_CCTRL	(*( CPU0_CCTRL_type *) 0xf885fc00u)	/* CPUx Counter Control */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 RM             : 1;	/* Rounding Mode Compatibility */
		unsigned __sfrbit32 SP             : 1;	/* SYSCON Safety Protection Mode Compatibility */
		/* const */ unsigned __sfrbit32 RES_4          : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_COMPAT_type;
#define CPU0_COMPAT	(*( CPU0_COMPAT_type *) 0xf8819400u)	/* CPUx Compatibility Control Register */
#define CPU1_COMPAT	(*( CPU0_COMPAT_type *) 0xf8839400u)	/* CPUx Compatibility Control Register */
#define CPU2_COMPAT	(*( CPU0_COMPAT_type *) 0xf8859400u)	/* CPUx Compatibility Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 bCORE_ID       : 3;	/* Core Identification Number */
		/* const */ unsigned __sfrbit32 RES            : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CORE_ID_type;
#define CPU0_CORE_ID	(*( CPU0_CORE_ID_type *) 0xf881fe1cu)	/* CPUx Core Identification Register */
#define CPU1_CORE_ID	(*( CPU0_CORE_ID_type *) 0xf883fe1cu)	/* CPUx Core Identification Register */
#define CPU2_CORE_ID	(*( CPU0_CORE_ID_type *) 0xf885fe1cu)	/* CPUx Core Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 LOWBND         : 27;	/* CPRy Lower Boundary Address */
	} B;
	int I;
	unsigned int U;

} CPU0_CPR0_L_type;
#define CPU0_CPR0_L	(*( CPU0_CPR0_L_type *) 0xf881d000u)	/* CPUx Code Protection Range 0 Lower Bound Register */
#define CPU0_CPR1_L	(*( CPU0_CPR0_L_type *) 0xf881d008u)	/* CPUx Code Protection Range 1 Lower Bound Register */
#define CPU0_CPR2_L	(*( CPU0_CPR0_L_type *) 0xf881d010u)	/* CPUx Code Protection Range 2 Lower Bound Register */
#define CPU0_CPR3_L	(*( CPU0_CPR0_L_type *) 0xf881d018u)	/* CPUx Code Protection Range 3 Lower Bound Register */
#define CPU0_CPR4_L	(*( CPU0_CPR0_L_type *) 0xf881d020u)	/* CPUx Code Protection Range 4 Lower Bound Register */
#define CPU0_CPR5_L	(*( CPU0_CPR0_L_type *) 0xf881d028u)	/* CPUx Code Protection Range 5 Lower Bound Register */
#define CPU0_CPR6_L	(*( CPU0_CPR0_L_type *) 0xf881d030u)	/* CPUx Code Protection Range 6 Lower Bound Register */
#define CPU0_CPR7_L	(*( CPU0_CPR0_L_type *) 0xf881d038u)	/* CPUx Code Protection Range 7 Lower Bound Register */
#define CPU0_CPR8_L	(*( CPU0_CPR0_L_type *) 0xf881d040u)	/* CPUx Code Protection Range 8 Lower Bound Register */
#define CPU0_CPR9_L	(*( CPU0_CPR0_L_type *) 0xf881d048u)	/* CPUx Code Protection Range 9 Lower Bound Register */
#define CPU1_CPR0_L	(*( CPU0_CPR0_L_type *) 0xf883d000u)	/* CPUx Code Protection Range 0 Lower Bound Register */
#define CPU1_CPR1_L	(*( CPU0_CPR0_L_type *) 0xf883d008u)	/* CPUx Code Protection Range 1 Lower Bound Register */
#define CPU1_CPR2_L	(*( CPU0_CPR0_L_type *) 0xf883d010u)	/* CPUx Code Protection Range 2 Lower Bound Register */
#define CPU1_CPR3_L	(*( CPU0_CPR0_L_type *) 0xf883d018u)	/* CPUx Code Protection Range 3 Lower Bound Register */
#define CPU1_CPR4_L	(*( CPU0_CPR0_L_type *) 0xf883d020u)	/* CPUx Code Protection Range 4 Lower Bound Register */
#define CPU1_CPR5_L	(*( CPU0_CPR0_L_type *) 0xf883d028u)	/* CPUx Code Protection Range 5 Lower Bound Register */
#define CPU1_CPR6_L	(*( CPU0_CPR0_L_type *) 0xf883d030u)	/* CPUx Code Protection Range 6 Lower Bound Register */
#define CPU1_CPR7_L	(*( CPU0_CPR0_L_type *) 0xf883d038u)	/* CPUx Code Protection Range 7 Lower Bound Register */
#define CPU1_CPR8_L	(*( CPU0_CPR0_L_type *) 0xf883d040u)	/* CPUx Code Protection Range 8 Lower Bound Register */
#define CPU1_CPR9_L	(*( CPU0_CPR0_L_type *) 0xf883d048u)	/* CPUx Code Protection Range 9 Lower Bound Register */
#define CPU2_CPR0_L	(*( CPU0_CPR0_L_type *) 0xf885d000u)	/* CPUx Code Protection Range 0 Lower Bound Register */
#define CPU2_CPR1_L	(*( CPU0_CPR0_L_type *) 0xf885d008u)	/* CPUx Code Protection Range 1 Lower Bound Register */
#define CPU2_CPR2_L	(*( CPU0_CPR0_L_type *) 0xf885d010u)	/* CPUx Code Protection Range 2 Lower Bound Register */
#define CPU2_CPR3_L	(*( CPU0_CPR0_L_type *) 0xf885d018u)	/* CPUx Code Protection Range 3 Lower Bound Register */
#define CPU2_CPR4_L	(*( CPU0_CPR0_L_type *) 0xf885d020u)	/* CPUx Code Protection Range 4 Lower Bound Register */
#define CPU2_CPR5_L	(*( CPU0_CPR0_L_type *) 0xf885d028u)	/* CPUx Code Protection Range 5 Lower Bound Register */
#define CPU2_CPR6_L	(*( CPU0_CPR0_L_type *) 0xf885d030u)	/* CPUx Code Protection Range 6 Lower Bound Register */
#define CPU2_CPR7_L	(*( CPU0_CPR0_L_type *) 0xf885d038u)	/* CPUx Code Protection Range 7 Lower Bound Register */
#define CPU2_CPR8_L	(*( CPU0_CPR0_L_type *) 0xf885d040u)	/* CPUx Code Protection Range 8 Lower Bound Register */
#define CPU2_CPR9_L	(*( CPU0_CPR0_L_type *) 0xf885d048u)	/* CPUx Code Protection Range 9 Lower Bound Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 UPPBND         : 27;	/* CPR0_m Upper Boundary Address */
	} B;
	int I;
	unsigned int U;

} CPU0_CPR0_U_type;
#define CPU0_CPR0_U	(*( CPU0_CPR0_U_type *) 0xf881d004u)	/* CPUx Code Protection Range 0 Upper Bound Register */
#define CPU0_CPR1_U	(*( CPU0_CPR0_U_type *) 0xf881d00cu)	/* CPUx Code Protection Range 1 Upper Bound Register */
#define CPU0_CPR2_U	(*( CPU0_CPR0_U_type *) 0xf881d014u)	/* CPUx Code Protection Range 2 Upper Bound Register */
#define CPU0_CPR3_U	(*( CPU0_CPR0_U_type *) 0xf881d01cu)	/* CPUx Code Protection Range 3 Upper Bound Register */
#define CPU0_CPR4_U	(*( CPU0_CPR0_U_type *) 0xf881d024u)	/* CPUx Code Protection Range 4 Upper Bound Register */
#define CPU0_CPR5_U	(*( CPU0_CPR0_U_type *) 0xf881d02cu)	/* CPUx Code Protection Range 5 Upper Bound Register */
#define CPU0_CPR6_U	(*( CPU0_CPR0_U_type *) 0xf881d034u)	/* CPUx Code Protection Range 6 Upper Bound Register */
#define CPU0_CPR7_U	(*( CPU0_CPR0_U_type *) 0xf881d03cu)	/* CPUx Code Protection Range 7 Upper Bound Register */
#define CPU0_CPR8_U	(*( CPU0_CPR0_U_type *) 0xf881d044u)	/* CPUx Code Protection Range 8 Upper Bound Register */
#define CPU0_CPR9_U	(*( CPU0_CPR0_U_type *) 0xf881d04cu)	/* CPUx Code Protection Range 9 Upper Bound Register */
#define CPU1_CPR0_U	(*( CPU0_CPR0_U_type *) 0xf883d004u)	/* CPUx Code Protection Range 0 Upper Bound Register */
#define CPU1_CPR1_U	(*( CPU0_CPR0_U_type *) 0xf883d00cu)	/* CPUx Code Protection Range 1 Upper Bound Register */
#define CPU1_CPR2_U	(*( CPU0_CPR0_U_type *) 0xf883d014u)	/* CPUx Code Protection Range 2 Upper Bound Register */
#define CPU1_CPR3_U	(*( CPU0_CPR0_U_type *) 0xf883d01cu)	/* CPUx Code Protection Range 3 Upper Bound Register */
#define CPU1_CPR4_U	(*( CPU0_CPR0_U_type *) 0xf883d024u)	/* CPUx Code Protection Range 4 Upper Bound Register */
#define CPU1_CPR5_U	(*( CPU0_CPR0_U_type *) 0xf883d02cu)	/* CPUx Code Protection Range 5 Upper Bound Register */
#define CPU1_CPR6_U	(*( CPU0_CPR0_U_type *) 0xf883d034u)	/* CPUx Code Protection Range 6 Upper Bound Register */
#define CPU1_CPR7_U	(*( CPU0_CPR0_U_type *) 0xf883d03cu)	/* CPUx Code Protection Range 7 Upper Bound Register */
#define CPU1_CPR8_U	(*( CPU0_CPR0_U_type *) 0xf883d044u)	/* CPUx Code Protection Range 8 Upper Bound Register */
#define CPU1_CPR9_U	(*( CPU0_CPR0_U_type *) 0xf883d04cu)	/* CPUx Code Protection Range 9 Upper Bound Register */
#define CPU2_CPR0_U	(*( CPU0_CPR0_U_type *) 0xf885d004u)	/* CPUx Code Protection Range 0 Upper Bound Register */
#define CPU2_CPR1_U	(*( CPU0_CPR0_U_type *) 0xf885d00cu)	/* CPUx Code Protection Range 1 Upper Bound Register */
#define CPU2_CPR2_U	(*( CPU0_CPR0_U_type *) 0xf885d014u)	/* CPUx Code Protection Range 2 Upper Bound Register */
#define CPU2_CPR3_U	(*( CPU0_CPR0_U_type *) 0xf885d01cu)	/* CPUx Code Protection Range 3 Upper Bound Register */
#define CPU2_CPR4_U	(*( CPU0_CPR0_U_type *) 0xf885d024u)	/* CPUx Code Protection Range 4 Upper Bound Register */
#define CPU2_CPR5_U	(*( CPU0_CPR0_U_type *) 0xf885d02cu)	/* CPUx Code Protection Range 5 Upper Bound Register */
#define CPU2_CPR6_U	(*( CPU0_CPR0_U_type *) 0xf885d034u)	/* CPUx Code Protection Range 6 Upper Bound Register */
#define CPU2_CPR7_U	(*( CPU0_CPR0_U_type *) 0xf885d03cu)	/* CPUx Code Protection Range 7 Upper Bound Register */
#define CPU2_CPR8_U	(*( CPU0_CPR0_U_type *) 0xf885d044u)	/* CPUx Code Protection Range 8 Upper Bound Register */
#define CPU2_CPR9_U	(*( CPU0_CPR0_U_type *) 0xf885d04cu)	/* CPUx Code Protection Range 9 Upper Bound Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MOD_REV        : 8;	/* Revision Number */
		/* const */ unsigned __sfrbit32 MOD_32B        : 8;	/* 32-Bit Module Enable */
		/* const */ unsigned __sfrbit32 MOD            : 16;	/* Module Identification Number */
	} B;
	int I;
	unsigned int U;

} CPU0_CPU_ID_type;
#define CPU0_CPU_ID	(*( CPU0_CPU_ID_type *) 0xf881fe18u)	/* CPUx Identification Register TC1.6.2P */
#define CPU1_CPU_ID	(*( CPU0_CPU_ID_type *) 0xf883fe18u)	/* CPUx Identification Register TC1.6.2P */
#define CPU2_CPU_ID	(*( CPU0_CPU_ID_type *) 0xf885fe18u)	/* CPUx Identification Register TC1.6.2P */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 XE_n           : 10;	/* Execute Enable Range select - XE[n] */
		/* const */ unsigned __sfrbit32 RES            : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CPXE_0_type;
#define CPU0_CPXE_0	(*( CPU0_CPXE_0_type *) 0xf881e000u)	/* CPUx Code Protection Execute Enable Register Set 0 */
#define CPU0_CPXE_1	(*( CPU0_CPXE_0_type *) 0xf881e004u)	/* CPUx Code Protection Execute Enable Register Set 1 */
#define CPU0_CPXE_2	(*( CPU0_CPXE_0_type *) 0xf881e008u)	/* CPUx Code Protection Execute Enable Register Set 2 */
#define CPU0_CPXE_3	(*( CPU0_CPXE_0_type *) 0xf881e00cu)	/* CPUx Code Protection Execute Enable Register Set 3 */
#define CPU0_CPXE_4	(*( CPU0_CPXE_0_type *) 0xf881e040u)	/* CPUx Code Protection Execute Enable Register Set 4 */
#define CPU0_CPXE_5	(*( CPU0_CPXE_0_type *) 0xf881e044u)	/* CPUx Code Protection Execute Enable Register Set 5 */
#define CPU1_CPXE_0	(*( CPU0_CPXE_0_type *) 0xf883e000u)	/* CPUx Code Protection Execute Enable Register Set 0 */
#define CPU1_CPXE_1	(*( CPU0_CPXE_0_type *) 0xf883e004u)	/* CPUx Code Protection Execute Enable Register Set 1 */
#define CPU1_CPXE_2	(*( CPU0_CPXE_0_type *) 0xf883e008u)	/* CPUx Code Protection Execute Enable Register Set 2 */
#define CPU1_CPXE_3	(*( CPU0_CPXE_0_type *) 0xf883e00cu)	/* CPUx Code Protection Execute Enable Register Set 3 */
#define CPU1_CPXE_4	(*( CPU0_CPXE_0_type *) 0xf883e040u)	/* CPUx Code Protection Execute Enable Register Set 4 */
#define CPU1_CPXE_5	(*( CPU0_CPXE_0_type *) 0xf883e044u)	/* CPUx Code Protection Execute Enable Register Set 5 */
#define CPU2_CPXE_0	(*( CPU0_CPXE_0_type *) 0xf885e000u)	/* CPUx Code Protection Execute Enable Register Set 0 */
#define CPU2_CPXE_1	(*( CPU0_CPXE_0_type *) 0xf885e004u)	/* CPUx Code Protection Execute Enable Register Set 1 */
#define CPU2_CPXE_2	(*( CPU0_CPXE_0_type *) 0xf885e008u)	/* CPUx Code Protection Execute Enable Register Set 2 */
#define CPU2_CPXE_3	(*( CPU0_CPXE_0_type *) 0xf885e00cu)	/* CPUx Code Protection Execute Enable Register Set 3 */
#define CPU2_CPXE_4	(*( CPU0_CPXE_0_type *) 0xf885e040u)	/* CPUx Code Protection Execute Enable Register Set 4 */
#define CPU2_CPXE_5	(*( CPU0_CPXE_0_type *) 0xf885e044u)	/* CPUx Code Protection Execute Enable Register Set 5 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EVTA           : 3;	/* Event Associated */
		unsigned __sfrbit32 BBM            : 1;	/* Break Before Make (BBM) or Break After Make (BAM) Selection */
		unsigned __sfrbit32 BOD            : 1;	/* Breakout Disable */
		unsigned __sfrbit32 SUSP           : 1;	/* CDC Suspend-Out Signal State */
		unsigned __sfrbit32 CNT            : 2;	/* Counter */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CREVT_type;
#define CPU0_CREVT	(*( CPU0_CREVT_type *) 0xf881fd0cu)	/* CPUx Core Register Access Event */
#define CPU0_SWEVT	(*( CPU0_CREVT_type *) 0xf881fd10u)	/* CPUx Software Debug Event */
#define CPU1_CREVT	(*( CPU0_CREVT_type *) 0xf883fd0cu)	/* CPUx Core Register Access Event */
#define CPU1_SWEVT	(*( CPU0_CREVT_type *) 0xf883fd10u)	/* CPUx Software Debug Event */
#define CPU2_CREVT	(*( CPU0_CREVT_type *) 0xf885fd0cu)	/* CPUx Core Register Access Event */
#define CPU2_SWEVT	(*( CPU0_CREVT_type *) 0xf885fd10u)	/* CPUx Software Debug Event */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CID            : 3;	/* Customer ID */
		/* const */ unsigned __sfrbit32 RES            : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_CUS_ID_type;
#define CPU0_CUS_ID	(*( CPU0_CUS_ID_type *) 0xf881fe50u)	/* CPUx Customer ID register */
#define CPU1_CUS_ID	(*( CPU0_CUS_ID_type *) 0xf883fe50u)	/* CPUx Customer ID register */
#define CPU2_CUS_ID	(*( CPU0_CUS_ID_type *) 0xf885fe50u)	/* CPUx Customer ID register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 SBE            : 1;	/* Store Bus Error */
		/* const */ unsigned __sfrbit32 RES_3          : 5;	/* Reserved */
		unsigned __sfrbit32 CWE            : 1;	/* Cache Writeback Error */
		unsigned __sfrbit32 CFE            : 1;	/* Cache Flush Error */
		/* const */ unsigned __sfrbit32 RES_6          : 3;	/* Reserved */
		unsigned __sfrbit32 SOE            : 1;	/* Store Overlay Error */
		/* const */ unsigned __sfrbit32 RES_8          : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 RES_9          : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DATR_type;
#define CPU0_DATR	(*( CPU0_DATR_type *) 0xf8819018u)	/* CPUx Data Asynchronous Trap Register */
#define CPU1_DATR	(*( CPU0_DATR_type *) 0xf8839018u)	/* CPUx Data Asynchronous Trap Register */
#define CPU2_DATR	(*( CPU0_DATR_type *) 0xf8859018u)	/* CPUx Data Asynchronous Trap Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DE             : 1;	/* Debug Enable */
		unsigned __sfrbit32 HALT           : 2;	/* CPU Halt Request / Status Field */
		/* const */ unsigned __sfrbit32 SIH            : 1;	/* Suspend-in Halt */
		unsigned __sfrbit32 SUSP           : 1;	/* Current State of the Core Suspend-Out Signal */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 PREVSUSP       : 1;	/* Previous State of Core Suspend-Out Signal */
		unsigned __sfrbit32 PEVT           : 1;	/* Posted Event */
		/* const */ unsigned __sfrbit32 EVTSRC         : 5;	/* Event Source */
		/* const */ unsigned __sfrbit32 RES_9          : 19;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DBGSR_type;
#define CPU0_DBGSR	(*( CPU0_DBGSR_type *) 0xf881fd00u)	/* CPUx Debug Status Register */
#define CPU1_DBGSR	(*( CPU0_DBGSR_type *) 0xf883fd00u)	/* CPUx Debug Status Register */
#define CPU2_DBGSR	(*( CPU0_DBGSR_type *) 0xf885fd00u)	/* CPUx Debug Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DTA            : 1;	/* Debug Trap Active Bit */
		/* const */ unsigned __sfrbit32 RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DBGTCR_type;
#define CPU0_DBGTCR	(*( CPU0_DBGTCR_type *) 0xf881fd48u)	/* CPUx Debug Trap Control Register */
#define CPU1_DBGTCR	(*( CPU0_DBGTCR_type *) 0xf883fd48u)	/* CPUx Debug Trap Control Register */
#define CPU2_DBGTCR	(*( CPU0_DBGTCR_type *) 0xf885fd48u)	/* CPUx Debug Trap Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 DCBYP          : 1;	/* Data Cache Bypass */
		/* const */ unsigned __sfrbit32 RES_3          : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DCON0_type;
#define CPU0_DCON0	(*( CPU0_DCON0_type *) 0xf8819040u)	/* CPUx Data Memory Control Register */
#define CPU1_DCON0	(*( CPU0_DCON0_type *) 0xf8839040u)	/* CPUx Data Memory Control Register */
#define CPU2_DCON0	(*( CPU0_DCON0_type *) 0xf8859040u)	/* CPUx Data Memory Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 DCACHE_SZE     : 16;	/* Data Cache Size */
		/* const */ unsigned __sfrbit32 DSCRATCH_SZE   : 16;	/* Data Scratch Size */
	} B;
	int I;
	unsigned int U;

} CPU0_DCON2_type;
#define CPU0_DCON2	(*( CPU0_DCON2_type *) 0xf8819000u)	/* CPUx Data Control Register 2 */
#define CPU1_DCON2	(*( CPU0_DCON2_type *) 0xf8839000u)	/* CPUx Data Control Register 2 */
#define CPU2_DCON2	(*( CPU0_DCON2_type *) 0xf8859000u)	/* CPUx Data Control Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 6;	/* Reserved */
		unsigned __sfrbit32 DCXValue       : 26;	/* Debug Context Save Area Pointer */
	} B;
	int I;
	unsigned int U;

} CPU0_DCX_type;
#define CPU0_DCX	(*( CPU0_DCX_type *) 0xf881fd44u)	/* CPUx Debug Context Save Area Pointer */
#define CPU1_DCX	(*( CPU0_DCX_type *) 0xf883fd44u)	/* CPUx Debug Context Save Area Pointer */
#define CPU2_DCX	(*( CPU0_DCX_type *) 0xf885fd44u)	/* CPUx Debug Context Save Area Pointer */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ERROR_ADDRESS  : 32;	/* Error Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DEADD_type;
#define CPU0_DEADD	(*( CPU0_DEADD_type *) 0xf881901cu)	/* CPUx Data Error Address Register */
#define CPU1_DEADD	(*( CPU0_DEADD_type *) 0xf883901cu)	/* CPUx Data Error Address Register */
#define CPU2_DEADD	(*( CPU0_DEADD_type *) 0xf885901cu)	/* CPUx Data Error Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TA             : 32;	/* Transaction Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DIEAR_type;
#define CPU0_DIEAR	(*( CPU0_DIEAR_type *) 0xf8819020u)	/* CPUx Data Integrity Error Address Register */
#define CPU0_PIEAR	(*( CPU0_DIEAR_type *) 0xf8819210u)	/* CPUx Program Integrity Error Address Register */
#define CPU1_DIEAR	(*( CPU0_DIEAR_type *) 0xf8839020u)	/* CPUx Data Integrity Error Address Register */
#define CPU1_PIEAR	(*( CPU0_DIEAR_type *) 0xf8839210u)	/* CPUx Program Integrity Error Address Register */
#define CPU2_DIEAR	(*( CPU0_DIEAR_type *) 0xf8859020u)	/* CPUx Data Integrity Error Address Register */
#define CPU2_PIEAR	(*( CPU0_DIEAR_type *) 0xf8859210u)	/* CPUx Program Integrity Error Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IED            : 1;	/* Integrity Error Detected */
		/* const */ unsigned __sfrbit32 IE_T           : 1;	/* Integrity Error - Tag Memory */
		/* const */ unsigned __sfrbit32 IE_C           : 1;	/* Integrity Error - Cache Memory */
		/* const */ unsigned __sfrbit32 IE_S           : 1;	/* Integrity Error - Scratchpad Memory */
		/* const */ unsigned __sfrbit32 IE_BI          : 1;	/* Integrity Error - Bus Interface */
		/* const */ unsigned __sfrbit32 E_INFO         : 6;	/* Error Information */
		/* const */ unsigned __sfrbit32 IE_UNC         : 1;	/* Dual Bit Error Detected */
		/* const */ unsigned __sfrbit32 IE_SP          : 1;	/* Safety Protection Error Detected */
		/* const */ unsigned __sfrbit32 IE_BS          : 1;	/* Bus Slave Access Indicator */
		/* const */ unsigned __sfrbit32 IE_DLMU        : 1;	/* Integrity Error - DLMU */
		/* const */ unsigned __sfrbit32 IE_LPB         : 1;	/* Integrity Error - Local Pflash Bank */
		/* const */ unsigned __sfrbit32 IE_MTMV        : 1;	/* Memory Test Mode Violation detected */
		/* const */ unsigned __sfrbit32 RES            : 15;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DIETR_type;
#define CPU0_DIETR	(*( CPU0_DIETR_type *) 0xf8819024u)	/* CPUx Data Integrity Error Trap Register */
#define CPU1_DIETR	(*( CPU0_DIETR_type *) 0xf8839024u)	/* CPUx Data Integrity Error Trap Register */
#define CPU2_DIETR	(*( CPU0_DIETR_type *) 0xf8859024u)	/* CPUx Data Integrity Error Trap Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Read Access Enable for Master TAG ID n (n=0-31) */
	} B;
	int I;
	unsigned int U;

} CPU0_DLMU_SPROT_RGNACCENA0_R_type;
#define CPU0_DLMU_SPROT_RGNACCENA0_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e288u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A0 */
#define CPU0_DLMU_SPROT_RGNACCENA1_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e298u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A1 */
#define CPU0_DLMU_SPROT_RGNACCENA2_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e2a8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A2 */
#define CPU0_DLMU_SPROT_RGNACCENA3_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e2b8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A3 */
#define CPU0_DLMU_SPROT_RGNACCENA4_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e2c8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A4 */
#define CPU0_DLMU_SPROT_RGNACCENA5_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e2d8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A5 */
#define CPU0_DLMU_SPROT_RGNACCENA6_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e2e8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A6 */
#define CPU0_DLMU_SPROT_RGNACCENA7_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e2f8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A7 */
#define CPU0_SPR_SPROT_RGNACCENA0_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e088u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A0 */
#define CPU0_SPR_SPROT_RGNACCENA1_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e098u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A1 */
#define CPU0_SPR_SPROT_RGNACCENA2_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e0a8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A2 */
#define CPU0_SPR_SPROT_RGNACCENA3_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e0b8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A3 */
#define CPU0_SPR_SPROT_RGNACCENA4_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e0c8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A4 */
#define CPU0_SPR_SPROT_RGNACCENA5_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e0d8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A5 */
#define CPU0_SPR_SPROT_RGNACCENA6_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e0e8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A6 */
#define CPU0_SPR_SPROT_RGNACCENA7_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf880e0f8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A7 */
#define CPU1_DLMU_SPROT_RGNACCENA0_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e288u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A0 */
#define CPU1_DLMU_SPROT_RGNACCENA1_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e298u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A1 */
#define CPU1_DLMU_SPROT_RGNACCENA2_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e2a8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A2 */
#define CPU1_DLMU_SPROT_RGNACCENA3_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e2b8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A3 */
#define CPU1_DLMU_SPROT_RGNACCENA4_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e2c8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A4 */
#define CPU1_DLMU_SPROT_RGNACCENA5_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e2d8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A5 */
#define CPU1_DLMU_SPROT_RGNACCENA6_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e2e8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A6 */
#define CPU1_DLMU_SPROT_RGNACCENA7_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e2f8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A7 */
#define CPU1_SPR_SPROT_RGNACCENA0_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e088u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A0 */
#define CPU1_SPR_SPROT_RGNACCENA1_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e098u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A1 */
#define CPU1_SPR_SPROT_RGNACCENA2_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e0a8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A2 */
#define CPU1_SPR_SPROT_RGNACCENA3_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e0b8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A3 */
#define CPU1_SPR_SPROT_RGNACCENA4_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e0c8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A4 */
#define CPU1_SPR_SPROT_RGNACCENA5_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e0d8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A5 */
#define CPU1_SPR_SPROT_RGNACCENA6_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e0e8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A6 */
#define CPU1_SPR_SPROT_RGNACCENA7_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf882e0f8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A7 */
#define CPU2_DLMU_SPROT_RGNACCENA0_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e288u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A0 */
#define CPU2_DLMU_SPROT_RGNACCENA1_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e298u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A1 */
#define CPU2_DLMU_SPROT_RGNACCENA2_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e2a8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A2 */
#define CPU2_DLMU_SPROT_RGNACCENA3_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e2b8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A3 */
#define CPU2_DLMU_SPROT_RGNACCENA4_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e2c8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A4 */
#define CPU2_DLMU_SPROT_RGNACCENA5_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e2d8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A5 */
#define CPU2_DLMU_SPROT_RGNACCENA6_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e2e8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A6 */
#define CPU2_DLMU_SPROT_RGNACCENA7_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e2f8u)	/* CPUx Safety Protection Region DLMU Read Access Enable Register A7 */
#define CPU2_SPR_SPROT_RGNACCENA0_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e088u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A0 */
#define CPU2_SPR_SPROT_RGNACCENA1_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e098u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A1 */
#define CPU2_SPR_SPROT_RGNACCENA2_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e0a8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A2 */
#define CPU2_SPR_SPROT_RGNACCENA3_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e0b8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A3 */
#define CPU2_SPR_SPROT_RGNACCENA4_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e0c8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A4 */
#define CPU2_SPR_SPROT_RGNACCENA5_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e0d8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A5 */
#define CPU2_SPR_SPROT_RGNACCENA6_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e0e8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A6 */
#define CPU2_SPR_SPROT_RGNACCENA7_R	(*( CPU0_DLMU_SPROT_RGNACCENA0_R_type *) 0xf884e0f8u)	/* CPUx Safety Protection Region SPR Read Access Enable Register A7 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Write Access Enable for Master TAG ID n (n=0-31) */
	} B;
	int I;
	unsigned int U;

} CPU0_DLMU_SPROT_RGNACCENA0_W_type;
#define CPU0_DLMU_SPROT_RGNACCENA0_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e208u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A0 */
#define CPU0_DLMU_SPROT_RGNACCENA1_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e218u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A1 */
#define CPU0_DLMU_SPROT_RGNACCENA2_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e228u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A2 */
#define CPU0_DLMU_SPROT_RGNACCENA3_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e238u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A3 */
#define CPU0_DLMU_SPROT_RGNACCENA4_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e248u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A4 */
#define CPU0_DLMU_SPROT_RGNACCENA5_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e258u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A5 */
#define CPU0_DLMU_SPROT_RGNACCENA6_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e268u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A6 */
#define CPU0_DLMU_SPROT_RGNACCENA7_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e278u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A7 */
#define CPU0_SPR_SPROT_RGNACCENA0_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e008u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A0 */
#define CPU0_SPR_SPROT_RGNACCENA1_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e018u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A1 */
#define CPU0_SPR_SPROT_RGNACCENA2_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e028u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A2 */
#define CPU0_SPR_SPROT_RGNACCENA3_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e038u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A3 */
#define CPU0_SPR_SPROT_RGNACCENA4_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e048u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A4 */
#define CPU0_SPR_SPROT_RGNACCENA5_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e058u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A5 */
#define CPU0_SPR_SPROT_RGNACCENA6_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e068u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A6 */
#define CPU0_SPR_SPROT_RGNACCENA7_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf880e078u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A7 */
#define CPU1_DLMU_SPROT_RGNACCENA0_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e208u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A0 */
#define CPU1_DLMU_SPROT_RGNACCENA1_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e218u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A1 */
#define CPU1_DLMU_SPROT_RGNACCENA2_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e228u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A2 */
#define CPU1_DLMU_SPROT_RGNACCENA3_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e238u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A3 */
#define CPU1_DLMU_SPROT_RGNACCENA4_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e248u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A4 */
#define CPU1_DLMU_SPROT_RGNACCENA5_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e258u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A5 */
#define CPU1_DLMU_SPROT_RGNACCENA6_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e268u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A6 */
#define CPU1_DLMU_SPROT_RGNACCENA7_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e278u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A7 */
#define CPU1_SPR_SPROT_RGNACCENA0_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e008u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A0 */
#define CPU1_SPR_SPROT_RGNACCENA1_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e018u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A1 */
#define CPU1_SPR_SPROT_RGNACCENA2_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e028u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A2 */
#define CPU1_SPR_SPROT_RGNACCENA3_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e038u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A3 */
#define CPU1_SPR_SPROT_RGNACCENA4_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e048u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A4 */
#define CPU1_SPR_SPROT_RGNACCENA5_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e058u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A5 */
#define CPU1_SPR_SPROT_RGNACCENA6_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e068u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A6 */
#define CPU1_SPR_SPROT_RGNACCENA7_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf882e078u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A7 */
#define CPU2_DLMU_SPROT_RGNACCENA0_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e208u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A0 */
#define CPU2_DLMU_SPROT_RGNACCENA1_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e218u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A1 */
#define CPU2_DLMU_SPROT_RGNACCENA2_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e228u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A2 */
#define CPU2_DLMU_SPROT_RGNACCENA3_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e238u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A3 */
#define CPU2_DLMU_SPROT_RGNACCENA4_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e248u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A4 */
#define CPU2_DLMU_SPROT_RGNACCENA5_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e258u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A5 */
#define CPU2_DLMU_SPROT_RGNACCENA6_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e268u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A6 */
#define CPU2_DLMU_SPROT_RGNACCENA7_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e278u)	/* CPUx Safety Protection Region DLMU Write Access Enable Register A7 */
#define CPU2_SPR_SPROT_RGNACCENA0_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e008u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A0 */
#define CPU2_SPR_SPROT_RGNACCENA1_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e018u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A1 */
#define CPU2_SPR_SPROT_RGNACCENA2_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e028u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A2 */
#define CPU2_SPR_SPROT_RGNACCENA3_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e038u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A3 */
#define CPU2_SPR_SPROT_RGNACCENA4_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e048u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A4 */
#define CPU2_SPR_SPROT_RGNACCENA5_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e058u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A5 */
#define CPU2_SPR_SPROT_RGNACCENA6_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e068u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A6 */
#define CPU2_SPR_SPROT_RGNACCENA7_W	(*( CPU0_DLMU_SPROT_RGNACCENA0_W_type *) 0xf884e078u)	/* CPUx Safety Protection Region SPR Write Access Enable Register A7 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Read Access Enable for Master TAG ID n (n=32-63) */
	} B;
	int I;
	unsigned int U;

} CPU0_DLMU_SPROT_RGNACCENB0_R_type;
#define CPU0_DLMU_SPROT_RGNACCENB0_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e28cu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B0 */
#define CPU0_DLMU_SPROT_RGNACCENB1_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e29cu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B1 */
#define CPU0_DLMU_SPROT_RGNACCENB2_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e2acu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B2 */
#define CPU0_DLMU_SPROT_RGNACCENB3_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e2bcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B3 */
#define CPU0_DLMU_SPROT_RGNACCENB4_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e2ccu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B4 */
#define CPU0_DLMU_SPROT_RGNACCENB5_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e2dcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B5 */
#define CPU0_DLMU_SPROT_RGNACCENB6_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e2ecu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B6 */
#define CPU0_DLMU_SPROT_RGNACCENB7_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e2fcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B7 */
#define CPU0_SPR_SPROT_RGNACCENB0_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e08cu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B0 */
#define CPU0_SPR_SPROT_RGNACCENB1_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e09cu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B1 */
#define CPU0_SPR_SPROT_RGNACCENB2_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e0acu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B2 */
#define CPU0_SPR_SPROT_RGNACCENB3_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e0bcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B3 */
#define CPU0_SPR_SPROT_RGNACCENB4_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e0ccu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B4 */
#define CPU0_SPR_SPROT_RGNACCENB5_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e0dcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B5 */
#define CPU0_SPR_SPROT_RGNACCENB6_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e0ecu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B6 */
#define CPU0_SPR_SPROT_RGNACCENB7_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf880e0fcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B7 */
#define CPU1_DLMU_SPROT_RGNACCENB0_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e28cu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B0 */
#define CPU1_DLMU_SPROT_RGNACCENB1_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e29cu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B1 */
#define CPU1_DLMU_SPROT_RGNACCENB2_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e2acu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B2 */
#define CPU1_DLMU_SPROT_RGNACCENB3_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e2bcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B3 */
#define CPU1_DLMU_SPROT_RGNACCENB4_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e2ccu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B4 */
#define CPU1_DLMU_SPROT_RGNACCENB5_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e2dcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B5 */
#define CPU1_DLMU_SPROT_RGNACCENB6_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e2ecu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B6 */
#define CPU1_DLMU_SPROT_RGNACCENB7_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e2fcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B7 */
#define CPU1_SPR_SPROT_RGNACCENB0_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e08cu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B0 */
#define CPU1_SPR_SPROT_RGNACCENB1_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e09cu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B1 */
#define CPU1_SPR_SPROT_RGNACCENB2_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e0acu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B2 */
#define CPU1_SPR_SPROT_RGNACCENB3_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e0bcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B3 */
#define CPU1_SPR_SPROT_RGNACCENB4_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e0ccu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B4 */
#define CPU1_SPR_SPROT_RGNACCENB5_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e0dcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B5 */
#define CPU1_SPR_SPROT_RGNACCENB6_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e0ecu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B6 */
#define CPU1_SPR_SPROT_RGNACCENB7_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf882e0fcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B7 */
#define CPU2_DLMU_SPROT_RGNACCENB0_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e28cu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B0 */
#define CPU2_DLMU_SPROT_RGNACCENB1_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e29cu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B1 */
#define CPU2_DLMU_SPROT_RGNACCENB2_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e2acu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B2 */
#define CPU2_DLMU_SPROT_RGNACCENB3_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e2bcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B3 */
#define CPU2_DLMU_SPROT_RGNACCENB4_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e2ccu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B4 */
#define CPU2_DLMU_SPROT_RGNACCENB5_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e2dcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B5 */
#define CPU2_DLMU_SPROT_RGNACCENB6_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e2ecu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B6 */
#define CPU2_DLMU_SPROT_RGNACCENB7_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e2fcu)	/* CPUx Safety Protection Region DLMU Read Access Enable Register B7 */
#define CPU2_SPR_SPROT_RGNACCENB0_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e08cu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B0 */
#define CPU2_SPR_SPROT_RGNACCENB1_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e09cu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B1 */
#define CPU2_SPR_SPROT_RGNACCENB2_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e0acu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B2 */
#define CPU2_SPR_SPROT_RGNACCENB3_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e0bcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B3 */
#define CPU2_SPR_SPROT_RGNACCENB4_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e0ccu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B4 */
#define CPU2_SPR_SPROT_RGNACCENB5_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e0dcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B5 */
#define CPU2_SPR_SPROT_RGNACCENB6_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e0ecu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B6 */
#define CPU2_SPR_SPROT_RGNACCENB7_R	(*( CPU0_DLMU_SPROT_RGNACCENB0_R_type *) 0xf884e0fcu)	/* CPUx Safety Protection Region SPR Read Access Enable Register B7 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Write Access Enable for Master TAG ID n (n=32-63) */
	} B;
	int I;
	unsigned int U;

} CPU0_DLMU_SPROT_RGNACCENB0_W_type;
#define CPU0_DLMU_SPROT_RGNACCENB0_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e20cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B0 */
#define CPU0_DLMU_SPROT_RGNACCENB1_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e21cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B1 */
#define CPU0_DLMU_SPROT_RGNACCENB2_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e22cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B2 */
#define CPU0_DLMU_SPROT_RGNACCENB3_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e23cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B3 */
#define CPU0_DLMU_SPROT_RGNACCENB4_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e24cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B4 */
#define CPU0_DLMU_SPROT_RGNACCENB5_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e25cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B5 */
#define CPU0_DLMU_SPROT_RGNACCENB6_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e26cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B6 */
#define CPU0_DLMU_SPROT_RGNACCENB7_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e27cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B7 */
#define CPU0_SPR_SPROT_RGNACCENB0_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e00cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B0 */
#define CPU0_SPR_SPROT_RGNACCENB1_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e01cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B1 */
#define CPU0_SPR_SPROT_RGNACCENB2_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e02cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B2 */
#define CPU0_SPR_SPROT_RGNACCENB3_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e03cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B3 */
#define CPU0_SPR_SPROT_RGNACCENB4_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e04cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B4 */
#define CPU0_SPR_SPROT_RGNACCENB5_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e05cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B5 */
#define CPU0_SPR_SPROT_RGNACCENB6_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e06cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B6 */
#define CPU0_SPR_SPROT_RGNACCENB7_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf880e07cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B7 */
#define CPU1_DLMU_SPROT_RGNACCENB0_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e20cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B0 */
#define CPU1_DLMU_SPROT_RGNACCENB1_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e21cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B1 */
#define CPU1_DLMU_SPROT_RGNACCENB2_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e22cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B2 */
#define CPU1_DLMU_SPROT_RGNACCENB3_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e23cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B3 */
#define CPU1_DLMU_SPROT_RGNACCENB4_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e24cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B4 */
#define CPU1_DLMU_SPROT_RGNACCENB5_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e25cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B5 */
#define CPU1_DLMU_SPROT_RGNACCENB6_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e26cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B6 */
#define CPU1_DLMU_SPROT_RGNACCENB7_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e27cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B7 */
#define CPU1_SPR_SPROT_RGNACCENB0_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e00cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B0 */
#define CPU1_SPR_SPROT_RGNACCENB1_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e01cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B1 */
#define CPU1_SPR_SPROT_RGNACCENB2_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e02cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B2 */
#define CPU1_SPR_SPROT_RGNACCENB3_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e03cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B3 */
#define CPU1_SPR_SPROT_RGNACCENB4_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e04cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B4 */
#define CPU1_SPR_SPROT_RGNACCENB5_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e05cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B5 */
#define CPU1_SPR_SPROT_RGNACCENB6_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e06cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B6 */
#define CPU1_SPR_SPROT_RGNACCENB7_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf882e07cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B7 */
#define CPU2_DLMU_SPROT_RGNACCENB0_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e20cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B0 */
#define CPU2_DLMU_SPROT_RGNACCENB1_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e21cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B1 */
#define CPU2_DLMU_SPROT_RGNACCENB2_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e22cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B2 */
#define CPU2_DLMU_SPROT_RGNACCENB3_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e23cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B3 */
#define CPU2_DLMU_SPROT_RGNACCENB4_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e24cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B4 */
#define CPU2_DLMU_SPROT_RGNACCENB5_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e25cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B5 */
#define CPU2_DLMU_SPROT_RGNACCENB6_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e26cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B6 */
#define CPU2_DLMU_SPROT_RGNACCENB7_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e27cu)	/* CPUx Safety Protection Region DLMU Write Access Enable Register B7 */
#define CPU2_SPR_SPROT_RGNACCENB0_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e00cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B0 */
#define CPU2_SPR_SPROT_RGNACCENB1_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e01cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B1 */
#define CPU2_SPR_SPROT_RGNACCENB2_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e02cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B2 */
#define CPU2_SPR_SPROT_RGNACCENB3_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e03cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B3 */
#define CPU2_SPR_SPROT_RGNACCENB4_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e04cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B4 */
#define CPU2_SPR_SPROT_RGNACCENB5_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e05cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B5 */
#define CPU2_SPR_SPROT_RGNACCENB6_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e06cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B6 */
#define CPU2_SPR_SPROT_RGNACCENB7_W	(*( CPU0_DLMU_SPROT_RGNACCENB0_W_type *) 0xf884e07cu)	/* CPUx Safety Protection Region SPR Write Access Enable Register B7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 ADDR           : 27;	/* Region Lower Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DLMU_SPROT_RGNLA0_type;
#define CPU0_DLMU_SPROT_RGNLA0	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e200u)	/* CPUx Safety Protection DLMU Region Lower Address Register 0 */
#define CPU0_DLMU_SPROT_RGNLA1	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e210u)	/* CPUx Safety Protection DLMU Region Lower Address Register 1 */
#define CPU0_DLMU_SPROT_RGNLA2	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e220u)	/* CPUx Safety Protection DLMU Region Lower Address Register 2 */
#define CPU0_DLMU_SPROT_RGNLA3	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e230u)	/* CPUx Safety Protection DLMU Region Lower Address Register 3 */
#define CPU0_DLMU_SPROT_RGNLA4	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e240u)	/* CPUx Safety Protection DLMU Region Lower Address Register 4 */
#define CPU0_DLMU_SPROT_RGNLA5	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e250u)	/* CPUx Safety Protection DLMU Region Lower Address Register 5 */
#define CPU0_DLMU_SPROT_RGNLA6	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e260u)	/* CPUx Safety Protection DLMU Region Lower Address Register 6 */
#define CPU0_DLMU_SPROT_RGNLA7	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e270u)	/* CPUx Safety Protection DLMU Region Lower Address Register 7 */
#define CPU0_SPR_SPROT_RGNLA0	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e000u)	/* CPUx Safety Protection SPR Region Lower Address Register 0 */
#define CPU0_SPR_SPROT_RGNLA1	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e010u)	/* CPUx Safety Protection SPR Region Lower Address Register 1 */
#define CPU0_SPR_SPROT_RGNLA2	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e020u)	/* CPUx Safety Protection SPR Region Lower Address Register 2 */
#define CPU0_SPR_SPROT_RGNLA3	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e030u)	/* CPUx Safety Protection SPR Region Lower Address Register 3 */
#define CPU0_SPR_SPROT_RGNLA4	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e040u)	/* CPUx Safety Protection SPR Region Lower Address Register 4 */
#define CPU0_SPR_SPROT_RGNLA5	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e050u)	/* CPUx Safety Protection SPR Region Lower Address Register 5 */
#define CPU0_SPR_SPROT_RGNLA6	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e060u)	/* CPUx Safety Protection SPR Region Lower Address Register 6 */
#define CPU0_SPR_SPROT_RGNLA7	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf880e070u)	/* CPUx Safety Protection SPR Region Lower Address Register 7 */
#define CPU1_DLMU_SPROT_RGNLA0	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e200u)	/* CPUx Safety Protection DLMU Region Lower Address Register 0 */
#define CPU1_DLMU_SPROT_RGNLA1	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e210u)	/* CPUx Safety Protection DLMU Region Lower Address Register 1 */
#define CPU1_DLMU_SPROT_RGNLA2	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e220u)	/* CPUx Safety Protection DLMU Region Lower Address Register 2 */
#define CPU1_DLMU_SPROT_RGNLA3	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e230u)	/* CPUx Safety Protection DLMU Region Lower Address Register 3 */
#define CPU1_DLMU_SPROT_RGNLA4	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e240u)	/* CPUx Safety Protection DLMU Region Lower Address Register 4 */
#define CPU1_DLMU_SPROT_RGNLA5	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e250u)	/* CPUx Safety Protection DLMU Region Lower Address Register 5 */
#define CPU1_DLMU_SPROT_RGNLA6	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e260u)	/* CPUx Safety Protection DLMU Region Lower Address Register 6 */
#define CPU1_DLMU_SPROT_RGNLA7	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e270u)	/* CPUx Safety Protection DLMU Region Lower Address Register 7 */
#define CPU1_SPR_SPROT_RGNLA0	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e000u)	/* CPUx Safety Protection SPR Region Lower Address Register 0 */
#define CPU1_SPR_SPROT_RGNLA1	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e010u)	/* CPUx Safety Protection SPR Region Lower Address Register 1 */
#define CPU1_SPR_SPROT_RGNLA2	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e020u)	/* CPUx Safety Protection SPR Region Lower Address Register 2 */
#define CPU1_SPR_SPROT_RGNLA3	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e030u)	/* CPUx Safety Protection SPR Region Lower Address Register 3 */
#define CPU1_SPR_SPROT_RGNLA4	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e040u)	/* CPUx Safety Protection SPR Region Lower Address Register 4 */
#define CPU1_SPR_SPROT_RGNLA5	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e050u)	/* CPUx Safety Protection SPR Region Lower Address Register 5 */
#define CPU1_SPR_SPROT_RGNLA6	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e060u)	/* CPUx Safety Protection SPR Region Lower Address Register 6 */
#define CPU1_SPR_SPROT_RGNLA7	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf882e070u)	/* CPUx Safety Protection SPR Region Lower Address Register 7 */
#define CPU2_DLMU_SPROT_RGNLA0	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e200u)	/* CPUx Safety Protection DLMU Region Lower Address Register 0 */
#define CPU2_DLMU_SPROT_RGNLA1	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e210u)	/* CPUx Safety Protection DLMU Region Lower Address Register 1 */
#define CPU2_DLMU_SPROT_RGNLA2	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e220u)	/* CPUx Safety Protection DLMU Region Lower Address Register 2 */
#define CPU2_DLMU_SPROT_RGNLA3	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e230u)	/* CPUx Safety Protection DLMU Region Lower Address Register 3 */
#define CPU2_DLMU_SPROT_RGNLA4	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e240u)	/* CPUx Safety Protection DLMU Region Lower Address Register 4 */
#define CPU2_DLMU_SPROT_RGNLA5	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e250u)	/* CPUx Safety Protection DLMU Region Lower Address Register 5 */
#define CPU2_DLMU_SPROT_RGNLA6	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e260u)	/* CPUx Safety Protection DLMU Region Lower Address Register 6 */
#define CPU2_DLMU_SPROT_RGNLA7	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e270u)	/* CPUx Safety Protection DLMU Region Lower Address Register 7 */
#define CPU2_SPR_SPROT_RGNLA0	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e000u)	/* CPUx Safety Protection SPR Region Lower Address Register 0 */
#define CPU2_SPR_SPROT_RGNLA1	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e010u)	/* CPUx Safety Protection SPR Region Lower Address Register 1 */
#define CPU2_SPR_SPROT_RGNLA2	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e020u)	/* CPUx Safety Protection SPR Region Lower Address Register 2 */
#define CPU2_SPR_SPROT_RGNLA3	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e030u)	/* CPUx Safety Protection SPR Region Lower Address Register 3 */
#define CPU2_SPR_SPROT_RGNLA4	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e040u)	/* CPUx Safety Protection SPR Region Lower Address Register 4 */
#define CPU2_SPR_SPROT_RGNLA5	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e050u)	/* CPUx Safety Protection SPR Region Lower Address Register 5 */
#define CPU2_SPR_SPROT_RGNLA6	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e060u)	/* CPUx Safety Protection SPR Region Lower Address Register 6 */
#define CPU2_SPR_SPROT_RGNLA7	(*( CPU0_DLMU_SPROT_RGNLA0_type *) 0xf884e070u)	/* CPUx Safety Protection SPR Region Lower Address Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 ADDR           : 27;	/* Region Upper Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DLMU_SPROT_RGNUA0_type;
#define CPU0_DLMU_SPROT_RGNUA0	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e204u)	/* CPUx Safety protection DLMU Region Upper Address Register 0 */
#define CPU0_DLMU_SPROT_RGNUA1	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e214u)	/* CPUx Safety protection DLMU Region Upper Address Register 1 */
#define CPU0_DLMU_SPROT_RGNUA2	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e224u)	/* CPUx Safety protection DLMU Region Upper Address Register 2 */
#define CPU0_DLMU_SPROT_RGNUA3	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e234u)	/* CPUx Safety protection DLMU Region Upper Address Register 3 */
#define CPU0_DLMU_SPROT_RGNUA4	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e244u)	/* CPUx Safety protection DLMU Region Upper Address Register 4 */
#define CPU0_DLMU_SPROT_RGNUA5	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e254u)	/* CPUx Safety protection DLMU Region Upper Address Register 5 */
#define CPU0_DLMU_SPROT_RGNUA6	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e264u)	/* CPUx Safety protection DLMU Region Upper Address Register 6 */
#define CPU0_DLMU_SPROT_RGNUA7	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e274u)	/* CPUx Safety protection DLMU Region Upper Address Register 7 */
#define CPU0_SPR_SPROT_RGNUA0	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e004u)	/* CPUx Safety protection SPR Region Upper Address Register 0 */
#define CPU0_SPR_SPROT_RGNUA1	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e014u)	/* CPUx Safety protection SPR Region Upper Address Register 1 */
#define CPU0_SPR_SPROT_RGNUA2	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e024u)	/* CPUx Safety protection SPR Region Upper Address Register 2 */
#define CPU0_SPR_SPROT_RGNUA3	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e034u)	/* CPUx Safety protection SPR Region Upper Address Register 3 */
#define CPU0_SPR_SPROT_RGNUA4	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e044u)	/* CPUx Safety protection SPR Region Upper Address Register 4 */
#define CPU0_SPR_SPROT_RGNUA5	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e054u)	/* CPUx Safety protection SPR Region Upper Address Register 5 */
#define CPU0_SPR_SPROT_RGNUA6	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e064u)	/* CPUx Safety protection SPR Region Upper Address Register 6 */
#define CPU0_SPR_SPROT_RGNUA7	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf880e074u)	/* CPUx Safety protection SPR Region Upper Address Register 7 */
#define CPU1_DLMU_SPROT_RGNUA0	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e204u)	/* CPUx Safety protection DLMU Region Upper Address Register 0 */
#define CPU1_DLMU_SPROT_RGNUA1	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e214u)	/* CPUx Safety protection DLMU Region Upper Address Register 1 */
#define CPU1_DLMU_SPROT_RGNUA2	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e224u)	/* CPUx Safety protection DLMU Region Upper Address Register 2 */
#define CPU1_DLMU_SPROT_RGNUA3	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e234u)	/* CPUx Safety protection DLMU Region Upper Address Register 3 */
#define CPU1_DLMU_SPROT_RGNUA4	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e244u)	/* CPUx Safety protection DLMU Region Upper Address Register 4 */
#define CPU1_DLMU_SPROT_RGNUA5	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e254u)	/* CPUx Safety protection DLMU Region Upper Address Register 5 */
#define CPU1_DLMU_SPROT_RGNUA6	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e264u)	/* CPUx Safety protection DLMU Region Upper Address Register 6 */
#define CPU1_DLMU_SPROT_RGNUA7	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e274u)	/* CPUx Safety protection DLMU Region Upper Address Register 7 */
#define CPU1_SPR_SPROT_RGNUA0	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e004u)	/* CPUx Safety protection SPR Region Upper Address Register 0 */
#define CPU1_SPR_SPROT_RGNUA1	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e014u)	/* CPUx Safety protection SPR Region Upper Address Register 1 */
#define CPU1_SPR_SPROT_RGNUA2	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e024u)	/* CPUx Safety protection SPR Region Upper Address Register 2 */
#define CPU1_SPR_SPROT_RGNUA3	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e034u)	/* CPUx Safety protection SPR Region Upper Address Register 3 */
#define CPU1_SPR_SPROT_RGNUA4	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e044u)	/* CPUx Safety protection SPR Region Upper Address Register 4 */
#define CPU1_SPR_SPROT_RGNUA5	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e054u)	/* CPUx Safety protection SPR Region Upper Address Register 5 */
#define CPU1_SPR_SPROT_RGNUA6	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e064u)	/* CPUx Safety protection SPR Region Upper Address Register 6 */
#define CPU1_SPR_SPROT_RGNUA7	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf882e074u)	/* CPUx Safety protection SPR Region Upper Address Register 7 */
#define CPU2_DLMU_SPROT_RGNUA0	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e204u)	/* CPUx Safety protection DLMU Region Upper Address Register 0 */
#define CPU2_DLMU_SPROT_RGNUA1	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e214u)	/* CPUx Safety protection DLMU Region Upper Address Register 1 */
#define CPU2_DLMU_SPROT_RGNUA2	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e224u)	/* CPUx Safety protection DLMU Region Upper Address Register 2 */
#define CPU2_DLMU_SPROT_RGNUA3	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e234u)	/* CPUx Safety protection DLMU Region Upper Address Register 3 */
#define CPU2_DLMU_SPROT_RGNUA4	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e244u)	/* CPUx Safety protection DLMU Region Upper Address Register 4 */
#define CPU2_DLMU_SPROT_RGNUA5	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e254u)	/* CPUx Safety protection DLMU Region Upper Address Register 5 */
#define CPU2_DLMU_SPROT_RGNUA6	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e264u)	/* CPUx Safety protection DLMU Region Upper Address Register 6 */
#define CPU2_DLMU_SPROT_RGNUA7	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e274u)	/* CPUx Safety protection DLMU Region Upper Address Register 7 */
#define CPU2_SPR_SPROT_RGNUA0	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e004u)	/* CPUx Safety protection SPR Region Upper Address Register 0 */
#define CPU2_SPR_SPROT_RGNUA1	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e014u)	/* CPUx Safety protection SPR Region Upper Address Register 1 */
#define CPU2_SPR_SPROT_RGNUA2	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e024u)	/* CPUx Safety protection SPR Region Upper Address Register 2 */
#define CPU2_SPR_SPROT_RGNUA3	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e034u)	/* CPUx Safety protection SPR Region Upper Address Register 3 */
#define CPU2_SPR_SPROT_RGNUA4	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e044u)	/* CPUx Safety protection SPR Region Upper Address Register 4 */
#define CPU2_SPR_SPROT_RGNUA5	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e054u)	/* CPUx Safety protection SPR Region Upper Address Register 5 */
#define CPU2_SPR_SPROT_RGNUA6	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e064u)	/* CPUx Safety protection SPR Region Upper Address Register 6 */
#define CPU2_SPR_SPROT_RGNUA7	(*( CPU0_DLMU_SPROT_RGNUA0_type *) 0xf884e074u)	/* CPUx Safety protection SPR Region Upper Address Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 DMSValue       : 31;	/* Debug Monitor Start Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DMS_type;
#define CPU0_DMS	(*( CPU0_DMS_type *) 0xf881fd40u)	/* CPUx Debug Monitor Start Address */
#define CPU1_DMS	(*( CPU0_DMS_type *) 0xf883fd40u)	/* CPUx Debug Monitor Start Address */
#define CPU2_DMS	(*( CPU0_DMS_type *) 0xf885fd40u)	/* CPUx Debug Monitor Start Address */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 LOWBND         : 29;	/* DPRy Lower Boundary Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DPR0_L_type;
#define CPU0_DPR0_L	(*( CPU0_DPR0_L_type *) 0xf881c000u)	/* CPUx Data Protection Range 0, Lower Bound Register */
#define CPU0_DPR10_L	(*( CPU0_DPR0_L_type *) 0xf881c050u)	/* CPUx Data Protection Range 10, Lower Bound Register */
#define CPU0_DPR11_L	(*( CPU0_DPR0_L_type *) 0xf881c058u)	/* CPUx Data Protection Range 11, Lower Bound Register */
#define CPU0_DPR12_L	(*( CPU0_DPR0_L_type *) 0xf881c060u)	/* CPUx Data Protection Range 12, Lower Bound Register */
#define CPU0_DPR13_L	(*( CPU0_DPR0_L_type *) 0xf881c068u)	/* CPUx Data Protection Range 13, Lower Bound Register */
#define CPU0_DPR14_L	(*( CPU0_DPR0_L_type *) 0xf881c070u)	/* CPUx Data Protection Range 14, Lower Bound Register */
#define CPU0_DPR15_L	(*( CPU0_DPR0_L_type *) 0xf881c078u)	/* CPUx Data Protection Range 15, Lower Bound Register */
#define CPU0_DPR16_L	(*( CPU0_DPR0_L_type *) 0xf881c080u)	/* CPUx Data Protection Range 16, Lower Bound Register */
#define CPU0_DPR17_L	(*( CPU0_DPR0_L_type *) 0xf881c088u)	/* CPUx Data Protection Range 17, Lower Bound Register */
#define CPU0_DPR1_L	(*( CPU0_DPR0_L_type *) 0xf881c008u)	/* CPUx Data Protection Range 1, Lower Bound Register */
#define CPU0_DPR2_L	(*( CPU0_DPR0_L_type *) 0xf881c010u)	/* CPUx Data Protection Range 2, Lower Bound Register */
#define CPU0_DPR3_L	(*( CPU0_DPR0_L_type *) 0xf881c018u)	/* CPUx Data Protection Range 3, Lower Bound Register */
#define CPU0_DPR4_L	(*( CPU0_DPR0_L_type *) 0xf881c020u)	/* CPUx Data Protection Range 4, Lower Bound Register */
#define CPU0_DPR5_L	(*( CPU0_DPR0_L_type *) 0xf881c028u)	/* CPUx Data Protection Range 5, Lower Bound Register */
#define CPU0_DPR6_L	(*( CPU0_DPR0_L_type *) 0xf881c030u)	/* CPUx Data Protection Range 6, Lower Bound Register */
#define CPU0_DPR7_L	(*( CPU0_DPR0_L_type *) 0xf881c038u)	/* CPUx Data Protection Range 7, Lower Bound Register */
#define CPU0_DPR8_L	(*( CPU0_DPR0_L_type *) 0xf881c040u)	/* CPUx Data Protection Range 8, Lower Bound Register */
#define CPU0_DPR9_L	(*( CPU0_DPR0_L_type *) 0xf881c048u)	/* CPUx Data Protection Range 9, Lower Bound Register */
#define CPU1_DPR0_L	(*( CPU0_DPR0_L_type *) 0xf883c000u)	/* CPUx Data Protection Range 0, Lower Bound Register */
#define CPU1_DPR10_L	(*( CPU0_DPR0_L_type *) 0xf883c050u)	/* CPUx Data Protection Range 10, Lower Bound Register */
#define CPU1_DPR11_L	(*( CPU0_DPR0_L_type *) 0xf883c058u)	/* CPUx Data Protection Range 11, Lower Bound Register */
#define CPU1_DPR12_L	(*( CPU0_DPR0_L_type *) 0xf883c060u)	/* CPUx Data Protection Range 12, Lower Bound Register */
#define CPU1_DPR13_L	(*( CPU0_DPR0_L_type *) 0xf883c068u)	/* CPUx Data Protection Range 13, Lower Bound Register */
#define CPU1_DPR14_L	(*( CPU0_DPR0_L_type *) 0xf883c070u)	/* CPUx Data Protection Range 14, Lower Bound Register */
#define CPU1_DPR15_L	(*( CPU0_DPR0_L_type *) 0xf883c078u)	/* CPUx Data Protection Range 15, Lower Bound Register */
#define CPU1_DPR16_L	(*( CPU0_DPR0_L_type *) 0xf883c080u)	/* CPUx Data Protection Range 16, Lower Bound Register */
#define CPU1_DPR17_L	(*( CPU0_DPR0_L_type *) 0xf883c088u)	/* CPUx Data Protection Range 17, Lower Bound Register */
#define CPU1_DPR1_L	(*( CPU0_DPR0_L_type *) 0xf883c008u)	/* CPUx Data Protection Range 1, Lower Bound Register */
#define CPU1_DPR2_L	(*( CPU0_DPR0_L_type *) 0xf883c010u)	/* CPUx Data Protection Range 2, Lower Bound Register */
#define CPU1_DPR3_L	(*( CPU0_DPR0_L_type *) 0xf883c018u)	/* CPUx Data Protection Range 3, Lower Bound Register */
#define CPU1_DPR4_L	(*( CPU0_DPR0_L_type *) 0xf883c020u)	/* CPUx Data Protection Range 4, Lower Bound Register */
#define CPU1_DPR5_L	(*( CPU0_DPR0_L_type *) 0xf883c028u)	/* CPUx Data Protection Range 5, Lower Bound Register */
#define CPU1_DPR6_L	(*( CPU0_DPR0_L_type *) 0xf883c030u)	/* CPUx Data Protection Range 6, Lower Bound Register */
#define CPU1_DPR7_L	(*( CPU0_DPR0_L_type *) 0xf883c038u)	/* CPUx Data Protection Range 7, Lower Bound Register */
#define CPU1_DPR8_L	(*( CPU0_DPR0_L_type *) 0xf883c040u)	/* CPUx Data Protection Range 8, Lower Bound Register */
#define CPU1_DPR9_L	(*( CPU0_DPR0_L_type *) 0xf883c048u)	/* CPUx Data Protection Range 9, Lower Bound Register */
#define CPU2_DPR0_L	(*( CPU0_DPR0_L_type *) 0xf885c000u)	/* CPUx Data Protection Range 0, Lower Bound Register */
#define CPU2_DPR10_L	(*( CPU0_DPR0_L_type *) 0xf885c050u)	/* CPUx Data Protection Range 10, Lower Bound Register */
#define CPU2_DPR11_L	(*( CPU0_DPR0_L_type *) 0xf885c058u)	/* CPUx Data Protection Range 11, Lower Bound Register */
#define CPU2_DPR12_L	(*( CPU0_DPR0_L_type *) 0xf885c060u)	/* CPUx Data Protection Range 12, Lower Bound Register */
#define CPU2_DPR13_L	(*( CPU0_DPR0_L_type *) 0xf885c068u)	/* CPUx Data Protection Range 13, Lower Bound Register */
#define CPU2_DPR14_L	(*( CPU0_DPR0_L_type *) 0xf885c070u)	/* CPUx Data Protection Range 14, Lower Bound Register */
#define CPU2_DPR15_L	(*( CPU0_DPR0_L_type *) 0xf885c078u)	/* CPUx Data Protection Range 15, Lower Bound Register */
#define CPU2_DPR16_L	(*( CPU0_DPR0_L_type *) 0xf885c080u)	/* CPUx Data Protection Range 16, Lower Bound Register */
#define CPU2_DPR17_L	(*( CPU0_DPR0_L_type *) 0xf885c088u)	/* CPUx Data Protection Range 17, Lower Bound Register */
#define CPU2_DPR1_L	(*( CPU0_DPR0_L_type *) 0xf885c008u)	/* CPUx Data Protection Range 1, Lower Bound Register */
#define CPU2_DPR2_L	(*( CPU0_DPR0_L_type *) 0xf885c010u)	/* CPUx Data Protection Range 2, Lower Bound Register */
#define CPU2_DPR3_L	(*( CPU0_DPR0_L_type *) 0xf885c018u)	/* CPUx Data Protection Range 3, Lower Bound Register */
#define CPU2_DPR4_L	(*( CPU0_DPR0_L_type *) 0xf885c020u)	/* CPUx Data Protection Range 4, Lower Bound Register */
#define CPU2_DPR5_L	(*( CPU0_DPR0_L_type *) 0xf885c028u)	/* CPUx Data Protection Range 5, Lower Bound Register */
#define CPU2_DPR6_L	(*( CPU0_DPR0_L_type *) 0xf885c030u)	/* CPUx Data Protection Range 6, Lower Bound Register */
#define CPU2_DPR7_L	(*( CPU0_DPR0_L_type *) 0xf885c038u)	/* CPUx Data Protection Range 7, Lower Bound Register */
#define CPU2_DPR8_L	(*( CPU0_DPR0_L_type *) 0xf885c040u)	/* CPUx Data Protection Range 8, Lower Bound Register */
#define CPU2_DPR9_L	(*( CPU0_DPR0_L_type *) 0xf885c048u)	/* CPUx Data Protection Range 9, Lower Bound Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 UPPBND         : 29;	/* DPRy Upper Boundary Address */
	} B;
	int I;
	unsigned int U;

} CPU0_DPR0_U_type;
#define CPU0_DPR0_U	(*( CPU0_DPR0_U_type *) 0xf881c004u)	/* CPUx Data Protection Range 0, Upper Bound Register */
#define CPU0_DPR10_U	(*( CPU0_DPR0_U_type *) 0xf881c054u)	/* CPUx Data Protection Range 10, Upper Bound Register */
#define CPU0_DPR11_U	(*( CPU0_DPR0_U_type *) 0xf881c05cu)	/* CPUx Data Protection Range 11, Upper Bound Register */
#define CPU0_DPR12_U	(*( CPU0_DPR0_U_type *) 0xf881c064u)	/* CPUx Data Protection Range 12, Upper Bound Register */
#define CPU0_DPR13_U	(*( CPU0_DPR0_U_type *) 0xf881c06cu)	/* CPUx Data Protection Range 13, Upper Bound Register */
#define CPU0_DPR14_U	(*( CPU0_DPR0_U_type *) 0xf881c074u)	/* CPUx Data Protection Range 14, Upper Bound Register */
#define CPU0_DPR15_U	(*( CPU0_DPR0_U_type *) 0xf881c07cu)	/* CPUx Data Protection Range 15, Upper Bound Register */
#define CPU0_DPR16_U	(*( CPU0_DPR0_U_type *) 0xf881c084u)	/* CPUx Data Protection Range 16, Upper Bound Register */
#define CPU0_DPR17_U	(*( CPU0_DPR0_U_type *) 0xf881c08cu)	/* CPUx Data Protection Range 17, Upper Bound Register */
#define CPU0_DPR1_U	(*( CPU0_DPR0_U_type *) 0xf881c00cu)	/* CPUx Data Protection Range 1, Upper Bound Register */
#define CPU0_DPR2_U	(*( CPU0_DPR0_U_type *) 0xf881c014u)	/* CPUx Data Protection Range 2, Upper Bound Register */
#define CPU0_DPR3_U	(*( CPU0_DPR0_U_type *) 0xf881c01cu)	/* CPUx Data Protection Range 3, Upper Bound Register */
#define CPU0_DPR4_U	(*( CPU0_DPR0_U_type *) 0xf881c024u)	/* CPUx Data Protection Range 4, Upper Bound Register */
#define CPU0_DPR5_U	(*( CPU0_DPR0_U_type *) 0xf881c02cu)	/* CPUx Data Protection Range 5, Upper Bound Register */
#define CPU0_DPR6_U	(*( CPU0_DPR0_U_type *) 0xf881c034u)	/* CPUx Data Protection Range 6, Upper Bound Register */
#define CPU0_DPR7_U	(*( CPU0_DPR0_U_type *) 0xf881c03cu)	/* CPUx Data Protection Range 7, Upper Bound Register */
#define CPU0_DPR8_U	(*( CPU0_DPR0_U_type *) 0xf881c044u)	/* CPUx Data Protection Range 8, Upper Bound Register */
#define CPU0_DPR9_U	(*( CPU0_DPR0_U_type *) 0xf881c04cu)	/* CPUx Data Protection Range 9, Upper Bound Register */
#define CPU1_DPR0_U	(*( CPU0_DPR0_U_type *) 0xf883c004u)	/* CPUx Data Protection Range 0, Upper Bound Register */
#define CPU1_DPR10_U	(*( CPU0_DPR0_U_type *) 0xf883c054u)	/* CPUx Data Protection Range 10, Upper Bound Register */
#define CPU1_DPR11_U	(*( CPU0_DPR0_U_type *) 0xf883c05cu)	/* CPUx Data Protection Range 11, Upper Bound Register */
#define CPU1_DPR12_U	(*( CPU0_DPR0_U_type *) 0xf883c064u)	/* CPUx Data Protection Range 12, Upper Bound Register */
#define CPU1_DPR13_U	(*( CPU0_DPR0_U_type *) 0xf883c06cu)	/* CPUx Data Protection Range 13, Upper Bound Register */
#define CPU1_DPR14_U	(*( CPU0_DPR0_U_type *) 0xf883c074u)	/* CPUx Data Protection Range 14, Upper Bound Register */
#define CPU1_DPR15_U	(*( CPU0_DPR0_U_type *) 0xf883c07cu)	/* CPUx Data Protection Range 15, Upper Bound Register */
#define CPU1_DPR16_U	(*( CPU0_DPR0_U_type *) 0xf883c084u)	/* CPUx Data Protection Range 16, Upper Bound Register */
#define CPU1_DPR17_U	(*( CPU0_DPR0_U_type *) 0xf883c08cu)	/* CPUx Data Protection Range 17, Upper Bound Register */
#define CPU1_DPR1_U	(*( CPU0_DPR0_U_type *) 0xf883c00cu)	/* CPUx Data Protection Range 1, Upper Bound Register */
#define CPU1_DPR2_U	(*( CPU0_DPR0_U_type *) 0xf883c014u)	/* CPUx Data Protection Range 2, Upper Bound Register */
#define CPU1_DPR3_U	(*( CPU0_DPR0_U_type *) 0xf883c01cu)	/* CPUx Data Protection Range 3, Upper Bound Register */
#define CPU1_DPR4_U	(*( CPU0_DPR0_U_type *) 0xf883c024u)	/* CPUx Data Protection Range 4, Upper Bound Register */
#define CPU1_DPR5_U	(*( CPU0_DPR0_U_type *) 0xf883c02cu)	/* CPUx Data Protection Range 5, Upper Bound Register */
#define CPU1_DPR6_U	(*( CPU0_DPR0_U_type *) 0xf883c034u)	/* CPUx Data Protection Range 6, Upper Bound Register */
#define CPU1_DPR7_U	(*( CPU0_DPR0_U_type *) 0xf883c03cu)	/* CPUx Data Protection Range 7, Upper Bound Register */
#define CPU1_DPR8_U	(*( CPU0_DPR0_U_type *) 0xf883c044u)	/* CPUx Data Protection Range 8, Upper Bound Register */
#define CPU1_DPR9_U	(*( CPU0_DPR0_U_type *) 0xf883c04cu)	/* CPUx Data Protection Range 9, Upper Bound Register */
#define CPU2_DPR0_U	(*( CPU0_DPR0_U_type *) 0xf885c004u)	/* CPUx Data Protection Range 0, Upper Bound Register */
#define CPU2_DPR10_U	(*( CPU0_DPR0_U_type *) 0xf885c054u)	/* CPUx Data Protection Range 10, Upper Bound Register */
#define CPU2_DPR11_U	(*( CPU0_DPR0_U_type *) 0xf885c05cu)	/* CPUx Data Protection Range 11, Upper Bound Register */
#define CPU2_DPR12_U	(*( CPU0_DPR0_U_type *) 0xf885c064u)	/* CPUx Data Protection Range 12, Upper Bound Register */
#define CPU2_DPR13_U	(*( CPU0_DPR0_U_type *) 0xf885c06cu)	/* CPUx Data Protection Range 13, Upper Bound Register */
#define CPU2_DPR14_U	(*( CPU0_DPR0_U_type *) 0xf885c074u)	/* CPUx Data Protection Range 14, Upper Bound Register */
#define CPU2_DPR15_U	(*( CPU0_DPR0_U_type *) 0xf885c07cu)	/* CPUx Data Protection Range 15, Upper Bound Register */
#define CPU2_DPR16_U	(*( CPU0_DPR0_U_type *) 0xf885c084u)	/* CPUx Data Protection Range 16, Upper Bound Register */
#define CPU2_DPR17_U	(*( CPU0_DPR0_U_type *) 0xf885c08cu)	/* CPUx Data Protection Range 17, Upper Bound Register */
#define CPU2_DPR1_U	(*( CPU0_DPR0_U_type *) 0xf885c00cu)	/* CPUx Data Protection Range 1, Upper Bound Register */
#define CPU2_DPR2_U	(*( CPU0_DPR0_U_type *) 0xf885c014u)	/* CPUx Data Protection Range 2, Upper Bound Register */
#define CPU2_DPR3_U	(*( CPU0_DPR0_U_type *) 0xf885c01cu)	/* CPUx Data Protection Range 3, Upper Bound Register */
#define CPU2_DPR4_U	(*( CPU0_DPR0_U_type *) 0xf885c024u)	/* CPUx Data Protection Range 4, Upper Bound Register */
#define CPU2_DPR5_U	(*( CPU0_DPR0_U_type *) 0xf885c02cu)	/* CPUx Data Protection Range 5, Upper Bound Register */
#define CPU2_DPR6_U	(*( CPU0_DPR0_U_type *) 0xf885c034u)	/* CPUx Data Protection Range 6, Upper Bound Register */
#define CPU2_DPR7_U	(*( CPU0_DPR0_U_type *) 0xf885c03cu)	/* CPUx Data Protection Range 7, Upper Bound Register */
#define CPU2_DPR8_U	(*( CPU0_DPR0_U_type *) 0xf885c044u)	/* CPUx Data Protection Range 8, Upper Bound Register */
#define CPU2_DPR9_U	(*( CPU0_DPR0_U_type *) 0xf885c04cu)	/* CPUx Data Protection Range 9, Upper Bound Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RE_n           : 18;	/* Read Enable Range Select - RE[n] */
		/* const */ unsigned __sfrbit32 RES            : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DPRE_0_type;
#define CPU0_DPRE_0	(*( CPU0_DPRE_0_type *) 0xf881e010u)	/* CPUx Data Protection Read Enable Register Set 0 */
#define CPU0_DPRE_1	(*( CPU0_DPRE_0_type *) 0xf881e014u)	/* CPUx Data Protection Read Enable Register Set 1 */
#define CPU0_DPRE_2	(*( CPU0_DPRE_0_type *) 0xf881e018u)	/* CPUx Data Protection Read Enable Register Set 2 */
#define CPU0_DPRE_3	(*( CPU0_DPRE_0_type *) 0xf881e01cu)	/* CPUx Data Protection Read Enable Register Set 3 */
#define CPU0_DPRE_4	(*( CPU0_DPRE_0_type *) 0xf881e050u)	/* CPUx Data Protection Read Enable Register Set 4 */
#define CPU0_DPRE_5	(*( CPU0_DPRE_0_type *) 0xf881e054u)	/* CPUx Data Protection Read Enable Register Set 5 */
#define CPU1_DPRE_0	(*( CPU0_DPRE_0_type *) 0xf883e010u)	/* CPUx Data Protection Read Enable Register Set 0 */
#define CPU1_DPRE_1	(*( CPU0_DPRE_0_type *) 0xf883e014u)	/* CPUx Data Protection Read Enable Register Set 1 */
#define CPU1_DPRE_2	(*( CPU0_DPRE_0_type *) 0xf883e018u)	/* CPUx Data Protection Read Enable Register Set 2 */
#define CPU1_DPRE_3	(*( CPU0_DPRE_0_type *) 0xf883e01cu)	/* CPUx Data Protection Read Enable Register Set 3 */
#define CPU1_DPRE_4	(*( CPU0_DPRE_0_type *) 0xf883e050u)	/* CPUx Data Protection Read Enable Register Set 4 */
#define CPU1_DPRE_5	(*( CPU0_DPRE_0_type *) 0xf883e054u)	/* CPUx Data Protection Read Enable Register Set 5 */
#define CPU2_DPRE_0	(*( CPU0_DPRE_0_type *) 0xf885e010u)	/* CPUx Data Protection Read Enable Register Set 0 */
#define CPU2_DPRE_1	(*( CPU0_DPRE_0_type *) 0xf885e014u)	/* CPUx Data Protection Read Enable Register Set 1 */
#define CPU2_DPRE_2	(*( CPU0_DPRE_0_type *) 0xf885e018u)	/* CPUx Data Protection Read Enable Register Set 2 */
#define CPU2_DPRE_3	(*( CPU0_DPRE_0_type *) 0xf885e01cu)	/* CPUx Data Protection Read Enable Register Set 3 */
#define CPU2_DPRE_4	(*( CPU0_DPRE_0_type *) 0xf885e050u)	/* CPUx Data Protection Read Enable Register Set 4 */
#define CPU2_DPRE_5	(*( CPU0_DPRE_0_type *) 0xf885e054u)	/* CPUx Data Protection Read Enable Register Set 5 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 WE_n           : 18;	/* Write Enable Range Select - WE[n] */
		/* const */ unsigned __sfrbit32 RES            : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DPWE_0_type;
#define CPU0_DPWE_0	(*( CPU0_DPWE_0_type *) 0xf881e020u)	/* CPUx Data Protection Write Enable Register Set 0 */
#define CPU0_DPWE_1	(*( CPU0_DPWE_0_type *) 0xf881e024u)	/* CPUx Data Protection Write Enable Register Set 1 */
#define CPU0_DPWE_2	(*( CPU0_DPWE_0_type *) 0xf881e028u)	/* CPUx Data Protection Write Enable Register Set 2 */
#define CPU0_DPWE_3	(*( CPU0_DPWE_0_type *) 0xf881e02cu)	/* CPUx Data Protection Write Enable Register Set 3 */
#define CPU0_DPWE_4	(*( CPU0_DPWE_0_type *) 0xf881e060u)	/* CPUx Data Protection Write Enable Register Set 4 */
#define CPU0_DPWE_5	(*( CPU0_DPWE_0_type *) 0xf881e064u)	/* CPUx Data Protection Write Enable Register Set 5 */
#define CPU1_DPWE_0	(*( CPU0_DPWE_0_type *) 0xf883e020u)	/* CPUx Data Protection Write Enable Register Set 0 */
#define CPU1_DPWE_1	(*( CPU0_DPWE_0_type *) 0xf883e024u)	/* CPUx Data Protection Write Enable Register Set 1 */
#define CPU1_DPWE_2	(*( CPU0_DPWE_0_type *) 0xf883e028u)	/* CPUx Data Protection Write Enable Register Set 2 */
#define CPU1_DPWE_3	(*( CPU0_DPWE_0_type *) 0xf883e02cu)	/* CPUx Data Protection Write Enable Register Set 3 */
#define CPU1_DPWE_4	(*( CPU0_DPWE_0_type *) 0xf883e060u)	/* CPUx Data Protection Write Enable Register Set 4 */
#define CPU1_DPWE_5	(*( CPU0_DPWE_0_type *) 0xf883e064u)	/* CPUx Data Protection Write Enable Register Set 5 */
#define CPU2_DPWE_0	(*( CPU0_DPWE_0_type *) 0xf885e020u)	/* CPUx Data Protection Write Enable Register Set 0 */
#define CPU2_DPWE_1	(*( CPU0_DPWE_0_type *) 0xf885e024u)	/* CPUx Data Protection Write Enable Register Set 1 */
#define CPU2_DPWE_2	(*( CPU0_DPWE_0_type *) 0xf885e028u)	/* CPUx Data Protection Write Enable Register Set 2 */
#define CPU2_DPWE_3	(*( CPU0_DPWE_0_type *) 0xf885e02cu)	/* CPUx Data Protection Write Enable Register Set 3 */
#define CPU2_DPWE_4	(*( CPU0_DPWE_0_type *) 0xf885e060u)	/* CPUx Data Protection Write Enable Register Set 4 */
#define CPU2_DPWE_5	(*( CPU0_DPWE_0_type *) 0xf885e064u)	/* CPUx Data Protection Write Enable Register Set 5 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SRE            : 1;	/* Scratch Range Error */
		unsigned __sfrbit32 GAE            : 1;	/* Global Address Error */
		unsigned __sfrbit32 LBE            : 1;	/* Load Bus Error */
		unsigned __sfrbit32 DRE            : 1;	/* Local DLMU Range Error */
		/* const */ unsigned __sfrbit32 RES            : 2;	/* Reserved */
		unsigned __sfrbit32 CRE            : 1;	/* Cache Refill Error */
		/* const */ unsigned __sfrbit32 RES_7          : 7;	/* Reserved */
		unsigned __sfrbit32 DTME           : 1;	/* DTAG MSIST Error */
		unsigned __sfrbit32 LOE            : 1;	/* Load Overlay Error */
		unsigned __sfrbit32 SDE            : 1;	/* Segment Difference Error */
		unsigned __sfrbit32 SCE            : 1;	/* Segment Crossing Error */
		unsigned __sfrbit32 CAC            : 1;	/* CSFR Access Error */
		unsigned __sfrbit32 MPE            : 1;	/* Memory Protection Error */
		unsigned __sfrbit32 CLE            : 1;	/* Context Location Error */
		/* const */ unsigned __sfrbit32 RES_15         : 3;	/* Reserved */
		unsigned __sfrbit32 ALN            : 1;	/* Alignment Error */
		/* const */ unsigned __sfrbit32 RES_17         : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_DSTR_type;
#define CPU0_DSTR	(*( CPU0_DSTR_type *) 0xf8819010u)	/* CPUx Data Synchronous Trap Register */
#define CPU1_DSTR	(*( CPU0_DSTR_type *) 0xf8839010u)	/* CPUx Data Synchronous Trap Register */
#define CPU2_DSTR	(*( CPU0_DSTR_type *) 0xf8859010u)	/* CPUx Data Synchronous Trap Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EVTA           : 3;	/* Event Associated */
		unsigned __sfrbit32 BBM            : 1;	/* Break Before Make (BBM) or Break After Make (BAM) Selection */
		unsigned __sfrbit32 BOD            : 1;	/* Breakout Disable */
		unsigned __sfrbit32 SUSP           : 1;	/* CDC Suspend-Out Signal State */
		unsigned __sfrbit32 CNT            : 2;	/* Counter */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_EXEVT_type;
#define CPU0_EXEVT	(*( CPU0_EXEVT_type *) 0xf881fd08u)	/* CPUx External Event Register */
#define CPU1_EXEVT	(*( CPU0_EXEVT_type *) 0xf883fd08u)	/* CPUx External Event Register */
#define CPU2_EXEVT	(*( CPU0_EXEVT_type *) 0xf885fd08u)	/* CPUx External Event Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FCXO           : 16;	/* FCX Offset Address Field */
		unsigned __sfrbit32 FCXS           : 4;	/* FCX Segment Address Field */
		/* const */ unsigned __sfrbit32 RES            : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FCX_type;
#define CPU0_FCX	(*( CPU0_FCX_type *) 0xf881fe38u)	/* CPUx Free CSA List Head Pointer */
#define CPU1_FCX	(*( CPU0_FCX_type *) 0xf883fe38u)	/* CPUx Free CSA List Head Pointer */
#define CPU2_FCX	(*( CPU0_FCX_type *) 0xf885fe38u)	/* CPUx Free CSA List Head Pointer */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TAG1           : 6;	/* Flash Prefetch Buffer 1 Configuration */
		/* const */ unsigned __sfrbit32 RES            : 2;	/* Reserved */
		unsigned __sfrbit32 TAG2           : 6;	/* Flash Prefetch Buffer 2 Configuration */
		/* const */ unsigned __sfrbit32 RES_4          : 2;	/* Reserved */
		unsigned __sfrbit32 TAG3           : 6;	/* Flash Prefetch Buffer 3 Configuration */
		/* const */ unsigned __sfrbit32 RES_6          : 2;	/* Reserved */
		unsigned __sfrbit32 TAG4           : 6;	/* Flash Prefetch Buffer 4 Configuration */
		/* const */ unsigned __sfrbit32 RES_8          : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FLASHCON0_type;
#define CPU0_FLASHCON0	(*( CPU0_FLASHCON0_type *) 0xf8801100u)	/* CPUx Flash Configuration Register 0 */
#define CPU1_FLASHCON0	(*( CPU0_FLASHCON0_type *) 0xf8821100u)	/* CPUx Flash Configuration Register 0 */
#define CPU2_FLASHCON0	(*( CPU0_FLASHCON0_type *) 0xf8841100u)	/* CPUx Flash Configuration Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STALL          : 1;	/* Stall Bus Request */
		/* const */ unsigned __sfrbit32 RES            : 15;	/* Reserved */
		unsigned __sfrbit32 MASKUECC       : 2;	/* Mask PFLASH Uncorrectable ECC Bit Error */
		/* const */ unsigned __sfrbit32 RES_4          : 6;	/* Reserved */
		/* const */ unsigned __sfrbit32 RES_5          : 2;	/* Reserved */
		/* const */ unsigned __sfrbit32 RES_6          : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FLASHCON1_type;
#define CPU0_FLASHCON1	(*( CPU0_FLASHCON1_type *) 0xf8801104u)	/* CPUx Flash Configuration Register 1 */
#define CPU1_FLASHCON1	(*( CPU0_FLASHCON1_type *) 0xf8821104u)	/* CPUx Flash Configuration Register 1 */
#define CPU2_FLASHCON1	(*( CPU0_FLASHCON1_type *) 0xf8841104u)	/* CPUx Flash Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RECDIS         : 2;	/* Address Buffer Recording Disable */
		unsigned __sfrbit32 ECCCORDIS      : 2;	/* ECC Correction Disable */
		/* const */ unsigned __sfrbit32 RES            : 4;	/* Reserved */
		unsigned __sfrbit32 HMARGIN        : 2;	/* Hard Margin Selection */
		unsigned __sfrbit32 MSEL           : 2;	/* Margin Read Selection */
		/* const */ unsigned __sfrbit32 RES_6          : 4;	/* Reserved */
		unsigned __sfrbit32 ECCSCLR        : 2;	/* Clear ECC Status Register */
		/* const */ unsigned __sfrbit32 RES_8          : 6;	/* Reserved */
		unsigned __sfrbit32 SBABCLR        : 2;	/* Clear SBAB Record Registers */
		unsigned __sfrbit32 DBABCLR        : 2;	/* Clear DBAB Record Registers */
		unsigned __sfrbit32 MBABCLR        : 2;	/* Clear MBAB Record Registers */
		unsigned __sfrbit32 ZBABCLR        : 2;	/* Clear ZBAB Record Registers */
	} B;
	int I;
	unsigned int U;

} CPU0_FLASHCON2_type;
#define CPU0_FLASHCON2	(*( CPU0_FLASHCON2_type *) 0xf8801108u)	/* CPUx Flash Configuration Register 2 */
#define CPU1_FLASHCON2	(*( CPU0_FLASHCON2_type *) 0xf8821108u)	/* CPUx Flash Configuration Register 2 */
#define CPU2_FLASHCON2	(*( CPU0_FLASHCON2_type *) 0xf8841108u)	/* CPUx Flash Configuration Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ECCERRINJ      : 1;	/* ECC Error Injection */
		unsigned __sfrbit32 EDCERRINJ      : 1;	/* EDC Error Injection */
		unsigned __sfrbit32 SBABERRINJ     : 1;	/* Corrected Single Bits Address Buffer (SBAB) Error Injection */
		unsigned __sfrbit32 DBABERRINJ     : 1;	/* Corrected Double Bits Address Buffer (DBAB) Error Injection */
		unsigned __sfrbit32 MBABERRINJ     : 1;	/* Uncorrected Multi Bit Address Buffer (MBAB) Error Injection */
		unsigned __sfrbit32 ZBABERRINJ     : 1;	/* Uncorrected All Zeros Bits Address Buffer (ZBAB) Error Injection */
		unsigned __sfrbit32 SBERERRINJ     : 1;	/* Single Bit Error (SBER) Injection */
		unsigned __sfrbit32 DBERERRINJ     : 1;	/* Double Bit Error (DBER) Injection */
		unsigned __sfrbit32 NVMCERRINJ     : 1;	/* NVM Configuration (NVMCER) Injection */
		unsigned __sfrbit32 FLCONERRINJ    : 1;	/* Flashcon Error (FLCONER) Injection */
		/* const */ unsigned __sfrbit32 RES            : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FLASHCON3_type;
#define CPU0_FLASHCON3	(*( CPU0_FLASHCON3_type *) 0xf880110cu)	/* CPUx Flash Configuration Register 3 */
#define CPU1_FLASHCON3	(*( CPU0_FLASHCON3_type *) 0xf882110cu)	/* CPUx Flash Configuration Register 3 */
#define CPU2_FLASHCON3	(*( CPU0_FLASHCON3_type *) 0xf884110cu)	/* CPUx Flash Configuration Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DDIS           : 1;	/* Disable direct LPB access */
		/* const */ unsigned __sfrbit32 RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FLASHCON4_type;
#define CPU0_FLASHCON4	(*( CPU0_FLASHCON4_type *) 0xf8801110u)	/* CPUx Flash Configuration Register 4 */
#define CPU1_FLASHCON4	(*( CPU0_FLASHCON4_type *) 0xf8821110u)	/* CPUx Flash Configuration Register 4 */
#define CPU2_FLASHCON4	(*( CPU0_FLASHCON4_type *) 0xf8841110u)	/* CPUx Flash Configuration Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TST            : 1;	/* Trap Status */
		unsigned __sfrbit32 TCL            : 1;	/* Trap Clear */
		/* const */ unsigned __sfrbit32 RES            : 6;	/* Reserved */
		/* const */ unsigned __sfrbit32 RM             : 2;	/* Captured Rounding Mode */
		/* const */ unsigned __sfrbit32 RES_5          : 8;	/* Reserved */
		unsigned __sfrbit32 FXE            : 1;	/* FX Trap Enable */
		unsigned __sfrbit32 FUE            : 1;	/* FU Trap Enable */
		unsigned __sfrbit32 FZE            : 1;	/* FZ Trap Enable */
		unsigned __sfrbit32 FVE            : 1;	/* FV Trap Enable */
		unsigned __sfrbit32 FIE            : 1;	/* FI Trap Enable */
		/* const */ unsigned __sfrbit32 RES_11         : 3;	/* Reserved */
		/* const */ unsigned __sfrbit32 FX             : 1;	/* Captured FX */
		/* const */ unsigned __sfrbit32 FU             : 1;	/* Captured FU */
		/* const */ unsigned __sfrbit32 FZ             : 1;	/* Captured FZ */
		/* const */ unsigned __sfrbit32 FV             : 1;	/* Captured FV */
		/* const */ unsigned __sfrbit32 FI             : 1;	/* Captured FI */
		/* const */ unsigned __sfrbit32 RES_17         : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_CON_type;
#define CPU0_FPU_TRAP_CON	(*( CPU0_FPU_TRAP_CON_type *) 0xf881a000u)	/* CPUx Trap Control Register */
#define CPU1_FPU_TRAP_CON	(*( CPU0_FPU_TRAP_CON_type *) 0xf883a000u)	/* CPUx Trap Control Register */
#define CPU2_FPU_TRAP_CON	(*( CPU0_FPU_TRAP_CON_type *) 0xf885a000u)	/* CPUx Trap Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 OPC            : 8;	/* Captured Opcode */
		/* const */ unsigned __sfrbit32 FMT            : 1;	/* Captured Instruction Format */
		/* const */ unsigned __sfrbit32 RES            : 7;	/* Reserved */
		/* const */ unsigned __sfrbit32 DREG           : 4;	/* Captured Destination Register */
		/* const */ unsigned __sfrbit32 RES_5          : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_OPC_type;
#define CPU0_FPU_TRAP_OPC	(*( CPU0_FPU_TRAP_OPC_type *) 0xf881a008u)	/* CPUx Trapping Instruction Opcode Register */
#define CPU1_FPU_TRAP_OPC	(*( CPU0_FPU_TRAP_OPC_type *) 0xf883a008u)	/* CPUx Trapping Instruction Opcode Register */
#define CPU2_FPU_TRAP_OPC	(*( CPU0_FPU_TRAP_OPC_type *) 0xf885a008u)	/* CPUx Trapping Instruction Opcode Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 bPC            : 32;	/* Captured Program Counter */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_PC_type;
#define CPU0_FPU_TRAP_PC	(*( CPU0_FPU_TRAP_PC_type *) 0xf881a004u)	/* CPUx Trapping Instruction Program Counter Register */
#define CPU1_FPU_TRAP_PC	(*( CPU0_FPU_TRAP_PC_type *) 0xf883a004u)	/* CPUx Trapping Instruction Program Counter Register */
#define CPU2_FPU_TRAP_PC	(*( CPU0_FPU_TRAP_PC_type *) 0xf885a004u)	/* CPUx Trapping Instruction Program Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SRC1           : 32;	/* Captured SRC1 Operand */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_SRC1_type;
#define CPU0_FPU_TRAP_SRC1	(*( CPU0_FPU_TRAP_SRC1_type *) 0xf881a010u)	/* CPUx Trapping Instruction Operand Register */
#define CPU1_FPU_TRAP_SRC1	(*( CPU0_FPU_TRAP_SRC1_type *) 0xf883a010u)	/* CPUx Trapping Instruction Operand Register */
#define CPU2_FPU_TRAP_SRC1	(*( CPU0_FPU_TRAP_SRC1_type *) 0xf885a010u)	/* CPUx Trapping Instruction Operand Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SRC2           : 32;	/* Captured SRC2 Operand */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_SRC2_type;
#define CPU0_FPU_TRAP_SRC2	(*( CPU0_FPU_TRAP_SRC2_type *) 0xf881a014u)	/* CPUx Trapping Instruction Operand Register */
#define CPU1_FPU_TRAP_SRC2	(*( CPU0_FPU_TRAP_SRC2_type *) 0xf883a014u)	/* CPUx Trapping Instruction Operand Register */
#define CPU2_FPU_TRAP_SRC2	(*( CPU0_FPU_TRAP_SRC2_type *) 0xf885a014u)	/* CPUx Trapping Instruction Operand Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SRC3           : 32;	/* Captured SRC3 Operand */
	} B;
	int I;
	unsigned int U;

} CPU0_FPU_TRAP_SRC3_type;
#define CPU0_FPU_TRAP_SRC3	(*( CPU0_FPU_TRAP_SRC3_type *) 0xf881a018u)	/* CPUx Trapping Instruction Operand Register */
#define CPU1_FPU_TRAP_SRC3	(*( CPU0_FPU_TRAP_SRC3_type *) 0xf883a018u)	/* CPUx Trapping Instruction Operand Register */
#define CPU2_FPU_TRAP_SRC3	(*( CPU0_FPU_TRAP_SRC3_type *) 0xf885a018u)	/* CPUx Trapping Instruction Operand Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CCPN           : 8;	/* Current CPU Priority Number */
		/* const */ unsigned __sfrbit32 RES            : 7;	/* Reserved */
		unsigned __sfrbit32 IE             : 1;	/* Global Interrupt Enable Bit */
		/* const */ unsigned __sfrbit32 PIPN           : 8;	/* Pending Interrupt Priority Number */
		/* const */ unsigned __sfrbit32 RES_5          : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_ICR_type;
#define CPU0_ICR	(*( CPU0_ICR_type *) 0xf881fe2cu)	/* CPUx Interrupt Control Register */
#define CPU1_ICR	(*( CPU0_ICR_type *) 0xf883fe2cu)	/* CPUx Interrupt Control Register */
#define CPU2_ICR	(*( CPU0_ICR_type *) 0xf885fe2cu)	/* CPUx Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 bISP           : 32;	/* Interrupt Stack Pointer */
	} B;
	int I;
	unsigned int U;

} CPU0_ISP_type;
#define CPU0_ISP	(*( CPU0_ISP_type *) 0xf881fe28u)	/* CPUx Interrupt Stack Pointer */
#define CPU1_ISP	(*( CPU0_ISP_type *) 0xf883fe28u)	/* CPUx Interrupt Stack Pointer */
#define CPU2_ISP	(*( CPU0_ISP_type *) 0xf885fe28u)	/* CPUx Interrupt Stack Pointer */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* Kernel Reset */
		/* const */ unsigned __sfrbit32 RSTSTAT        : 2;	/* Kernel Reset Status */
		/* const */ unsigned __sfrbit32 RES            : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_KRST0_type;
#define CPU0_KRST0	(*( CPU0_KRST0_type *) 0xf880d000u)	/* CPUx Reset Register 0 */
#define CPU1_KRST0	(*( CPU0_KRST0_type *) 0xf882d000u)	/* CPUx Reset Register 0 */
#define CPU2_KRST0	(*( CPU0_KRST0_type *) 0xf884d000u)	/* CPUx Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* Kernel Reset */
		/* const */ unsigned __sfrbit32 RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_KRST1_type;
#define CPU0_KRST1	(*( CPU0_KRST1_type *) 0xf880d004u)	/* CPUx Reset Register 1 */
#define CPU1_KRST1	(*( CPU0_KRST1_type *) 0xf882d004u)	/* CPUx Reset Register 1 */
#define CPU2_KRST1	(*( CPU0_KRST1_type *) 0xf884d004u)	/* CPUx Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CLR            : 1;	/* Kernel Reset Status Clear */
		/* const */ unsigned __sfrbit32 RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_KRSTCLR_type;
#define CPU0_KRSTCLR	(*( CPU0_KRSTCLR_type *) 0xf880d008u)	/* CPUx Reset Clear Register */
#define CPU1_KRSTCLR	(*( CPU0_KRSTCLR_type *) 0xf882d008u)	/* CPUx Reset Clear Register */
#define CPU2_KRSTCLR	(*( CPU0_KRSTCLR_type *) 0xf884d008u)	/* CPUx Reset Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 LCXO           : 16;	/* LCX Offset Field */
		unsigned __sfrbit32 LCXS           : 4;	/* LCX Segment Address */
		/* const */ unsigned __sfrbit32 RES            : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_LCX_type;
#define CPU0_LCX	(*( CPU0_LCX_type *) 0xf881fe3cu)	/* CPUx Free CSA List Limit Pointer */
#define CPU1_LCX	(*( CPU0_LCX_type *) 0xf883fe3cu)	/* CPUx Free CSA List Limit Pointer */
#define CPU2_LCX	(*( CPU0_LCX_type *) 0xf885fe3cu)	/* CPUx Free CSA List Limit Pointer */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Access Enable for Master TAG ID n (n= 0-31) */
	} B;
	int I;
	unsigned int U;

} CPU0_LPB_SPROT_ACCENA_R_type;
#define CPU0_LPB_SPROT_ACCENA_R	(*( CPU0_LPB_SPROT_ACCENA_R_type *) 0xf880e110u)	/* CPUx Safety Protection Region LPB Read Access Enable Register A */
#define CPU1_LPB_SPROT_ACCENA_R	(*( CPU0_LPB_SPROT_ACCENA_R_type *) 0xf882e110u)	/* CPUx Safety Protection Region LPB Read Access Enable Register A */
#define CPU2_LPB_SPROT_ACCENA_R	(*( CPU0_LPB_SPROT_ACCENA_R_type *) 0xf884e110u)	/* CPUx Safety Protection Region LPB Read Access Enable Register A */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Access Enable for Master TAG ID n (n= 32-63) */
	} B;
	int I;
	unsigned int U;

} CPU0_LPB_SPROT_ACCENB_R_type;
#define CPU0_LPB_SPROT_ACCENB_R	(*( CPU0_LPB_SPROT_ACCENB_R_type *) 0xf880e114u)	/* CPUx Safety Protection Region LPB Read Access Enable Register B */
#define CPU0_SFR_SPROT_ACCENB_W	(*( CPU0_LPB_SPROT_ACCENB_R_type *) 0xf880e104u)	/* CPUx Safety Protection Region Access Enable Register B */
#define CPU1_LPB_SPROT_ACCENB_R	(*( CPU0_LPB_SPROT_ACCENB_R_type *) 0xf882e114u)	/* CPUx Safety Protection Region LPB Read Access Enable Register B */
#define CPU1_SFR_SPROT_ACCENB_W	(*( CPU0_LPB_SPROT_ACCENB_R_type *) 0xf882e104u)	/* CPUx Safety Protection Region Access Enable Register B */
#define CPU2_LPB_SPROT_ACCENB_R	(*( CPU0_LPB_SPROT_ACCENB_R_type *) 0xf884e114u)	/* CPUx Safety Protection Region LPB Read Access Enable Register B */
#define CPU2_SFR_SPROT_ACCENB_W	(*( CPU0_LPB_SPROT_ACCENB_R_type *) 0xf884e104u)	/* CPUx Safety Protection Region Access Enable Register B */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 OMASK          : 12;	/* Overlay Address Mask */
		/* const */ unsigned __sfrbit32 ONE            : 11;	/* Fixed ?1? Values */
		/* const */ unsigned __sfrbit32 RES_4          : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_OMASK0_type;
#define CPU0_OMASK0	(*( CPU0_OMASK0_type *) 0xf880fb18u)	/* CPUx Overlay Mask Register 0 */
#define CPU0_OMASK1	(*( CPU0_OMASK0_type *) 0xf880fb24u)	/* CPUx Overlay Mask Register 1 */
#define CPU0_OMASK10	(*( CPU0_OMASK0_type *) 0xf880fb90u)	/* CPUx Overlay Mask Register 10 */
#define CPU0_OMASK11	(*( CPU0_OMASK0_type *) 0xf880fb9cu)	/* CPUx Overlay Mask Register 11 */
#define CPU0_OMASK12	(*( CPU0_OMASK0_type *) 0xf880fba8u)	/* CPUx Overlay Mask Register 12 */
#define CPU0_OMASK13	(*( CPU0_OMASK0_type *) 0xf880fbb4u)	/* CPUx Overlay Mask Register 13 */
#define CPU0_OMASK14	(*( CPU0_OMASK0_type *) 0xf880fbc0u)	/* CPUx Overlay Mask Register 14 */
#define CPU0_OMASK15	(*( CPU0_OMASK0_type *) 0xf880fbccu)	/* CPUx Overlay Mask Register 15 */
#define CPU0_OMASK16	(*( CPU0_OMASK0_type *) 0xf880fbd8u)	/* CPUx Overlay Mask Register 16 */
#define CPU0_OMASK17	(*( CPU0_OMASK0_type *) 0xf880fbe4u)	/* CPUx Overlay Mask Register 17 */
#define CPU0_OMASK18	(*( CPU0_OMASK0_type *) 0xf880fbf0u)	/* CPUx Overlay Mask Register 18 */
#define CPU0_OMASK19	(*( CPU0_OMASK0_type *) 0xf880fbfcu)	/* CPUx Overlay Mask Register 19 */
#define CPU0_OMASK2	(*( CPU0_OMASK0_type *) 0xf880fb30u)	/* CPUx Overlay Mask Register 2 */
#define CPU0_OMASK20	(*( CPU0_OMASK0_type *) 0xf880fc08u)	/* CPUx Overlay Mask Register 20 */
#define CPU0_OMASK21	(*( CPU0_OMASK0_type *) 0xf880fc14u)	/* CPUx Overlay Mask Register 21 */
#define CPU0_OMASK22	(*( CPU0_OMASK0_type *) 0xf880fc20u)	/* CPUx Overlay Mask Register 22 */
#define CPU0_OMASK23	(*( CPU0_OMASK0_type *) 0xf880fc2cu)	/* CPUx Overlay Mask Register 23 */
#define CPU0_OMASK24	(*( CPU0_OMASK0_type *) 0xf880fc38u)	/* CPUx Overlay Mask Register 24 */
#define CPU0_OMASK25	(*( CPU0_OMASK0_type *) 0xf880fc44u)	/* CPUx Overlay Mask Register 25 */
#define CPU0_OMASK26	(*( CPU0_OMASK0_type *) 0xf880fc50u)	/* CPUx Overlay Mask Register 26 */
#define CPU0_OMASK27	(*( CPU0_OMASK0_type *) 0xf880fc5cu)	/* CPUx Overlay Mask Register 27 */
#define CPU0_OMASK28	(*( CPU0_OMASK0_type *) 0xf880fc68u)	/* CPUx Overlay Mask Register 28 */
#define CPU0_OMASK29	(*( CPU0_OMASK0_type *) 0xf880fc74u)	/* CPUx Overlay Mask Register 29 */
#define CPU0_OMASK3	(*( CPU0_OMASK0_type *) 0xf880fb3cu)	/* CPUx Overlay Mask Register 3 */
#define CPU0_OMASK30	(*( CPU0_OMASK0_type *) 0xf880fc80u)	/* CPUx Overlay Mask Register 30 */
#define CPU0_OMASK31	(*( CPU0_OMASK0_type *) 0xf880fc8cu)	/* CPUx Overlay Mask Register 31 */
#define CPU0_OMASK4	(*( CPU0_OMASK0_type *) 0xf880fb48u)	/* CPUx Overlay Mask Register 4 */
#define CPU0_OMASK5	(*( CPU0_OMASK0_type *) 0xf880fb54u)	/* CPUx Overlay Mask Register 5 */
#define CPU0_OMASK6	(*( CPU0_OMASK0_type *) 0xf880fb60u)	/* CPUx Overlay Mask Register 6 */
#define CPU0_OMASK7	(*( CPU0_OMASK0_type *) 0xf880fb6cu)	/* CPUx Overlay Mask Register 7 */
#define CPU0_OMASK8	(*( CPU0_OMASK0_type *) 0xf880fb78u)	/* CPUx Overlay Mask Register 8 */
#define CPU0_OMASK9	(*( CPU0_OMASK0_type *) 0xf880fb84u)	/* CPUx Overlay Mask Register 9 */
#define CPU1_OMASK0	(*( CPU0_OMASK0_type *) 0xf882fb18u)	/* CPUx Overlay Mask Register 0 */
#define CPU1_OMASK1	(*( CPU0_OMASK0_type *) 0xf882fb24u)	/* CPUx Overlay Mask Register 1 */
#define CPU1_OMASK10	(*( CPU0_OMASK0_type *) 0xf882fb90u)	/* CPUx Overlay Mask Register 10 */
#define CPU1_OMASK11	(*( CPU0_OMASK0_type *) 0xf882fb9cu)	/* CPUx Overlay Mask Register 11 */
#define CPU1_OMASK12	(*( CPU0_OMASK0_type *) 0xf882fba8u)	/* CPUx Overlay Mask Register 12 */
#define CPU1_OMASK13	(*( CPU0_OMASK0_type *) 0xf882fbb4u)	/* CPUx Overlay Mask Register 13 */
#define CPU1_OMASK14	(*( CPU0_OMASK0_type *) 0xf882fbc0u)	/* CPUx Overlay Mask Register 14 */
#define CPU1_OMASK15	(*( CPU0_OMASK0_type *) 0xf882fbccu)	/* CPUx Overlay Mask Register 15 */
#define CPU1_OMASK16	(*( CPU0_OMASK0_type *) 0xf882fbd8u)	/* CPUx Overlay Mask Register 16 */
#define CPU1_OMASK17	(*( CPU0_OMASK0_type *) 0xf882fbe4u)	/* CPUx Overlay Mask Register 17 */
#define CPU1_OMASK18	(*( CPU0_OMASK0_type *) 0xf882fbf0u)	/* CPUx Overlay Mask Register 18 */
#define CPU1_OMASK19	(*( CPU0_OMASK0_type *) 0xf882fbfcu)	/* CPUx Overlay Mask Register 19 */
#define CPU1_OMASK2	(*( CPU0_OMASK0_type *) 0xf882fb30u)	/* CPUx Overlay Mask Register 2 */
#define CPU1_OMASK20	(*( CPU0_OMASK0_type *) 0xf882fc08u)	/* CPUx Overlay Mask Register 20 */
#define CPU1_OMASK21	(*( CPU0_OMASK0_type *) 0xf882fc14u)	/* CPUx Overlay Mask Register 21 */
#define CPU1_OMASK22	(*( CPU0_OMASK0_type *) 0xf882fc20u)	/* CPUx Overlay Mask Register 22 */
#define CPU1_OMASK23	(*( CPU0_OMASK0_type *) 0xf882fc2cu)	/* CPUx Overlay Mask Register 23 */
#define CPU1_OMASK24	(*( CPU0_OMASK0_type *) 0xf882fc38u)	/* CPUx Overlay Mask Register 24 */
#define CPU1_OMASK25	(*( CPU0_OMASK0_type *) 0xf882fc44u)	/* CPUx Overlay Mask Register 25 */
#define CPU1_OMASK26	(*( CPU0_OMASK0_type *) 0xf882fc50u)	/* CPUx Overlay Mask Register 26 */
#define CPU1_OMASK27	(*( CPU0_OMASK0_type *) 0xf882fc5cu)	/* CPUx Overlay Mask Register 27 */
#define CPU1_OMASK28	(*( CPU0_OMASK0_type *) 0xf882fc68u)	/* CPUx Overlay Mask Register 28 */
#define CPU1_OMASK29	(*( CPU0_OMASK0_type *) 0xf882fc74u)	/* CPUx Overlay Mask Register 29 */
#define CPU1_OMASK3	(*( CPU0_OMASK0_type *) 0xf882fb3cu)	/* CPUx Overlay Mask Register 3 */
#define CPU1_OMASK30	(*( CPU0_OMASK0_type *) 0xf882fc80u)	/* CPUx Overlay Mask Register 30 */
#define CPU1_OMASK31	(*( CPU0_OMASK0_type *) 0xf882fc8cu)	/* CPUx Overlay Mask Register 31 */
#define CPU1_OMASK4	(*( CPU0_OMASK0_type *) 0xf882fb48u)	/* CPUx Overlay Mask Register 4 */
#define CPU1_OMASK5	(*( CPU0_OMASK0_type *) 0xf882fb54u)	/* CPUx Overlay Mask Register 5 */
#define CPU1_OMASK6	(*( CPU0_OMASK0_type *) 0xf882fb60u)	/* CPUx Overlay Mask Register 6 */
#define CPU1_OMASK7	(*( CPU0_OMASK0_type *) 0xf882fb6cu)	/* CPUx Overlay Mask Register 7 */
#define CPU1_OMASK8	(*( CPU0_OMASK0_type *) 0xf882fb78u)	/* CPUx Overlay Mask Register 8 */
#define CPU1_OMASK9	(*( CPU0_OMASK0_type *) 0xf882fb84u)	/* CPUx Overlay Mask Register 9 */
#define CPU2_OMASK0	(*( CPU0_OMASK0_type *) 0xf884fb18u)	/* CPUx Overlay Mask Register 0 */
#define CPU2_OMASK1	(*( CPU0_OMASK0_type *) 0xf884fb24u)	/* CPUx Overlay Mask Register 1 */
#define CPU2_OMASK10	(*( CPU0_OMASK0_type *) 0xf884fb90u)	/* CPUx Overlay Mask Register 10 */
#define CPU2_OMASK11	(*( CPU0_OMASK0_type *) 0xf884fb9cu)	/* CPUx Overlay Mask Register 11 */
#define CPU2_OMASK12	(*( CPU0_OMASK0_type *) 0xf884fba8u)	/* CPUx Overlay Mask Register 12 */
#define CPU2_OMASK13	(*( CPU0_OMASK0_type *) 0xf884fbb4u)	/* CPUx Overlay Mask Register 13 */
#define CPU2_OMASK14	(*( CPU0_OMASK0_type *) 0xf884fbc0u)	/* CPUx Overlay Mask Register 14 */
#define CPU2_OMASK15	(*( CPU0_OMASK0_type *) 0xf884fbccu)	/* CPUx Overlay Mask Register 15 */
#define CPU2_OMASK16	(*( CPU0_OMASK0_type *) 0xf884fbd8u)	/* CPUx Overlay Mask Register 16 */
#define CPU2_OMASK17	(*( CPU0_OMASK0_type *) 0xf884fbe4u)	/* CPUx Overlay Mask Register 17 */
#define CPU2_OMASK18	(*( CPU0_OMASK0_type *) 0xf884fbf0u)	/* CPUx Overlay Mask Register 18 */
#define CPU2_OMASK19	(*( CPU0_OMASK0_type *) 0xf884fbfcu)	/* CPUx Overlay Mask Register 19 */
#define CPU2_OMASK2	(*( CPU0_OMASK0_type *) 0xf884fb30u)	/* CPUx Overlay Mask Register 2 */
#define CPU2_OMASK20	(*( CPU0_OMASK0_type *) 0xf884fc08u)	/* CPUx Overlay Mask Register 20 */
#define CPU2_OMASK21	(*( CPU0_OMASK0_type *) 0xf884fc14u)	/* CPUx Overlay Mask Register 21 */
#define CPU2_OMASK22	(*( CPU0_OMASK0_type *) 0xf884fc20u)	/* CPUx Overlay Mask Register 22 */
#define CPU2_OMASK23	(*( CPU0_OMASK0_type *) 0xf884fc2cu)	/* CPUx Overlay Mask Register 23 */
#define CPU2_OMASK24	(*( CPU0_OMASK0_type *) 0xf884fc38u)	/* CPUx Overlay Mask Register 24 */
#define CPU2_OMASK25	(*( CPU0_OMASK0_type *) 0xf884fc44u)	/* CPUx Overlay Mask Register 25 */
#define CPU2_OMASK26	(*( CPU0_OMASK0_type *) 0xf884fc50u)	/* CPUx Overlay Mask Register 26 */
#define CPU2_OMASK27	(*( CPU0_OMASK0_type *) 0xf884fc5cu)	/* CPUx Overlay Mask Register 27 */
#define CPU2_OMASK28	(*( CPU0_OMASK0_type *) 0xf884fc68u)	/* CPUx Overlay Mask Register 28 */
#define CPU2_OMASK29	(*( CPU0_OMASK0_type *) 0xf884fc74u)	/* CPUx Overlay Mask Register 29 */
#define CPU2_OMASK3	(*( CPU0_OMASK0_type *) 0xf884fb3cu)	/* CPUx Overlay Mask Register 3 */
#define CPU2_OMASK30	(*( CPU0_OMASK0_type *) 0xf884fc80u)	/* CPUx Overlay Mask Register 30 */
#define CPU2_OMASK31	(*( CPU0_OMASK0_type *) 0xf884fc8cu)	/* CPUx Overlay Mask Register 31 */
#define CPU2_OMASK4	(*( CPU0_OMASK0_type *) 0xf884fb48u)	/* CPUx Overlay Mask Register 4 */
#define CPU2_OMASK5	(*( CPU0_OMASK0_type *) 0xf884fb54u)	/* CPUx Overlay Mask Register 5 */
#define CPU2_OMASK6	(*( CPU0_OMASK0_type *) 0xf884fb60u)	/* CPUx Overlay Mask Register 6 */
#define CPU2_OMASK7	(*( CPU0_OMASK0_type *) 0xf884fb6cu)	/* CPUx Overlay Mask Register 7 */
#define CPU2_OMASK8	(*( CPU0_OMASK0_type *) 0xf884fb78u)	/* CPUx Overlay Mask Register 8 */
#define CPU2_OMASK9	(*( CPU0_OMASK0_type *) 0xf884fb84u)	/* CPUx Overlay Mask Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SHOVEN_x       : 32;	/* Shadow Overlay Enable - SHOVEN[x] */
	} B;
	int I;
	unsigned int U;

} CPU0_OSEL_type;
#define CPU0_OSEL	(*( CPU0_OSEL_type *) 0xf880fb00u)	/* CPUx Overlay Range Select Register */
#define CPU1_OSEL	(*( CPU0_OSEL_type *) 0xf882fb00u)	/* CPUx Overlay Range Select Register */
#define CPU2_OSEL	(*( CPU0_OSEL_type *) 0xf884fb00u)	/* CPUx Overlay Range Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 TBASE          : 23;	/* Target Base */
		/* const */ unsigned __sfrbit32 RES_3          : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_OTAR0_type;
#define CPU0_OTAR0	(*( CPU0_OTAR0_type *) 0xf880fb14u)	/* CPUx Overlay Target Address Register 0 */
#define CPU0_OTAR1	(*( CPU0_OTAR0_type *) 0xf880fb20u)	/* CPUx Overlay Target Address Register 1 */
#define CPU0_OTAR10	(*( CPU0_OTAR0_type *) 0xf880fb8cu)	/* CPUx Overlay Target Address Register 10 */
#define CPU0_OTAR11	(*( CPU0_OTAR0_type *) 0xf880fb98u)	/* CPUx Overlay Target Address Register 11 */
#define CPU0_OTAR12	(*( CPU0_OTAR0_type *) 0xf880fba4u)	/* CPUx Overlay Target Address Register 12 */
#define CPU0_OTAR13	(*( CPU0_OTAR0_type *) 0xf880fbb0u)	/* CPUx Overlay Target Address Register 13 */
#define CPU0_OTAR14	(*( CPU0_OTAR0_type *) 0xf880fbbcu)	/* CPUx Overlay Target Address Register 14 */
#define CPU0_OTAR15	(*( CPU0_OTAR0_type *) 0xf880fbc8u)	/* CPUx Overlay Target Address Register 15 */
#define CPU0_OTAR16	(*( CPU0_OTAR0_type *) 0xf880fbd4u)	/* CPUx Overlay Target Address Register 16 */
#define CPU0_OTAR17	(*( CPU0_OTAR0_type *) 0xf880fbe0u)	/* CPUx Overlay Target Address Register 17 */
#define CPU0_OTAR18	(*( CPU0_OTAR0_type *) 0xf880fbecu)	/* CPUx Overlay Target Address Register 18 */
#define CPU0_OTAR19	(*( CPU0_OTAR0_type *) 0xf880fbf8u)	/* CPUx Overlay Target Address Register 19 */
#define CPU0_OTAR2	(*( CPU0_OTAR0_type *) 0xf880fb2cu)	/* CPUx Overlay Target Address Register 2 */
#define CPU0_OTAR20	(*( CPU0_OTAR0_type *) 0xf880fc04u)	/* CPUx Overlay Target Address Register 20 */
#define CPU0_OTAR21	(*( CPU0_OTAR0_type *) 0xf880fc10u)	/* CPUx Overlay Target Address Register 21 */
#define CPU0_OTAR22	(*( CPU0_OTAR0_type *) 0xf880fc1cu)	/* CPUx Overlay Target Address Register 22 */
#define CPU0_OTAR23	(*( CPU0_OTAR0_type *) 0xf880fc28u)	/* CPUx Overlay Target Address Register 23 */
#define CPU0_OTAR24	(*( CPU0_OTAR0_type *) 0xf880fc34u)	/* CPUx Overlay Target Address Register 24 */
#define CPU0_OTAR25	(*( CPU0_OTAR0_type *) 0xf880fc40u)	/* CPUx Overlay Target Address Register 25 */
#define CPU0_OTAR26	(*( CPU0_OTAR0_type *) 0xf880fc4cu)	/* CPUx Overlay Target Address Register 26 */
#define CPU0_OTAR27	(*( CPU0_OTAR0_type *) 0xf880fc58u)	/* CPUx Overlay Target Address Register 27 */
#define CPU0_OTAR28	(*( CPU0_OTAR0_type *) 0xf880fc64u)	/* CPUx Overlay Target Address Register 28 */
#define CPU0_OTAR29	(*( CPU0_OTAR0_type *) 0xf880fc70u)	/* CPUx Overlay Target Address Register 29 */
#define CPU0_OTAR3	(*( CPU0_OTAR0_type *) 0xf880fb38u)	/* CPUx Overlay Target Address Register 3 */
#define CPU0_OTAR30	(*( CPU0_OTAR0_type *) 0xf880fc7cu)	/* CPUx Overlay Target Address Register 30 */
#define CPU0_OTAR31	(*( CPU0_OTAR0_type *) 0xf880fc88u)	/* CPUx Overlay Target Address Register 31 */
#define CPU0_OTAR4	(*( CPU0_OTAR0_type *) 0xf880fb44u)	/* CPUx Overlay Target Address Register 4 */
#define CPU0_OTAR5	(*( CPU0_OTAR0_type *) 0xf880fb50u)	/* CPUx Overlay Target Address Register 5 */
#define CPU0_OTAR6	(*( CPU0_OTAR0_type *) 0xf880fb5cu)	/* CPUx Overlay Target Address Register 6 */
#define CPU0_OTAR7	(*( CPU0_OTAR0_type *) 0xf880fb68u)	/* CPUx Overlay Target Address Register 7 */
#define CPU0_OTAR8	(*( CPU0_OTAR0_type *) 0xf880fb74u)	/* CPUx Overlay Target Address Register 8 */
#define CPU0_OTAR9	(*( CPU0_OTAR0_type *) 0xf880fb80u)	/* CPUx Overlay Target Address Register 9 */
#define CPU1_OTAR0	(*( CPU0_OTAR0_type *) 0xf882fb14u)	/* CPUx Overlay Target Address Register 0 */
#define CPU1_OTAR1	(*( CPU0_OTAR0_type *) 0xf882fb20u)	/* CPUx Overlay Target Address Register 1 */
#define CPU1_OTAR10	(*( CPU0_OTAR0_type *) 0xf882fb8cu)	/* CPUx Overlay Target Address Register 10 */
#define CPU1_OTAR11	(*( CPU0_OTAR0_type *) 0xf882fb98u)	/* CPUx Overlay Target Address Register 11 */
#define CPU1_OTAR12	(*( CPU0_OTAR0_type *) 0xf882fba4u)	/* CPUx Overlay Target Address Register 12 */
#define CPU1_OTAR13	(*( CPU0_OTAR0_type *) 0xf882fbb0u)	/* CPUx Overlay Target Address Register 13 */
#define CPU1_OTAR14	(*( CPU0_OTAR0_type *) 0xf882fbbcu)	/* CPUx Overlay Target Address Register 14 */
#define CPU1_OTAR15	(*( CPU0_OTAR0_type *) 0xf882fbc8u)	/* CPUx Overlay Target Address Register 15 */
#define CPU1_OTAR16	(*( CPU0_OTAR0_type *) 0xf882fbd4u)	/* CPUx Overlay Target Address Register 16 */
#define CPU1_OTAR17	(*( CPU0_OTAR0_type *) 0xf882fbe0u)	/* CPUx Overlay Target Address Register 17 */
#define CPU1_OTAR18	(*( CPU0_OTAR0_type *) 0xf882fbecu)	/* CPUx Overlay Target Address Register 18 */
#define CPU1_OTAR19	(*( CPU0_OTAR0_type *) 0xf882fbf8u)	/* CPUx Overlay Target Address Register 19 */
#define CPU1_OTAR2	(*( CPU0_OTAR0_type *) 0xf882fb2cu)	/* CPUx Overlay Target Address Register 2 */
#define CPU1_OTAR20	(*( CPU0_OTAR0_type *) 0xf882fc04u)	/* CPUx Overlay Target Address Register 20 */
#define CPU1_OTAR21	(*( CPU0_OTAR0_type *) 0xf882fc10u)	/* CPUx Overlay Target Address Register 21 */
#define CPU1_OTAR22	(*( CPU0_OTAR0_type *) 0xf882fc1cu)	/* CPUx Overlay Target Address Register 22 */
#define CPU1_OTAR23	(*( CPU0_OTAR0_type *) 0xf882fc28u)	/* CPUx Overlay Target Address Register 23 */
#define CPU1_OTAR24	(*( CPU0_OTAR0_type *) 0xf882fc34u)	/* CPUx Overlay Target Address Register 24 */
#define CPU1_OTAR25	(*( CPU0_OTAR0_type *) 0xf882fc40u)	/* CPUx Overlay Target Address Register 25 */
#define CPU1_OTAR26	(*( CPU0_OTAR0_type *) 0xf882fc4cu)	/* CPUx Overlay Target Address Register 26 */
#define CPU1_OTAR27	(*( CPU0_OTAR0_type *) 0xf882fc58u)	/* CPUx Overlay Target Address Register 27 */
#define CPU1_OTAR28	(*( CPU0_OTAR0_type *) 0xf882fc64u)	/* CPUx Overlay Target Address Register 28 */
#define CPU1_OTAR29	(*( CPU0_OTAR0_type *) 0xf882fc70u)	/* CPUx Overlay Target Address Register 29 */
#define CPU1_OTAR3	(*( CPU0_OTAR0_type *) 0xf882fb38u)	/* CPUx Overlay Target Address Register 3 */
#define CPU1_OTAR30	(*( CPU0_OTAR0_type *) 0xf882fc7cu)	/* CPUx Overlay Target Address Register 30 */
#define CPU1_OTAR31	(*( CPU0_OTAR0_type *) 0xf882fc88u)	/* CPUx Overlay Target Address Register 31 */
#define CPU1_OTAR4	(*( CPU0_OTAR0_type *) 0xf882fb44u)	/* CPUx Overlay Target Address Register 4 */
#define CPU1_OTAR5	(*( CPU0_OTAR0_type *) 0xf882fb50u)	/* CPUx Overlay Target Address Register 5 */
#define CPU1_OTAR6	(*( CPU0_OTAR0_type *) 0xf882fb5cu)	/* CPUx Overlay Target Address Register 6 */
#define CPU1_OTAR7	(*( CPU0_OTAR0_type *) 0xf882fb68u)	/* CPUx Overlay Target Address Register 7 */
#define CPU1_OTAR8	(*( CPU0_OTAR0_type *) 0xf882fb74u)	/* CPUx Overlay Target Address Register 8 */
#define CPU1_OTAR9	(*( CPU0_OTAR0_type *) 0xf882fb80u)	/* CPUx Overlay Target Address Register 9 */
#define CPU2_OTAR0	(*( CPU0_OTAR0_type *) 0xf884fb14u)	/* CPUx Overlay Target Address Register 0 */
#define CPU2_OTAR1	(*( CPU0_OTAR0_type *) 0xf884fb20u)	/* CPUx Overlay Target Address Register 1 */
#define CPU2_OTAR10	(*( CPU0_OTAR0_type *) 0xf884fb8cu)	/* CPUx Overlay Target Address Register 10 */
#define CPU2_OTAR11	(*( CPU0_OTAR0_type *) 0xf884fb98u)	/* CPUx Overlay Target Address Register 11 */
#define CPU2_OTAR12	(*( CPU0_OTAR0_type *) 0xf884fba4u)	/* CPUx Overlay Target Address Register 12 */
#define CPU2_OTAR13	(*( CPU0_OTAR0_type *) 0xf884fbb0u)	/* CPUx Overlay Target Address Register 13 */
#define CPU2_OTAR14	(*( CPU0_OTAR0_type *) 0xf884fbbcu)	/* CPUx Overlay Target Address Register 14 */
#define CPU2_OTAR15	(*( CPU0_OTAR0_type *) 0xf884fbc8u)	/* CPUx Overlay Target Address Register 15 */
#define CPU2_OTAR16	(*( CPU0_OTAR0_type *) 0xf884fbd4u)	/* CPUx Overlay Target Address Register 16 */
#define CPU2_OTAR17	(*( CPU0_OTAR0_type *) 0xf884fbe0u)	/* CPUx Overlay Target Address Register 17 */
#define CPU2_OTAR18	(*( CPU0_OTAR0_type *) 0xf884fbecu)	/* CPUx Overlay Target Address Register 18 */
#define CPU2_OTAR19	(*( CPU0_OTAR0_type *) 0xf884fbf8u)	/* CPUx Overlay Target Address Register 19 */
#define CPU2_OTAR2	(*( CPU0_OTAR0_type *) 0xf884fb2cu)	/* CPUx Overlay Target Address Register 2 */
#define CPU2_OTAR20	(*( CPU0_OTAR0_type *) 0xf884fc04u)	/* CPUx Overlay Target Address Register 20 */
#define CPU2_OTAR21	(*( CPU0_OTAR0_type *) 0xf884fc10u)	/* CPUx Overlay Target Address Register 21 */
#define CPU2_OTAR22	(*( CPU0_OTAR0_type *) 0xf884fc1cu)	/* CPUx Overlay Target Address Register 22 */
#define CPU2_OTAR23	(*( CPU0_OTAR0_type *) 0xf884fc28u)	/* CPUx Overlay Target Address Register 23 */
#define CPU2_OTAR24	(*( CPU0_OTAR0_type *) 0xf884fc34u)	/* CPUx Overlay Target Address Register 24 */
#define CPU2_OTAR25	(*( CPU0_OTAR0_type *) 0xf884fc40u)	/* CPUx Overlay Target Address Register 25 */
#define CPU2_OTAR26	(*( CPU0_OTAR0_type *) 0xf884fc4cu)	/* CPUx Overlay Target Address Register 26 */
#define CPU2_OTAR27	(*( CPU0_OTAR0_type *) 0xf884fc58u)	/* CPUx Overlay Target Address Register 27 */
#define CPU2_OTAR28	(*( CPU0_OTAR0_type *) 0xf884fc64u)	/* CPUx Overlay Target Address Register 28 */
#define CPU2_OTAR29	(*( CPU0_OTAR0_type *) 0xf884fc70u)	/* CPUx Overlay Target Address Register 29 */
#define CPU2_OTAR3	(*( CPU0_OTAR0_type *) 0xf884fb38u)	/* CPUx Overlay Target Address Register 3 */
#define CPU2_OTAR30	(*( CPU0_OTAR0_type *) 0xf884fc7cu)	/* CPUx Overlay Target Address Register 30 */
#define CPU2_OTAR31	(*( CPU0_OTAR0_type *) 0xf884fc88u)	/* CPUx Overlay Target Address Register 31 */
#define CPU2_OTAR4	(*( CPU0_OTAR0_type *) 0xf884fb44u)	/* CPUx Overlay Target Address Register 4 */
#define CPU2_OTAR5	(*( CPU0_OTAR0_type *) 0xf884fb50u)	/* CPUx Overlay Target Address Register 5 */
#define CPU2_OTAR6	(*( CPU0_OTAR0_type *) 0xf884fb5cu)	/* CPUx Overlay Target Address Register 6 */
#define CPU2_OTAR7	(*( CPU0_OTAR0_type *) 0xf884fb68u)	/* CPUx Overlay Target Address Register 7 */
#define CPU2_OTAR8	(*( CPU0_OTAR0_type *) 0xf884fb74u)	/* CPUx Overlay Target Address Register 8 */
#define CPU2_OTAR9	(*( CPU0_OTAR0_type *) 0xf884fb80u)	/* CPUx Overlay Target Address Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 bPC            : 31;	/* Program Counter */
	} B;
	int I;
	unsigned int U;

} CPU0_PC_type;
#define CPU0_PC	(*( CPU0_PC_type *) 0xf881fe08u)	/* CPUx Program Counter */
#define CPU1_PC	(*( CPU0_PC_type *) 0xf883fe08u)	/* CPUx Program Counter */
#define CPU2_PC	(*( CPU0_PC_type *) 0xf885fe08u)	/* CPUx Program Counter */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 PCBYP          : 1;	/* Program Cache Bypass */
		/* const */ unsigned __sfrbit32 RES_3          : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PCON0_type;
#define CPU0_PCON0	(*( CPU0_PCON0_type *) 0xf881920cu)	/* CPUx Program Control 0 */
#define CPU1_PCON0	(*( CPU0_PCON0_type *) 0xf883920cu)	/* CPUx Program Control 0 */
#define CPU2_PCON0	(*( CPU0_PCON0_type *) 0xf885920cu)	/* CPUx Program Control 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PCINV          : 1;	/* Program Cache Invalidate */
		unsigned __sfrbit32 PBINV          : 1;	/* Program Buffer Invalidate */
		/* const */ unsigned __sfrbit32 RES            : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PCON1_type;
#define CPU0_PCON1	(*( CPU0_PCON1_type *) 0xf8819204u)	/* CPUx Program Control 1 */
#define CPU1_PCON1	(*( CPU0_PCON1_type *) 0xf8839204u)	/* CPUx Program Control 1 */
#define CPU2_PCON1	(*( CPU0_PCON1_type *) 0xf8859204u)	/* CPUx Program Control 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 PCACHE_SZE     : 16;	/* Program Cache Size (ICACHE) in KBytes */
		/* const */ unsigned __sfrbit32 PSCRATCH_SZE   : 16;	/* Program Scratch Size in KBytes */
	} B;
	int I;
	unsigned int U;

} CPU0_PCON2_type;
#define CPU0_PCON2	(*( CPU0_PCON2_type *) 0xf8819208u)	/* CPUx Program Control 2 */
#define CPU1_PCON2	(*( CPU0_PCON2_type *) 0xf8839208u)	/* CPUx Program Control 2 */
#define CPU2_PCON2	(*( CPU0_PCON2_type *) 0xf8859208u)	/* CPUx Program Control 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PCXO           : 16;	/* Previous Context Pointer Offset Field */
		unsigned __sfrbit32 PCXS           : 4;	/* Previous Context Pointer Segment Address */
		unsigned __sfrbit32 UL             : 1;	/* Upper or Lower Context Tag */
		unsigned __sfrbit32 PIE            : 1;	/* Previous Interrupt Enable */
		unsigned __sfrbit32 PCPN           : 8;	/* Previous CPU Priority Number */
		/* const */ unsigned __sfrbit32 RES            : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PCXI_type;
#define CPU0_PCXI	(*( CPU0_PCXI_type *) 0xf881fe00u)	/* CPUx Previous Context Information Register */
#define CPU1_PCXI	(*( CPU0_PCXI_type *) 0xf883fe00u)	/* CPUx Previous Context Information Register */
#define CPU2_PCXI	(*( CPU0_PCXI_type *) 0xf885fe00u)	/* CPUx Previous Context Information Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IED            : 1;	/* Integrity Error Detected */
		/* const */ unsigned __sfrbit32 IE_T           : 1;	/* Integrity Error - TAG Memory */
		/* const */ unsigned __sfrbit32 IE_C           : 1;	/* Integrity Error - Cache Memory */
		/* const */ unsigned __sfrbit32 IE_S           : 1;	/* Integrity Error - Scratchpad Memory */
		/* const */ unsigned __sfrbit32 IE_BI          : 1;	/* Integrity Error - Bus Interface */
		/* const */ unsigned __sfrbit32 E_INFO         : 6;	/* Error Information */
		/* const */ unsigned __sfrbit32 IE_UNC         : 1;	/* Integrity Error - Uncorrectable Error Detected */
		/* const */ unsigned __sfrbit32 IE_SP          : 1;	/* Safety Protection Error Detected */
		/* const */ unsigned __sfrbit32 IE_BS          : 1;	/* Bus Slave Access Indicator */
		/* const */ unsigned __sfrbit32 IE_ADDR        : 1;	/* Address Phase error detected at SRI slave interface */
		/* const */ unsigned __sfrbit32 IE_LPB         : 1;	/* Integrity Error - Local Pflash bank */
		/* const */ unsigned __sfrbit32 IE_MTMV        : 1;	/* Memory Test Mode Violation detected */
		/* const */ unsigned __sfrbit32 RES            : 15;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PIETR_type;
#define CPU0_PIETR	(*( CPU0_PIETR_type *) 0xf8819214u)	/* CPUx Program Integrity Error Trap Register */
#define CPU1_PIETR	(*( CPU0_PIETR_type *) 0xf8839214u)	/* CPUx Program Integrity Error Trap Register */
#define CPU2_PIETR	(*( CPU0_PIETR_type *) 0xf8859214u)	/* CPUx Program Integrity Error Trap Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DAC            : 16;	/* Data Access Cacheability Segments FHto 0H */
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PMA0_type;
#define CPU0_PMA0	(*( CPU0_PMA0_type *) 0xf8818100u)	/* CPUx Data Access CacheabilityRegister */
#define CPU1_PMA0	(*( CPU0_PMA0_type *) 0xf8838100u)	/* CPUx Data Access CacheabilityRegister */
#define CPU2_PMA0	(*( CPU0_PMA0_type *) 0xf8858100u)	/* CPUx Data Access CacheabilityRegister */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CAC            : 16;	/* Code Access Cacheability Segments FH-0H */
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PMA1_type;
#define CPU0_PMA1	(*( CPU0_PMA1_type *) 0xf8818104u)	/* CPUx Code Access CacheabilityRegister */
#define CPU1_PMA1	(*( CPU0_PMA1_type *) 0xf8838104u)	/* CPUx Code Access CacheabilityRegister */
#define CPU2_PMA1	(*( CPU0_PMA1_type *) 0xf8858104u)	/* CPUx Code Access CacheabilityRegister */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 PSI            : 16;	/* Peripheral Space Identifier Segments FH-0H */
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PMA2_type;
#define CPU0_PMA2	(*( CPU0_PMA2_type *) 0xf8818108u)	/* CPUx Peripheral Space Identifier register */
#define CPU1_PMA2	(*( CPU0_PMA2_type *) 0xf8838108u)	/* CPUx Peripheral Space Identifier register */
#define CPU2_PMA2	(*( CPU0_PMA2_type *) 0xf8858108u)	/* CPUx Peripheral Space Identifier register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FRE            : 1;	/* Fetch Range Error */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 FBE            : 1;	/* Fetch Bus Error */
		/* const */ unsigned __sfrbit32 RES_4          : 9;	/* Reserved */
		unsigned __sfrbit32 FPE            : 1;	/* Fetch Peripheral Error */
		/* const */ unsigned __sfrbit32 RES_6          : 1;	/* Reserved */
		unsigned __sfrbit32 FME            : 1;	/* Fetch MSIST Error */
		/* const */ unsigned __sfrbit32 RES_8          : 17;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_PSTR_type;
#define CPU0_PSTR	(*( CPU0_PSTR_type *) 0xf8819200u)	/* CPUx Program Synchronous Trap Register */
#define CPU1_PSTR	(*( CPU0_PSTR_type *) 0xf8839200u)	/* CPUx Program Synchronous Trap Register */
#define CPU2_PSTR	(*( CPU0_PSTR_type *) 0xf8859200u)	/* CPUx Program Synchronous Trap Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CDC            : 7;	/* Call Depth Counter */
		unsigned __sfrbit32 CDE            : 1;	/* Call Depth Count Enable */
		unsigned __sfrbit32 GW             : 1;	/* Global Address Register Write Permission */
		unsigned __sfrbit32 IS             : 1;	/* Interrupt Stack Control */
		unsigned __sfrbit32 IO             : 2;	/* Access Privilege Level Control (I/O Privilege) */
		unsigned __sfrbit32 PRS            : 2;	/* Protection Register Set */
		unsigned __sfrbit32 S              : 1;	/* Safe Task Identifier */
		unsigned __sfrbit32 PRS2           : 1;	/* Protection Register Set MSB */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
		unsigned __sfrbit32 USB            : 8;	/* User Status Bits */
	} B;
	int I;
	unsigned int U;

} CPU0_PSW_type;
#define CPU0_PSW	(*( CPU0_PSW_type *) 0xf881fe04u)	/* CPUx Program Status Word */
#define CPU1_PSW	(*( CPU0_PSW_type *) 0xf883fe04u)	/* CPUx Program Status Word */
#define CPU2_PSW	(*( CPU0_PSW_type *) 0xf885fe04u)	/* CPUx Program Status Word */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 OBASE          : 17;	/* Overlay Block Base Address */
		/* const */ unsigned __sfrbit32 RES_3          : 2;	/* Reserved */
		unsigned __sfrbit32 OMEM           : 4;	/* Overlay Memory Select */
		/* const */ unsigned __sfrbit32 RES_5          : 3;	/* Reserved */
		unsigned __sfrbit32 OVEN           : 1;	/* Overlay Enabled */
	} B;
	int I;
	unsigned int U;

} CPU0_RABR0_type;
#define CPU0_RABR0	(*( CPU0_RABR0_type *) 0xf880fb10u)	/* CPUx Redirected Address Base Register 0 */
#define CPU0_RABR1	(*( CPU0_RABR0_type *) 0xf880fb1cu)	/* CPUx Redirected Address Base Register 1 */
#define CPU0_RABR10	(*( CPU0_RABR0_type *) 0xf880fb88u)	/* CPUx Redirected Address Base Register 10 */
#define CPU0_RABR11	(*( CPU0_RABR0_type *) 0xf880fb94u)	/* CPUx Redirected Address Base Register 11 */
#define CPU0_RABR12	(*( CPU0_RABR0_type *) 0xf880fba0u)	/* CPUx Redirected Address Base Register 12 */
#define CPU0_RABR13	(*( CPU0_RABR0_type *) 0xf880fbacu)	/* CPUx Redirected Address Base Register 13 */
#define CPU0_RABR14	(*( CPU0_RABR0_type *) 0xf880fbb8u)	/* CPUx Redirected Address Base Register 14 */
#define CPU0_RABR15	(*( CPU0_RABR0_type *) 0xf880fbc4u)	/* CPUx Redirected Address Base Register 15 */
#define CPU0_RABR16	(*( CPU0_RABR0_type *) 0xf880fbd0u)	/* CPUx Redirected Address Base Register 16 */
#define CPU0_RABR17	(*( CPU0_RABR0_type *) 0xf880fbdcu)	/* CPUx Redirected Address Base Register 17 */
#define CPU0_RABR18	(*( CPU0_RABR0_type *) 0xf880fbe8u)	/* CPUx Redirected Address Base Register 18 */
#define CPU0_RABR19	(*( CPU0_RABR0_type *) 0xf880fbf4u)	/* CPUx Redirected Address Base Register 19 */
#define CPU0_RABR2	(*( CPU0_RABR0_type *) 0xf880fb28u)	/* CPUx Redirected Address Base Register 2 */
#define CPU0_RABR20	(*( CPU0_RABR0_type *) 0xf880fc00u)	/* CPUx Redirected Address Base Register 20 */
#define CPU0_RABR21	(*( CPU0_RABR0_type *) 0xf880fc0cu)	/* CPUx Redirected Address Base Register 21 */
#define CPU0_RABR22	(*( CPU0_RABR0_type *) 0xf880fc18u)	/* CPUx Redirected Address Base Register 22 */
#define CPU0_RABR23	(*( CPU0_RABR0_type *) 0xf880fc24u)	/* CPUx Redirected Address Base Register 23 */
#define CPU0_RABR24	(*( CPU0_RABR0_type *) 0xf880fc30u)	/* CPUx Redirected Address Base Register 24 */
#define CPU0_RABR25	(*( CPU0_RABR0_type *) 0xf880fc3cu)	/* CPUx Redirected Address Base Register 25 */
#define CPU0_RABR26	(*( CPU0_RABR0_type *) 0xf880fc48u)	/* CPUx Redirected Address Base Register 26 */
#define CPU0_RABR27	(*( CPU0_RABR0_type *) 0xf880fc54u)	/* CPUx Redirected Address Base Register 27 */
#define CPU0_RABR28	(*( CPU0_RABR0_type *) 0xf880fc60u)	/* CPUx Redirected Address Base Register 28 */
#define CPU0_RABR29	(*( CPU0_RABR0_type *) 0xf880fc6cu)	/* CPUx Redirected Address Base Register 29 */
#define CPU0_RABR3	(*( CPU0_RABR0_type *) 0xf880fb34u)	/* CPUx Redirected Address Base Register 3 */
#define CPU0_RABR30	(*( CPU0_RABR0_type *) 0xf880fc78u)	/* CPUx Redirected Address Base Register 30 */
#define CPU0_RABR31	(*( CPU0_RABR0_type *) 0xf880fc84u)	/* CPUx Redirected Address Base Register 31 */
#define CPU0_RABR4	(*( CPU0_RABR0_type *) 0xf880fb40u)	/* CPUx Redirected Address Base Register 4 */
#define CPU0_RABR5	(*( CPU0_RABR0_type *) 0xf880fb4cu)	/* CPUx Redirected Address Base Register 5 */
#define CPU0_RABR6	(*( CPU0_RABR0_type *) 0xf880fb58u)	/* CPUx Redirected Address Base Register 6 */
#define CPU0_RABR7	(*( CPU0_RABR0_type *) 0xf880fb64u)	/* CPUx Redirected Address Base Register 7 */
#define CPU0_RABR8	(*( CPU0_RABR0_type *) 0xf880fb70u)	/* CPUx Redirected Address Base Register 8 */
#define CPU0_RABR9	(*( CPU0_RABR0_type *) 0xf880fb7cu)	/* CPUx Redirected Address Base Register 9 */
#define CPU1_RABR0	(*( CPU0_RABR0_type *) 0xf882fb10u)	/* CPUx Redirected Address Base Register 0 */
#define CPU1_RABR1	(*( CPU0_RABR0_type *) 0xf882fb1cu)	/* CPUx Redirected Address Base Register 1 */
#define CPU1_RABR10	(*( CPU0_RABR0_type *) 0xf882fb88u)	/* CPUx Redirected Address Base Register 10 */
#define CPU1_RABR11	(*( CPU0_RABR0_type *) 0xf882fb94u)	/* CPUx Redirected Address Base Register 11 */
#define CPU1_RABR12	(*( CPU0_RABR0_type *) 0xf882fba0u)	/* CPUx Redirected Address Base Register 12 */
#define CPU1_RABR13	(*( CPU0_RABR0_type *) 0xf882fbacu)	/* CPUx Redirected Address Base Register 13 */
#define CPU1_RABR14	(*( CPU0_RABR0_type *) 0xf882fbb8u)	/* CPUx Redirected Address Base Register 14 */
#define CPU1_RABR15	(*( CPU0_RABR0_type *) 0xf882fbc4u)	/* CPUx Redirected Address Base Register 15 */
#define CPU1_RABR16	(*( CPU0_RABR0_type *) 0xf882fbd0u)	/* CPUx Redirected Address Base Register 16 */
#define CPU1_RABR17	(*( CPU0_RABR0_type *) 0xf882fbdcu)	/* CPUx Redirected Address Base Register 17 */
#define CPU1_RABR18	(*( CPU0_RABR0_type *) 0xf882fbe8u)	/* CPUx Redirected Address Base Register 18 */
#define CPU1_RABR19	(*( CPU0_RABR0_type *) 0xf882fbf4u)	/* CPUx Redirected Address Base Register 19 */
#define CPU1_RABR2	(*( CPU0_RABR0_type *) 0xf882fb28u)	/* CPUx Redirected Address Base Register 2 */
#define CPU1_RABR20	(*( CPU0_RABR0_type *) 0xf882fc00u)	/* CPUx Redirected Address Base Register 20 */
#define CPU1_RABR21	(*( CPU0_RABR0_type *) 0xf882fc0cu)	/* CPUx Redirected Address Base Register 21 */
#define CPU1_RABR22	(*( CPU0_RABR0_type *) 0xf882fc18u)	/* CPUx Redirected Address Base Register 22 */
#define CPU1_RABR23	(*( CPU0_RABR0_type *) 0xf882fc24u)	/* CPUx Redirected Address Base Register 23 */
#define CPU1_RABR24	(*( CPU0_RABR0_type *) 0xf882fc30u)	/* CPUx Redirected Address Base Register 24 */
#define CPU1_RABR25	(*( CPU0_RABR0_type *) 0xf882fc3cu)	/* CPUx Redirected Address Base Register 25 */
#define CPU1_RABR26	(*( CPU0_RABR0_type *) 0xf882fc48u)	/* CPUx Redirected Address Base Register 26 */
#define CPU1_RABR27	(*( CPU0_RABR0_type *) 0xf882fc54u)	/* CPUx Redirected Address Base Register 27 */
#define CPU1_RABR28	(*( CPU0_RABR0_type *) 0xf882fc60u)	/* CPUx Redirected Address Base Register 28 */
#define CPU1_RABR29	(*( CPU0_RABR0_type *) 0xf882fc6cu)	/* CPUx Redirected Address Base Register 29 */
#define CPU1_RABR3	(*( CPU0_RABR0_type *) 0xf882fb34u)	/* CPUx Redirected Address Base Register 3 */
#define CPU1_RABR30	(*( CPU0_RABR0_type *) 0xf882fc78u)	/* CPUx Redirected Address Base Register 30 */
#define CPU1_RABR31	(*( CPU0_RABR0_type *) 0xf882fc84u)	/* CPUx Redirected Address Base Register 31 */
#define CPU1_RABR4	(*( CPU0_RABR0_type *) 0xf882fb40u)	/* CPUx Redirected Address Base Register 4 */
#define CPU1_RABR5	(*( CPU0_RABR0_type *) 0xf882fb4cu)	/* CPUx Redirected Address Base Register 5 */
#define CPU1_RABR6	(*( CPU0_RABR0_type *) 0xf882fb58u)	/* CPUx Redirected Address Base Register 6 */
#define CPU1_RABR7	(*( CPU0_RABR0_type *) 0xf882fb64u)	/* CPUx Redirected Address Base Register 7 */
#define CPU1_RABR8	(*( CPU0_RABR0_type *) 0xf882fb70u)	/* CPUx Redirected Address Base Register 8 */
#define CPU1_RABR9	(*( CPU0_RABR0_type *) 0xf882fb7cu)	/* CPUx Redirected Address Base Register 9 */
#define CPU2_RABR0	(*( CPU0_RABR0_type *) 0xf884fb10u)	/* CPUx Redirected Address Base Register 0 */
#define CPU2_RABR1	(*( CPU0_RABR0_type *) 0xf884fb1cu)	/* CPUx Redirected Address Base Register 1 */
#define CPU2_RABR10	(*( CPU0_RABR0_type *) 0xf884fb88u)	/* CPUx Redirected Address Base Register 10 */
#define CPU2_RABR11	(*( CPU0_RABR0_type *) 0xf884fb94u)	/* CPUx Redirected Address Base Register 11 */
#define CPU2_RABR12	(*( CPU0_RABR0_type *) 0xf884fba0u)	/* CPUx Redirected Address Base Register 12 */
#define CPU2_RABR13	(*( CPU0_RABR0_type *) 0xf884fbacu)	/* CPUx Redirected Address Base Register 13 */
#define CPU2_RABR14	(*( CPU0_RABR0_type *) 0xf884fbb8u)	/* CPUx Redirected Address Base Register 14 */
#define CPU2_RABR15	(*( CPU0_RABR0_type *) 0xf884fbc4u)	/* CPUx Redirected Address Base Register 15 */
#define CPU2_RABR16	(*( CPU0_RABR0_type *) 0xf884fbd0u)	/* CPUx Redirected Address Base Register 16 */
#define CPU2_RABR17	(*( CPU0_RABR0_type *) 0xf884fbdcu)	/* CPUx Redirected Address Base Register 17 */
#define CPU2_RABR18	(*( CPU0_RABR0_type *) 0xf884fbe8u)	/* CPUx Redirected Address Base Register 18 */
#define CPU2_RABR19	(*( CPU0_RABR0_type *) 0xf884fbf4u)	/* CPUx Redirected Address Base Register 19 */
#define CPU2_RABR2	(*( CPU0_RABR0_type *) 0xf884fb28u)	/* CPUx Redirected Address Base Register 2 */
#define CPU2_RABR20	(*( CPU0_RABR0_type *) 0xf884fc00u)	/* CPUx Redirected Address Base Register 20 */
#define CPU2_RABR21	(*( CPU0_RABR0_type *) 0xf884fc0cu)	/* CPUx Redirected Address Base Register 21 */
#define CPU2_RABR22	(*( CPU0_RABR0_type *) 0xf884fc18u)	/* CPUx Redirected Address Base Register 22 */
#define CPU2_RABR23	(*( CPU0_RABR0_type *) 0xf884fc24u)	/* CPUx Redirected Address Base Register 23 */
#define CPU2_RABR24	(*( CPU0_RABR0_type *) 0xf884fc30u)	/* CPUx Redirected Address Base Register 24 */
#define CPU2_RABR25	(*( CPU0_RABR0_type *) 0xf884fc3cu)	/* CPUx Redirected Address Base Register 25 */
#define CPU2_RABR26	(*( CPU0_RABR0_type *) 0xf884fc48u)	/* CPUx Redirected Address Base Register 26 */
#define CPU2_RABR27	(*( CPU0_RABR0_type *) 0xf884fc54u)	/* CPUx Redirected Address Base Register 27 */
#define CPU2_RABR28	(*( CPU0_RABR0_type *) 0xf884fc60u)	/* CPUx Redirected Address Base Register 28 */
#define CPU2_RABR29	(*( CPU0_RABR0_type *) 0xf884fc6cu)	/* CPUx Redirected Address Base Register 29 */
#define CPU2_RABR3	(*( CPU0_RABR0_type *) 0xf884fb34u)	/* CPUx Redirected Address Base Register 3 */
#define CPU2_RABR30	(*( CPU0_RABR0_type *) 0xf884fc78u)	/* CPUx Redirected Address Base Register 30 */
#define CPU2_RABR31	(*( CPU0_RABR0_type *) 0xf884fc84u)	/* CPUx Redirected Address Base Register 31 */
#define CPU2_RABR4	(*( CPU0_RABR0_type *) 0xf884fb40u)	/* CPUx Redirected Address Base Register 4 */
#define CPU2_RABR5	(*( CPU0_RABR0_type *) 0xf884fb4cu)	/* CPUx Redirected Address Base Register 5 */
#define CPU2_RABR6	(*( CPU0_RABR0_type *) 0xf884fb58u)	/* CPUx Redirected Address Base Register 6 */
#define CPU2_RABR7	(*( CPU0_RABR0_type *) 0xf884fb64u)	/* CPUx Redirected Address Base Register 7 */
#define CPU2_RABR8	(*( CPU0_RABR0_type *) 0xf884fb70u)	/* CPUx Redirected Address Base Register 8 */
#define CPU2_RABR9	(*( CPU0_RABR0_type *) 0xf884fb7cu)	/* CPUx Redirected Address Base Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADFLIP         : 8;	/* Address ECC Bit Flip */
		unsigned __sfrbit32 ADTYPE         : 2;	/* Type of error */
		/* const */ unsigned __sfrbit32 RES            : 21;	/* Reserved */
		unsigned __sfrbit32 AE             : 1;	/* Activate Error Enable */
	} B;
	int I;
	unsigned int U;

} CPU0_SEGEN_type;
#define CPU0_SEGEN	(*( CPU0_SEGEN_type *) 0xf8811030u)	/* CPUx SRI Error Generation Register */
#define CPU1_SEGEN	(*( CPU0_SEGEN_type *) 0xf8831030u)	/* CPUx SRI Error Generation Register */
#define CPU2_SEGEN	(*( CPU0_SEGEN_type *) 0xf8851030u)	/* CPUx SRI Error Generation Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 32;	/* Access Enable for Master TAG ID n (n= 0-31) */
	} B;
	int I;
	unsigned int U;

} CPU0_SFR_SPROT_ACCENA_W_type;
#define CPU0_SFR_SPROT_ACCENA_W	(*( CPU0_SFR_SPROT_ACCENA_W_type *) 0xf880e100u)	/* CPUx Safety Protection Register Access Enable Register A */
#define CPU1_SFR_SPROT_ACCENA_W	(*( CPU0_SFR_SPROT_ACCENA_W_type *) 0xf882e100u)	/* CPUx Safety Protection Register Access Enable Register A */
#define CPU2_SFR_SPROT_ACCENA_W	(*( CPU0_SFR_SPROT_ACCENA_W_type *) 0xf884e100u)	/* CPUx Safety Protection Register Access Enable Register A */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
		unsigned __sfrbit32 IODT           : 1;	/* In-Order Data Transactions */
		/* const */ unsigned __sfrbit32 RES_3          : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_SMACON_type;
#define CPU0_SMACON	(*( CPU0_SMACON_type *) 0xf881900cu)	/* CPUx SIST Mode Access Control Register */
#define CPU1_SMACON	(*( CPU0_SMACON_type *) 0xf883900cu)	/* CPUx SIST Mode Access Control Register */
#define CPU2_SMACON	(*( CPU0_SMACON_type *) 0xf885900cu)	/* CPUx SIST Mode Access Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FCDSF          : 1;	/* Free Context List Depleted Sticky Flag */
		unsigned __sfrbit32 PROTEN         : 1;	/* Memory Protection Enable */
		unsigned __sfrbit32 TPROTEN        : 1;	/* Temporal Protection Enable */
		unsigned __sfrbit32 IS             : 1;	/* Initial State Interrupt */
		unsigned __sfrbit32 TS             : 1;	/* Initial State Trap */
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 ESDIS          : 1;	/* Emulator Space Disable */
		/* const */ unsigned __sfrbit32 RES_8          : 7;	/* Reserved */
		unsigned __sfrbit32 U1_IED         : 1;	/* User-1 Instruction execution disable */
		unsigned __sfrbit32 U1_IOS         : 1;	/* User-1 Peripheral access as supervisor */
		/* const */ unsigned __sfrbit32 RES_11         : 6;	/* Reserved */
		unsigned __sfrbit32 BHALT          : 1;	/* Boot Halt */
		/* const */ unsigned __sfrbit32 RES_13         : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_SYSCON_type;
#define CPU0_SYSCON	(*( CPU0_SYSCON_type *) 0xf881fe14u)	/* CPUx System Configuration Register */
#define CPU1_SYSCON	(*( CPU0_SYSCON_type *) 0xf883fe14u)	/* CPUx System Configuration Register */
#define CPU2_SYSCON	(*( CPU0_SYSCON_type *) 0xf885fe14u)	/* CPUx System Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ASI            : 5;	/* Address Space Identifier */
		/* const */ unsigned __sfrbit32 RES            : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TASK_ASI_type;
#define CPU0_TASK_ASI	(*( CPU0_TASK_ASI_type *) 0xf8818004u)	/* CPUx Task Address Space Identifier Register */
#define CPU1_TASK_ASI	(*( CPU0_TASK_ASI_type *) 0xf8838004u)	/* CPUx Task Address Space Identifier Register */
#define CPU2_TASK_ASI	(*( CPU0_TASK_ASI_type *) 0xf8858004u)	/* CPUx Task Address Space Identifier Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 TEXP0          : 1;	/* Timer0 Expired Flag */
		/* const */ unsigned __sfrbit32 TEXP1          : 1;	/* Timer1 Expired Flag */
		/* const */ unsigned __sfrbit32 TEXP2          : 1;	/* Timer1 Expired Flag */
		/* const */ unsigned __sfrbit32 RES            : 13;	/* Reserved */
		/* const */ unsigned __sfrbit32 TTRAP          : 1;	/* Temporal Protection Trap */
		/* const */ unsigned __sfrbit32 RES_6          : 15;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_CON_type;
#define CPU0_TPS_CON	(*( CPU0_TPS_CON_type *) 0xf881e400u)	/* CPUx Temporal Protection System Control Register */
#define CPU1_TPS_CON	(*( CPU0_TPS_CON_type *) 0xf883e400u)	/* CPUx Temporal Protection System Control Register */
#define CPU2_TPS_CON	(*( CPU0_TPS_CON_type *) 0xf885e400u)	/* CPUx Temporal Protection System Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EXTIM_CLASS_EN : 8;	/* Exception Timer Class Enables */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_EXTIM_CLASS_EN_type;
#define CPU0_TPS_EXTIM_CLASS_EN	(*( CPU0_TPS_EXTIM_CLASS_EN_type *) 0xf881e450u)	/* CPUx Exception Timer Class Enable Register */
#define CPU1_TPS_EXTIM_CLASS_EN	(*( CPU0_TPS_EXTIM_CLASS_EN_type *) 0xf883e450u)	/* CPUx Exception Timer Class Enable Register */
#define CPU2_TPS_EXTIM_CLASS_EN	(*( CPU0_TPS_EXTIM_CLASS_EN_type *) 0xf885e450u)	/* CPUx Exception Timer Class Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ENTRY_CVAL     : 12;	/* Exception Entry Timer Current Value */
		/* const */ unsigned __sfrbit32 RES            : 20;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_EXTIM_ENTRY_CVAL_type;
#define CPU0_TPS_EXTIM_ENTRY_CVAL	(*( CPU0_TPS_EXTIM_ENTRY_CVAL_type *) 0xf881e444u)	/* CPUx Exception Entry Timer Current Value */
#define CPU1_TPS_EXTIM_ENTRY_CVAL	(*( CPU0_TPS_EXTIM_ENTRY_CVAL_type *) 0xf883e444u)	/* CPUx Exception Entry Timer Current Value */
#define CPU2_TPS_EXTIM_ENTRY_CVAL	(*( CPU0_TPS_EXTIM_ENTRY_CVAL_type *) 0xf885e444u)	/* CPUx Exception Entry Timer Current Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 4;	/* Reserved */
		unsigned __sfrbit32 ENTRY_LVAL     : 8;	/* Exception Entry Timer Load value */
		/* const */ unsigned __sfrbit32 RES_3          : 20;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_EXTIM_ENTRY_LVAL_type;
#define CPU0_TPS_EXTIM_ENTRY_LVAL	(*( CPU0_TPS_EXTIM_ENTRY_LVAL_type *) 0xf881e440u)	/* CPUx Exception Entry Timer Load Value */
#define CPU1_TPS_EXTIM_ENTRY_LVAL	(*( CPU0_TPS_EXTIM_ENTRY_LVAL_type *) 0xf883e440u)	/* CPUx Exception Entry Timer Load Value */
#define CPU2_TPS_EXTIM_ENTRY_LVAL	(*( CPU0_TPS_EXTIM_ENTRY_LVAL_type *) 0xf885e440u)	/* CPUx Exception Entry Timer Load Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 EXIT_CVAL      : 24;	/* Exception Exit Timer Current Value */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_EXTIM_EXIT_CVAL_type;
#define CPU0_TPS_EXTIM_EXIT_CVAL	(*( CPU0_TPS_EXTIM_EXIT_CVAL_type *) 0xf881e44cu)	/* CPUx Exception Exit Timer Current Value */
#define CPU1_TPS_EXTIM_EXIT_CVAL	(*( CPU0_TPS_EXTIM_EXIT_CVAL_type *) 0xf883e44cu)	/* CPUx Exception Exit Timer Current Value */
#define CPU2_TPS_EXTIM_EXIT_CVAL	(*( CPU0_TPS_EXTIM_EXIT_CVAL_type *) 0xf885e44cu)	/* CPUx Exception Exit Timer Current Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 4;	/* Reserved */
		unsigned __sfrbit32 EXIT_LVAL      : 20;	/* Exception Exit Timer Load value */
		/* const */ unsigned __sfrbit32 RES_3          : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_EXTIM_EXIT_LVAL_type;
#define CPU0_TPS_EXTIM_EXIT_LVAL	(*( CPU0_TPS_EXTIM_EXIT_LVAL_type *) 0xf881e448u)	/* CPUx Exception Exit Timer Load Value */
#define CPU1_TPS_EXTIM_EXIT_LVAL	(*( CPU0_TPS_EXTIM_EXIT_LVAL_type *) 0xf883e448u)	/* CPUx Exception Exit Timer Load Value */
#define CPU2_TPS_EXTIM_EXIT_LVAL	(*( CPU0_TPS_EXTIM_EXIT_LVAL_type *) 0xf885e448u)	/* CPUx Exception Exit Timer Load Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 EXIT_FCX       : 20;	/* Exception Exit Timer FCX */
		/* const */ unsigned __sfrbit32 RES            : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_EXTIM_FCX_type;
#define CPU0_TPS_EXTIM_FCX	(*( CPU0_TPS_EXTIM_FCX_type *) 0xf881e458u)	/* CPUx Exception Timer FCX Register */
#define CPU1_TPS_EXTIM_FCX	(*( CPU0_TPS_EXTIM_FCX_type *) 0xf883e458u)	/* CPUx Exception Timer FCX Register */
#define CPU2_TPS_EXTIM_FCX	(*( CPU0_TPS_EXTIM_FCX_type *) 0xf885e458u)	/* CPUx Exception Timer FCX Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EXIT_TIN       : 8;	/* Exception Exit Timer TIN */
		unsigned __sfrbit32 EXIT_CLASS     : 3;	/* Exception Exit Timer Class */
		/* const */ unsigned __sfrbit32 RES            : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 EXIT_AT        : 1;	/* Exception Exit Timer Alarm Triggered */
		unsigned __sfrbit32 ENTRY_TIN      : 8;	/* Exception Entry Timer TIN */
		unsigned __sfrbit32 ENTRY_CLASS    : 3;	/* Exception Entry Timer Class */
		/* const */ unsigned __sfrbit32 RES_7          : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 ENTRY_AT       : 1;	/* Exception Entry Timer Alarm Triggered */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_EXTIM_STAT_type;
#define CPU0_TPS_EXTIM_STAT	(*( CPU0_TPS_EXTIM_STAT_type *) 0xf881e454u)	/* CPUx Exception Timer Status Register */
#define CPU1_TPS_EXTIM_STAT	(*( CPU0_TPS_EXTIM_STAT_type *) 0xf883e454u)	/* CPUx Exception Timer Status Register */
#define CPU2_TPS_EXTIM_STAT	(*( CPU0_TPS_EXTIM_STAT_type *) 0xf885e454u)	/* CPUx Exception Timer Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 Timer          : 32;	/* Temporal Protection Timer */
	} B;
	int I;
	unsigned int U;

} CPU0_TPS_TIMER0_type;
#define CPU0_TPS_TIMER0	(*( CPU0_TPS_TIMER0_type *) 0xf881e404u)	/* CPUx Temporal Protection System Timer Register 0 */
#define CPU0_TPS_TIMER1	(*( CPU0_TPS_TIMER0_type *) 0xf881e408u)	/* CPUx Temporal Protection System Timer Register 1 */
#define CPU0_TPS_TIMER2	(*( CPU0_TPS_TIMER0_type *) 0xf881e40cu)	/* CPUx Temporal Protection System Timer Register 2 */
#define CPU1_TPS_TIMER0	(*( CPU0_TPS_TIMER0_type *) 0xf883e404u)	/* CPUx Temporal Protection System Timer Register 0 */
#define CPU1_TPS_TIMER1	(*( CPU0_TPS_TIMER0_type *) 0xf883e408u)	/* CPUx Temporal Protection System Timer Register 1 */
#define CPU1_TPS_TIMER2	(*( CPU0_TPS_TIMER0_type *) 0xf883e40cu)	/* CPUx Temporal Protection System Timer Register 2 */
#define CPU2_TPS_TIMER0	(*( CPU0_TPS_TIMER0_type *) 0xf885e404u)	/* CPUx Temporal Protection System Timer Register 0 */
#define CPU2_TPS_TIMER1	(*( CPU0_TPS_TIMER0_type *) 0xf885e408u)	/* CPUx Temporal Protection System Timer Register 1 */
#define CPU2_TPS_TIMER2	(*( CPU0_TPS_TIMER0_type *) 0xf885e40cu)	/* CPUx Temporal Protection System Timer Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 32;	/* Comparison Address */
	} B;
	int I;
	unsigned int U;

} CPU0_TR0ADR_type;
#define CPU0_TR0ADR	(*( CPU0_TR0ADR_type *) 0xf881f004u)	/* CPUx Trigger Address 0 */
#define CPU0_TR1ADR	(*( CPU0_TR0ADR_type *) 0xf881f00cu)	/* CPUx Trigger Address 1 */
#define CPU0_TR2ADR	(*( CPU0_TR0ADR_type *) 0xf881f014u)	/* CPUx Trigger Address 2 */
#define CPU0_TR3ADR	(*( CPU0_TR0ADR_type *) 0xf881f01cu)	/* CPUx Trigger Address 3 */
#define CPU0_TR4ADR	(*( CPU0_TR0ADR_type *) 0xf881f024u)	/* CPUx Trigger Address 4 */
#define CPU0_TR5ADR	(*( CPU0_TR0ADR_type *) 0xf881f02cu)	/* CPUx Trigger Address 5 */
#define CPU0_TR6ADR	(*( CPU0_TR0ADR_type *) 0xf881f034u)	/* CPUx Trigger Address 6 */
#define CPU0_TR7ADR	(*( CPU0_TR0ADR_type *) 0xf881f03cu)	/* CPUx Trigger Address 7 */
#define CPU1_TR0ADR	(*( CPU0_TR0ADR_type *) 0xf883f004u)	/* CPUx Trigger Address 0 */
#define CPU1_TR1ADR	(*( CPU0_TR0ADR_type *) 0xf883f00cu)	/* CPUx Trigger Address 1 */
#define CPU1_TR2ADR	(*( CPU0_TR0ADR_type *) 0xf883f014u)	/* CPUx Trigger Address 2 */
#define CPU1_TR3ADR	(*( CPU0_TR0ADR_type *) 0xf883f01cu)	/* CPUx Trigger Address 3 */
#define CPU1_TR4ADR	(*( CPU0_TR0ADR_type *) 0xf883f024u)	/* CPUx Trigger Address 4 */
#define CPU1_TR5ADR	(*( CPU0_TR0ADR_type *) 0xf883f02cu)	/* CPUx Trigger Address 5 */
#define CPU1_TR6ADR	(*( CPU0_TR0ADR_type *) 0xf883f034u)	/* CPUx Trigger Address 6 */
#define CPU1_TR7ADR	(*( CPU0_TR0ADR_type *) 0xf883f03cu)	/* CPUx Trigger Address 7 */
#define CPU2_TR0ADR	(*( CPU0_TR0ADR_type *) 0xf885f004u)	/* CPUx Trigger Address 0 */
#define CPU2_TR1ADR	(*( CPU0_TR0ADR_type *) 0xf885f00cu)	/* CPUx Trigger Address 1 */
#define CPU2_TR2ADR	(*( CPU0_TR0ADR_type *) 0xf885f014u)	/* CPUx Trigger Address 2 */
#define CPU2_TR3ADR	(*( CPU0_TR0ADR_type *) 0xf885f01cu)	/* CPUx Trigger Address 3 */
#define CPU2_TR4ADR	(*( CPU0_TR0ADR_type *) 0xf885f024u)	/* CPUx Trigger Address 4 */
#define CPU2_TR5ADR	(*( CPU0_TR0ADR_type *) 0xf885f02cu)	/* CPUx Trigger Address 5 */
#define CPU2_TR6ADR	(*( CPU0_TR0ADR_type *) 0xf885f034u)	/* CPUx Trigger Address 6 */
#define CPU2_TR7ADR	(*( CPU0_TR0ADR_type *) 0xf885f03cu)	/* CPUx Trigger Address 7 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EVTA           : 3;	/* Event Associated */
		unsigned __sfrbit32 BBM            : 1;	/* Break Before Make (BBM) or Break After Make (BAM) Selection */
		unsigned __sfrbit32 BOD            : 1;	/* Breakout Disable */
		unsigned __sfrbit32 SUSP           : 1;	/* CDC Suspend-Out Signal State */
		unsigned __sfrbit32 CNT            : 2;	/* Counter */
		/* const */ unsigned __sfrbit32 RES            : 4;	/* Reserved */
		unsigned __sfrbit32 TYP            : 1;	/* Input Selection */
		unsigned __sfrbit32 RNG            : 1;	/* Compare Type */
		/* const */ unsigned __sfrbit32 RES_9          : 1;	/* Reserved */
		unsigned __sfrbit32 ASI_EN         : 1;	/* Enable ASI Comparison */
		unsigned __sfrbit32 ASI            : 5;	/* Address Space Identifier */
		/* const */ unsigned __sfrbit32 RES_12         : 6;	/* Reserved */
		unsigned __sfrbit32 AST            : 1;	/* Address Store */
		unsigned __sfrbit32 ALD            : 1;	/* Address Load */
		/* const */ unsigned __sfrbit32 RES_15         : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TR0EVT_type;
#define CPU0_TR0EVT	(*( CPU0_TR0EVT_type *) 0xf881f000u)	/* CPUx Trigger Event 0 */
#define CPU0_TR1EVT	(*( CPU0_TR0EVT_type *) 0xf881f008u)	/* CPUx Trigger Event 1 */
#define CPU0_TR2EVT	(*( CPU0_TR0EVT_type *) 0xf881f010u)	/* CPUx Trigger Event 2 */
#define CPU0_TR3EVT	(*( CPU0_TR0EVT_type *) 0xf881f018u)	/* CPUx Trigger Event 3 */
#define CPU0_TR4EVT	(*( CPU0_TR0EVT_type *) 0xf881f020u)	/* CPUx Trigger Event 4 */
#define CPU0_TR5EVT	(*( CPU0_TR0EVT_type *) 0xf881f028u)	/* CPUx Trigger Event 5 */
#define CPU0_TR6EVT	(*( CPU0_TR0EVT_type *) 0xf881f030u)	/* CPUx Trigger Event 6 */
#define CPU0_TR7EVT	(*( CPU0_TR0EVT_type *) 0xf881f038u)	/* CPUx Trigger Event 7 */
#define CPU1_TR0EVT	(*( CPU0_TR0EVT_type *) 0xf883f000u)	/* CPUx Trigger Event 0 */
#define CPU1_TR1EVT	(*( CPU0_TR0EVT_type *) 0xf883f008u)	/* CPUx Trigger Event 1 */
#define CPU1_TR2EVT	(*( CPU0_TR0EVT_type *) 0xf883f010u)	/* CPUx Trigger Event 2 */
#define CPU1_TR3EVT	(*( CPU0_TR0EVT_type *) 0xf883f018u)	/* CPUx Trigger Event 3 */
#define CPU1_TR4EVT	(*( CPU0_TR0EVT_type *) 0xf883f020u)	/* CPUx Trigger Event 4 */
#define CPU1_TR5EVT	(*( CPU0_TR0EVT_type *) 0xf883f028u)	/* CPUx Trigger Event 5 */
#define CPU1_TR6EVT	(*( CPU0_TR0EVT_type *) 0xf883f030u)	/* CPUx Trigger Event 6 */
#define CPU1_TR7EVT	(*( CPU0_TR0EVT_type *) 0xf883f038u)	/* CPUx Trigger Event 7 */
#define CPU2_TR0EVT	(*( CPU0_TR0EVT_type *) 0xf885f000u)	/* CPUx Trigger Event 0 */
#define CPU2_TR1EVT	(*( CPU0_TR0EVT_type *) 0xf885f008u)	/* CPUx Trigger Event 1 */
#define CPU2_TR2EVT	(*( CPU0_TR0EVT_type *) 0xf885f010u)	/* CPUx Trigger Event 2 */
#define CPU2_TR3EVT	(*( CPU0_TR0EVT_type *) 0xf885f018u)	/* CPUx Trigger Event 3 */
#define CPU2_TR4EVT	(*( CPU0_TR0EVT_type *) 0xf885f020u)	/* CPUx Trigger Event 4 */
#define CPU2_TR5EVT	(*( CPU0_TR0EVT_type *) 0xf885f028u)	/* CPUx Trigger Event 5 */
#define CPU2_TR6EVT	(*( CPU0_TR0EVT_type *) 0xf885f030u)	/* CPUx Trigger Event 6 */
#define CPU2_TR7EVT	(*( CPU0_TR0EVT_type *) 0xf885f038u)	/* CPUx Trigger Event 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 T0             : 1;	/* Trigger-0 */
		/* const */ unsigned __sfrbit32 T1             : 1;	/* Trigger-1 */
		/* const */ unsigned __sfrbit32 T2             : 1;	/* Trigger-2 */
		/* const */ unsigned __sfrbit32 T3             : 1;	/* Trigger-3 */
		/* const */ unsigned __sfrbit32 T4             : 1;	/* Trigger-4 */
		/* const */ unsigned __sfrbit32 T5             : 1;	/* Trigger-5 */
		/* const */ unsigned __sfrbit32 T6             : 1;	/* Trigger-6 */
		/* const */ unsigned __sfrbit32 T7             : 1;	/* Trigger-7 */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CPU0_TRIG_ACC_type;
#define CPU0_TRIG_ACC	(*( CPU0_TRIG_ACC_type *) 0xf881fd30u)	/* CPUx TriggerAddressx */
#define CPU1_TRIG_ACC	(*( CPU0_TRIG_ACC_type *) 0xf883fd30u)	/* CPUx TriggerAddressx */
#define CPU2_TRIG_ACC	(*( CPU0_TRIG_ACC_type *) 0xf885fd30u)	/* CPUx TriggerAddressx */


/* CBS */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} CBS_ACCEN0_type;
#define CBS_ACCEN0	(*( CBS_ACCEN0_type *) 0xf00005fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} CBS_ACCEN1_type;
#define CBS_ACCEN1	(*( CBS_ACCEN1_type *) 0xf00005f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DATA           : 32;	/* Read/Write Data */
	} B;
	int I;
	unsigned int U;

} CBS_COMDATA_type;
#define CBS_COMDATA	(*( CBS_COMDATA_type *) 0xf0000468u)	/* Communication Mode Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 32;	/* Source Address */
	} B;
	int I;
	unsigned int U;

} CBS_ICTSA_type;
#define CBS_ICTSA	(*( CBS_ICTSA_type *) 0xf0000488u)	/* Internally Controlled Trace Source Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 32;	/* Destination Address */
	} B;
	int I;
	unsigned int U;

} CBS_ICTTA_type;
#define CBS_ICTTA	(*( CBS_ICTTA_type *) 0xf000048cu)	/* Internally Controlled Trace Destination Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADDR           : 32;	/* Address for FI/SI Accesses */
	} B;
	int I;
	unsigned int U;

} CBS_IFSA_type;
#define CBS_IFSA	(*( CBS_IFSA_type *) 0xf00004f0u)	/* IFS Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GO             : 1;	/* Injection Trigger */
		unsigned __sfrbit32 OTGS           : 1;	/* Injection Trigger by OTGS */
		unsigned __sfrbit32 MODE           : 1;	/* Stress or Fault Injection Mode */
		unsigned __sfrbit32 PRIO           : 1;	/* Bus Master Priority */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 RSREP          : 4;	/* Read Stress Repetitions */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 BM0            : 2;	/* Fault Injection Bit Manipulation */
		unsigned __sfrbit32 BM1            : 2;	/* Fault Injection Bit Manipulation */
		unsigned __sfrbit32 BM2            : 2;	/* Fault Injection Bit Manipulation */
		unsigned __sfrbit32 BM3            : 2;	/* Fault Injection Bit Manipulation */
		unsigned __sfrbit32 BM4            : 2;	/* Fault Injection Bit Manipulation */
		unsigned __sfrbit32 BM5            : 2;	/* Fault Injection Bit Manipulation */
		unsigned __sfrbit32 BM6            : 2;	/* Fault Injection Bit Manipulation */
		unsigned __sfrbit32 BM7            : 2;	/* Fault Injection Bit Manipulation */
	} B;
	int I;
	unsigned int U;

} CBS_IFSC_type;
#define CBS_IFSC	(*( CBS_IFSC_type *) 0xf00004f4u)	/* IFS Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SET_CRS        : 1;	/* Set Read Sync Flag */
		unsigned __sfrbit32 SET_CWS        : 1;	/* Set Write Sync Flag */
		unsigned __sfrbit32 SET_CS         : 1;	/* Set Communication Synchronization Flag */
		unsigned __sfrbit32 CLR_CS         : 1;	/* Clear Communication Synchronization Flag */
		unsigned __sfrbit32 CHANNEL_P      : 1;	/* CHANNEL Write Protection */
		unsigned __sfrbit32 CHANNEL        : 3;	/* Channel Indication */
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 SET_INT_MOD    : 1;	/* Enter Internal Mode */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SET_INT_TRC    : 1;	/* Enable Internally Controlled Triggered Transfer */
		unsigned __sfrbit32 CLR_INT_TRC    : 1;	/* Disable Internally Controlled Triggered Transfer */
		unsigned __sfrbit32 TRC_MOD_P      : 1;	/* TRC_MOD Write Protection */
		unsigned __sfrbit32 TRC_MOD        : 2;	/* Data Size Definition for Triggered Transfer */
		unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 INT_MOD        : 1;	/* Internal Mode Enabled Flag */
		/* const */ unsigned __sfrbit32 INT_TRC        : 1;	/* Internally Controlled Triggered Transfer Enable */
		unsigned __sfrbit32                : 6;
	} B;
	int I;
	unsigned int U;

} CBS_INTMOD_type;
#define CBS_INTMOD	(*( CBS_INTMOD_type *) 0xf0000484u)	/* Internal Mode Status and Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 4;
		/* const */ unsigned __sfrbit32 CRSYNC         : 1;	/* Communication Mode Read Sync Flag */
		/* const */ unsigned __sfrbit32 CWSYNC         : 1;	/* Communication Mode Write Sync Flag */
		unsigned __sfrbit32 CW_ACK         : 1;	/* Communication Mode Write Acknowledge */
		/* const */ unsigned __sfrbit32 COM_SYNC       : 1;	/* Communication Mode Synchronization Flag */
		/* const */ unsigned __sfrbit32 HOSTED         : 1;	/* Tool Interface in Use */
		unsigned __sfrbit32                : 3;
		/* const */ unsigned __sfrbit32 CHANNEL        : 3;	/* Channel Indication */
		unsigned __sfrbit32                : 17;
	} B;
	int I;
	unsigned int U;

} CBS_IOSR_type;
#define CBS_IOSR	(*( CBS_IOSR_type *) 0xf000046cu)	/* IOClientStatus and Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} CBS_JDPID_type;
#define CBS_JDPID	(*( CBS_JDPID_type *) 0xf0000408u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 JTAG_ID        : 32;	/* JTAGDevice ID */
	} B;
	int I;
	unsigned int U;

} CBS_JTAGID_type;
#define CBS_JTAGID	(*( CBS_JTAGID_type *) 0xf0000464u)	/* JTAGDevice Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OC0_P          : 1;	/* OC0 Write Protection */
		unsigned __sfrbit32 OC0            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC1_P          : 1;	/* OC1 Write Protection */
		unsigned __sfrbit32 OC1            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC2_P          : 1;	/* OC2 Write Protection */
		unsigned __sfrbit32 OC2            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC3_P          : 1;	/* OC3 Write Protection */
		unsigned __sfrbit32 OC3            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC4_P          : 1;	/* OC4 Write Protection */
		unsigned __sfrbit32 OC4            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 OC5_P          : 1;	/* OC5 Write Protection */
		unsigned __sfrbit32 OC5            : 1;	/* Set/Clear OCDS Control Bits Bus Domain */
		unsigned __sfrbit32 WDTSUS_P       : 1;	/* WDTSUS Write Protection */
		unsigned __sfrbit32 WDTSUS         : 1;	/* Set/Clear Watchdog Timer Suspension Control */
		unsigned __sfrbit32 STABLE_P       : 1;	/* STABLE Write Protection */
		unsigned __sfrbit32 STABLE         : 1;	/* InitializeApplication ResetIndication */
		unsigned __sfrbit32 OJC0_P         : 1;	/* OJC0 Write Protection */
		unsigned __sfrbit32 OJC0           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC1_P         : 1;	/* OJC1 Write Protection */
		unsigned __sfrbit32 OJC1           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC2_P         : 1;	/* OJC2 Write Protection */
		unsigned __sfrbit32 OJC2           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC3_P         : 1;	/* OJC3 Write Protection */
		unsigned __sfrbit32 OJC3           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC4_P         : 1;	/* OJC4 Write Protection */
		unsigned __sfrbit32 OJC4           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC5_P         : 1;	/* OJC5 Write Protection */
		unsigned __sfrbit32 OJC5           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC6_P         : 1;	/* OJC6 Write Protection */
		unsigned __sfrbit32 OJC6           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
		unsigned __sfrbit32 OJC7_P         : 1;	/* OJC7 Write Protection */
		unsigned __sfrbit32 OJC7           : 1;	/* Set/Clear OCDS Control Bits IOClient Domain */
	} B;
	int I;
	unsigned int U;

} CBS_OCNTRL_type;
#define CBS_OCNTRL	(*( CBS_OCNTRL_type *) 0xf000047cu)	/* OSCU Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PAT            : 8;	/* OCDS Enabling Pattern */
		unsigned __sfrbit32 DS             : 1;	/* Disable OCDS */
		unsigned __sfrbit32 OCO            : 1;	/* OCDS Clock Off */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 IF_LCK_P       : 1;	/* IF_LCK Write Protection */
		unsigned __sfrbit32 IF_LCK         : 1;	/* Set/Clear Interface Locked Indication */
		unsigned __sfrbit32 AUT_OK_P       : 1;	/* AUT_OK Write Protection */
		unsigned __sfrbit32 AUT_OK         : 1;	/* Set/Clear the Authorization OK Indication */
		unsigned __sfrbit32                : 12;
	} B;
	int I;
	unsigned int U;

} CBS_OEC_type;
#define CBS_OEC	(*( CBS_OEC_type *) 0xf0000478u)	/* OCDS Enable Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DAPMODE        : 3;	/* DAPInterface Mode */
		unsigned __sfrbit32 DAPRST         : 1;	/* DAPProtocol Clear */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 F_JTAG         : 1;	/* Forced JTAG Mode */
		unsigned __sfrbit32 N_JTAG         : 1;	/* No Switch to JTAG */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 PADCTL         : 2;	/* Pad Control for Debug Interface Pins */
		unsigned __sfrbit32 PADCTLI        : 2;	/* Pad input threshold control for Debug Interface Pins */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_OIFM_type;
#define CBS_OIFM	(*( CBS_OIFM_type *) 0xf000040cu)	/* OCDS Interface Mode Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OEN            : 1;	/* OCDS Enabled Flag */
		/* const */ unsigned int OC0            : 1;	/* OCDS Control Bits System Bus Domain */
		/* const */ unsigned int OC1            : 1;	/* OCDS Control Bits System Bus Domain */
		/* const */ unsigned int OC2            : 1;	/* OCDS Control Bits System Bus Domain */
		/* const */ unsigned int ENIDIS         : 1;	/* OCDS ENDINIT Protection Override */
		/* const */ unsigned int EECTRC         : 1;	/* On Chip Trace Enable */
		/* const */ unsigned int EECDIS         : 1;	/* Emulation Logic Disable */
		/* const */ unsigned int WDTSUS         : 1;	/* Control of Watchdog Timer (WDT) Suspension */
		/* const */ unsigned int HARR           : 1;	/* Halt after Reset Request */
		/* const */ unsigned int OJC1           : 1;	/* OCDS Control Bits IOClient Domain OJC1 */
		/* const */ unsigned int OJC2           : 1;	/* OCDS Control Bits IOClient Domain OJC2 */
		/* const */ unsigned int OJC3           : 1;	/* OCDS Control Bits IOClient Domain OJC3 */
		/* const */ unsigned int RSTCL0         : 1;	/* OCDS System Reset Request */
		/* const */ unsigned int RSTCL1         : 1;	/* OCDS Debug Reset Request */
		/* const */ unsigned int OJC6           : 1;	/* OCDS Control Bits IOClient Domain OJC6 */
		/* const */ unsigned int RSTCL3         : 1;	/* OCDS Application Reset Request */
		/* const */ unsigned int IF_LCK         : 1;	/* Interface Locked Indication */
		/* const */ unsigned int AUT_OK         : 1;	/* Authorization OK Indication */
		/* const */ unsigned int STABLE         : 1;	/* Application Reset Indication */
		/* const */ unsigned int OCO            : 1;	/* OCDS debug resource Clock On Indication */
		/* const */ unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} CBS_OSTATE_type;
#define CBS_OSTATE	(*( CBS_OSTATE_type *) 0xf0000480u)	/* OSCUStatus Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int C0             : 1;	/* Capture of BRKOUT Signal of CPU0 */
		/* const */ unsigned int C1             : 1;	/* Capture of BRKOUT Signal of CPU1 */
		/* const */ unsigned int C2             : 1;	/* Capture of BRKOUT Signal of CPU2 */
		/* const */ unsigned int C3             : 1;	/* Capture of BRKOUT Signal of CPU3 */
		/* const */ unsigned int C4             : 1;	/* Capture of BRKOUT Signal of CPU4 */
		/* const */ unsigned int C5             : 1;	/* Capture of BRKOUT Signal of CPU5 */
		/* const */ unsigned int                : 25;
		/* const */ unsigned int HSM            : 1;	/* Capture of BRKOUT Signal ofHSM */
	} B;
	int I;
	unsigned int U;

} CBS_TCCB_type;
#define CBS_TCCB	(*( CBS_TCCB_type *) 0xf00004b0u)	/* TG Capture for Cores - BRKOUT */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int C0             : 1;	/* Capture of HALT Signal of CPU0 */
		/* const */ unsigned int C1             : 1;	/* Capture of HALT Signal of CPU1 */
		/* const */ unsigned int C2             : 1;	/* Capture of HALT Signal of CPU2 */
		/* const */ unsigned int C3             : 1;	/* Capture of HALT Signal of CPU3 */
		/* const */ unsigned int C4             : 1;	/* Capture of HALT Signal of CPU4 */
		/* const */ unsigned int C5             : 1;	/* Capture of HALT Signal of CPU5 */
		/* const */ unsigned int                : 25;
		/* const */ unsigned int HSM            : 1;	/* Capture of HALT Signal ofHSM */
	} B;
	int I;
	unsigned int U;

} CBS_TCCH_type;
#define CBS_TCCH	(*( CBS_TCCH_type *) 0xf00004b4u)	/* TG Capture for Cores - HALT */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;	/* Capture of Trigger Input Pin 0 */
		/* const */ unsigned int P1             : 1;	/* Capture of Trigger Input Pin 1 */
		/* const */ unsigned int P2             : 1;	/* Capture of Trigger Input Pin 2 */
		/* const */ unsigned int P3             : 1;	/* Capture of Trigger Input Pin 3 */
		/* const */ unsigned int P4             : 1;	/* Capture of Trigger Input Pin 4 */
		/* const */ unsigned int P5             : 1;	/* Capture of Trigger Input Pin 5 */
		/* const */ unsigned int P6             : 1;	/* Capture of Trigger Input Pin 6 */
		/* const */ unsigned int P7             : 1;	/* Capture of Trigger Input Pin 7 */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CBS_TCIP_type;
#define CBS_TCIP	(*( CBS_TCIP_type *) 0xf000041cu)	/* TG Capture for TG Input Pins */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BRK            : 1;	/* Capture of MCDS break_out */
		/* const */ unsigned int SUS            : 1;	/* Capture of MCDS suspend_out */
		/* const */ unsigned int                : 6;
		/* const */ unsigned int T0             : 1;	/* Capture of MCDS trig_out 0 */
		/* const */ unsigned int T1             : 1;	/* Capture of MCDS trig_out 1 */
		/* const */ unsigned int T2             : 1;	/* Capture of MCDS trig_out 2 */
		/* const */ unsigned int T3             : 1;	/* Capture of MCDS trig_out 3 */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} CBS_TCM_type;
#define CBS_TCM	(*( CBS_TCM_type *) 0xf00004bcu)	/* TG Capture for MCDS */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OTGB0          : 16;	/* Capture Bits for OTGB0 */
		/* const */ unsigned int OTGB1          : 16;	/* Capture Bits for OTGB1 */
	} B;
	int I;
	unsigned int U;

} CBS_TCTGB_type;
#define CBS_TCTGB	(*( CBS_TCTGB_type *) 0xf00004b8u)	/* TG Capture for OTGB0/1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TL1            : 1;	/* Capture of Trigger Line 1 */
		/* const */ unsigned int TL2            : 1;	/* Capture of Trigger Line 2 */
		/* const */ unsigned int TL3            : 1;	/* Capture of Trigger Line 3 */
		/* const */ unsigned int TL4            : 1;	/* Capture of Trigger Line 4 */
		/* const */ unsigned int TL5            : 1;	/* Capture of Trigger Line 5 */
		/* const */ unsigned int TL6            : 1;	/* Capture of Trigger Line 6 */
		/* const */ unsigned int TL7            : 1;	/* Capture of Trigger Line 7 */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CBS_TCTL_type;
#define CBS_TCTL	(*( CBS_TCTL_type *) 0xf0000474u)	/* TG Capture for TG Lines */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PIN0           : 4;	/* Trigger Pin 0 to Trigger Line Routing */
		unsigned __sfrbit32 PIN1           : 4;	/* Trigger Pin 1 to Trigger Line Routing */
		unsigned __sfrbit32 PIN2           : 4;	/* Trigger Pin 2 to Trigger Line Routing */
		unsigned __sfrbit32 PIN3           : 4;	/* Trigger Pin 3 to Trigger Line Routing */
		unsigned __sfrbit32 PIN4           : 4;	/* Trigger Pin 4 to Trigger Line Routing */
		unsigned __sfrbit32 PIN5           : 4;	/* Trigger Pin 5 to Trigger Line Routing */
		unsigned __sfrbit32 PIN6           : 4;	/* Trigger Pin 6 to Trigger Line Routing */
		unsigned __sfrbit32 PIN7           : 4;	/* Trigger Pin 7 to Trigger Line Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TIPR_type;
#define CBS_TIPR	(*( CBS_TIPR_type *) 0xf0000410u)	/* TG Input Pins Routing */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 C0             : 1;	/* CPU0 as Suspend Target */
		unsigned __sfrbit32 C1             : 1;	/* CPU1 as Suspend Target */
		unsigned __sfrbit32 C2             : 1;	/* CPU2 as Suspend Target */
		unsigned __sfrbit32 C3             : 1;	/* CPU3 as Suspend Target */
		unsigned __sfrbit32 C4             : 1;	/* CPU4 as Suspend Target */
		unsigned __sfrbit32 C5             : 1;	/* CPU5 as Suspend Target */
		unsigned __sfrbit32                : 18;
		unsigned __sfrbit32 M0             : 1;	/* Master 0 as Suspend Target */
		unsigned __sfrbit32 M1             : 1;	/* Master 1 as Suspend Target */
		unsigned __sfrbit32 M2             : 1;	/* Master 2 as Suspend Target */
		unsigned __sfrbit32 HSS1           : 1;	/* HSSL1 as Suspend Target */
		unsigned __sfrbit32 HSS0           : 1;	/* HSSL0 as Suspend Target */
		unsigned __sfrbit32 DMA            : 1;	/* DMA as Suspend Target */
		unsigned __sfrbit32 DMA1           : 1;	/* DMA as Suspend Target */
		unsigned __sfrbit32 HSM            : 1;	/* HSM as Suspend Target */
	} B;
	int I;
	unsigned int U;

} CBS_TL1ST_type;
#define CBS_TL1ST	(*( CBS_TL1ST_type *) 0xf0000494u)	/* TG Line 1 Suspend Targets */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 TLSP1          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP2          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP3          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP4          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP5          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP6          : 4;	/* TG Line Signal Processing */
		unsigned __sfrbit32 TLSP7          : 4;	/* TG Line Signal Processing */
	} B;
	int I;
	unsigned int U;

} CBS_TLC_type;
#define CBS_TLC	(*( CBS_TLC_type *) 0xf0000490u)	/* TG Line Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGL            : 4;	/* Trigger Line to Counter Routing */
		unsigned __sfrbit32 LE             : 3;	/* Level or Edge Counting */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CLR            : 2;	/* Clear and Enable Counter(s) */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 STOP           : 2;	/* Stop Counter(s) */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} CBS_TLCC0_type;
#define CBS_TLCC0	(*( CBS_TLCC0_type *) 0xf0000440u)	/* TG Line Counter Control */
#define CBS_TLCC1	(*( CBS_TLCC0_type *) 0xf0000444u)	/* TG Line Counter Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 TL1            : 1;	/* Capture and Hold Enable for Trigger Line 1 */
		unsigned __sfrbit32 TL2            : 1;	/* Capture and Hold Enable for Trigger Line 2 */
		unsigned __sfrbit32 TL3            : 1;	/* Capture and Hold Enable for Trigger Line 3 */
		unsigned __sfrbit32                : 28;
	} B;
	int I;
	unsigned int U;

} CBS_TLCHE_type;
#define CBS_TLCHE	(*( CBS_TLCHE_type *) 0xf0000498u)	/* TG Line Capture and Hold Enable */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 TL1            : 1;	/* Capture and Hold Clear for Trigger Line 1 */
		unsigned __sfrbit32 TL2            : 1;	/* Capture and Hold Clear for Trigger Line 2 */
		unsigned __sfrbit32 TL3            : 1;	/* Capture and Hold Clear for Trigger Line 3 */
		unsigned __sfrbit32                : 28;
	} B;
	int I;
	unsigned int U;

} CBS_TLCHS_type;
#define CBS_TLCHS	(*( CBS_TLCHS_type *) 0xf000049cu)	/* TG Line Capture and Hold Clear */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CV             : 31;	/* Count Value */
		/* const */ unsigned int SO             : 1;	/* Sticky Overflow Bit */
	} B;
	int I;
	unsigned int U;

} CBS_TLCV0_type;
#define CBS_TLCV0	(*( CBS_TLCV0_type *) 0xf0000450u)	/* TG Line Counter Value */
#define CBS_TLCV1	(*( CBS_TLCV0_type *) 0xf0000454u)	/* TG Line Counter Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TL1            : 1;	/* Current State of Trigger Line 1 */
		/* const */ unsigned int TL2            : 1;	/* Current State of Trigger Line 2 */
		/* const */ unsigned int TL3            : 1;	/* Current State of Trigger Line 3 */
		/* const */ unsigned int TL4            : 1;	/* Current State of Trigger Line 4 */
		/* const */ unsigned int TL5            : 1;	/* Current State of Trigger Line 5 */
		/* const */ unsigned int TL6            : 1;	/* Current State of Trigger Line 6 */
		/* const */ unsigned int TL7            : 1;	/* Current State of Trigger Line 7 */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CBS_TLS_type;
#define CBS_TLS	(*( CBS_TLS_type *) 0xf0000470u)	/* TG Line State */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGL            : 4;	/* Timer to Trigger Line Routing */
		unsigned __sfrbit32 VTZ            : 1;	/* TG Line Value when Timer Value is Zero */
		unsigned __sfrbit32 RL             : 1;	/* Reload Timer */
		unsigned __sfrbit32                : 10;
		unsigned __sfrbit32 TIM            : 16;	/* Timer Value */
	} B;
	int I;
	unsigned int U;

} CBS_TLT_type;
#define CBS_TLT	(*( CBS_TLT_type *) 0xf00004a8u)	/* TG Line Timer */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 TL1            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL2            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL3            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL4            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL5            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL6            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32 TL7            : 2;	/* TG Line Enabling for Trigger to Host (TRIG) */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_TLTTH_type;
#define CBS_TLTTH	(*( CBS_TLTTH_type *) 0xf00004acu)	/* TG Lines for Trigger to Host */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PIN0           : 2;	/* Pulse Stretch Control for Trigger Pin 0 */
		unsigned __sfrbit32 PIN1           : 2;	/* Pulse Stretch Control for Trigger Pin 1 */
		unsigned __sfrbit32 PIN2           : 2;	/* Pulse Stretch Control for Trigger Pin 2 */
		unsigned __sfrbit32 PIN3           : 2;	/* Pulse Stretch Control for Trigger Pin 3 */
		unsigned __sfrbit32 PIN4           : 2;	/* Pulse Stretch Control for Trigger Pin 4 */
		unsigned __sfrbit32 PIN5           : 2;	/* Pulse Stretch Control for Trigger Pin 5 */
		unsigned __sfrbit32 PIN6           : 2;	/* Pulse Stretch Control for Trigger Pin 6 */
		unsigned __sfrbit32 PIN7           : 2;	/* Pulse Stretch Control for Trigger Pin 7 */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_TOPPS_type;
#define CBS_TOPPS	(*( CBS_TOPPS_type *) 0xf0000418u)	/* TG Output Pins Pulse Stretcher */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PIN0           : 4;	/* Trigger Line to Trigger Pin 0 Routing */
		unsigned __sfrbit32 PIN1           : 4;	/* Trigger Line to Trigger Pin 1 Routing */
		unsigned __sfrbit32 PIN2           : 4;	/* Trigger Line to Trigger Pin 2 Routing */
		unsigned __sfrbit32 PIN3           : 4;	/* Trigger Line to Trigger Pin 3 Routing */
		unsigned __sfrbit32 PIN4           : 4;	/* Trigger Line to Trigger Pin 4 Routing */
		unsigned __sfrbit32 PIN5           : 4;	/* Trigger Line to Trigger Pin 5 Routing */
		unsigned __sfrbit32 PIN6           : 4;	/* Trigger Line to Trigger Pin 6 Routing */
		unsigned __sfrbit32 PIN7           : 4;	/* Trigger Line to Trigger Pin 7 Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TOPR_type;
#define CBS_TOPR	(*( CBS_TOPR_type *) 0xf0000414u)	/* TG Output Pins Routing */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HALT           : 4;	/* HALT to Trigger Line Routing */
		unsigned __sfrbit32 BRKOUT         : 4;	/* BRKOUT to Trigger Line Routing */
		unsigned __sfrbit32 BT1            : 1;	/* BRKOUT to Trigger Line 1 Routing */
		unsigned __sfrbit32                : 11;
		unsigned __sfrbit32 BRKIN          : 4;	/* Trigger Line to BRKIN Routing */
		unsigned __sfrbit32 SUSIN          : 4;	/* Trigger Line to SUSIN Routing */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} CBS_TRC0_type;
#define CBS_TRC0	(*( CBS_TRC0_type *) 0xf0000420u)	/* TG Routing for CPU0 */
#define CBS_TRC1	(*( CBS_TRC0_type *) 0xf0000424u)	/* TG Routing for CPU1 */
#define CBS_TRC2	(*( CBS_TRC0_type *) 0xf0000428u)	/* TG Routing for CPU2 */
#define CBS_TRC3	(*( CBS_TRC0_type *) 0xf000042cu)	/* TG Routing for CPU3 */
#define CBS_TRC4	(*( CBS_TRC0_type *) 0xf0000430u)	/* TG Routing for CPU4 */
#define CBS_TRC5	(*( CBS_TRC0_type *) 0xf0000434u)	/* TG Routing for CPU5 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TR0EV          : 4;	/* TRxEVT to Trigger Line Routing TR0EV */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 TR2EV          : 4;	/* TRxEVT to Trigger Line Routing TR2EV */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 TR4EV          : 4;	/* TRxEVT to Trigger Line Routing TR4EV */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 TR6EV          : 4;	/* TRxEVT to Trigger Line Routing TR6EV */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} CBS_TREC0_type;
#define CBS_TREC0	(*( CBS_TREC0_type *) 0xf00004c0u)	/* TG Routing Events of CPU0 */
#define CBS_TREC1	(*( CBS_TREC0_type *) 0xf00004c4u)	/* TG Routing Events of CPU1 */
#define CBS_TREC2	(*( CBS_TREC0_type *) 0xf00004c8u)	/* TG Routing Events of CPU2 */
#define CBS_TREC3	(*( CBS_TREC0_type *) 0xf00004ccu)	/* TG Routing Events of CPU3 */
#define CBS_TREC4	(*( CBS_TREC0_type *) 0xf00004d0u)	/* TG Routing Events of CPU4 */
#define CBS_TREC5	(*( CBS_TREC0_type *) 0xf00004d4u)	/* TG Routing Events of CPU5 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HALT           : 4;	/* HALT to Trigger Line Routing */
		unsigned __sfrbit32 BRKOUT         : 4;	/* BRKOUT to Trigger Line Routing */
		unsigned __sfrbit32 BT1            : 1;	/* BRKOUT to Trigger Line 1 Routing */
		unsigned __sfrbit32                : 11;
		unsigned __sfrbit32 BRKIN          : 4;	/* Trigger Line to BRKIN Routing */
		unsigned __sfrbit32 SUSIN          : 4;	/* Trigger Line to SUSIN Routing */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} CBS_TRHSM_type;
#define CBS_TRHSM	(*( CBS_TRHSM_type *) 0xf0000438u)	/* TG Routing for HSMControl */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRG0_0         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_1         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_2         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_3         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_4         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_5         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_6         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_7         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_8         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_9         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_10        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_11        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_12        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_13        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_14        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG0_15        : 1;	/* Service Request Bits */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int X_0            : 8;	/* TRIG register number */
	} B;
	int I;
	unsigned int U;

} CBS_TRIG0_type;
#define CBS_TRIG0	(*( CBS_TRIG0_type *) 0xf0000500u)	/* Trigger to Host Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRG1_0         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_1         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_2         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_3         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_4         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_5         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_6         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_7         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_8         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_9         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_10        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_11        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_12        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_13        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_14        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG1_15        : 1;	/* Service Request Bits */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int X_1            : 8;	/* TRIG register number */
	} B;
	int I;
	unsigned int U;

} CBS_TRIG1_type;
#define CBS_TRIG1	(*( CBS_TRIG1_type *) 0xf0000504u)	/* Trigger to Host Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRG2_0         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_1         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_2         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_3         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_4         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_5         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_6         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_7         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_8         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_9         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_10        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_11        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_12        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_13        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_14        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG2_15        : 1;	/* Service Request Bits */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int X_2            : 8;	/* TRIG register number */
	} B;
	int I;
	unsigned int U;

} CBS_TRIG2_type;
#define CBS_TRIG2	(*( CBS_TRIG2_type *) 0xf0000508u)	/* Trigger to Host Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRG3_0         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_1         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_2         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_3         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_4         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_5         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_6         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_7         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_8         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_9         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_10        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_11        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_12        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_13        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_14        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG3_15        : 1;	/* Service Request Bits */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int X_3            : 8;	/* TRIG register number */
	} B;
	int I;
	unsigned int U;

} CBS_TRIG3_type;
#define CBS_TRIG3	(*( CBS_TRIG3_type *) 0xf000050cu)	/* Trigger to Host Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRG4_0         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_1         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_2         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_3         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_4         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_5         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_6         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_7         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_8         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_9         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_10        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_11        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_12        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_13        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_14        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG4_15        : 1;	/* Service Request Bits */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int X_4            : 8;	/* TRIG register number */
	} B;
	int I;
	unsigned int U;

} CBS_TRIG4_type;
#define CBS_TRIG4	(*( CBS_TRIG4_type *) 0xf0000510u)	/* Trigger to Host Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRG5_0         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_1         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_2         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_3         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_4         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_5         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_6         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_7         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_8         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_9         : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_10        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_11        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_12        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_13        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_14        : 1;	/* Service Request Bits */
		/* const */ unsigned int TRG5_15        : 1;	/* Service Request Bits */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int X_5            : 8;	/* TRIG register number */
	} B;
	int I;
	unsigned int U;

} CBS_TRIG5_type;
#define CBS_TRIG5	(*( CBS_TRIG5_type *) 0xf0000514u)	/* Trigger to Host Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRGx_0         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_1         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_2         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_3         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_4         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_5         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_6         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_7         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_8         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_9         : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_10        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_11        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_12        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_13        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_14        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int TRGx_15        : 1;	/* Request Bits of most important register TRIGx */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int x              : 8;	/* Index of most important register TRIGx */
	} B;
	int I;
	unsigned int U;

} CBS_TRIGC_type;
#define CBS_TRIGC	(*( CBS_TRIGC_type *) 0xf00004a4u)	/* Clear Trigger to Host Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BITNUM         : 8;	/* Service Request Bit Number to Set */
		unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} CBS_TRIGS_type;
#define CBS_TRIGS	(*( CBS_TRIGS_type *) 0xf00004a0u)	/* Set Trigger to Host Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 BRKOUT         : 4;	/* MCDS break_out to Trigger Line Routing */
		unsigned __sfrbit32 SUSOUT         : 4;	/* MCDS suspend_out to Trigger Line Routing */
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 BRKIN          : 4;	/* Trigger Line to MCDS break_in Routing */
		unsigned __sfrbit32                : 8;
	} B;
	int I;
	unsigned int U;

} CBS_TRMC_type;
#define CBS_TRMC	(*( CBS_TRMC_type *) 0xf000043cu)	/* TG Routing for MCDS Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TG0            : 4;	/* MCDS trig_out 0 to Trigger Line Routing */
		unsigned __sfrbit32 TG1            : 4;	/* MCDS trig_out 1 to Trigger Line Routing */
		unsigned __sfrbit32 TG2            : 4;	/* MCDS trig_out 2 to Trigger Line Routing */
		unsigned __sfrbit32 TG3            : 4;	/* MCDS trig_out 3 to Trigger Line Routing */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} CBS_TRMT_type;
#define CBS_TRMT	(*( CBS_TRMT_type *) 0xf00004dcu)	/* TG Routing for MCDS Triggers */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TT             : 4;	/* Trigger Line to Cerberus? Triggered Transfer Routing */
		unsigned __sfrbit32 IFS            : 4;	/* Trigger Line to Fault and Stress Injection Routing */
		unsigned __sfrbit32                : 8;
		unsigned __sfrbit32 SRC0           : 4;	/* Trigger Line to SRC0 Interrupt Routing */
		unsigned __sfrbit32 SRC1           : 4;	/* Trigger Line to SRC1 Interrupt Routing */
		unsigned __sfrbit32                : 8;
	} B;
	int I;
	unsigned int U;

} CBS_TRSS_type;
#define CBS_TRSS	(*( CBS_TRSS_type *) 0xf0000460u)	/* TG Routing for Special Signals */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TG8            : 4;	/* OTGBi Bit 8 to Trigger Line Routing */
		unsigned __sfrbit32 TG9            : 4;	/* OTGBi Bit 9 to Trigger Line Routing */
		unsigned __sfrbit32 TG10           : 4;	/* OTGBi Bit 10 to Trigger Line Routing */
		unsigned __sfrbit32 TG11           : 4;	/* OTGBi Bit 11 to Trigger Line Routing */
		unsigned __sfrbit32 TG12           : 4;	/* OTGBi Bit 12 to Trigger Line Routing */
		unsigned __sfrbit32 TG13           : 4;	/* OTGBi Bit 13 to Trigger Line Routing */
		unsigned __sfrbit32 TG14           : 4;	/* OTGBi Bit 14 to Trigger Line Routing */
		unsigned __sfrbit32 TG15           : 4;	/* OTGBi Bit 15 to Trigger Line Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TRTGB0H_type;
#define CBS_TRTGB0H	(*( CBS_TRTGB0H_type *) 0xf00004e4u)	/* TG Routing for OTGB0 Bits [15:8] */
#define CBS_TRTGB1H	(*( CBS_TRTGB0H_type *) 0xf00004ecu)	/* TG Routing for OTGB1 Bits [15:8] */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TG0            : 4;	/* OTGBi Bit 0 to Trigger Line Routing */
		unsigned __sfrbit32 TG1            : 4;	/* OTGBi Bit 1 to Trigger Line Routing */
		unsigned __sfrbit32 TG2            : 4;	/* OTGBi Bit 2 to Trigger Line Routing */
		unsigned __sfrbit32 TG3            : 4;	/* OTGBi Bit 3 to Trigger Line Routing */
		unsigned __sfrbit32 TG4            : 4;	/* OTGBi Bit 4 to Trigger Line Routing */
		unsigned __sfrbit32 TG5            : 4;	/* OTGBi Bit 5 to Trigger Line Routing */
		unsigned __sfrbit32 TG6            : 4;	/* OTGBi Bit 6 to Trigger Line Routing */
		unsigned __sfrbit32 TG7            : 4;	/* OTGBi Bit 7 to Trigger Line Routing */
	} B;
	int I;
	unsigned int U;

} CBS_TRTGB0L_type;
#define CBS_TRTGB0L	(*( CBS_TRTGB0L_type *) 0xf00004e0u)	/* TG Routing for OTGB0 Bits [7:0] */
#define CBS_TRTGB1L	(*( CBS_TRTGB0L_type *) 0xf00004e8u)	/* TG Routing for OTGB1 Bits [7:0] */


/* DMA */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} DMA_ACCEN00_type;
#define DMA_ACCEN00	(*( DMA_ACCEN00_type *) 0xf0010040u)	/* RP 0 Access Enable Register 0 */
#define DMA_ACCEN10	(*( DMA_ACCEN00_type *) 0xf0010048u)	/* RP 1 Access Enable Register 0 */
#define DMA_ACCEN20	(*( DMA_ACCEN00_type *) 0xf0010050u)	/* RP 2 Access Enable Register 0 */
#define DMA_ACCEN30	(*( DMA_ACCEN00_type *) 0xf0010058u)	/* RP 3 Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ACCEN01_type;
#define DMA_ACCEN01	(*( DMA_ACCEN01_type *) 0xf0010044u)	/* RP 0 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ACCEN11_type;
#define DMA_ACCEN11	(*( DMA_ACCEN11_type *) 0xf001004cu)	/* RP 1 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ACCEN21_type;
#define DMA_ACCEN21	(*( DMA_ACCEN21_type *) 0xf0010054u)	/* RP 2 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMA_ACCEN31_type;
#define DMA_ACCEN31	(*( DMA_ACCEN31_type *) 0xf001005cu)	/* RP 3 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SMF            : 3;	/* Source Address Modification Factor */
		unsigned int INCS           : 1;	/* Increment of Source Address */
		unsigned int DMF            : 3;	/* Destination Address Modification Factor */
		unsigned int INCD           : 1;	/* Increment of Destination Address */
		unsigned int CBLS           : 4;	/* Circular Buffer Length Source */
		unsigned int CBLD           : 4;	/* Circular Buffer Length Destination */
		unsigned int SHCT           : 4;	/* Shadow Control */
		unsigned int SCBE           : 1;	/* Source Circular Buffer Enable */
		unsigned int DCBE           : 1;	/* Destination Circular Buffer Enable */
		unsigned int STAMP          : 1;	/* Time Stamp */
		unsigned int                : 1;
		unsigned int WRPSE          : 1;	/* Wrap Source Enable */
		unsigned int WRPDE          : 1;	/* Wrap Destination Enable */
		unsigned int INTCT          : 2;	/* Interrupt Control */
		unsigned int IRDV           : 4;	/* Interrupt Raise Detect Value */
	} B;
	int I;
	unsigned int U;

} DMA_ADICR000_type;
#define DMA_ADICR000	(*( DMA_ADICR000_type *) 0xf0012010u)	/* DMARAM Channel 0 Address and Interrupt Control Register */
#define DMA_ADICR001	(*( DMA_ADICR000_type *) 0xf0012030u)	/* DMARAM Channel 1 Address and Interrupt Control Register */
#define DMA_ADICR002	(*( DMA_ADICR000_type *) 0xf0012050u)	/* DMARAM Channel 2 Address and Interrupt Control Register */
#define DMA_ADICR003	(*( DMA_ADICR000_type *) 0xf0012070u)	/* DMARAM Channel 3 Address and Interrupt Control Register */
#define DMA_ADICR004	(*( DMA_ADICR000_type *) 0xf0012090u)	/* DMARAM Channel 4 Address and Interrupt Control Register */
#define DMA_ADICR005	(*( DMA_ADICR000_type *) 0xf00120b0u)	/* DMARAM Channel 5 Address and Interrupt Control Register */
#define DMA_ADICR006	(*( DMA_ADICR000_type *) 0xf00120d0u)	/* DMARAM Channel 6 Address and Interrupt Control Register */
#define DMA_ADICR007	(*( DMA_ADICR000_type *) 0xf00120f0u)	/* DMARAM Channel 7 Address and Interrupt Control Register */
#define DMA_ADICR008	(*( DMA_ADICR000_type *) 0xf0012110u)	/* DMARAM Channel 8 Address and Interrupt Control Register */
#define DMA_ADICR009	(*( DMA_ADICR000_type *) 0xf0012130u)	/* DMARAM Channel 9 Address and Interrupt Control Register */
#define DMA_ADICR010	(*( DMA_ADICR000_type *) 0xf0012150u)	/* DMARAM Channel 10 Address and Interrupt Control Register */
#define DMA_ADICR011	(*( DMA_ADICR000_type *) 0xf0012170u)	/* DMARAM Channel 11 Address and Interrupt Control Register */
#define DMA_ADICR012	(*( DMA_ADICR000_type *) 0xf0012190u)	/* DMARAM Channel 12 Address and Interrupt Control Register */
#define DMA_ADICR013	(*( DMA_ADICR000_type *) 0xf00121b0u)	/* DMARAM Channel 13 Address and Interrupt Control Register */
#define DMA_ADICR014	(*( DMA_ADICR000_type *) 0xf00121d0u)	/* DMARAM Channel 14 Address and Interrupt Control Register */
#define DMA_ADICR015	(*( DMA_ADICR000_type *) 0xf00121f0u)	/* DMARAM Channel 15 Address and Interrupt Control Register */
#define DMA_ADICR016	(*( DMA_ADICR000_type *) 0xf0012210u)	/* DMARAM Channel 16 Address and Interrupt Control Register */
#define DMA_ADICR017	(*( DMA_ADICR000_type *) 0xf0012230u)	/* DMARAM Channel 17 Address and Interrupt Control Register */
#define DMA_ADICR018	(*( DMA_ADICR000_type *) 0xf0012250u)	/* DMARAM Channel 18 Address and Interrupt Control Register */
#define DMA_ADICR019	(*( DMA_ADICR000_type *) 0xf0012270u)	/* DMARAM Channel 19 Address and Interrupt Control Register */
#define DMA_ADICR020	(*( DMA_ADICR000_type *) 0xf0012290u)	/* DMARAM Channel 20 Address and Interrupt Control Register */
#define DMA_ADICR021	(*( DMA_ADICR000_type *) 0xf00122b0u)	/* DMARAM Channel 21 Address and Interrupt Control Register */
#define DMA_ADICR022	(*( DMA_ADICR000_type *) 0xf00122d0u)	/* DMARAM Channel 22 Address and Interrupt Control Register */
#define DMA_ADICR023	(*( DMA_ADICR000_type *) 0xf00122f0u)	/* DMARAM Channel 23 Address and Interrupt Control Register */
#define DMA_ADICR024	(*( DMA_ADICR000_type *) 0xf0012310u)	/* DMARAM Channel 24 Address and Interrupt Control Register */
#define DMA_ADICR025	(*( DMA_ADICR000_type *) 0xf0012330u)	/* DMARAM Channel 25 Address and Interrupt Control Register */
#define DMA_ADICR026	(*( DMA_ADICR000_type *) 0xf0012350u)	/* DMARAM Channel 26 Address and Interrupt Control Register */
#define DMA_ADICR027	(*( DMA_ADICR000_type *) 0xf0012370u)	/* DMARAM Channel 27 Address and Interrupt Control Register */
#define DMA_ADICR028	(*( DMA_ADICR000_type *) 0xf0012390u)	/* DMARAM Channel 28 Address and Interrupt Control Register */
#define DMA_ADICR029	(*( DMA_ADICR000_type *) 0xf00123b0u)	/* DMARAM Channel 29 Address and Interrupt Control Register */
#define DMA_ADICR030	(*( DMA_ADICR000_type *) 0xf00123d0u)	/* DMARAM Channel 30 Address and Interrupt Control Register */
#define DMA_ADICR031	(*( DMA_ADICR000_type *) 0xf00123f0u)	/* DMARAM Channel 31 Address and Interrupt Control Register */
#define DMA_ADICR032	(*( DMA_ADICR000_type *) 0xf0012410u)	/* DMARAM Channel 32 Address and Interrupt Control Register */
#define DMA_ADICR033	(*( DMA_ADICR000_type *) 0xf0012430u)	/* DMARAM Channel 33 Address and Interrupt Control Register */
#define DMA_ADICR034	(*( DMA_ADICR000_type *) 0xf0012450u)	/* DMARAM Channel 34 Address and Interrupt Control Register */
#define DMA_ADICR035	(*( DMA_ADICR000_type *) 0xf0012470u)	/* DMARAM Channel 35 Address and Interrupt Control Register */
#define DMA_ADICR036	(*( DMA_ADICR000_type *) 0xf0012490u)	/* DMARAM Channel 36 Address and Interrupt Control Register */
#define DMA_ADICR037	(*( DMA_ADICR000_type *) 0xf00124b0u)	/* DMARAM Channel 37 Address and Interrupt Control Register */
#define DMA_ADICR038	(*( DMA_ADICR000_type *) 0xf00124d0u)	/* DMARAM Channel 38 Address and Interrupt Control Register */
#define DMA_ADICR039	(*( DMA_ADICR000_type *) 0xf00124f0u)	/* DMARAM Channel 39 Address and Interrupt Control Register */
#define DMA_ADICR040	(*( DMA_ADICR000_type *) 0xf0012510u)	/* DMARAM Channel 40 Address and Interrupt Control Register */
#define DMA_ADICR041	(*( DMA_ADICR000_type *) 0xf0012530u)	/* DMARAM Channel 41 Address and Interrupt Control Register */
#define DMA_ADICR042	(*( DMA_ADICR000_type *) 0xf0012550u)	/* DMARAM Channel 42 Address and Interrupt Control Register */
#define DMA_ADICR043	(*( DMA_ADICR000_type *) 0xf0012570u)	/* DMARAM Channel 43 Address and Interrupt Control Register */
#define DMA_ADICR044	(*( DMA_ADICR000_type *) 0xf0012590u)	/* DMARAM Channel 44 Address and Interrupt Control Register */
#define DMA_ADICR045	(*( DMA_ADICR000_type *) 0xf00125b0u)	/* DMARAM Channel 45 Address and Interrupt Control Register */
#define DMA_ADICR046	(*( DMA_ADICR000_type *) 0xf00125d0u)	/* DMARAM Channel 46 Address and Interrupt Control Register */
#define DMA_ADICR047	(*( DMA_ADICR000_type *) 0xf00125f0u)	/* DMARAM Channel 47 Address and Interrupt Control Register */
#define DMA_ADICR048	(*( DMA_ADICR000_type *) 0xf0012610u)	/* DMARAM Channel 48 Address and Interrupt Control Register */
#define DMA_ADICR049	(*( DMA_ADICR000_type *) 0xf0012630u)	/* DMARAM Channel 49 Address and Interrupt Control Register */
#define DMA_ADICR050	(*( DMA_ADICR000_type *) 0xf0012650u)	/* DMARAM Channel 50 Address and Interrupt Control Register */
#define DMA_ADICR051	(*( DMA_ADICR000_type *) 0xf0012670u)	/* DMARAM Channel 51 Address and Interrupt Control Register */
#define DMA_ADICR052	(*( DMA_ADICR000_type *) 0xf0012690u)	/* DMARAM Channel 52 Address and Interrupt Control Register */
#define DMA_ADICR053	(*( DMA_ADICR000_type *) 0xf00126b0u)	/* DMARAM Channel 53 Address and Interrupt Control Register */
#define DMA_ADICR054	(*( DMA_ADICR000_type *) 0xf00126d0u)	/* DMARAM Channel 54 Address and Interrupt Control Register */
#define DMA_ADICR055	(*( DMA_ADICR000_type *) 0xf00126f0u)	/* DMARAM Channel 55 Address and Interrupt Control Register */
#define DMA_ADICR056	(*( DMA_ADICR000_type *) 0xf0012710u)	/* DMARAM Channel 56 Address and Interrupt Control Register */
#define DMA_ADICR057	(*( DMA_ADICR000_type *) 0xf0012730u)	/* DMARAM Channel 57 Address and Interrupt Control Register */
#define DMA_ADICR058	(*( DMA_ADICR000_type *) 0xf0012750u)	/* DMARAM Channel 58 Address and Interrupt Control Register */
#define DMA_ADICR059	(*( DMA_ADICR000_type *) 0xf0012770u)	/* DMARAM Channel 59 Address and Interrupt Control Register */
#define DMA_ADICR060	(*( DMA_ADICR000_type *) 0xf0012790u)	/* DMARAM Channel 60 Address and Interrupt Control Register */
#define DMA_ADICR061	(*( DMA_ADICR000_type *) 0xf00127b0u)	/* DMARAM Channel 61 Address and Interrupt Control Register */
#define DMA_ADICR062	(*( DMA_ADICR000_type *) 0xf00127d0u)	/* DMARAM Channel 62 Address and Interrupt Control Register */
#define DMA_ADICR063	(*( DMA_ADICR000_type *) 0xf00127f0u)	/* DMARAM Channel 63 Address and Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TREL           : 14;	/* Transfer Reload Value */
		unsigned int                : 2;
		unsigned int BLKM           : 3;	/* Block Mode */
		unsigned int RROAT          : 1;	/* Reset Request Only After Transaction */
		unsigned int CHMODE         : 1;	/* Channel Operation Mode */
		unsigned int CHDW           : 3;	/* Channel Data Width */
		unsigned int PATSEL         : 3;	/* Pattern Select */
		unsigned int SWAP           : 1;	/* Swap Data CRC Byte Order */
		unsigned int PRSEL          : 1;	/* Peripheral Request Select */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} DMA_CHCFGR000_type;
#define DMA_CHCFGR000	(*( DMA_CHCFGR000_type *) 0xf0012014u)	/* DMARAM Channel 0 Configuration Register */
#define DMA_CHCFGR001	(*( DMA_CHCFGR000_type *) 0xf0012034u)	/* DMARAM Channel 1 Configuration Register */
#define DMA_CHCFGR002	(*( DMA_CHCFGR000_type *) 0xf0012054u)	/* DMARAM Channel 2 Configuration Register */
#define DMA_CHCFGR003	(*( DMA_CHCFGR000_type *) 0xf0012074u)	/* DMARAM Channel 3 Configuration Register */
#define DMA_CHCFGR004	(*( DMA_CHCFGR000_type *) 0xf0012094u)	/* DMARAM Channel 4 Configuration Register */
#define DMA_CHCFGR005	(*( DMA_CHCFGR000_type *) 0xf00120b4u)	/* DMARAM Channel 5 Configuration Register */
#define DMA_CHCFGR006	(*( DMA_CHCFGR000_type *) 0xf00120d4u)	/* DMARAM Channel 6 Configuration Register */
#define DMA_CHCFGR007	(*( DMA_CHCFGR000_type *) 0xf00120f4u)	/* DMARAM Channel 7 Configuration Register */
#define DMA_CHCFGR008	(*( DMA_CHCFGR000_type *) 0xf0012114u)	/* DMARAM Channel 8 Configuration Register */
#define DMA_CHCFGR009	(*( DMA_CHCFGR000_type *) 0xf0012134u)	/* DMARAM Channel 9 Configuration Register */
#define DMA_CHCFGR010	(*( DMA_CHCFGR000_type *) 0xf0012154u)	/* DMARAM Channel 10 Configuration Register */
#define DMA_CHCFGR011	(*( DMA_CHCFGR000_type *) 0xf0012174u)	/* DMARAM Channel 11 Configuration Register */
#define DMA_CHCFGR012	(*( DMA_CHCFGR000_type *) 0xf0012194u)	/* DMARAM Channel 12 Configuration Register */
#define DMA_CHCFGR013	(*( DMA_CHCFGR000_type *) 0xf00121b4u)	/* DMARAM Channel 13 Configuration Register */
#define DMA_CHCFGR014	(*( DMA_CHCFGR000_type *) 0xf00121d4u)	/* DMARAM Channel 14 Configuration Register */
#define DMA_CHCFGR015	(*( DMA_CHCFGR000_type *) 0xf00121f4u)	/* DMARAM Channel 15 Configuration Register */
#define DMA_CHCFGR016	(*( DMA_CHCFGR000_type *) 0xf0012214u)	/* DMARAM Channel 16 Configuration Register */
#define DMA_CHCFGR017	(*( DMA_CHCFGR000_type *) 0xf0012234u)	/* DMARAM Channel 17 Configuration Register */
#define DMA_CHCFGR018	(*( DMA_CHCFGR000_type *) 0xf0012254u)	/* DMARAM Channel 18 Configuration Register */
#define DMA_CHCFGR019	(*( DMA_CHCFGR000_type *) 0xf0012274u)	/* DMARAM Channel 19 Configuration Register */
#define DMA_CHCFGR020	(*( DMA_CHCFGR000_type *) 0xf0012294u)	/* DMARAM Channel 20 Configuration Register */
#define DMA_CHCFGR021	(*( DMA_CHCFGR000_type *) 0xf00122b4u)	/* DMARAM Channel 21 Configuration Register */
#define DMA_CHCFGR022	(*( DMA_CHCFGR000_type *) 0xf00122d4u)	/* DMARAM Channel 22 Configuration Register */
#define DMA_CHCFGR023	(*( DMA_CHCFGR000_type *) 0xf00122f4u)	/* DMARAM Channel 23 Configuration Register */
#define DMA_CHCFGR024	(*( DMA_CHCFGR000_type *) 0xf0012314u)	/* DMARAM Channel 24 Configuration Register */
#define DMA_CHCFGR025	(*( DMA_CHCFGR000_type *) 0xf0012334u)	/* DMARAM Channel 25 Configuration Register */
#define DMA_CHCFGR026	(*( DMA_CHCFGR000_type *) 0xf0012354u)	/* DMARAM Channel 26 Configuration Register */
#define DMA_CHCFGR027	(*( DMA_CHCFGR000_type *) 0xf0012374u)	/* DMARAM Channel 27 Configuration Register */
#define DMA_CHCFGR028	(*( DMA_CHCFGR000_type *) 0xf0012394u)	/* DMARAM Channel 28 Configuration Register */
#define DMA_CHCFGR029	(*( DMA_CHCFGR000_type *) 0xf00123b4u)	/* DMARAM Channel 29 Configuration Register */
#define DMA_CHCFGR030	(*( DMA_CHCFGR000_type *) 0xf00123d4u)	/* DMARAM Channel 30 Configuration Register */
#define DMA_CHCFGR031	(*( DMA_CHCFGR000_type *) 0xf00123f4u)	/* DMARAM Channel 31 Configuration Register */
#define DMA_CHCFGR032	(*( DMA_CHCFGR000_type *) 0xf0012414u)	/* DMARAM Channel 32 Configuration Register */
#define DMA_CHCFGR033	(*( DMA_CHCFGR000_type *) 0xf0012434u)	/* DMARAM Channel 33 Configuration Register */
#define DMA_CHCFGR034	(*( DMA_CHCFGR000_type *) 0xf0012454u)	/* DMARAM Channel 34 Configuration Register */
#define DMA_CHCFGR035	(*( DMA_CHCFGR000_type *) 0xf0012474u)	/* DMARAM Channel 35 Configuration Register */
#define DMA_CHCFGR036	(*( DMA_CHCFGR000_type *) 0xf0012494u)	/* DMARAM Channel 36 Configuration Register */
#define DMA_CHCFGR037	(*( DMA_CHCFGR000_type *) 0xf00124b4u)	/* DMARAM Channel 37 Configuration Register */
#define DMA_CHCFGR038	(*( DMA_CHCFGR000_type *) 0xf00124d4u)	/* DMARAM Channel 38 Configuration Register */
#define DMA_CHCFGR039	(*( DMA_CHCFGR000_type *) 0xf00124f4u)	/* DMARAM Channel 39 Configuration Register */
#define DMA_CHCFGR040	(*( DMA_CHCFGR000_type *) 0xf0012514u)	/* DMARAM Channel 40 Configuration Register */
#define DMA_CHCFGR041	(*( DMA_CHCFGR000_type *) 0xf0012534u)	/* DMARAM Channel 41 Configuration Register */
#define DMA_CHCFGR042	(*( DMA_CHCFGR000_type *) 0xf0012554u)	/* DMARAM Channel 42 Configuration Register */
#define DMA_CHCFGR043	(*( DMA_CHCFGR000_type *) 0xf0012574u)	/* DMARAM Channel 43 Configuration Register */
#define DMA_CHCFGR044	(*( DMA_CHCFGR000_type *) 0xf0012594u)	/* DMARAM Channel 44 Configuration Register */
#define DMA_CHCFGR045	(*( DMA_CHCFGR000_type *) 0xf00125b4u)	/* DMARAM Channel 45 Configuration Register */
#define DMA_CHCFGR046	(*( DMA_CHCFGR000_type *) 0xf00125d4u)	/* DMARAM Channel 46 Configuration Register */
#define DMA_CHCFGR047	(*( DMA_CHCFGR000_type *) 0xf00125f4u)	/* DMARAM Channel 47 Configuration Register */
#define DMA_CHCFGR048	(*( DMA_CHCFGR000_type *) 0xf0012614u)	/* DMARAM Channel 48 Configuration Register */
#define DMA_CHCFGR049	(*( DMA_CHCFGR000_type *) 0xf0012634u)	/* DMARAM Channel 49 Configuration Register */
#define DMA_CHCFGR050	(*( DMA_CHCFGR000_type *) 0xf0012654u)	/* DMARAM Channel 50 Configuration Register */
#define DMA_CHCFGR051	(*( DMA_CHCFGR000_type *) 0xf0012674u)	/* DMARAM Channel 51 Configuration Register */
#define DMA_CHCFGR052	(*( DMA_CHCFGR000_type *) 0xf0012694u)	/* DMARAM Channel 52 Configuration Register */
#define DMA_CHCFGR053	(*( DMA_CHCFGR000_type *) 0xf00126b4u)	/* DMARAM Channel 53 Configuration Register */
#define DMA_CHCFGR054	(*( DMA_CHCFGR000_type *) 0xf00126d4u)	/* DMARAM Channel 54 Configuration Register */
#define DMA_CHCFGR055	(*( DMA_CHCFGR000_type *) 0xf00126f4u)	/* DMARAM Channel 55 Configuration Register */
#define DMA_CHCFGR056	(*( DMA_CHCFGR000_type *) 0xf0012714u)	/* DMARAM Channel 56 Configuration Register */
#define DMA_CHCFGR057	(*( DMA_CHCFGR000_type *) 0xf0012734u)	/* DMARAM Channel 57 Configuration Register */
#define DMA_CHCFGR058	(*( DMA_CHCFGR000_type *) 0xf0012754u)	/* DMARAM Channel 58 Configuration Register */
#define DMA_CHCFGR059	(*( DMA_CHCFGR000_type *) 0xf0012774u)	/* DMARAM Channel 59 Configuration Register */
#define DMA_CHCFGR060	(*( DMA_CHCFGR000_type *) 0xf0012794u)	/* DMARAM Channel 60 Configuration Register */
#define DMA_CHCFGR061	(*( DMA_CHCFGR000_type *) 0xf00127b4u)	/* DMARAM Channel 61 Configuration Register */
#define DMA_CHCFGR062	(*( DMA_CHCFGR000_type *) 0xf00127d4u)	/* DMARAM Channel 62 Configuration Register */
#define DMA_CHCFGR063	(*( DMA_CHCFGR000_type *) 0xf00127f4u)	/* DMARAM Channel 63 Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 14;	/* Transfer Count */
		unsigned int                : 1;
		/* const */ unsigned int LXO            : 1;	/* Old Value of Pattern Detection */
		/* const */ unsigned int WRPS           : 1;	/* Wrap Source Buffer */
		/* const */ unsigned int WRPD           : 1;	/* Wrap Destination Buffer */
		/* const */ unsigned int ICH            : 1;	/* Interrupt from Channel */
		/* const */ unsigned int IPM            : 1;	/* Pattern Detection from Channel */
		unsigned int                : 2;
		/* const */ unsigned int BUFFER         : 1;	/* DMA Double Buffering Active Buffer */
		unsigned int FROZEN         : 1;	/* DMA Double Buffering Frozen Buffer */
		unsigned int SWB            : 1;	/* DMA Double Buffering Switch Buffer */
		unsigned int CWRP           : 1;	/* Clear Wrap Buffer Interrupt */
		unsigned int CICH           : 1;	/* Clear Interrupt for DMA Channel */
		unsigned int SIT            : 1;	/* Set Interrupt Trigger for DMA Channel */
		unsigned int                : 3;
		unsigned int SCH            : 1;	/* Set Transaction Request */
	} B;
	int I;
	unsigned int U;

} DMA_CHCSR000_type;
#define DMA_CHCSR000	(*( DMA_CHCSR000_type *) 0xf001201cu)	/* DMARAM Channel 0 Control and Status Register */
#define DMA_CHCSR001	(*( DMA_CHCSR000_type *) 0xf001203cu)	/* DMARAM Channel 1 Control and Status Register */
#define DMA_CHCSR002	(*( DMA_CHCSR000_type *) 0xf001205cu)	/* DMARAM Channel 2 Control and Status Register */
#define DMA_CHCSR003	(*( DMA_CHCSR000_type *) 0xf001207cu)	/* DMARAM Channel 3 Control and Status Register */
#define DMA_CHCSR004	(*( DMA_CHCSR000_type *) 0xf001209cu)	/* DMARAM Channel 4 Control and Status Register */
#define DMA_CHCSR005	(*( DMA_CHCSR000_type *) 0xf00120bcu)	/* DMARAM Channel 5 Control and Status Register */
#define DMA_CHCSR006	(*( DMA_CHCSR000_type *) 0xf00120dcu)	/* DMARAM Channel 6 Control and Status Register */
#define DMA_CHCSR007	(*( DMA_CHCSR000_type *) 0xf00120fcu)	/* DMARAM Channel 7 Control and Status Register */
#define DMA_CHCSR008	(*( DMA_CHCSR000_type *) 0xf001211cu)	/* DMARAM Channel 8 Control and Status Register */
#define DMA_CHCSR009	(*( DMA_CHCSR000_type *) 0xf001213cu)	/* DMARAM Channel 9 Control and Status Register */
#define DMA_CHCSR010	(*( DMA_CHCSR000_type *) 0xf001215cu)	/* DMARAM Channel 10 Control and Status Register */
#define DMA_CHCSR011	(*( DMA_CHCSR000_type *) 0xf001217cu)	/* DMARAM Channel 11 Control and Status Register */
#define DMA_CHCSR012	(*( DMA_CHCSR000_type *) 0xf001219cu)	/* DMARAM Channel 12 Control and Status Register */
#define DMA_CHCSR013	(*( DMA_CHCSR000_type *) 0xf00121bcu)	/* DMARAM Channel 13 Control and Status Register */
#define DMA_CHCSR014	(*( DMA_CHCSR000_type *) 0xf00121dcu)	/* DMARAM Channel 14 Control and Status Register */
#define DMA_CHCSR015	(*( DMA_CHCSR000_type *) 0xf00121fcu)	/* DMARAM Channel 15 Control and Status Register */
#define DMA_CHCSR016	(*( DMA_CHCSR000_type *) 0xf001221cu)	/* DMARAM Channel 16 Control and Status Register */
#define DMA_CHCSR017	(*( DMA_CHCSR000_type *) 0xf001223cu)	/* DMARAM Channel 17 Control and Status Register */
#define DMA_CHCSR018	(*( DMA_CHCSR000_type *) 0xf001225cu)	/* DMARAM Channel 18 Control and Status Register */
#define DMA_CHCSR019	(*( DMA_CHCSR000_type *) 0xf001227cu)	/* DMARAM Channel 19 Control and Status Register */
#define DMA_CHCSR020	(*( DMA_CHCSR000_type *) 0xf001229cu)	/* DMARAM Channel 20 Control and Status Register */
#define DMA_CHCSR021	(*( DMA_CHCSR000_type *) 0xf00122bcu)	/* DMARAM Channel 21 Control and Status Register */
#define DMA_CHCSR022	(*( DMA_CHCSR000_type *) 0xf00122dcu)	/* DMARAM Channel 22 Control and Status Register */
#define DMA_CHCSR023	(*( DMA_CHCSR000_type *) 0xf00122fcu)	/* DMARAM Channel 23 Control and Status Register */
#define DMA_CHCSR024	(*( DMA_CHCSR000_type *) 0xf001231cu)	/* DMARAM Channel 24 Control and Status Register */
#define DMA_CHCSR025	(*( DMA_CHCSR000_type *) 0xf001233cu)	/* DMARAM Channel 25 Control and Status Register */
#define DMA_CHCSR026	(*( DMA_CHCSR000_type *) 0xf001235cu)	/* DMARAM Channel 26 Control and Status Register */
#define DMA_CHCSR027	(*( DMA_CHCSR000_type *) 0xf001237cu)	/* DMARAM Channel 27 Control and Status Register */
#define DMA_CHCSR028	(*( DMA_CHCSR000_type *) 0xf001239cu)	/* DMARAM Channel 28 Control and Status Register */
#define DMA_CHCSR029	(*( DMA_CHCSR000_type *) 0xf00123bcu)	/* DMARAM Channel 29 Control and Status Register */
#define DMA_CHCSR030	(*( DMA_CHCSR000_type *) 0xf00123dcu)	/* DMARAM Channel 30 Control and Status Register */
#define DMA_CHCSR031	(*( DMA_CHCSR000_type *) 0xf00123fcu)	/* DMARAM Channel 31 Control and Status Register */
#define DMA_CHCSR032	(*( DMA_CHCSR000_type *) 0xf001241cu)	/* DMARAM Channel 32 Control and Status Register */
#define DMA_CHCSR033	(*( DMA_CHCSR000_type *) 0xf001243cu)	/* DMARAM Channel 33 Control and Status Register */
#define DMA_CHCSR034	(*( DMA_CHCSR000_type *) 0xf001245cu)	/* DMARAM Channel 34 Control and Status Register */
#define DMA_CHCSR035	(*( DMA_CHCSR000_type *) 0xf001247cu)	/* DMARAM Channel 35 Control and Status Register */
#define DMA_CHCSR036	(*( DMA_CHCSR000_type *) 0xf001249cu)	/* DMARAM Channel 36 Control and Status Register */
#define DMA_CHCSR037	(*( DMA_CHCSR000_type *) 0xf00124bcu)	/* DMARAM Channel 37 Control and Status Register */
#define DMA_CHCSR038	(*( DMA_CHCSR000_type *) 0xf00124dcu)	/* DMARAM Channel 38 Control and Status Register */
#define DMA_CHCSR039	(*( DMA_CHCSR000_type *) 0xf00124fcu)	/* DMARAM Channel 39 Control and Status Register */
#define DMA_CHCSR040	(*( DMA_CHCSR000_type *) 0xf001251cu)	/* DMARAM Channel 40 Control and Status Register */
#define DMA_CHCSR041	(*( DMA_CHCSR000_type *) 0xf001253cu)	/* DMARAM Channel 41 Control and Status Register */
#define DMA_CHCSR042	(*( DMA_CHCSR000_type *) 0xf001255cu)	/* DMARAM Channel 42 Control and Status Register */
#define DMA_CHCSR043	(*( DMA_CHCSR000_type *) 0xf001257cu)	/* DMARAM Channel 43 Control and Status Register */
#define DMA_CHCSR044	(*( DMA_CHCSR000_type *) 0xf001259cu)	/* DMARAM Channel 44 Control and Status Register */
#define DMA_CHCSR045	(*( DMA_CHCSR000_type *) 0xf00125bcu)	/* DMARAM Channel 45 Control and Status Register */
#define DMA_CHCSR046	(*( DMA_CHCSR000_type *) 0xf00125dcu)	/* DMARAM Channel 46 Control and Status Register */
#define DMA_CHCSR047	(*( DMA_CHCSR000_type *) 0xf00125fcu)	/* DMARAM Channel 47 Control and Status Register */
#define DMA_CHCSR048	(*( DMA_CHCSR000_type *) 0xf001261cu)	/* DMARAM Channel 48 Control and Status Register */
#define DMA_CHCSR049	(*( DMA_CHCSR000_type *) 0xf001263cu)	/* DMARAM Channel 49 Control and Status Register */
#define DMA_CHCSR050	(*( DMA_CHCSR000_type *) 0xf001265cu)	/* DMARAM Channel 50 Control and Status Register */
#define DMA_CHCSR051	(*( DMA_CHCSR000_type *) 0xf001267cu)	/* DMARAM Channel 51 Control and Status Register */
#define DMA_CHCSR052	(*( DMA_CHCSR000_type *) 0xf001269cu)	/* DMARAM Channel 52 Control and Status Register */
#define DMA_CHCSR053	(*( DMA_CHCSR000_type *) 0xf00126bcu)	/* DMARAM Channel 53 Control and Status Register */
#define DMA_CHCSR054	(*( DMA_CHCSR000_type *) 0xf00126dcu)	/* DMARAM Channel 54 Control and Status Register */
#define DMA_CHCSR055	(*( DMA_CHCSR000_type *) 0xf00126fcu)	/* DMARAM Channel 55 Control and Status Register */
#define DMA_CHCSR056	(*( DMA_CHCSR000_type *) 0xf001271cu)	/* DMARAM Channel 56 Control and Status Register */
#define DMA_CHCSR057	(*( DMA_CHCSR000_type *) 0xf001273cu)	/* DMARAM Channel 57 Control and Status Register */
#define DMA_CHCSR058	(*( DMA_CHCSR000_type *) 0xf001275cu)	/* DMARAM Channel 58 Control and Status Register */
#define DMA_CHCSR059	(*( DMA_CHCSR000_type *) 0xf001277cu)	/* DMARAM Channel 59 Control and Status Register */
#define DMA_CHCSR060	(*( DMA_CHCSR000_type *) 0xf001279cu)	/* DMARAM Channel 60 Control and Status Register */
#define DMA_CHCSR061	(*( DMA_CHCSR000_type *) 0xf00127bcu)	/* DMARAM Channel 61 Control and Status Register */
#define DMA_CHCSR062	(*( DMA_CHCSR000_type *) 0xf00127dcu)	/* DMARAM Channel 62 Control and Status Register */
#define DMA_CHCSR063	(*( DMA_CHCSR000_type *) 0xf00127fcu)	/* DMARAM Channel 63 Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} DMA_CLC_type;
#define DMA_CLC	(*( DMA_CLC_type *) 0xf0010000u)	/* DMA Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int CSER           : 1;	/* Clear ME Source Error */
		unsigned int CDER           : 1;	/* Clear ME Destination Error */
		unsigned int                : 2;
		unsigned int CSPBER         : 1;	/* Clear SPB Error */
		unsigned int CSRIER         : 1;	/* Clear SRI Error */
		unsigned int                : 2;
		unsigned int CRAMER         : 1;	/* Clear RAM Error */
		unsigned int CSLLER         : 1;	/* Clear SLL Error */
		unsigned int CDLLER         : 1;	/* Clear DLL Error */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} DMA_CLRE0_type;
#define DMA_CLRE0	(*( DMA_CLRE0_type *) 0xf0010128u)	/* ME 0 Clear Error Register */
#define DMA_CLRE1	(*( DMA_CLRE0_type *) 0xf0011128u)	/* ME 1 Clear Error Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DADR           : 32;	/* Destination Address */
	} B;
	int I;
	unsigned int U;

} DMA_DADR000_type;
#define DMA_DADR000	(*( DMA_DADR000_type *) 0xf001200cu)	/* DMARAM Channel 0 Destination Address Register */
#define DMA_DADR001	(*( DMA_DADR000_type *) 0xf001202cu)	/* DMARAM Channel 1 Destination Address Register */
#define DMA_DADR002	(*( DMA_DADR000_type *) 0xf001204cu)	/* DMARAM Channel 2 Destination Address Register */
#define DMA_DADR003	(*( DMA_DADR000_type *) 0xf001206cu)	/* DMARAM Channel 3 Destination Address Register */
#define DMA_DADR004	(*( DMA_DADR000_type *) 0xf001208cu)	/* DMARAM Channel 4 Destination Address Register */
#define DMA_DADR005	(*( DMA_DADR000_type *) 0xf00120acu)	/* DMARAM Channel 5 Destination Address Register */
#define DMA_DADR006	(*( DMA_DADR000_type *) 0xf00120ccu)	/* DMARAM Channel 6 Destination Address Register */
#define DMA_DADR007	(*( DMA_DADR000_type *) 0xf00120ecu)	/* DMARAM Channel 7 Destination Address Register */
#define DMA_DADR008	(*( DMA_DADR000_type *) 0xf001210cu)	/* DMARAM Channel 8 Destination Address Register */
#define DMA_DADR009	(*( DMA_DADR000_type *) 0xf001212cu)	/* DMARAM Channel 9 Destination Address Register */
#define DMA_DADR010	(*( DMA_DADR000_type *) 0xf001214cu)	/* DMARAM Channel 10 Destination Address Register */
#define DMA_DADR011	(*( DMA_DADR000_type *) 0xf001216cu)	/* DMARAM Channel 11 Destination Address Register */
#define DMA_DADR012	(*( DMA_DADR000_type *) 0xf001218cu)	/* DMARAM Channel 12 Destination Address Register */
#define DMA_DADR013	(*( DMA_DADR000_type *) 0xf00121acu)	/* DMARAM Channel 13 Destination Address Register */
#define DMA_DADR014	(*( DMA_DADR000_type *) 0xf00121ccu)	/* DMARAM Channel 14 Destination Address Register */
#define DMA_DADR015	(*( DMA_DADR000_type *) 0xf00121ecu)	/* DMARAM Channel 15 Destination Address Register */
#define DMA_DADR016	(*( DMA_DADR000_type *) 0xf001220cu)	/* DMARAM Channel 16 Destination Address Register */
#define DMA_DADR017	(*( DMA_DADR000_type *) 0xf001222cu)	/* DMARAM Channel 17 Destination Address Register */
#define DMA_DADR018	(*( DMA_DADR000_type *) 0xf001224cu)	/* DMARAM Channel 18 Destination Address Register */
#define DMA_DADR019	(*( DMA_DADR000_type *) 0xf001226cu)	/* DMARAM Channel 19 Destination Address Register */
#define DMA_DADR020	(*( DMA_DADR000_type *) 0xf001228cu)	/* DMARAM Channel 20 Destination Address Register */
#define DMA_DADR021	(*( DMA_DADR000_type *) 0xf00122acu)	/* DMARAM Channel 21 Destination Address Register */
#define DMA_DADR022	(*( DMA_DADR000_type *) 0xf00122ccu)	/* DMARAM Channel 22 Destination Address Register */
#define DMA_DADR023	(*( DMA_DADR000_type *) 0xf00122ecu)	/* DMARAM Channel 23 Destination Address Register */
#define DMA_DADR024	(*( DMA_DADR000_type *) 0xf001230cu)	/* DMARAM Channel 24 Destination Address Register */
#define DMA_DADR025	(*( DMA_DADR000_type *) 0xf001232cu)	/* DMARAM Channel 25 Destination Address Register */
#define DMA_DADR026	(*( DMA_DADR000_type *) 0xf001234cu)	/* DMARAM Channel 26 Destination Address Register */
#define DMA_DADR027	(*( DMA_DADR000_type *) 0xf001236cu)	/* DMARAM Channel 27 Destination Address Register */
#define DMA_DADR028	(*( DMA_DADR000_type *) 0xf001238cu)	/* DMARAM Channel 28 Destination Address Register */
#define DMA_DADR029	(*( DMA_DADR000_type *) 0xf00123acu)	/* DMARAM Channel 29 Destination Address Register */
#define DMA_DADR030	(*( DMA_DADR000_type *) 0xf00123ccu)	/* DMARAM Channel 30 Destination Address Register */
#define DMA_DADR031	(*( DMA_DADR000_type *) 0xf00123ecu)	/* DMARAM Channel 31 Destination Address Register */
#define DMA_DADR032	(*( DMA_DADR000_type *) 0xf001240cu)	/* DMARAM Channel 32 Destination Address Register */
#define DMA_DADR033	(*( DMA_DADR000_type *) 0xf001242cu)	/* DMARAM Channel 33 Destination Address Register */
#define DMA_DADR034	(*( DMA_DADR000_type *) 0xf001244cu)	/* DMARAM Channel 34 Destination Address Register */
#define DMA_DADR035	(*( DMA_DADR000_type *) 0xf001246cu)	/* DMARAM Channel 35 Destination Address Register */
#define DMA_DADR036	(*( DMA_DADR000_type *) 0xf001248cu)	/* DMARAM Channel 36 Destination Address Register */
#define DMA_DADR037	(*( DMA_DADR000_type *) 0xf00124acu)	/* DMARAM Channel 37 Destination Address Register */
#define DMA_DADR038	(*( DMA_DADR000_type *) 0xf00124ccu)	/* DMARAM Channel 38 Destination Address Register */
#define DMA_DADR039	(*( DMA_DADR000_type *) 0xf00124ecu)	/* DMARAM Channel 39 Destination Address Register */
#define DMA_DADR040	(*( DMA_DADR000_type *) 0xf001250cu)	/* DMARAM Channel 40 Destination Address Register */
#define DMA_DADR041	(*( DMA_DADR000_type *) 0xf001252cu)	/* DMARAM Channel 41 Destination Address Register */
#define DMA_DADR042	(*( DMA_DADR000_type *) 0xf001254cu)	/* DMARAM Channel 42 Destination Address Register */
#define DMA_DADR043	(*( DMA_DADR000_type *) 0xf001256cu)	/* DMARAM Channel 43 Destination Address Register */
#define DMA_DADR044	(*( DMA_DADR000_type *) 0xf001258cu)	/* DMARAM Channel 44 Destination Address Register */
#define DMA_DADR045	(*( DMA_DADR000_type *) 0xf00125acu)	/* DMARAM Channel 45 Destination Address Register */
#define DMA_DADR046	(*( DMA_DADR000_type *) 0xf00125ccu)	/* DMARAM Channel 46 Destination Address Register */
#define DMA_DADR047	(*( DMA_DADR000_type *) 0xf00125ecu)	/* DMARAM Channel 47 Destination Address Register */
#define DMA_DADR048	(*( DMA_DADR000_type *) 0xf001260cu)	/* DMARAM Channel 48 Destination Address Register */
#define DMA_DADR049	(*( DMA_DADR000_type *) 0xf001262cu)	/* DMARAM Channel 49 Destination Address Register */
#define DMA_DADR050	(*( DMA_DADR000_type *) 0xf001264cu)	/* DMARAM Channel 50 Destination Address Register */
#define DMA_DADR051	(*( DMA_DADR000_type *) 0xf001266cu)	/* DMARAM Channel 51 Destination Address Register */
#define DMA_DADR052	(*( DMA_DADR000_type *) 0xf001268cu)	/* DMARAM Channel 52 Destination Address Register */
#define DMA_DADR053	(*( DMA_DADR000_type *) 0xf00126acu)	/* DMARAM Channel 53 Destination Address Register */
#define DMA_DADR054	(*( DMA_DADR000_type *) 0xf00126ccu)	/* DMARAM Channel 54 Destination Address Register */
#define DMA_DADR055	(*( DMA_DADR000_type *) 0xf00126ecu)	/* DMARAM Channel 55 Destination Address Register */
#define DMA_DADR056	(*( DMA_DADR000_type *) 0xf001270cu)	/* DMARAM Channel 56 Destination Address Register */
#define DMA_DADR057	(*( DMA_DADR000_type *) 0xf001272cu)	/* DMARAM Channel 57 Destination Address Register */
#define DMA_DADR058	(*( DMA_DADR000_type *) 0xf001274cu)	/* DMARAM Channel 58 Destination Address Register */
#define DMA_DADR059	(*( DMA_DADR000_type *) 0xf001276cu)	/* DMARAM Channel 59 Destination Address Register */
#define DMA_DADR060	(*( DMA_DADR000_type *) 0xf001278cu)	/* DMARAM Channel 60 Destination Address Register */
#define DMA_DADR061	(*( DMA_DADR000_type *) 0xf00127acu)	/* DMARAM Channel 61 Destination Address Register */
#define DMA_DADR062	(*( DMA_DADR000_type *) 0xf00127ccu)	/* DMARAM Channel 62 Destination Address Register */
#define DMA_DADR063	(*( DMA_DADR000_type *) 0xf00127ecu)	/* DMARAM Channel 63 Destination Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int ESER           : 1;	/* Enable ME Source Error */
		unsigned int EDER           : 1;	/* Enable ME Destination Error */
		unsigned int                : 8;
		unsigned int ELER           : 1;	/* Enable ME DMA Linked List Error */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} DMA_EER0_type;
#define DMA_EER0	(*( DMA_EER0_type *) 0xf0010120u)	/* ME 0 Enable Error Register */
#define DMA_EER1	(*( DMA_EER0_type *) 0xf0011120u)	/* ME 1 Enable Error Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SIT            : 1;	/* Set Error Interrupt Service Request */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} DMA_ERRINTR0_type;
#define DMA_ERRINTR0	(*( DMA_ERRINTR0_type *) 0xf0011320u)	/* RP 0 Error Interrupt Set Register */
#define DMA_ERRINTR1	(*( DMA_ERRINTR0_type *) 0xf0011324u)	/* RP 1 Error Interrupt Set Register */
#define DMA_ERRINTR2	(*( DMA_ERRINTR0_type *) 0xf0011328u)	/* RP 2 Error Interrupt Set Register */
#define DMA_ERRINTR3	(*( DMA_ERRINTR0_type *) 0xf001132cu)	/* RP 3 Error Interrupt Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LEC            : 7;	/* ME Last Error Channel */
		/* const */ unsigned int                : 9;
		/* const */ unsigned int SER            : 1;	/* ME Source Error */
		/* const */ unsigned int DER            : 1;	/* ME Destination Error */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int SPBER          : 1;	/* ME SPB Bus Error */
		/* const */ unsigned int SRIER          : 1;	/* ME SRI Bus Error */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int RAMER          : 1;	/* ME RAM Error */
		/* const */ unsigned int SLLER          : 1;	/* ME Safe Linked List Error */
		/* const */ unsigned int DLLER          : 1;	/* ME DMA Linked List Error */
		/* const */ unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} DMA_ERRSR0_type;
#define DMA_ERRSR0	(*( DMA_ERRSR0_type *) 0xf0010124u)	/* ME 0 Error Status Register */
#define DMA_ERRSR1	(*( DMA_ERRSR0_type *) 0xf0011124u)	/* ME 1 Error Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int HRP            : 2;	/* DMA Channel Resource Partition */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} DMA_HRR000_type;
#define DMA_HRR000	(*( DMA_HRR000_type *) 0xf0011800u)	/* DMA Channel 0 Resource Partition Register */
#define DMA_HRR001	(*( DMA_HRR000_type *) 0xf0011804u)	/* DMA Channel 1 Resource Partition Register */
#define DMA_HRR002	(*( DMA_HRR000_type *) 0xf0011808u)	/* DMA Channel 2 Resource Partition Register */
#define DMA_HRR003	(*( DMA_HRR000_type *) 0xf001180cu)	/* DMA Channel 3 Resource Partition Register */
#define DMA_HRR004	(*( DMA_HRR000_type *) 0xf0011810u)	/* DMA Channel 4 Resource Partition Register */
#define DMA_HRR005	(*( DMA_HRR000_type *) 0xf0011814u)	/* DMA Channel 5 Resource Partition Register */
#define DMA_HRR006	(*( DMA_HRR000_type *) 0xf0011818u)	/* DMA Channel 6 Resource Partition Register */
#define DMA_HRR007	(*( DMA_HRR000_type *) 0xf001181cu)	/* DMA Channel 7 Resource Partition Register */
#define DMA_HRR008	(*( DMA_HRR000_type *) 0xf0011820u)	/* DMA Channel 8 Resource Partition Register */
#define DMA_HRR009	(*( DMA_HRR000_type *) 0xf0011824u)	/* DMA Channel 9 Resource Partition Register */
#define DMA_HRR010	(*( DMA_HRR000_type *) 0xf0011828u)	/* DMA Channel 10 Resource Partition Register */
#define DMA_HRR011	(*( DMA_HRR000_type *) 0xf001182cu)	/* DMA Channel 11 Resource Partition Register */
#define DMA_HRR012	(*( DMA_HRR000_type *) 0xf0011830u)	/* DMA Channel 12 Resource Partition Register */
#define DMA_HRR013	(*( DMA_HRR000_type *) 0xf0011834u)	/* DMA Channel 13 Resource Partition Register */
#define DMA_HRR014	(*( DMA_HRR000_type *) 0xf0011838u)	/* DMA Channel 14 Resource Partition Register */
#define DMA_HRR015	(*( DMA_HRR000_type *) 0xf001183cu)	/* DMA Channel 15 Resource Partition Register */
#define DMA_HRR016	(*( DMA_HRR000_type *) 0xf0011840u)	/* DMA Channel 16 Resource Partition Register */
#define DMA_HRR017	(*( DMA_HRR000_type *) 0xf0011844u)	/* DMA Channel 17 Resource Partition Register */
#define DMA_HRR018	(*( DMA_HRR000_type *) 0xf0011848u)	/* DMA Channel 18 Resource Partition Register */
#define DMA_HRR019	(*( DMA_HRR000_type *) 0xf001184cu)	/* DMA Channel 19 Resource Partition Register */
#define DMA_HRR020	(*( DMA_HRR000_type *) 0xf0011850u)	/* DMA Channel 20 Resource Partition Register */
#define DMA_HRR021	(*( DMA_HRR000_type *) 0xf0011854u)	/* DMA Channel 21 Resource Partition Register */
#define DMA_HRR022	(*( DMA_HRR000_type *) 0xf0011858u)	/* DMA Channel 22 Resource Partition Register */
#define DMA_HRR023	(*( DMA_HRR000_type *) 0xf001185cu)	/* DMA Channel 23 Resource Partition Register */
#define DMA_HRR024	(*( DMA_HRR000_type *) 0xf0011860u)	/* DMA Channel 24 Resource Partition Register */
#define DMA_HRR025	(*( DMA_HRR000_type *) 0xf0011864u)	/* DMA Channel 25 Resource Partition Register */
#define DMA_HRR026	(*( DMA_HRR000_type *) 0xf0011868u)	/* DMA Channel 26 Resource Partition Register */
#define DMA_HRR027	(*( DMA_HRR000_type *) 0xf001186cu)	/* DMA Channel 27 Resource Partition Register */
#define DMA_HRR028	(*( DMA_HRR000_type *) 0xf0011870u)	/* DMA Channel 28 Resource Partition Register */
#define DMA_HRR029	(*( DMA_HRR000_type *) 0xf0011874u)	/* DMA Channel 29 Resource Partition Register */
#define DMA_HRR030	(*( DMA_HRR000_type *) 0xf0011878u)	/* DMA Channel 30 Resource Partition Register */
#define DMA_HRR031	(*( DMA_HRR000_type *) 0xf001187cu)	/* DMA Channel 31 Resource Partition Register */
#define DMA_HRR032	(*( DMA_HRR000_type *) 0xf0011880u)	/* DMA Channel 32 Resource Partition Register */
#define DMA_HRR033	(*( DMA_HRR000_type *) 0xf0011884u)	/* DMA Channel 33 Resource Partition Register */
#define DMA_HRR034	(*( DMA_HRR000_type *) 0xf0011888u)	/* DMA Channel 34 Resource Partition Register */
#define DMA_HRR035	(*( DMA_HRR000_type *) 0xf001188cu)	/* DMA Channel 35 Resource Partition Register */
#define DMA_HRR036	(*( DMA_HRR000_type *) 0xf0011890u)	/* DMA Channel 36 Resource Partition Register */
#define DMA_HRR037	(*( DMA_HRR000_type *) 0xf0011894u)	/* DMA Channel 37 Resource Partition Register */
#define DMA_HRR038	(*( DMA_HRR000_type *) 0xf0011898u)	/* DMA Channel 38 Resource Partition Register */
#define DMA_HRR039	(*( DMA_HRR000_type *) 0xf001189cu)	/* DMA Channel 39 Resource Partition Register */
#define DMA_HRR040	(*( DMA_HRR000_type *) 0xf00118a0u)	/* DMA Channel 40 Resource Partition Register */
#define DMA_HRR041	(*( DMA_HRR000_type *) 0xf00118a4u)	/* DMA Channel 41 Resource Partition Register */
#define DMA_HRR042	(*( DMA_HRR000_type *) 0xf00118a8u)	/* DMA Channel 42 Resource Partition Register */
#define DMA_HRR043	(*( DMA_HRR000_type *) 0xf00118acu)	/* DMA Channel 43 Resource Partition Register */
#define DMA_HRR044	(*( DMA_HRR000_type *) 0xf00118b0u)	/* DMA Channel 44 Resource Partition Register */
#define DMA_HRR045	(*( DMA_HRR000_type *) 0xf00118b4u)	/* DMA Channel 45 Resource Partition Register */
#define DMA_HRR046	(*( DMA_HRR000_type *) 0xf00118b8u)	/* DMA Channel 46 Resource Partition Register */
#define DMA_HRR047	(*( DMA_HRR000_type *) 0xf00118bcu)	/* DMA Channel 47 Resource Partition Register */
#define DMA_HRR048	(*( DMA_HRR000_type *) 0xf00118c0u)	/* DMA Channel 48 Resource Partition Register */
#define DMA_HRR049	(*( DMA_HRR000_type *) 0xf00118c4u)	/* DMA Channel 49 Resource Partition Register */
#define DMA_HRR050	(*( DMA_HRR000_type *) 0xf00118c8u)	/* DMA Channel 50 Resource Partition Register */
#define DMA_HRR051	(*( DMA_HRR000_type *) 0xf00118ccu)	/* DMA Channel 51 Resource Partition Register */
#define DMA_HRR052	(*( DMA_HRR000_type *) 0xf00118d0u)	/* DMA Channel 52 Resource Partition Register */
#define DMA_HRR053	(*( DMA_HRR000_type *) 0xf00118d4u)	/* DMA Channel 53 Resource Partition Register */
#define DMA_HRR054	(*( DMA_HRR000_type *) 0xf00118d8u)	/* DMA Channel 54 Resource Partition Register */
#define DMA_HRR055	(*( DMA_HRR000_type *) 0xf00118dcu)	/* DMA Channel 55 Resource Partition Register */
#define DMA_HRR056	(*( DMA_HRR000_type *) 0xf00118e0u)	/* DMA Channel 56 Resource Partition Register */
#define DMA_HRR057	(*( DMA_HRR000_type *) 0xf00118e4u)	/* DMA Channel 57 Resource Partition Register */
#define DMA_HRR058	(*( DMA_HRR000_type *) 0xf00118e8u)	/* DMA Channel 58 Resource Partition Register */
#define DMA_HRR059	(*( DMA_HRR000_type *) 0xf00118ecu)	/* DMA Channel 59 Resource Partition Register */
#define DMA_HRR060	(*( DMA_HRR000_type *) 0xf00118f0u)	/* DMA Channel 60 Resource Partition Register */
#define DMA_HRR061	(*( DMA_HRR000_type *) 0xf00118f4u)	/* DMA Channel 61 Resource Partition Register */
#define DMA_HRR062	(*( DMA_HRR000_type *) 0xf00118f8u)	/* DMA Channel 62 Resource Partition Register */
#define DMA_HRR063	(*( DMA_HRR000_type *) 0xf00118fcu)	/* DMA Channel 63 Resource Partition Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} DMA_ID_type;
#define DMA_ID	(*( DMA_ID_type *) 0xf0010008u)	/* DMA Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD00           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD01           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD02           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD03           : 8;	/* DMA Read Move Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_ME00R_type;
#define DMA_ME00R	(*( DMA_ME00R_type *) 0xf0010140u)	/* ME 0 Read Register 0 */
#define DMA_ME10R	(*( DMA_ME00R_type *) 0xf0011140u)	/* ME 1 Read Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD10           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD11           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD12           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD13           : 8;	/* DMA Read Move Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_ME01R_type;
#define DMA_ME01R	(*( DMA_ME01R_type *) 0xf0010144u)	/* ME 0 Read Register 1 */
#define DMA_ME11R	(*( DMA_ME01R_type *) 0xf0011144u)	/* ME 1 Read Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD20           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD21           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD22           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD23           : 8;	/* DMA Read Move Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_ME02R_type;
#define DMA_ME02R	(*( DMA_ME02R_type *) 0xf0010148u)	/* ME 0 Read Register 2 */
#define DMA_ME12R	(*( DMA_ME02R_type *) 0xf0011148u)	/* ME 1 Read Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD30           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD31           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD32           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD33           : 8;	/* DMA Read Move Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_ME03R_type;
#define DMA_ME03R	(*( DMA_ME03R_type *) 0xf001014cu)	/* ME 0 Read Register 3 */
#define DMA_ME13R	(*( DMA_ME03R_type *) 0xf001114cu)	/* ME 1 Read Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD40           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD41           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD42           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD43           : 8;	/* DMA Read Move Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_ME04R_type;
#define DMA_ME04R	(*( DMA_ME04R_type *) 0xf0010150u)	/* ME 0 Read Register 4 */
#define DMA_ME14R	(*( DMA_ME04R_type *) 0xf0011150u)	/* ME 1 Read Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD50           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD51           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD52           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD53           : 8;	/* DMA Read Move Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_ME05R_type;
#define DMA_ME05R	(*( DMA_ME05R_type *) 0xf0010154u)	/* ME 0 Read Register 5 */
#define DMA_ME15R	(*( DMA_ME05R_type *) 0xf0011154u)	/* ME 1 Read Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD60           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD61           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD62           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD63           : 8;	/* DMA Read Move Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_ME06R_type;
#define DMA_ME06R	(*( DMA_ME06R_type *) 0xf0010158u)	/* ME 0 Read Register 6 */
#define DMA_ME16R	(*( DMA_ME06R_type *) 0xf0011158u)	/* ME 1 Read Register 6 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RD70           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD71           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD72           : 8;	/* DMA Read Move Data Byte */
		/* const */ unsigned int RD73           : 8;	/* DMA Read Move Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_ME07R_type;
#define DMA_ME07R	(*( DMA_ME07R_type *) 0xf001015cu)	/* ME 0 Read Register 7 */
#define DMA_ME17R	(*( DMA_ME07R_type *) 0xf001115cu)	/* ME 1 Read Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SMF            : 3;	/* Source Address Modification Factor */
		/* const */ unsigned int INCS           : 1;	/* Increment of Source Address */
		/* const */ unsigned int DMF            : 3;	/* Destination Address Modification Factor */
		/* const */ unsigned int INCD           : 1;	/* Increment of Destination Address */
		/* const */ unsigned int CBLS           : 4;	/* Circular Buffer Length Source */
		/* const */ unsigned int CBLD           : 4;	/* Circular Buffer Length Destination */
		/* const */ unsigned int SHCT           : 4;	/* Shadow Control */
		/* const */ unsigned int SCBE           : 1;	/* Source Circular Buffer Enable */
		/* const */ unsigned int DCBE           : 1;	/* Destination Circular Buffer Enable */
		/* const */ unsigned int STAMP          : 1;	/* Time Stamp */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int WRPSE          : 1;	/* Wrap Source Enable */
		/* const */ unsigned int WRPDE          : 1;	/* Wrap Destination Enable */
		/* const */ unsigned int INTCT          : 2;	/* Interrupt Control */
		/* const */ unsigned int IRDV           : 4;	/* Interrupt Raise Detect Value */
	} B;
	int I;
	unsigned int U;

} DMA_ME0ADICR_type;
#define DMA_ME0ADICR	(*( DMA_ME0ADICR_type *) 0xf0010190u)	/* ME 0 Channel Address and Interrupt Control Register */
#define DMA_ME1ADICR	(*( DMA_ME0ADICR_type *) 0xf0011190u)	/* ME 1 Channel Address and Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TREL           : 14;	/* Transfer Reload Value */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int BLKM           : 3;	/* Block Mode */
		/* const */ unsigned int RROAT          : 1;	/* Reset Request Only After Transaction */
		/* const */ unsigned int CHMODE         : 1;	/* Channel Operation Mode */
		/* const */ unsigned int CHDW           : 3;	/* Channel Data Width */
		/* const */ unsigned int PATSEL         : 3;	/* Pattern Select */
		/* const */ unsigned int SWAP           : 1;	/* Swap Data CRC byte order */
		/* const */ unsigned int PRSEL          : 1;	/* Peripheral Request Select */
		/* const */ unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} DMA_ME0CHCR_type;
#define DMA_ME0CHCR	(*( DMA_ME0CHCR_type *) 0xf0010194u)	/* ME 0 Channel Control Register */
#define DMA_ME1CHCR	(*( DMA_ME0CHCR_type *) 0xf0011194u)	/* ME 1 Channel Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCOUNT         : 14;	/* Transfer Count Status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int LXO            : 1;	/* Old Value of Pattern Detection */
		/* const */ unsigned int WRPS           : 1;	/* Wrap Source Buffer */
		/* const */ unsigned int WRPD           : 1;	/* Wrap Destination Buffer */
		/* const */ unsigned int ICH            : 1;	/* Interrupt from Channel */
		/* const */ unsigned int IPM            : 1;	/* Pattern Detection from Channel */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int BUFFER         : 1;	/* DMA Double Buffering Active Buffer */
		/* const */ unsigned int FROZEN         : 1;	/* DMA Double Buffering Frozen Buffer */
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} DMA_ME0CHSR_type;
#define DMA_ME0CHSR	(*( DMA_ME0CHSR_type *) 0xf001019cu)	/* ME 0 Channel Status Register */
#define DMA_ME1CHSR	(*( DMA_ME0CHSR_type *) 0xf001119cu)	/* ME 1 Channel Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DADR           : 32;	/* Destination Address */
	} B;
	int I;
	unsigned int U;

} DMA_ME0DADR_type;
#define DMA_ME0DADR	(*( DMA_ME0DADR_type *) 0xf001018cu)	/* ME 0 Channel Destination Address Register */
#define DMA_ME1DADR	(*( DMA_ME0DADR_type *) 0xf001118cu)	/* ME 1 Channel Destination Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RDCRC          : 32;	/* Read Data CRC */
	} B;
	int I;
	unsigned int U;

} DMA_ME0RDCRC_type;
#define DMA_ME0RDCRC	(*( DMA_ME0RDCRC_type *) 0xf0010180u)	/* ME 0 Channel Read Data CRC Register */
#define DMA_ME1RDCRC	(*( DMA_ME0RDCRC_type *) 0xf0011180u)	/* ME 1 Channel Read Data CRC Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SADR           : 32;	/* Source Address */
	} B;
	int I;
	unsigned int U;

} DMA_ME0SADR_type;
#define DMA_ME0SADR	(*( DMA_ME0SADR_type *) 0xf0010188u)	/* ME 0 Channel Source Address Register */
#define DMA_ME1SADR	(*( DMA_ME0SADR_type *) 0xf0011188u)	/* ME 1 Channel Source Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SDCRC          : 32;	/* Source and Destination Address CRC */
	} B;
	int I;
	unsigned int U;

} DMA_ME0SDCRC_type;
#define DMA_ME0SDCRC	(*( DMA_ME0SDCRC_type *) 0xf0010184u)	/* ME 0 Channel Source and Destination Address CRC Register */
#define DMA_ME1SDCRC	(*( DMA_ME0SDCRC_type *) 0xf0011184u)	/* ME 1 Channel Source and Destination Address CRC Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SHADR          : 32;	/* Shadowed Address */
	} B;
	int I;
	unsigned int U;

} DMA_ME0SHADR_type;
#define DMA_ME0SHADR	(*( DMA_ME0SHADR_type *) 0xf0010198u)	/* ME 0 Channel Shadow Address Register */
#define DMA_ME1SHADR	(*( DMA_ME0SHADR_type *) 0xf0011198u)	/* ME 1 Channel Shadow Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RS             : 1;	/* ME Read Status */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int WS             : 1;	/* ME Write Status */
		/* const */ unsigned int                : 11;
		/* const */ unsigned int CH             : 7;	/* ME Active Channel */
		/* const */ unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} DMA_ME0SR_type;
#define DMA_ME0SR	(*( DMA_ME0SR_type *) 0xf0010130u)	/* ME 0 Status Register */
#define DMA_ME1SR	(*( DMA_ME0SR_type *) 0xf0011130u)	/* ME 1 Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MODE           : 1;	/* Resource Partition Supervisor Mode */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} DMA_MODE0_type;
#define DMA_MODE0	(*( DMA_MODE0_type *) 0xf0011300u)	/* RP 0 Mode Register */
#define DMA_MODE1	(*( DMA_MODE0_type *) 0xf0011304u)	/* RP 1 Mode Register */
#define DMA_MODE2	(*( DMA_MODE0_type *) 0xf0011308u)	/* RP 2 Mode Register */
#define DMA_MODE3	(*( DMA_MODE0_type *) 0xf001130cu)	/* RP 3 Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 4;	/* Trigger Set for OTGB0 or OTGB1 */
		unsigned int                : 3;
		unsigned int BS             : 1;	/* OTGB0 or OTGB1 Bus Select */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} DMA_OTSS_type;
#define DMA_OTSS	(*( DMA_OTSS_type *) 0xf0011200u)	/* DMA OCDS Trigger Set Select */

typedef volatile union
{
	struct
	{ 
		unsigned int PAT00          : 8;	/* Pattern Data Byte */
		unsigned int PAT01          : 8;	/* Pattern Data Byte */
		unsigned int PAT02          : 8;	/* Pattern Data Byte */
		unsigned int PAT03          : 8;	/* Pattern Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_PRR0_type;
#define DMA_PRR0	(*( DMA_PRR0_type *) 0xf0011208u)	/* DMA Pattern Read Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int PAT10          : 8;	/* Pattern Data Byte */
		unsigned int PAT11          : 8;	/* Pattern Data Byte */
		unsigned int PAT12          : 8;	/* Pattern Data Byte */
		unsigned int PAT13          : 8;	/* Pattern Data Byte */
	} B;
	int I;
	unsigned int U;

} DMA_PRR1_type;
#define DMA_PRR1	(*( DMA_PRR1_type *) 0xf001120cu)	/* DMA Pattern Read Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int RDCRC          : 32;	/* Read Data CRC */
	} B;
	int I;
	unsigned int U;

} DMA_RDCRCR000_type;
#define DMA_RDCRCR000	(*( DMA_RDCRCR000_type *) 0xf0012000u)	/* DMARAM Channel 0 Read Data CRC Register */
#define DMA_RDCRCR001	(*( DMA_RDCRCR000_type *) 0xf0012020u)	/* DMARAM Channel 1 Read Data CRC Register */
#define DMA_RDCRCR002	(*( DMA_RDCRCR000_type *) 0xf0012040u)	/* DMARAM Channel 2 Read Data CRC Register */
#define DMA_RDCRCR003	(*( DMA_RDCRCR000_type *) 0xf0012060u)	/* DMARAM Channel 3 Read Data CRC Register */
#define DMA_RDCRCR004	(*( DMA_RDCRCR000_type *) 0xf0012080u)	/* DMARAM Channel 4 Read Data CRC Register */
#define DMA_RDCRCR005	(*( DMA_RDCRCR000_type *) 0xf00120a0u)	/* DMARAM Channel 5 Read Data CRC Register */
#define DMA_RDCRCR006	(*( DMA_RDCRCR000_type *) 0xf00120c0u)	/* DMARAM Channel 6 Read Data CRC Register */
#define DMA_RDCRCR007	(*( DMA_RDCRCR000_type *) 0xf00120e0u)	/* DMARAM Channel 7 Read Data CRC Register */
#define DMA_RDCRCR008	(*( DMA_RDCRCR000_type *) 0xf0012100u)	/* DMARAM Channel 8 Read Data CRC Register */
#define DMA_RDCRCR009	(*( DMA_RDCRCR000_type *) 0xf0012120u)	/* DMARAM Channel 9 Read Data CRC Register */
#define DMA_RDCRCR010	(*( DMA_RDCRCR000_type *) 0xf0012140u)	/* DMARAM Channel 10 Read Data CRC Register */
#define DMA_RDCRCR011	(*( DMA_RDCRCR000_type *) 0xf0012160u)	/* DMARAM Channel 11 Read Data CRC Register */
#define DMA_RDCRCR012	(*( DMA_RDCRCR000_type *) 0xf0012180u)	/* DMARAM Channel 12 Read Data CRC Register */
#define DMA_RDCRCR013	(*( DMA_RDCRCR000_type *) 0xf00121a0u)	/* DMARAM Channel 13 Read Data CRC Register */
#define DMA_RDCRCR014	(*( DMA_RDCRCR000_type *) 0xf00121c0u)	/* DMARAM Channel 14 Read Data CRC Register */
#define DMA_RDCRCR015	(*( DMA_RDCRCR000_type *) 0xf00121e0u)	/* DMARAM Channel 15 Read Data CRC Register */
#define DMA_RDCRCR016	(*( DMA_RDCRCR000_type *) 0xf0012200u)	/* DMARAM Channel 16 Read Data CRC Register */
#define DMA_RDCRCR017	(*( DMA_RDCRCR000_type *) 0xf0012220u)	/* DMARAM Channel 17 Read Data CRC Register */
#define DMA_RDCRCR018	(*( DMA_RDCRCR000_type *) 0xf0012240u)	/* DMARAM Channel 18 Read Data CRC Register */
#define DMA_RDCRCR019	(*( DMA_RDCRCR000_type *) 0xf0012260u)	/* DMARAM Channel 19 Read Data CRC Register */
#define DMA_RDCRCR020	(*( DMA_RDCRCR000_type *) 0xf0012280u)	/* DMARAM Channel 20 Read Data CRC Register */
#define DMA_RDCRCR021	(*( DMA_RDCRCR000_type *) 0xf00122a0u)	/* DMARAM Channel 21 Read Data CRC Register */
#define DMA_RDCRCR022	(*( DMA_RDCRCR000_type *) 0xf00122c0u)	/* DMARAM Channel 22 Read Data CRC Register */
#define DMA_RDCRCR023	(*( DMA_RDCRCR000_type *) 0xf00122e0u)	/* DMARAM Channel 23 Read Data CRC Register */
#define DMA_RDCRCR024	(*( DMA_RDCRCR000_type *) 0xf0012300u)	/* DMARAM Channel 24 Read Data CRC Register */
#define DMA_RDCRCR025	(*( DMA_RDCRCR000_type *) 0xf0012320u)	/* DMARAM Channel 25 Read Data CRC Register */
#define DMA_RDCRCR026	(*( DMA_RDCRCR000_type *) 0xf0012340u)	/* DMARAM Channel 26 Read Data CRC Register */
#define DMA_RDCRCR027	(*( DMA_RDCRCR000_type *) 0xf0012360u)	/* DMARAM Channel 27 Read Data CRC Register */
#define DMA_RDCRCR028	(*( DMA_RDCRCR000_type *) 0xf0012380u)	/* DMARAM Channel 28 Read Data CRC Register */
#define DMA_RDCRCR029	(*( DMA_RDCRCR000_type *) 0xf00123a0u)	/* DMARAM Channel 29 Read Data CRC Register */
#define DMA_RDCRCR030	(*( DMA_RDCRCR000_type *) 0xf00123c0u)	/* DMARAM Channel 30 Read Data CRC Register */
#define DMA_RDCRCR031	(*( DMA_RDCRCR000_type *) 0xf00123e0u)	/* DMARAM Channel 31 Read Data CRC Register */
#define DMA_RDCRCR032	(*( DMA_RDCRCR000_type *) 0xf0012400u)	/* DMARAM Channel 32 Read Data CRC Register */
#define DMA_RDCRCR033	(*( DMA_RDCRCR000_type *) 0xf0012420u)	/* DMARAM Channel 33 Read Data CRC Register */
#define DMA_RDCRCR034	(*( DMA_RDCRCR000_type *) 0xf0012440u)	/* DMARAM Channel 34 Read Data CRC Register */
#define DMA_RDCRCR035	(*( DMA_RDCRCR000_type *) 0xf0012460u)	/* DMARAM Channel 35 Read Data CRC Register */
#define DMA_RDCRCR036	(*( DMA_RDCRCR000_type *) 0xf0012480u)	/* DMARAM Channel 36 Read Data CRC Register */
#define DMA_RDCRCR037	(*( DMA_RDCRCR000_type *) 0xf00124a0u)	/* DMARAM Channel 37 Read Data CRC Register */
#define DMA_RDCRCR038	(*( DMA_RDCRCR000_type *) 0xf00124c0u)	/* DMARAM Channel 38 Read Data CRC Register */
#define DMA_RDCRCR039	(*( DMA_RDCRCR000_type *) 0xf00124e0u)	/* DMARAM Channel 39 Read Data CRC Register */
#define DMA_RDCRCR040	(*( DMA_RDCRCR000_type *) 0xf0012500u)	/* DMARAM Channel 40 Read Data CRC Register */
#define DMA_RDCRCR041	(*( DMA_RDCRCR000_type *) 0xf0012520u)	/* DMARAM Channel 41 Read Data CRC Register */
#define DMA_RDCRCR042	(*( DMA_RDCRCR000_type *) 0xf0012540u)	/* DMARAM Channel 42 Read Data CRC Register */
#define DMA_RDCRCR043	(*( DMA_RDCRCR000_type *) 0xf0012560u)	/* DMARAM Channel 43 Read Data CRC Register */
#define DMA_RDCRCR044	(*( DMA_RDCRCR000_type *) 0xf0012580u)	/* DMARAM Channel 44 Read Data CRC Register */
#define DMA_RDCRCR045	(*( DMA_RDCRCR000_type *) 0xf00125a0u)	/* DMARAM Channel 45 Read Data CRC Register */
#define DMA_RDCRCR046	(*( DMA_RDCRCR000_type *) 0xf00125c0u)	/* DMARAM Channel 46 Read Data CRC Register */
#define DMA_RDCRCR047	(*( DMA_RDCRCR000_type *) 0xf00125e0u)	/* DMARAM Channel 47 Read Data CRC Register */
#define DMA_RDCRCR048	(*( DMA_RDCRCR000_type *) 0xf0012600u)	/* DMARAM Channel 48 Read Data CRC Register */
#define DMA_RDCRCR049	(*( DMA_RDCRCR000_type *) 0xf0012620u)	/* DMARAM Channel 49 Read Data CRC Register */
#define DMA_RDCRCR050	(*( DMA_RDCRCR000_type *) 0xf0012640u)	/* DMARAM Channel 50 Read Data CRC Register */
#define DMA_RDCRCR051	(*( DMA_RDCRCR000_type *) 0xf0012660u)	/* DMARAM Channel 51 Read Data CRC Register */
#define DMA_RDCRCR052	(*( DMA_RDCRCR000_type *) 0xf0012680u)	/* DMARAM Channel 52 Read Data CRC Register */
#define DMA_RDCRCR053	(*( DMA_RDCRCR000_type *) 0xf00126a0u)	/* DMARAM Channel 53 Read Data CRC Register */
#define DMA_RDCRCR054	(*( DMA_RDCRCR000_type *) 0xf00126c0u)	/* DMARAM Channel 54 Read Data CRC Register */
#define DMA_RDCRCR055	(*( DMA_RDCRCR000_type *) 0xf00126e0u)	/* DMARAM Channel 55 Read Data CRC Register */
#define DMA_RDCRCR056	(*( DMA_RDCRCR000_type *) 0xf0012700u)	/* DMARAM Channel 56 Read Data CRC Register */
#define DMA_RDCRCR057	(*( DMA_RDCRCR000_type *) 0xf0012720u)	/* DMARAM Channel 57 Read Data CRC Register */
#define DMA_RDCRCR058	(*( DMA_RDCRCR000_type *) 0xf0012740u)	/* DMARAM Channel 58 Read Data CRC Register */
#define DMA_RDCRCR059	(*( DMA_RDCRCR000_type *) 0xf0012760u)	/* DMARAM Channel 59 Read Data CRC Register */
#define DMA_RDCRCR060	(*( DMA_RDCRCR000_type *) 0xf0012780u)	/* DMARAM Channel 60 Read Data CRC Register */
#define DMA_RDCRCR061	(*( DMA_RDCRCR000_type *) 0xf00127a0u)	/* DMARAM Channel 61 Read Data CRC Register */
#define DMA_RDCRCR062	(*( DMA_RDCRCR000_type *) 0xf00127c0u)	/* DMARAM Channel 62 Read Data CRC Register */
#define DMA_RDCRCR063	(*( DMA_RDCRCR000_type *) 0xf00127e0u)	/* DMARAM Channel 63 Read Data CRC Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SADR           : 32;	/* Source Address */
	} B;
	int I;
	unsigned int U;

} DMA_SADR000_type;
#define DMA_SADR000	(*( DMA_SADR000_type *) 0xf0012008u)	/* DMARAM Channel 0 Source Address Register */
#define DMA_SADR001	(*( DMA_SADR000_type *) 0xf0012028u)	/* DMARAM Channel 1 Source Address Register */
#define DMA_SADR002	(*( DMA_SADR000_type *) 0xf0012048u)	/* DMARAM Channel 2 Source Address Register */
#define DMA_SADR003	(*( DMA_SADR000_type *) 0xf0012068u)	/* DMARAM Channel 3 Source Address Register */
#define DMA_SADR004	(*( DMA_SADR000_type *) 0xf0012088u)	/* DMARAM Channel 4 Source Address Register */
#define DMA_SADR005	(*( DMA_SADR000_type *) 0xf00120a8u)	/* DMARAM Channel 5 Source Address Register */
#define DMA_SADR006	(*( DMA_SADR000_type *) 0xf00120c8u)	/* DMARAM Channel 6 Source Address Register */
#define DMA_SADR007	(*( DMA_SADR000_type *) 0xf00120e8u)	/* DMARAM Channel 7 Source Address Register */
#define DMA_SADR008	(*( DMA_SADR000_type *) 0xf0012108u)	/* DMARAM Channel 8 Source Address Register */
#define DMA_SADR009	(*( DMA_SADR000_type *) 0xf0012128u)	/* DMARAM Channel 9 Source Address Register */
#define DMA_SADR010	(*( DMA_SADR000_type *) 0xf0012148u)	/* DMARAM Channel 10 Source Address Register */
#define DMA_SADR011	(*( DMA_SADR000_type *) 0xf0012168u)	/* DMARAM Channel 11 Source Address Register */
#define DMA_SADR012	(*( DMA_SADR000_type *) 0xf0012188u)	/* DMARAM Channel 12 Source Address Register */
#define DMA_SADR013	(*( DMA_SADR000_type *) 0xf00121a8u)	/* DMARAM Channel 13 Source Address Register */
#define DMA_SADR014	(*( DMA_SADR000_type *) 0xf00121c8u)	/* DMARAM Channel 14 Source Address Register */
#define DMA_SADR015	(*( DMA_SADR000_type *) 0xf00121e8u)	/* DMARAM Channel 15 Source Address Register */
#define DMA_SADR016	(*( DMA_SADR000_type *) 0xf0012208u)	/* DMARAM Channel 16 Source Address Register */
#define DMA_SADR017	(*( DMA_SADR000_type *) 0xf0012228u)	/* DMARAM Channel 17 Source Address Register */
#define DMA_SADR018	(*( DMA_SADR000_type *) 0xf0012248u)	/* DMARAM Channel 18 Source Address Register */
#define DMA_SADR019	(*( DMA_SADR000_type *) 0xf0012268u)	/* DMARAM Channel 19 Source Address Register */
#define DMA_SADR020	(*( DMA_SADR000_type *) 0xf0012288u)	/* DMARAM Channel 20 Source Address Register */
#define DMA_SADR021	(*( DMA_SADR000_type *) 0xf00122a8u)	/* DMARAM Channel 21 Source Address Register */
#define DMA_SADR022	(*( DMA_SADR000_type *) 0xf00122c8u)	/* DMARAM Channel 22 Source Address Register */
#define DMA_SADR023	(*( DMA_SADR000_type *) 0xf00122e8u)	/* DMARAM Channel 23 Source Address Register */
#define DMA_SADR024	(*( DMA_SADR000_type *) 0xf0012308u)	/* DMARAM Channel 24 Source Address Register */
#define DMA_SADR025	(*( DMA_SADR000_type *) 0xf0012328u)	/* DMARAM Channel 25 Source Address Register */
#define DMA_SADR026	(*( DMA_SADR000_type *) 0xf0012348u)	/* DMARAM Channel 26 Source Address Register */
#define DMA_SADR027	(*( DMA_SADR000_type *) 0xf0012368u)	/* DMARAM Channel 27 Source Address Register */
#define DMA_SADR028	(*( DMA_SADR000_type *) 0xf0012388u)	/* DMARAM Channel 28 Source Address Register */
#define DMA_SADR029	(*( DMA_SADR000_type *) 0xf00123a8u)	/* DMARAM Channel 29 Source Address Register */
#define DMA_SADR030	(*( DMA_SADR000_type *) 0xf00123c8u)	/* DMARAM Channel 30 Source Address Register */
#define DMA_SADR031	(*( DMA_SADR000_type *) 0xf00123e8u)	/* DMARAM Channel 31 Source Address Register */
#define DMA_SADR032	(*( DMA_SADR000_type *) 0xf0012408u)	/* DMARAM Channel 32 Source Address Register */
#define DMA_SADR033	(*( DMA_SADR000_type *) 0xf0012428u)	/* DMARAM Channel 33 Source Address Register */
#define DMA_SADR034	(*( DMA_SADR000_type *) 0xf0012448u)	/* DMARAM Channel 34 Source Address Register */
#define DMA_SADR035	(*( DMA_SADR000_type *) 0xf0012468u)	/* DMARAM Channel 35 Source Address Register */
#define DMA_SADR036	(*( DMA_SADR000_type *) 0xf0012488u)	/* DMARAM Channel 36 Source Address Register */
#define DMA_SADR037	(*( DMA_SADR000_type *) 0xf00124a8u)	/* DMARAM Channel 37 Source Address Register */
#define DMA_SADR038	(*( DMA_SADR000_type *) 0xf00124c8u)	/* DMARAM Channel 38 Source Address Register */
#define DMA_SADR039	(*( DMA_SADR000_type *) 0xf00124e8u)	/* DMARAM Channel 39 Source Address Register */
#define DMA_SADR040	(*( DMA_SADR000_type *) 0xf0012508u)	/* DMARAM Channel 40 Source Address Register */
#define DMA_SADR041	(*( DMA_SADR000_type *) 0xf0012528u)	/* DMARAM Channel 41 Source Address Register */
#define DMA_SADR042	(*( DMA_SADR000_type *) 0xf0012548u)	/* DMARAM Channel 42 Source Address Register */
#define DMA_SADR043	(*( DMA_SADR000_type *) 0xf0012568u)	/* DMARAM Channel 43 Source Address Register */
#define DMA_SADR044	(*( DMA_SADR000_type *) 0xf0012588u)	/* DMARAM Channel 44 Source Address Register */
#define DMA_SADR045	(*( DMA_SADR000_type *) 0xf00125a8u)	/* DMARAM Channel 45 Source Address Register */
#define DMA_SADR046	(*( DMA_SADR000_type *) 0xf00125c8u)	/* DMARAM Channel 46 Source Address Register */
#define DMA_SADR047	(*( DMA_SADR000_type *) 0xf00125e8u)	/* DMARAM Channel 47 Source Address Register */
#define DMA_SADR048	(*( DMA_SADR000_type *) 0xf0012608u)	/* DMARAM Channel 48 Source Address Register */
#define DMA_SADR049	(*( DMA_SADR000_type *) 0xf0012628u)	/* DMARAM Channel 49 Source Address Register */
#define DMA_SADR050	(*( DMA_SADR000_type *) 0xf0012648u)	/* DMARAM Channel 50 Source Address Register */
#define DMA_SADR051	(*( DMA_SADR000_type *) 0xf0012668u)	/* DMARAM Channel 51 Source Address Register */
#define DMA_SADR052	(*( DMA_SADR000_type *) 0xf0012688u)	/* DMARAM Channel 52 Source Address Register */
#define DMA_SADR053	(*( DMA_SADR000_type *) 0xf00126a8u)	/* DMARAM Channel 53 Source Address Register */
#define DMA_SADR054	(*( DMA_SADR000_type *) 0xf00126c8u)	/* DMARAM Channel 54 Source Address Register */
#define DMA_SADR055	(*( DMA_SADR000_type *) 0xf00126e8u)	/* DMARAM Channel 55 Source Address Register */
#define DMA_SADR056	(*( DMA_SADR000_type *) 0xf0012708u)	/* DMARAM Channel 56 Source Address Register */
#define DMA_SADR057	(*( DMA_SADR000_type *) 0xf0012728u)	/* DMARAM Channel 57 Source Address Register */
#define DMA_SADR058	(*( DMA_SADR000_type *) 0xf0012748u)	/* DMARAM Channel 58 Source Address Register */
#define DMA_SADR059	(*( DMA_SADR000_type *) 0xf0012768u)	/* DMARAM Channel 59 Source Address Register */
#define DMA_SADR060	(*( DMA_SADR000_type *) 0xf0012788u)	/* DMARAM Channel 60 Source Address Register */
#define DMA_SADR061	(*( DMA_SADR000_type *) 0xf00127a8u)	/* DMARAM Channel 61 Source Address Register */
#define DMA_SADR062	(*( DMA_SADR000_type *) 0xf00127c8u)	/* DMARAM Channel 62 Source Address Register */
#define DMA_SADR063	(*( DMA_SADR000_type *) 0xf00127e8u)	/* DMARAM Channel 63 Source Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SDCRC          : 32;	/* Source and Destination Address CRC */
	} B;
	int I;
	unsigned int U;

} DMA_SDCRCR000_type;
#define DMA_SDCRCR000	(*( DMA_SDCRCR000_type *) 0xf0012004u)	/* DMARAM Channel 0 Source and Destination Address CRC Register */
#define DMA_SDCRCR001	(*( DMA_SDCRCR000_type *) 0xf0012024u)	/* DMARAM Channel 1 Source and Destination Address CRC Register */
#define DMA_SDCRCR002	(*( DMA_SDCRCR000_type *) 0xf0012044u)	/* DMARAM Channel 2 Source and Destination Address CRC Register */
#define DMA_SDCRCR003	(*( DMA_SDCRCR000_type *) 0xf0012064u)	/* DMARAM Channel 3 Source and Destination Address CRC Register */
#define DMA_SDCRCR004	(*( DMA_SDCRCR000_type *) 0xf0012084u)	/* DMARAM Channel 4 Source and Destination Address CRC Register */
#define DMA_SDCRCR005	(*( DMA_SDCRCR000_type *) 0xf00120a4u)	/* DMARAM Channel 5 Source and Destination Address CRC Register */
#define DMA_SDCRCR006	(*( DMA_SDCRCR000_type *) 0xf00120c4u)	/* DMARAM Channel 6 Source and Destination Address CRC Register */
#define DMA_SDCRCR007	(*( DMA_SDCRCR000_type *) 0xf00120e4u)	/* DMARAM Channel 7 Source and Destination Address CRC Register */
#define DMA_SDCRCR008	(*( DMA_SDCRCR000_type *) 0xf0012104u)	/* DMARAM Channel 8 Source and Destination Address CRC Register */
#define DMA_SDCRCR009	(*( DMA_SDCRCR000_type *) 0xf0012124u)	/* DMARAM Channel 9 Source and Destination Address CRC Register */
#define DMA_SDCRCR010	(*( DMA_SDCRCR000_type *) 0xf0012144u)	/* DMARAM Channel 10 Source and Destination Address CRC Register */
#define DMA_SDCRCR011	(*( DMA_SDCRCR000_type *) 0xf0012164u)	/* DMARAM Channel 11 Source and Destination Address CRC Register */
#define DMA_SDCRCR012	(*( DMA_SDCRCR000_type *) 0xf0012184u)	/* DMARAM Channel 12 Source and Destination Address CRC Register */
#define DMA_SDCRCR013	(*( DMA_SDCRCR000_type *) 0xf00121a4u)	/* DMARAM Channel 13 Source and Destination Address CRC Register */
#define DMA_SDCRCR014	(*( DMA_SDCRCR000_type *) 0xf00121c4u)	/* DMARAM Channel 14 Source and Destination Address CRC Register */
#define DMA_SDCRCR015	(*( DMA_SDCRCR000_type *) 0xf00121e4u)	/* DMARAM Channel 15 Source and Destination Address CRC Register */
#define DMA_SDCRCR016	(*( DMA_SDCRCR000_type *) 0xf0012204u)	/* DMARAM Channel 16 Source and Destination Address CRC Register */
#define DMA_SDCRCR017	(*( DMA_SDCRCR000_type *) 0xf0012224u)	/* DMARAM Channel 17 Source and Destination Address CRC Register */
#define DMA_SDCRCR018	(*( DMA_SDCRCR000_type *) 0xf0012244u)	/* DMARAM Channel 18 Source and Destination Address CRC Register */
#define DMA_SDCRCR019	(*( DMA_SDCRCR000_type *) 0xf0012264u)	/* DMARAM Channel 19 Source and Destination Address CRC Register */
#define DMA_SDCRCR020	(*( DMA_SDCRCR000_type *) 0xf0012284u)	/* DMARAM Channel 20 Source and Destination Address CRC Register */
#define DMA_SDCRCR021	(*( DMA_SDCRCR000_type *) 0xf00122a4u)	/* DMARAM Channel 21 Source and Destination Address CRC Register */
#define DMA_SDCRCR022	(*( DMA_SDCRCR000_type *) 0xf00122c4u)	/* DMARAM Channel 22 Source and Destination Address CRC Register */
#define DMA_SDCRCR023	(*( DMA_SDCRCR000_type *) 0xf00122e4u)	/* DMARAM Channel 23 Source and Destination Address CRC Register */
#define DMA_SDCRCR024	(*( DMA_SDCRCR000_type *) 0xf0012304u)	/* DMARAM Channel 24 Source and Destination Address CRC Register */
#define DMA_SDCRCR025	(*( DMA_SDCRCR000_type *) 0xf0012324u)	/* DMARAM Channel 25 Source and Destination Address CRC Register */
#define DMA_SDCRCR026	(*( DMA_SDCRCR000_type *) 0xf0012344u)	/* DMARAM Channel 26 Source and Destination Address CRC Register */
#define DMA_SDCRCR027	(*( DMA_SDCRCR000_type *) 0xf0012364u)	/* DMARAM Channel 27 Source and Destination Address CRC Register */
#define DMA_SDCRCR028	(*( DMA_SDCRCR000_type *) 0xf0012384u)	/* DMARAM Channel 28 Source and Destination Address CRC Register */
#define DMA_SDCRCR029	(*( DMA_SDCRCR000_type *) 0xf00123a4u)	/* DMARAM Channel 29 Source and Destination Address CRC Register */
#define DMA_SDCRCR030	(*( DMA_SDCRCR000_type *) 0xf00123c4u)	/* DMARAM Channel 30 Source and Destination Address CRC Register */
#define DMA_SDCRCR031	(*( DMA_SDCRCR000_type *) 0xf00123e4u)	/* DMARAM Channel 31 Source and Destination Address CRC Register */
#define DMA_SDCRCR032	(*( DMA_SDCRCR000_type *) 0xf0012404u)	/* DMARAM Channel 32 Source and Destination Address CRC Register */
#define DMA_SDCRCR033	(*( DMA_SDCRCR000_type *) 0xf0012424u)	/* DMARAM Channel 33 Source and Destination Address CRC Register */
#define DMA_SDCRCR034	(*( DMA_SDCRCR000_type *) 0xf0012444u)	/* DMARAM Channel 34 Source and Destination Address CRC Register */
#define DMA_SDCRCR035	(*( DMA_SDCRCR000_type *) 0xf0012464u)	/* DMARAM Channel 35 Source and Destination Address CRC Register */
#define DMA_SDCRCR036	(*( DMA_SDCRCR000_type *) 0xf0012484u)	/* DMARAM Channel 36 Source and Destination Address CRC Register */
#define DMA_SDCRCR037	(*( DMA_SDCRCR000_type *) 0xf00124a4u)	/* DMARAM Channel 37 Source and Destination Address CRC Register */
#define DMA_SDCRCR038	(*( DMA_SDCRCR000_type *) 0xf00124c4u)	/* DMARAM Channel 38 Source and Destination Address CRC Register */
#define DMA_SDCRCR039	(*( DMA_SDCRCR000_type *) 0xf00124e4u)	/* DMARAM Channel 39 Source and Destination Address CRC Register */
#define DMA_SDCRCR040	(*( DMA_SDCRCR000_type *) 0xf0012504u)	/* DMARAM Channel 40 Source and Destination Address CRC Register */
#define DMA_SDCRCR041	(*( DMA_SDCRCR000_type *) 0xf0012524u)	/* DMARAM Channel 41 Source and Destination Address CRC Register */
#define DMA_SDCRCR042	(*( DMA_SDCRCR000_type *) 0xf0012544u)	/* DMARAM Channel 42 Source and Destination Address CRC Register */
#define DMA_SDCRCR043	(*( DMA_SDCRCR000_type *) 0xf0012564u)	/* DMARAM Channel 43 Source and Destination Address CRC Register */
#define DMA_SDCRCR044	(*( DMA_SDCRCR000_type *) 0xf0012584u)	/* DMARAM Channel 44 Source and Destination Address CRC Register */
#define DMA_SDCRCR045	(*( DMA_SDCRCR000_type *) 0xf00125a4u)	/* DMARAM Channel 45 Source and Destination Address CRC Register */
#define DMA_SDCRCR046	(*( DMA_SDCRCR000_type *) 0xf00125c4u)	/* DMARAM Channel 46 Source and Destination Address CRC Register */
#define DMA_SDCRCR047	(*( DMA_SDCRCR000_type *) 0xf00125e4u)	/* DMARAM Channel 47 Source and Destination Address CRC Register */
#define DMA_SDCRCR048	(*( DMA_SDCRCR000_type *) 0xf0012604u)	/* DMARAM Channel 48 Source and Destination Address CRC Register */
#define DMA_SDCRCR049	(*( DMA_SDCRCR000_type *) 0xf0012624u)	/* DMARAM Channel 49 Source and Destination Address CRC Register */
#define DMA_SDCRCR050	(*( DMA_SDCRCR000_type *) 0xf0012644u)	/* DMARAM Channel 50 Source and Destination Address CRC Register */
#define DMA_SDCRCR051	(*( DMA_SDCRCR000_type *) 0xf0012664u)	/* DMARAM Channel 51 Source and Destination Address CRC Register */
#define DMA_SDCRCR052	(*( DMA_SDCRCR000_type *) 0xf0012684u)	/* DMARAM Channel 52 Source and Destination Address CRC Register */
#define DMA_SDCRCR053	(*( DMA_SDCRCR000_type *) 0xf00126a4u)	/* DMARAM Channel 53 Source and Destination Address CRC Register */
#define DMA_SDCRCR054	(*( DMA_SDCRCR000_type *) 0xf00126c4u)	/* DMARAM Channel 54 Source and Destination Address CRC Register */
#define DMA_SDCRCR055	(*( DMA_SDCRCR000_type *) 0xf00126e4u)	/* DMARAM Channel 55 Source and Destination Address CRC Register */
#define DMA_SDCRCR056	(*( DMA_SDCRCR000_type *) 0xf0012704u)	/* DMARAM Channel 56 Source and Destination Address CRC Register */
#define DMA_SDCRCR057	(*( DMA_SDCRCR000_type *) 0xf0012724u)	/* DMARAM Channel 57 Source and Destination Address CRC Register */
#define DMA_SDCRCR058	(*( DMA_SDCRCR000_type *) 0xf0012744u)	/* DMARAM Channel 58 Source and Destination Address CRC Register */
#define DMA_SDCRCR059	(*( DMA_SDCRCR000_type *) 0xf0012764u)	/* DMARAM Channel 59 Source and Destination Address CRC Register */
#define DMA_SDCRCR060	(*( DMA_SDCRCR000_type *) 0xf0012784u)	/* DMARAM Channel 60 Source and Destination Address CRC Register */
#define DMA_SDCRCR061	(*( DMA_SDCRCR000_type *) 0xf00127a4u)	/* DMARAM Channel 61 Source and Destination Address CRC Register */
#define DMA_SDCRCR062	(*( DMA_SDCRCR000_type *) 0xf00127c4u)	/* DMARAM Channel 62 Source and Destination Address CRC Register */
#define DMA_SDCRCR063	(*( DMA_SDCRCR000_type *) 0xf00127e4u)	/* DMARAM Channel 63 Source and Destination Address CRC Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SHADR          : 32;	/* Shadowed Address */
	} B;
	int I;
	unsigned int U;

} DMA_SHADR000_type;
#define DMA_SHADR000	(*( DMA_SHADR000_type *) 0xf0012018u)	/* DMARAM Channel 0 Shadow Address Register */
#define DMA_SHADR001	(*( DMA_SHADR000_type *) 0xf0012038u)	/* DMARAM Channel 1 Shadow Address Register */
#define DMA_SHADR002	(*( DMA_SHADR000_type *) 0xf0012058u)	/* DMARAM Channel 2 Shadow Address Register */
#define DMA_SHADR003	(*( DMA_SHADR000_type *) 0xf0012078u)	/* DMARAM Channel 3 Shadow Address Register */
#define DMA_SHADR004	(*( DMA_SHADR000_type *) 0xf0012098u)	/* DMARAM Channel 4 Shadow Address Register */
#define DMA_SHADR005	(*( DMA_SHADR000_type *) 0xf00120b8u)	/* DMARAM Channel 5 Shadow Address Register */
#define DMA_SHADR006	(*( DMA_SHADR000_type *) 0xf00120d8u)	/* DMARAM Channel 6 Shadow Address Register */
#define DMA_SHADR007	(*( DMA_SHADR000_type *) 0xf00120f8u)	/* DMARAM Channel 7 Shadow Address Register */
#define DMA_SHADR008	(*( DMA_SHADR000_type *) 0xf0012118u)	/* DMARAM Channel 8 Shadow Address Register */
#define DMA_SHADR009	(*( DMA_SHADR000_type *) 0xf0012138u)	/* DMARAM Channel 9 Shadow Address Register */
#define DMA_SHADR010	(*( DMA_SHADR000_type *) 0xf0012158u)	/* DMARAM Channel 10 Shadow Address Register */
#define DMA_SHADR011	(*( DMA_SHADR000_type *) 0xf0012178u)	/* DMARAM Channel 11 Shadow Address Register */
#define DMA_SHADR012	(*( DMA_SHADR000_type *) 0xf0012198u)	/* DMARAM Channel 12 Shadow Address Register */
#define DMA_SHADR013	(*( DMA_SHADR000_type *) 0xf00121b8u)	/* DMARAM Channel 13 Shadow Address Register */
#define DMA_SHADR014	(*( DMA_SHADR000_type *) 0xf00121d8u)	/* DMARAM Channel 14 Shadow Address Register */
#define DMA_SHADR015	(*( DMA_SHADR000_type *) 0xf00121f8u)	/* DMARAM Channel 15 Shadow Address Register */
#define DMA_SHADR016	(*( DMA_SHADR000_type *) 0xf0012218u)	/* DMARAM Channel 16 Shadow Address Register */
#define DMA_SHADR017	(*( DMA_SHADR000_type *) 0xf0012238u)	/* DMARAM Channel 17 Shadow Address Register */
#define DMA_SHADR018	(*( DMA_SHADR000_type *) 0xf0012258u)	/* DMARAM Channel 18 Shadow Address Register */
#define DMA_SHADR019	(*( DMA_SHADR000_type *) 0xf0012278u)	/* DMARAM Channel 19 Shadow Address Register */
#define DMA_SHADR020	(*( DMA_SHADR000_type *) 0xf0012298u)	/* DMARAM Channel 20 Shadow Address Register */
#define DMA_SHADR021	(*( DMA_SHADR000_type *) 0xf00122b8u)	/* DMARAM Channel 21 Shadow Address Register */
#define DMA_SHADR022	(*( DMA_SHADR000_type *) 0xf00122d8u)	/* DMARAM Channel 22 Shadow Address Register */
#define DMA_SHADR023	(*( DMA_SHADR000_type *) 0xf00122f8u)	/* DMARAM Channel 23 Shadow Address Register */
#define DMA_SHADR024	(*( DMA_SHADR000_type *) 0xf0012318u)	/* DMARAM Channel 24 Shadow Address Register */
#define DMA_SHADR025	(*( DMA_SHADR000_type *) 0xf0012338u)	/* DMARAM Channel 25 Shadow Address Register */
#define DMA_SHADR026	(*( DMA_SHADR000_type *) 0xf0012358u)	/* DMARAM Channel 26 Shadow Address Register */
#define DMA_SHADR027	(*( DMA_SHADR000_type *) 0xf0012378u)	/* DMARAM Channel 27 Shadow Address Register */
#define DMA_SHADR028	(*( DMA_SHADR000_type *) 0xf0012398u)	/* DMARAM Channel 28 Shadow Address Register */
#define DMA_SHADR029	(*( DMA_SHADR000_type *) 0xf00123b8u)	/* DMARAM Channel 29 Shadow Address Register */
#define DMA_SHADR030	(*( DMA_SHADR000_type *) 0xf00123d8u)	/* DMARAM Channel 30 Shadow Address Register */
#define DMA_SHADR031	(*( DMA_SHADR000_type *) 0xf00123f8u)	/* DMARAM Channel 31 Shadow Address Register */
#define DMA_SHADR032	(*( DMA_SHADR000_type *) 0xf0012418u)	/* DMARAM Channel 32 Shadow Address Register */
#define DMA_SHADR033	(*( DMA_SHADR000_type *) 0xf0012438u)	/* DMARAM Channel 33 Shadow Address Register */
#define DMA_SHADR034	(*( DMA_SHADR000_type *) 0xf0012458u)	/* DMARAM Channel 34 Shadow Address Register */
#define DMA_SHADR035	(*( DMA_SHADR000_type *) 0xf0012478u)	/* DMARAM Channel 35 Shadow Address Register */
#define DMA_SHADR036	(*( DMA_SHADR000_type *) 0xf0012498u)	/* DMARAM Channel 36 Shadow Address Register */
#define DMA_SHADR037	(*( DMA_SHADR000_type *) 0xf00124b8u)	/* DMARAM Channel 37 Shadow Address Register */
#define DMA_SHADR038	(*( DMA_SHADR000_type *) 0xf00124d8u)	/* DMARAM Channel 38 Shadow Address Register */
#define DMA_SHADR039	(*( DMA_SHADR000_type *) 0xf00124f8u)	/* DMARAM Channel 39 Shadow Address Register */
#define DMA_SHADR040	(*( DMA_SHADR000_type *) 0xf0012518u)	/* DMARAM Channel 40 Shadow Address Register */
#define DMA_SHADR041	(*( DMA_SHADR000_type *) 0xf0012538u)	/* DMARAM Channel 41 Shadow Address Register */
#define DMA_SHADR042	(*( DMA_SHADR000_type *) 0xf0012558u)	/* DMARAM Channel 42 Shadow Address Register */
#define DMA_SHADR043	(*( DMA_SHADR000_type *) 0xf0012578u)	/* DMARAM Channel 43 Shadow Address Register */
#define DMA_SHADR044	(*( DMA_SHADR000_type *) 0xf0012598u)	/* DMARAM Channel 44 Shadow Address Register */
#define DMA_SHADR045	(*( DMA_SHADR000_type *) 0xf00125b8u)	/* DMARAM Channel 45 Shadow Address Register */
#define DMA_SHADR046	(*( DMA_SHADR000_type *) 0xf00125d8u)	/* DMARAM Channel 46 Shadow Address Register */
#define DMA_SHADR047	(*( DMA_SHADR000_type *) 0xf00125f8u)	/* DMARAM Channel 47 Shadow Address Register */
#define DMA_SHADR048	(*( DMA_SHADR000_type *) 0xf0012618u)	/* DMARAM Channel 48 Shadow Address Register */
#define DMA_SHADR049	(*( DMA_SHADR000_type *) 0xf0012638u)	/* DMARAM Channel 49 Shadow Address Register */
#define DMA_SHADR050	(*( DMA_SHADR000_type *) 0xf0012658u)	/* DMARAM Channel 50 Shadow Address Register */
#define DMA_SHADR051	(*( DMA_SHADR000_type *) 0xf0012678u)	/* DMARAM Channel 51 Shadow Address Register */
#define DMA_SHADR052	(*( DMA_SHADR000_type *) 0xf0012698u)	/* DMARAM Channel 52 Shadow Address Register */
#define DMA_SHADR053	(*( DMA_SHADR000_type *) 0xf00126b8u)	/* DMARAM Channel 53 Shadow Address Register */
#define DMA_SHADR054	(*( DMA_SHADR000_type *) 0xf00126d8u)	/* DMARAM Channel 54 Shadow Address Register */
#define DMA_SHADR055	(*( DMA_SHADR000_type *) 0xf00126f8u)	/* DMARAM Channel 55 Shadow Address Register */
#define DMA_SHADR056	(*( DMA_SHADR000_type *) 0xf0012718u)	/* DMARAM Channel 56 Shadow Address Register */
#define DMA_SHADR057	(*( DMA_SHADR000_type *) 0xf0012738u)	/* DMARAM Channel 57 Shadow Address Register */
#define DMA_SHADR058	(*( DMA_SHADR000_type *) 0xf0012758u)	/* DMARAM Channel 58 Shadow Address Register */
#define DMA_SHADR059	(*( DMA_SHADR000_type *) 0xf0012778u)	/* DMARAM Channel 59 Shadow Address Register */
#define DMA_SHADR060	(*( DMA_SHADR000_type *) 0xf0012798u)	/* DMARAM Channel 60 Shadow Address Register */
#define DMA_SHADR061	(*( DMA_SHADR000_type *) 0xf00127b8u)	/* DMARAM Channel 61 Shadow Address Register */
#define DMA_SHADR062	(*( DMA_SHADR000_type *) 0xf00127d8u)	/* DMARAM Channel 62 Shadow Address Register */
#define DMA_SHADR063	(*( DMA_SHADR000_type *) 0xf00127f8u)	/* DMARAM Channel 63 Shadow Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SUSAC          : 1;	/* DMA Channel Suspend State or Frozen State Active for DMA Channel */
		/* const */ unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} DMA_SUSACR000_type;
#define DMA_SUSACR000	(*( DMA_SUSACR000_type *) 0xf0011c00u)	/* DMA Channel 0 Suspend Acknowledge Register */
#define DMA_SUSACR001	(*( DMA_SUSACR000_type *) 0xf0011c04u)	/* DMA Channel 1 Suspend Acknowledge Register */
#define DMA_SUSACR002	(*( DMA_SUSACR000_type *) 0xf0011c08u)	/* DMA Channel 2 Suspend Acknowledge Register */
#define DMA_SUSACR003	(*( DMA_SUSACR000_type *) 0xf0011c0cu)	/* DMA Channel 3 Suspend Acknowledge Register */
#define DMA_SUSACR004	(*( DMA_SUSACR000_type *) 0xf0011c10u)	/* DMA Channel 4 Suspend Acknowledge Register */
#define DMA_SUSACR005	(*( DMA_SUSACR000_type *) 0xf0011c14u)	/* DMA Channel 5 Suspend Acknowledge Register */
#define DMA_SUSACR006	(*( DMA_SUSACR000_type *) 0xf0011c18u)	/* DMA Channel 6 Suspend Acknowledge Register */
#define DMA_SUSACR007	(*( DMA_SUSACR000_type *) 0xf0011c1cu)	/* DMA Channel 7 Suspend Acknowledge Register */
#define DMA_SUSACR008	(*( DMA_SUSACR000_type *) 0xf0011c20u)	/* DMA Channel 8 Suspend Acknowledge Register */
#define DMA_SUSACR009	(*( DMA_SUSACR000_type *) 0xf0011c24u)	/* DMA Channel 9 Suspend Acknowledge Register */
#define DMA_SUSACR010	(*( DMA_SUSACR000_type *) 0xf0011c28u)	/* DMA Channel 10 Suspend Acknowledge Register */
#define DMA_SUSACR011	(*( DMA_SUSACR000_type *) 0xf0011c2cu)	/* DMA Channel 11 Suspend Acknowledge Register */
#define DMA_SUSACR012	(*( DMA_SUSACR000_type *) 0xf0011c30u)	/* DMA Channel 12 Suspend Acknowledge Register */
#define DMA_SUSACR013	(*( DMA_SUSACR000_type *) 0xf0011c34u)	/* DMA Channel 13 Suspend Acknowledge Register */
#define DMA_SUSACR014	(*( DMA_SUSACR000_type *) 0xf0011c38u)	/* DMA Channel 14 Suspend Acknowledge Register */
#define DMA_SUSACR015	(*( DMA_SUSACR000_type *) 0xf0011c3cu)	/* DMA Channel 15 Suspend Acknowledge Register */
#define DMA_SUSACR016	(*( DMA_SUSACR000_type *) 0xf0011c40u)	/* DMA Channel 16 Suspend Acknowledge Register */
#define DMA_SUSACR017	(*( DMA_SUSACR000_type *) 0xf0011c44u)	/* DMA Channel 17 Suspend Acknowledge Register */
#define DMA_SUSACR018	(*( DMA_SUSACR000_type *) 0xf0011c48u)	/* DMA Channel 18 Suspend Acknowledge Register */
#define DMA_SUSACR019	(*( DMA_SUSACR000_type *) 0xf0011c4cu)	/* DMA Channel 19 Suspend Acknowledge Register */
#define DMA_SUSACR020	(*( DMA_SUSACR000_type *) 0xf0011c50u)	/* DMA Channel 20 Suspend Acknowledge Register */
#define DMA_SUSACR021	(*( DMA_SUSACR000_type *) 0xf0011c54u)	/* DMA Channel 21 Suspend Acknowledge Register */
#define DMA_SUSACR022	(*( DMA_SUSACR000_type *) 0xf0011c58u)	/* DMA Channel 22 Suspend Acknowledge Register */
#define DMA_SUSACR023	(*( DMA_SUSACR000_type *) 0xf0011c5cu)	/* DMA Channel 23 Suspend Acknowledge Register */
#define DMA_SUSACR024	(*( DMA_SUSACR000_type *) 0xf0011c60u)	/* DMA Channel 24 Suspend Acknowledge Register */
#define DMA_SUSACR025	(*( DMA_SUSACR000_type *) 0xf0011c64u)	/* DMA Channel 25 Suspend Acknowledge Register */
#define DMA_SUSACR026	(*( DMA_SUSACR000_type *) 0xf0011c68u)	/* DMA Channel 26 Suspend Acknowledge Register */
#define DMA_SUSACR027	(*( DMA_SUSACR000_type *) 0xf0011c6cu)	/* DMA Channel 27 Suspend Acknowledge Register */
#define DMA_SUSACR028	(*( DMA_SUSACR000_type *) 0xf0011c70u)	/* DMA Channel 28 Suspend Acknowledge Register */
#define DMA_SUSACR029	(*( DMA_SUSACR000_type *) 0xf0011c74u)	/* DMA Channel 29 Suspend Acknowledge Register */
#define DMA_SUSACR030	(*( DMA_SUSACR000_type *) 0xf0011c78u)	/* DMA Channel 30 Suspend Acknowledge Register */
#define DMA_SUSACR031	(*( DMA_SUSACR000_type *) 0xf0011c7cu)	/* DMA Channel 31 Suspend Acknowledge Register */
#define DMA_SUSACR032	(*( DMA_SUSACR000_type *) 0xf0011c80u)	/* DMA Channel 32 Suspend Acknowledge Register */
#define DMA_SUSACR033	(*( DMA_SUSACR000_type *) 0xf0011c84u)	/* DMA Channel 33 Suspend Acknowledge Register */
#define DMA_SUSACR034	(*( DMA_SUSACR000_type *) 0xf0011c88u)	/* DMA Channel 34 Suspend Acknowledge Register */
#define DMA_SUSACR035	(*( DMA_SUSACR000_type *) 0xf0011c8cu)	/* DMA Channel 35 Suspend Acknowledge Register */
#define DMA_SUSACR036	(*( DMA_SUSACR000_type *) 0xf0011c90u)	/* DMA Channel 36 Suspend Acknowledge Register */
#define DMA_SUSACR037	(*( DMA_SUSACR000_type *) 0xf0011c94u)	/* DMA Channel 37 Suspend Acknowledge Register */
#define DMA_SUSACR038	(*( DMA_SUSACR000_type *) 0xf0011c98u)	/* DMA Channel 38 Suspend Acknowledge Register */
#define DMA_SUSACR039	(*( DMA_SUSACR000_type *) 0xf0011c9cu)	/* DMA Channel 39 Suspend Acknowledge Register */
#define DMA_SUSACR040	(*( DMA_SUSACR000_type *) 0xf0011ca0u)	/* DMA Channel 40 Suspend Acknowledge Register */
#define DMA_SUSACR041	(*( DMA_SUSACR000_type *) 0xf0011ca4u)	/* DMA Channel 41 Suspend Acknowledge Register */
#define DMA_SUSACR042	(*( DMA_SUSACR000_type *) 0xf0011ca8u)	/* DMA Channel 42 Suspend Acknowledge Register */
#define DMA_SUSACR043	(*( DMA_SUSACR000_type *) 0xf0011cacu)	/* DMA Channel 43 Suspend Acknowledge Register */
#define DMA_SUSACR044	(*( DMA_SUSACR000_type *) 0xf0011cb0u)	/* DMA Channel 44 Suspend Acknowledge Register */
#define DMA_SUSACR045	(*( DMA_SUSACR000_type *) 0xf0011cb4u)	/* DMA Channel 45 Suspend Acknowledge Register */
#define DMA_SUSACR046	(*( DMA_SUSACR000_type *) 0xf0011cb8u)	/* DMA Channel 46 Suspend Acknowledge Register */
#define DMA_SUSACR047	(*( DMA_SUSACR000_type *) 0xf0011cbcu)	/* DMA Channel 47 Suspend Acknowledge Register */
#define DMA_SUSACR048	(*( DMA_SUSACR000_type *) 0xf0011cc0u)	/* DMA Channel 48 Suspend Acknowledge Register */
#define DMA_SUSACR049	(*( DMA_SUSACR000_type *) 0xf0011cc4u)	/* DMA Channel 49 Suspend Acknowledge Register */
#define DMA_SUSACR050	(*( DMA_SUSACR000_type *) 0xf0011cc8u)	/* DMA Channel 50 Suspend Acknowledge Register */
#define DMA_SUSACR051	(*( DMA_SUSACR000_type *) 0xf0011cccu)	/* DMA Channel 51 Suspend Acknowledge Register */
#define DMA_SUSACR052	(*( DMA_SUSACR000_type *) 0xf0011cd0u)	/* DMA Channel 52 Suspend Acknowledge Register */
#define DMA_SUSACR053	(*( DMA_SUSACR000_type *) 0xf0011cd4u)	/* DMA Channel 53 Suspend Acknowledge Register */
#define DMA_SUSACR054	(*( DMA_SUSACR000_type *) 0xf0011cd8u)	/* DMA Channel 54 Suspend Acknowledge Register */
#define DMA_SUSACR055	(*( DMA_SUSACR000_type *) 0xf0011cdcu)	/* DMA Channel 55 Suspend Acknowledge Register */
#define DMA_SUSACR056	(*( DMA_SUSACR000_type *) 0xf0011ce0u)	/* DMA Channel 56 Suspend Acknowledge Register */
#define DMA_SUSACR057	(*( DMA_SUSACR000_type *) 0xf0011ce4u)	/* DMA Channel 57 Suspend Acknowledge Register */
#define DMA_SUSACR058	(*( DMA_SUSACR000_type *) 0xf0011ce8u)	/* DMA Channel 58 Suspend Acknowledge Register */
#define DMA_SUSACR059	(*( DMA_SUSACR000_type *) 0xf0011cecu)	/* DMA Channel 59 Suspend Acknowledge Register */
#define DMA_SUSACR060	(*( DMA_SUSACR000_type *) 0xf0011cf0u)	/* DMA Channel 60 Suspend Acknowledge Register */
#define DMA_SUSACR061	(*( DMA_SUSACR000_type *) 0xf0011cf4u)	/* DMA Channel 61 Suspend Acknowledge Register */
#define DMA_SUSACR062	(*( DMA_SUSACR000_type *) 0xf0011cf8u)	/* DMA Channel 62 Suspend Acknowledge Register */
#define DMA_SUSACR063	(*( DMA_SUSACR000_type *) 0xf0011cfcu)	/* DMA Channel 63 Suspend Acknowledge Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SUSEN          : 1;	/* Channel Suspend Enable for DMA Channel */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} DMA_SUSENR000_type;
#define DMA_SUSENR000	(*( DMA_SUSENR000_type *) 0xf0011a00u)	/* DMA Channel 0 Suspend Enable Register */
#define DMA_SUSENR001	(*( DMA_SUSENR000_type *) 0xf0011a04u)	/* DMA Channel 1 Suspend Enable Register */
#define DMA_SUSENR002	(*( DMA_SUSENR000_type *) 0xf0011a08u)	/* DMA Channel 2 Suspend Enable Register */
#define DMA_SUSENR003	(*( DMA_SUSENR000_type *) 0xf0011a0cu)	/* DMA Channel 3 Suspend Enable Register */
#define DMA_SUSENR004	(*( DMA_SUSENR000_type *) 0xf0011a10u)	/* DMA Channel 4 Suspend Enable Register */
#define DMA_SUSENR005	(*( DMA_SUSENR000_type *) 0xf0011a14u)	/* DMA Channel 5 Suspend Enable Register */
#define DMA_SUSENR006	(*( DMA_SUSENR000_type *) 0xf0011a18u)	/* DMA Channel 6 Suspend Enable Register */
#define DMA_SUSENR007	(*( DMA_SUSENR000_type *) 0xf0011a1cu)	/* DMA Channel 7 Suspend Enable Register */
#define DMA_SUSENR008	(*( DMA_SUSENR000_type *) 0xf0011a20u)	/* DMA Channel 8 Suspend Enable Register */
#define DMA_SUSENR009	(*( DMA_SUSENR000_type *) 0xf0011a24u)	/* DMA Channel 9 Suspend Enable Register */
#define DMA_SUSENR010	(*( DMA_SUSENR000_type *) 0xf0011a28u)	/* DMA Channel 10 Suspend Enable Register */
#define DMA_SUSENR011	(*( DMA_SUSENR000_type *) 0xf0011a2cu)	/* DMA Channel 11 Suspend Enable Register */
#define DMA_SUSENR012	(*( DMA_SUSENR000_type *) 0xf0011a30u)	/* DMA Channel 12 Suspend Enable Register */
#define DMA_SUSENR013	(*( DMA_SUSENR000_type *) 0xf0011a34u)	/* DMA Channel 13 Suspend Enable Register */
#define DMA_SUSENR014	(*( DMA_SUSENR000_type *) 0xf0011a38u)	/* DMA Channel 14 Suspend Enable Register */
#define DMA_SUSENR015	(*( DMA_SUSENR000_type *) 0xf0011a3cu)	/* DMA Channel 15 Suspend Enable Register */
#define DMA_SUSENR016	(*( DMA_SUSENR000_type *) 0xf0011a40u)	/* DMA Channel 16 Suspend Enable Register */
#define DMA_SUSENR017	(*( DMA_SUSENR000_type *) 0xf0011a44u)	/* DMA Channel 17 Suspend Enable Register */
#define DMA_SUSENR018	(*( DMA_SUSENR000_type *) 0xf0011a48u)	/* DMA Channel 18 Suspend Enable Register */
#define DMA_SUSENR019	(*( DMA_SUSENR000_type *) 0xf0011a4cu)	/* DMA Channel 19 Suspend Enable Register */
#define DMA_SUSENR020	(*( DMA_SUSENR000_type *) 0xf0011a50u)	/* DMA Channel 20 Suspend Enable Register */
#define DMA_SUSENR021	(*( DMA_SUSENR000_type *) 0xf0011a54u)	/* DMA Channel 21 Suspend Enable Register */
#define DMA_SUSENR022	(*( DMA_SUSENR000_type *) 0xf0011a58u)	/* DMA Channel 22 Suspend Enable Register */
#define DMA_SUSENR023	(*( DMA_SUSENR000_type *) 0xf0011a5cu)	/* DMA Channel 23 Suspend Enable Register */
#define DMA_SUSENR024	(*( DMA_SUSENR000_type *) 0xf0011a60u)	/* DMA Channel 24 Suspend Enable Register */
#define DMA_SUSENR025	(*( DMA_SUSENR000_type *) 0xf0011a64u)	/* DMA Channel 25 Suspend Enable Register */
#define DMA_SUSENR026	(*( DMA_SUSENR000_type *) 0xf0011a68u)	/* DMA Channel 26 Suspend Enable Register */
#define DMA_SUSENR027	(*( DMA_SUSENR000_type *) 0xf0011a6cu)	/* DMA Channel 27 Suspend Enable Register */
#define DMA_SUSENR028	(*( DMA_SUSENR000_type *) 0xf0011a70u)	/* DMA Channel 28 Suspend Enable Register */
#define DMA_SUSENR029	(*( DMA_SUSENR000_type *) 0xf0011a74u)	/* DMA Channel 29 Suspend Enable Register */
#define DMA_SUSENR030	(*( DMA_SUSENR000_type *) 0xf0011a78u)	/* DMA Channel 30 Suspend Enable Register */
#define DMA_SUSENR031	(*( DMA_SUSENR000_type *) 0xf0011a7cu)	/* DMA Channel 31 Suspend Enable Register */
#define DMA_SUSENR032	(*( DMA_SUSENR000_type *) 0xf0011a80u)	/* DMA Channel 32 Suspend Enable Register */
#define DMA_SUSENR033	(*( DMA_SUSENR000_type *) 0xf0011a84u)	/* DMA Channel 33 Suspend Enable Register */
#define DMA_SUSENR034	(*( DMA_SUSENR000_type *) 0xf0011a88u)	/* DMA Channel 34 Suspend Enable Register */
#define DMA_SUSENR035	(*( DMA_SUSENR000_type *) 0xf0011a8cu)	/* DMA Channel 35 Suspend Enable Register */
#define DMA_SUSENR036	(*( DMA_SUSENR000_type *) 0xf0011a90u)	/* DMA Channel 36 Suspend Enable Register */
#define DMA_SUSENR037	(*( DMA_SUSENR000_type *) 0xf0011a94u)	/* DMA Channel 37 Suspend Enable Register */
#define DMA_SUSENR038	(*( DMA_SUSENR000_type *) 0xf0011a98u)	/* DMA Channel 38 Suspend Enable Register */
#define DMA_SUSENR039	(*( DMA_SUSENR000_type *) 0xf0011a9cu)	/* DMA Channel 39 Suspend Enable Register */
#define DMA_SUSENR040	(*( DMA_SUSENR000_type *) 0xf0011aa0u)	/* DMA Channel 40 Suspend Enable Register */
#define DMA_SUSENR041	(*( DMA_SUSENR000_type *) 0xf0011aa4u)	/* DMA Channel 41 Suspend Enable Register */
#define DMA_SUSENR042	(*( DMA_SUSENR000_type *) 0xf0011aa8u)	/* DMA Channel 42 Suspend Enable Register */
#define DMA_SUSENR043	(*( DMA_SUSENR000_type *) 0xf0011aacu)	/* DMA Channel 43 Suspend Enable Register */
#define DMA_SUSENR044	(*( DMA_SUSENR000_type *) 0xf0011ab0u)	/* DMA Channel 44 Suspend Enable Register */
#define DMA_SUSENR045	(*( DMA_SUSENR000_type *) 0xf0011ab4u)	/* DMA Channel 45 Suspend Enable Register */
#define DMA_SUSENR046	(*( DMA_SUSENR000_type *) 0xf0011ab8u)	/* DMA Channel 46 Suspend Enable Register */
#define DMA_SUSENR047	(*( DMA_SUSENR000_type *) 0xf0011abcu)	/* DMA Channel 47 Suspend Enable Register */
#define DMA_SUSENR048	(*( DMA_SUSENR000_type *) 0xf0011ac0u)	/* DMA Channel 48 Suspend Enable Register */
#define DMA_SUSENR049	(*( DMA_SUSENR000_type *) 0xf0011ac4u)	/* DMA Channel 49 Suspend Enable Register */
#define DMA_SUSENR050	(*( DMA_SUSENR000_type *) 0xf0011ac8u)	/* DMA Channel 50 Suspend Enable Register */
#define DMA_SUSENR051	(*( DMA_SUSENR000_type *) 0xf0011accu)	/* DMA Channel 51 Suspend Enable Register */
#define DMA_SUSENR052	(*( DMA_SUSENR000_type *) 0xf0011ad0u)	/* DMA Channel 52 Suspend Enable Register */
#define DMA_SUSENR053	(*( DMA_SUSENR000_type *) 0xf0011ad4u)	/* DMA Channel 53 Suspend Enable Register */
#define DMA_SUSENR054	(*( DMA_SUSENR000_type *) 0xf0011ad8u)	/* DMA Channel 54 Suspend Enable Register */
#define DMA_SUSENR055	(*( DMA_SUSENR000_type *) 0xf0011adcu)	/* DMA Channel 55 Suspend Enable Register */
#define DMA_SUSENR056	(*( DMA_SUSENR000_type *) 0xf0011ae0u)	/* DMA Channel 56 Suspend Enable Register */
#define DMA_SUSENR057	(*( DMA_SUSENR000_type *) 0xf0011ae4u)	/* DMA Channel 57 Suspend Enable Register */
#define DMA_SUSENR058	(*( DMA_SUSENR000_type *) 0xf0011ae8u)	/* DMA Channel 58 Suspend Enable Register */
#define DMA_SUSENR059	(*( DMA_SUSENR000_type *) 0xf0011aecu)	/* DMA Channel 59 Suspend Enable Register */
#define DMA_SUSENR060	(*( DMA_SUSENR000_type *) 0xf0011af0u)	/* DMA Channel 60 Suspend Enable Register */
#define DMA_SUSENR061	(*( DMA_SUSENR000_type *) 0xf0011af4u)	/* DMA Channel 61 Suspend Enable Register */
#define DMA_SUSENR062	(*( DMA_SUSENR000_type *) 0xf0011af8u)	/* DMA Channel 62 Suspend Enable Register */
#define DMA_SUSENR063	(*( DMA_SUSENR000_type *) 0xf0011afcu)	/* DMA Channel 63 Suspend Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int COUNT          : 32;	/* Timestamp Count */
	} B;
	int I;
	unsigned int U;

} DMA_TIME_type;
#define DMA_TIME	(*( DMA_TIME_type *) 0xf0011210u)	/* DMA Time Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* DMA Channel Reset */
		/* const */ unsigned int HTRE           : 1;	/* DMA Channel Hardware Request Enable */
		/* const */ unsigned int TRL            : 1;	/* DMA Channel Transaction/Transfer Request Lost */
		/* const */ unsigned int CH             : 1;	/* DMA Channel Transaction Request State */
		unsigned int ETRL           : 1;	/* Enable DMA Channel Transaction/Transfer Request Lost Interrupt */
		unsigned int                : 3;
		unsigned int HLTREQ         : 1;	/* DMA Channel Halt Request */
		/* const */ unsigned int HLTACK         : 1;	/* DMA Channel Halt Acknowledge */
		unsigned int                : 6;
		unsigned int ECH            : 1;	/* Enable DMA Channel Hardware Transaction Request */
		unsigned int DCH            : 1;	/* Disable DMA Channel Hardware Transaction Request */
		unsigned int CTL            : 1;	/* Clear DMA Channel Transaction/Transfer Request Lost */
		unsigned int                : 5;
		unsigned int HLTCLR         : 1;	/* Clear DMA Channel Halt Request and Acknowledge */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} DMA_TSR000_type;
#define DMA_TSR000	(*( DMA_TSR000_type *) 0xf0011e00u)	/* DMA Channel 0 Transaction State Register */
#define DMA_TSR001	(*( DMA_TSR000_type *) 0xf0011e04u)	/* DMA Channel 1 Transaction State Register */
#define DMA_TSR002	(*( DMA_TSR000_type *) 0xf0011e08u)	/* DMA Channel 2 Transaction State Register */
#define DMA_TSR003	(*( DMA_TSR000_type *) 0xf0011e0cu)	/* DMA Channel 3 Transaction State Register */
#define DMA_TSR004	(*( DMA_TSR000_type *) 0xf0011e10u)	/* DMA Channel 4 Transaction State Register */
#define DMA_TSR005	(*( DMA_TSR000_type *) 0xf0011e14u)	/* DMA Channel 5 Transaction State Register */
#define DMA_TSR006	(*( DMA_TSR000_type *) 0xf0011e18u)	/* DMA Channel 6 Transaction State Register */
#define DMA_TSR007	(*( DMA_TSR000_type *) 0xf0011e1cu)	/* DMA Channel 7 Transaction State Register */
#define DMA_TSR008	(*( DMA_TSR000_type *) 0xf0011e20u)	/* DMA Channel 8 Transaction State Register */
#define DMA_TSR009	(*( DMA_TSR000_type *) 0xf0011e24u)	/* DMA Channel 9 Transaction State Register */
#define DMA_TSR010	(*( DMA_TSR000_type *) 0xf0011e28u)	/* DMA Channel 10 Transaction State Register */
#define DMA_TSR011	(*( DMA_TSR000_type *) 0xf0011e2cu)	/* DMA Channel 11 Transaction State Register */
#define DMA_TSR012	(*( DMA_TSR000_type *) 0xf0011e30u)	/* DMA Channel 12 Transaction State Register */
#define DMA_TSR013	(*( DMA_TSR000_type *) 0xf0011e34u)	/* DMA Channel 13 Transaction State Register */
#define DMA_TSR014	(*( DMA_TSR000_type *) 0xf0011e38u)	/* DMA Channel 14 Transaction State Register */
#define DMA_TSR015	(*( DMA_TSR000_type *) 0xf0011e3cu)	/* DMA Channel 15 Transaction State Register */
#define DMA_TSR016	(*( DMA_TSR000_type *) 0xf0011e40u)	/* DMA Channel 16 Transaction State Register */
#define DMA_TSR017	(*( DMA_TSR000_type *) 0xf0011e44u)	/* DMA Channel 17 Transaction State Register */
#define DMA_TSR018	(*( DMA_TSR000_type *) 0xf0011e48u)	/* DMA Channel 18 Transaction State Register */
#define DMA_TSR019	(*( DMA_TSR000_type *) 0xf0011e4cu)	/* DMA Channel 19 Transaction State Register */
#define DMA_TSR020	(*( DMA_TSR000_type *) 0xf0011e50u)	/* DMA Channel 20 Transaction State Register */
#define DMA_TSR021	(*( DMA_TSR000_type *) 0xf0011e54u)	/* DMA Channel 21 Transaction State Register */
#define DMA_TSR022	(*( DMA_TSR000_type *) 0xf0011e58u)	/* DMA Channel 22 Transaction State Register */
#define DMA_TSR023	(*( DMA_TSR000_type *) 0xf0011e5cu)	/* DMA Channel 23 Transaction State Register */
#define DMA_TSR024	(*( DMA_TSR000_type *) 0xf0011e60u)	/* DMA Channel 24 Transaction State Register */
#define DMA_TSR025	(*( DMA_TSR000_type *) 0xf0011e64u)	/* DMA Channel 25 Transaction State Register */
#define DMA_TSR026	(*( DMA_TSR000_type *) 0xf0011e68u)	/* DMA Channel 26 Transaction State Register */
#define DMA_TSR027	(*( DMA_TSR000_type *) 0xf0011e6cu)	/* DMA Channel 27 Transaction State Register */
#define DMA_TSR028	(*( DMA_TSR000_type *) 0xf0011e70u)	/* DMA Channel 28 Transaction State Register */
#define DMA_TSR029	(*( DMA_TSR000_type *) 0xf0011e74u)	/* DMA Channel 29 Transaction State Register */
#define DMA_TSR030	(*( DMA_TSR000_type *) 0xf0011e78u)	/* DMA Channel 30 Transaction State Register */
#define DMA_TSR031	(*( DMA_TSR000_type *) 0xf0011e7cu)	/* DMA Channel 31 Transaction State Register */
#define DMA_TSR032	(*( DMA_TSR000_type *) 0xf0011e80u)	/* DMA Channel 32 Transaction State Register */
#define DMA_TSR033	(*( DMA_TSR000_type *) 0xf0011e84u)	/* DMA Channel 33 Transaction State Register */
#define DMA_TSR034	(*( DMA_TSR000_type *) 0xf0011e88u)	/* DMA Channel 34 Transaction State Register */
#define DMA_TSR035	(*( DMA_TSR000_type *) 0xf0011e8cu)	/* DMA Channel 35 Transaction State Register */
#define DMA_TSR036	(*( DMA_TSR000_type *) 0xf0011e90u)	/* DMA Channel 36 Transaction State Register */
#define DMA_TSR037	(*( DMA_TSR000_type *) 0xf0011e94u)	/* DMA Channel 37 Transaction State Register */
#define DMA_TSR038	(*( DMA_TSR000_type *) 0xf0011e98u)	/* DMA Channel 38 Transaction State Register */
#define DMA_TSR039	(*( DMA_TSR000_type *) 0xf0011e9cu)	/* DMA Channel 39 Transaction State Register */
#define DMA_TSR040	(*( DMA_TSR000_type *) 0xf0011ea0u)	/* DMA Channel 40 Transaction State Register */
#define DMA_TSR041	(*( DMA_TSR000_type *) 0xf0011ea4u)	/* DMA Channel 41 Transaction State Register */
#define DMA_TSR042	(*( DMA_TSR000_type *) 0xf0011ea8u)	/* DMA Channel 42 Transaction State Register */
#define DMA_TSR043	(*( DMA_TSR000_type *) 0xf0011eacu)	/* DMA Channel 43 Transaction State Register */
#define DMA_TSR044	(*( DMA_TSR000_type *) 0xf0011eb0u)	/* DMA Channel 44 Transaction State Register */
#define DMA_TSR045	(*( DMA_TSR000_type *) 0xf0011eb4u)	/* DMA Channel 45 Transaction State Register */
#define DMA_TSR046	(*( DMA_TSR000_type *) 0xf0011eb8u)	/* DMA Channel 46 Transaction State Register */
#define DMA_TSR047	(*( DMA_TSR000_type *) 0xf0011ebcu)	/* DMA Channel 47 Transaction State Register */
#define DMA_TSR048	(*( DMA_TSR000_type *) 0xf0011ec0u)	/* DMA Channel 48 Transaction State Register */
#define DMA_TSR049	(*( DMA_TSR000_type *) 0xf0011ec4u)	/* DMA Channel 49 Transaction State Register */
#define DMA_TSR050	(*( DMA_TSR000_type *) 0xf0011ec8u)	/* DMA Channel 50 Transaction State Register */
#define DMA_TSR051	(*( DMA_TSR000_type *) 0xf0011eccu)	/* DMA Channel 51 Transaction State Register */
#define DMA_TSR052	(*( DMA_TSR000_type *) 0xf0011ed0u)	/* DMA Channel 52 Transaction State Register */
#define DMA_TSR053	(*( DMA_TSR000_type *) 0xf0011ed4u)	/* DMA Channel 53 Transaction State Register */
#define DMA_TSR054	(*( DMA_TSR000_type *) 0xf0011ed8u)	/* DMA Channel 54 Transaction State Register */
#define DMA_TSR055	(*( DMA_TSR000_type *) 0xf0011edcu)	/* DMA Channel 55 Transaction State Register */
#define DMA_TSR056	(*( DMA_TSR000_type *) 0xf0011ee0u)	/* DMA Channel 56 Transaction State Register */
#define DMA_TSR057	(*( DMA_TSR000_type *) 0xf0011ee4u)	/* DMA Channel 57 Transaction State Register */
#define DMA_TSR058	(*( DMA_TSR000_type *) 0xf0011ee8u)	/* DMA Channel 58 Transaction State Register */
#define DMA_TSR059	(*( DMA_TSR000_type *) 0xf0011eecu)	/* DMA Channel 59 Transaction State Register */
#define DMA_TSR060	(*( DMA_TSR000_type *) 0xf0011ef0u)	/* DMA Channel 60 Transaction State Register */
#define DMA_TSR061	(*( DMA_TSR000_type *) 0xf0011ef4u)	/* DMA Channel 61 Transaction State Register */
#define DMA_TSR062	(*( DMA_TSR000_type *) 0xf0011ef8u)	/* DMA Channel 62 Transaction State Register */
#define DMA_TSR063	(*( DMA_TSR000_type *) 0xf0011efcu)	/* DMA Channel 63 Transaction State Register */


/* EMEM */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} EMEM_ACCEN0_type;
#define EMEM_ACCEN0	(*( EMEM_ACCEN0_type *) 0xfa0060fcu)	/* EMEM Core Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} EMEM_ACCEN1_type;
#define EMEM_ACCEN1	(*( EMEM_ACCEN1_type *) 0xfa0060f8u)	/* EMEM Core Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} EMEM_CLC_type;
#define EMEM_CLC	(*( EMEM_CLC_type *) 0xfa006000u)	/* EMEM Core Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUM        : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} EMEM_ID_type;
#define EMEM_ID	(*( EMEM_ID_type *) 0xfa006008u)	/* EMEM Core Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STBLOCK        : 1;	/* Standby Lock Flag */
		unsigned int STBULK         : 3;	/* Unlock Standby Lock Flag */
		unsigned int STBSLK         : 4;	/* Set Standby Lock Flag */
		unsigned int                : 8;
		/* const */ unsigned int STBPON         : 1;	/* Standby Power On */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} EMEM_SBRCTR_type;
#define EMEM_SBRCTR	(*( EMEM_SBRCTR_type *) 0xfa006034u)	/* EMEM Core Standby RAM Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TCM0           : 1;	/* Common Memory TCM Tile 0 Control */
		unsigned int TCM1           : 1;	/* Common Memory TCM Tile 1 Control */
		unsigned int TCM2           : 1;	/* Common Memory TCM Tile 2 Control */
		unsigned int TCM3           : 1;	/* Common Memory TCM Tile 3 Control */
		unsigned int TCM4           : 1;	/* Common Memory TCM Tile 4 Control */
		unsigned int TCM5           : 1;	/* Common Memory TCM Tile 5 Control */
		unsigned int TCM6           : 1;	/* Common Memory TCM Tile 6 Control */
		unsigned int TCM7           : 1;	/* Common Memory TCM Tile 7 Control */
		unsigned int XCM0           : 1;	/* Common Memory XCM Tile 0 Control */
		unsigned int XCM1           : 1;	/* Common Memory XCM Tile 1 Control */
		unsigned int XCM2           : 1;	/* Common Memory XCM Tile 2 Control */
		unsigned int XCM3           : 1;	/* Common Memory XCM Tile 3 Control */
		unsigned int XCM4           : 1;	/* Common Memory XCM Tile 4 Control */
		unsigned int XCM5           : 1;	/* Common Memory XCM Tile 5 Control */
		unsigned int XCM6           : 1;	/* Common Memory XCM Tile 6 Control */
		unsigned int XCM7           : 1;	/* Common Memory XCM Tile 7 Control */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EMEM_TILECC_type;
#define EMEM_TILECC	(*( EMEM_TILECC_type *) 0xfa006024u)	/* EMEM Core Tile Control Common Memory Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TCM0           : 2;	/* TCM Tile 0 Assignment Change */
		unsigned int TCM1           : 2;	/* TCM Tile 1 Assignment Change */
		unsigned int TCM2           : 2;	/* TCM Tile 2 Assignment Change */
		unsigned int TCM3           : 2;	/* TCM Tile 3 Assignment Change */
		unsigned int TCM4           : 2;	/* TCM Tile 4 Assignment Change */
		unsigned int TCM5           : 2;	/* TCM Tile 5 Assignment Change */
		unsigned int TCM6           : 2;	/* TCM Tile 6 Assignment Change */
		unsigned int TCM7           : 2;	/* TCM Tile 7 Assignment Change */
		unsigned int XCM0           : 2;	/* XCM Tile 0 Assignment Change */
		unsigned int XCM1           : 2;	/* XCM Tile 1 Assignment Change */
		unsigned int XCM2           : 2;	/* XCM Tile 2 Assignment Change */
		unsigned int XCM3           : 2;	/* XCM Tile 3 Assignment Change */
		unsigned int XCM4           : 2;	/* XCM Tile 4 Assignment Change */
		unsigned int XCM5           : 2;	/* XCM Tile 5 Assignment Change */
		unsigned int XCM6           : 2;	/* XCM Tile 6 Assignment Change */
		unsigned int XCM7           : 2;	/* XCM Tile 7 Assignment Change */
	} B;
	int I;
	unsigned int U;

} EMEM_TILECONFIG_type;
#define EMEM_TILECONFIG	(*( EMEM_TILECONFIG_type *) 0xfa006020u)	/* EMEM Core Tile Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TCM0           : 1;	/* Trace Memory TCM Tile 0 Control Bit */
		unsigned int TCM1           : 1;	/* Trace Memory TCM Tile 1 Control Bit */
		unsigned int TCM2           : 1;	/* Trace Memory TCM Tile 2 Control Bit */
		unsigned int TCM3           : 1;	/* Trace Memory TCM Tile 3 Control Bit */
		unsigned int TCM4           : 1;	/* Trace Memory TCM Tile 4 Control Bit */
		unsigned int TCM5           : 1;	/* Trace Memory TCM Tile 5 Control Bit */
		unsigned int TCM6           : 1;	/* Trace Memory TCM Tile 6 Control Bit */
		unsigned int TCM7           : 1;	/* Trace Memory TCM Tile 7 Control Bit */
		unsigned int                : 8;
		unsigned int XTM0           : 1;	/* Trace Memory XTM Tile 0 Control Bit */
		unsigned int XTM1           : 1;	/* Trace Memory XTM Tile 1 Control Bit */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} EMEM_TILECT_type;
#define EMEM_TILECT	(*( EMEM_TILECT_type *) 0xfa006028u)	/* EMEM Core Tile Control Trace Memory Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TCM0           : 2;	/* Assignment of TCM Tile 0 */
		/* const */ unsigned int TCM1           : 2;	/* Assignment of TCM Tile 1 */
		/* const */ unsigned int TCM2           : 2;	/* Assignment of TCM Tile 2 */
		/* const */ unsigned int TCM3           : 2;	/* Assignment of TCM Tile 3 */
		/* const */ unsigned int TCM4           : 2;	/* Assignment of TCM Tile 4 */
		/* const */ unsigned int TCM5           : 2;	/* Assignment of TCM Tile 5 */
		/* const */ unsigned int TCM6           : 2;	/* Assignment of TCM Tile 6 */
		/* const */ unsigned int TCM7           : 2;	/* Assignment of TCM Tile 7 */
		/* const */ unsigned int XCM0           : 2;	/* Assignment of XCM Tile 0 */
		/* const */ unsigned int XCM1           : 2;	/* Assignment of XCM Tile 1 */
		/* const */ unsigned int XCM2           : 2;	/* Assignment of XCM Tile 2 */
		/* const */ unsigned int XCM3           : 2;	/* Assignment of XCM Tile 3 */
		/* const */ unsigned int XCM4           : 2;	/* Assignment of XCM Tile 4 */
		/* const */ unsigned int XCM5           : 2;	/* Assignment of XCM Tile 5 */
		/* const */ unsigned int XCM6           : 2;	/* Assignment of XCM Tile 6 */
		/* const */ unsigned int XCM7           : 2;	/* Assignment of XCM Tile 7 */
	} B;
	int I;
	unsigned int U;

} EMEM_TILESTATE_type;
#define EMEM_TILESTATE	(*( EMEM_TILESTATE_type *) 0xfa00602cu)	/* EMEM Core Tile Status Register */


/* EMEMMPU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_ACCEN0_type;
#define EMEMMPU0_ACCEN0	(*( EMEMMPU0_ACCEN0_type *) 0xfb000010u)	/* EMEM Module Access Enable Register 0 */
#define EMEMMPU0_RGNACCENWA0	(*( EMEMMPU0_ACCEN0_type *) 0xfb000058u)	/* EMEM Module Region 0 Write Access Enable Register 0 */
#define EMEMMPU0_RGNACCENWA1	(*( EMEMMPU0_ACCEN0_type *) 0xfb000068u)	/* EMEM Module Region 1 Write Access Enable Register 0 */
#define EMEMMPU0_RGNACCENWA2	(*( EMEMMPU0_ACCEN0_type *) 0xfb000078u)	/* EMEM Module Region 2 Write Access Enable Register 0 */
#define EMEMMPU0_RGNACCENWA3	(*( EMEMMPU0_ACCEN0_type *) 0xfb000088u)	/* EMEM Module Region 3 Write Access Enable Register 0 */
#define EMEMMPU0_RGNACCENWA4	(*( EMEMMPU0_ACCEN0_type *) 0xfb000098u)	/* EMEM Module Region 4 Write Access Enable Register 0 */
#define EMEMMPU0_RGNACCENWA5	(*( EMEMMPU0_ACCEN0_type *) 0xfb0000a8u)	/* EMEM Module Region 5 Write Access Enable Register 0 */
#define EMEMMPU0_RGNACCENWA6	(*( EMEMMPU0_ACCEN0_type *) 0xfb0000b8u)	/* EMEM Module Region 6 Write Access Enable Register 0 */
#define EMEMMPU0_RGNACCENWA7	(*( EMEMMPU0_ACCEN0_type *) 0xfb0000c8u)	/* EMEM Module Region 7 Write Access Enable Register 0 */
#define EMEMMPU1_ACCEN0	(*( EMEMMPU0_ACCEN0_type *) 0xfb010010u)	/* EMEM Module Access Enable Register 0 */
#define EMEMMPU1_RGNACCENWA0	(*( EMEMMPU0_ACCEN0_type *) 0xfb010058u)	/* EMEM Module Region 0 Write Access Enable Register 0 */
#define EMEMMPU1_RGNACCENWA1	(*( EMEMMPU0_ACCEN0_type *) 0xfb010068u)	/* EMEM Module Region 1 Write Access Enable Register 0 */
#define EMEMMPU1_RGNACCENWA2	(*( EMEMMPU0_ACCEN0_type *) 0xfb010078u)	/* EMEM Module Region 2 Write Access Enable Register 0 */
#define EMEMMPU1_RGNACCENWA3	(*( EMEMMPU0_ACCEN0_type *) 0xfb010088u)	/* EMEM Module Region 3 Write Access Enable Register 0 */
#define EMEMMPU1_RGNACCENWA4	(*( EMEMMPU0_ACCEN0_type *) 0xfb010098u)	/* EMEM Module Region 4 Write Access Enable Register 0 */
#define EMEMMPU1_RGNACCENWA5	(*( EMEMMPU0_ACCEN0_type *) 0xfb0100a8u)	/* EMEM Module Region 5 Write Access Enable Register 0 */
#define EMEMMPU1_RGNACCENWA6	(*( EMEMMPU0_ACCEN0_type *) 0xfb0100b8u)	/* EMEM Module Region 6 Write Access Enable Register 0 */
#define EMEMMPU1_RGNACCENWA7	(*( EMEMMPU0_ACCEN0_type *) 0xfb0100c8u)	/* EMEM Module Region 7 Write Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN32           : 1;	/* Access Enable for Master TAG ID 32 */
		unsigned int EN33           : 1;	/* Access Enable for Master TAG ID 33 */
		unsigned int EN34           : 1;	/* Access Enable for Master TAG ID 34 */
		unsigned int EN35           : 1;	/* Access Enable for Master TAG ID 35 */
		unsigned int EN36           : 1;	/* Access Enable for Master TAG ID 36 */
		unsigned int EN37           : 1;	/* Access Enable for Master TAG ID 37 */
		unsigned int EN38           : 1;	/* Access Enable for Master TAG ID 38 */
		unsigned int EN39           : 1;	/* Access Enable for Master TAG ID 39 */
		unsigned int EN40           : 1;	/* Access Enable for Master TAG ID 40 */
		unsigned int EN41           : 1;	/* Access Enable for Master TAG ID 41 */
		unsigned int EN42           : 1;	/* Access Enable for Master TAG ID 42 */
		unsigned int EN43           : 1;	/* Access Enable for Master TAG ID 43 */
		unsigned int EN44           : 1;	/* Access Enable for Master TAG ID 44 */
		unsigned int EN45           : 1;	/* Access Enable for Master TAG ID 45 */
		unsigned int EN46           : 1;	/* Access Enable for Master TAG ID 46 */
		unsigned int EN47           : 1;	/* Access Enable for Master TAG ID 47 */
		unsigned int EN48           : 1;	/* Access Enable for Master TAG ID 48 */
		unsigned int EN49           : 1;	/* Access Enable for Master TAG ID 49 */
		unsigned int EN50           : 1;	/* Access Enable for Master TAG ID 50 */
		unsigned int EN51           : 1;	/* Access Enable for Master TAG ID 51 */
		unsigned int EN52           : 1;	/* Access Enable for Master TAG ID 52 */
		unsigned int EN53           : 1;	/* Access Enable for Master TAG ID 53 */
		unsigned int EN54           : 1;	/* Access Enable for Master TAG ID 54 */
		unsigned int EN55           : 1;	/* Access Enable for Master TAG ID 55 */
		unsigned int EN56           : 1;	/* Access Enable for Master TAG ID 56 */
		unsigned int EN57           : 1;	/* Access Enable for Master TAG ID 57 */
		unsigned int EN58           : 1;	/* Access Enable for Master TAG ID 58 */
		unsigned int EN59           : 1;	/* Access Enable for Master TAG ID 59 */
		unsigned int EN60           : 1;	/* Access Enable for Master TAG ID 60 */
		unsigned int EN61           : 1;	/* Access Enable for Master TAG ID 61 */
		unsigned int EN62           : 1;	/* Access Enable for Master TAG ID 62 */
		unsigned int EN63           : 1;	/* Access Enable for Master TAG ID 63 */
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_ACCEN1_type;
#define EMEMMPU0_ACCEN1	(*( EMEMMPU0_ACCEN1_type *) 0xfb000014u)	/* EMEM Module Access Enable Register 1 */
#define EMEMMPU0_RGNACCENWB0	(*( EMEMMPU0_ACCEN1_type *) 0xfb00005cu)	/* EMEM Module Region 0 Write Access Enable Register 1 */
#define EMEMMPU0_RGNACCENWB1	(*( EMEMMPU0_ACCEN1_type *) 0xfb00006cu)	/* EMEM Module Region 1 Write Access Enable Register 1 */
#define EMEMMPU0_RGNACCENWB2	(*( EMEMMPU0_ACCEN1_type *) 0xfb00007cu)	/* EMEM Module Region 2 Write Access Enable Register 1 */
#define EMEMMPU0_RGNACCENWB3	(*( EMEMMPU0_ACCEN1_type *) 0xfb00008cu)	/* EMEM Module Region 3 Write Access Enable Register 1 */
#define EMEMMPU0_RGNACCENWB4	(*( EMEMMPU0_ACCEN1_type *) 0xfb00009cu)	/* EMEM Module Region 4 Write Access Enable Register 1 */
#define EMEMMPU0_RGNACCENWB5	(*( EMEMMPU0_ACCEN1_type *) 0xfb0000acu)	/* EMEM Module Region 5 Write Access Enable Register 1 */
#define EMEMMPU0_RGNACCENWB6	(*( EMEMMPU0_ACCEN1_type *) 0xfb0000bcu)	/* EMEM Module Region 6 Write Access Enable Register 1 */
#define EMEMMPU0_RGNACCENWB7	(*( EMEMMPU0_ACCEN1_type *) 0xfb0000ccu)	/* EMEM Module Region 7 Write Access Enable Register 1 */
#define EMEMMPU1_ACCEN1	(*( EMEMMPU0_ACCEN1_type *) 0xfb010014u)	/* EMEM Module Access Enable Register 1 */
#define EMEMMPU1_RGNACCENWB0	(*( EMEMMPU0_ACCEN1_type *) 0xfb01005cu)	/* EMEM Module Region 0 Write Access Enable Register 1 */
#define EMEMMPU1_RGNACCENWB1	(*( EMEMMPU0_ACCEN1_type *) 0xfb01006cu)	/* EMEM Module Region 1 Write Access Enable Register 1 */
#define EMEMMPU1_RGNACCENWB2	(*( EMEMMPU0_ACCEN1_type *) 0xfb01007cu)	/* EMEM Module Region 2 Write Access Enable Register 1 */
#define EMEMMPU1_RGNACCENWB3	(*( EMEMMPU0_ACCEN1_type *) 0xfb01008cu)	/* EMEM Module Region 3 Write Access Enable Register 1 */
#define EMEMMPU1_RGNACCENWB4	(*( EMEMMPU0_ACCEN1_type *) 0xfb01009cu)	/* EMEM Module Region 4 Write Access Enable Register 1 */
#define EMEMMPU1_RGNACCENWB5	(*( EMEMMPU0_ACCEN1_type *) 0xfb0100acu)	/* EMEM Module Region 5 Write Access Enable Register 1 */
#define EMEMMPU1_RGNACCENWB6	(*( EMEMMPU0_ACCEN1_type *) 0xfb0100bcu)	/* EMEM Module Region 6 Write Access Enable Register 1 */
#define EMEMMPU1_RGNACCENWB7	(*( EMEMMPU0_ACCEN1_type *) 0xfb0100ccu)	/* EMEM Module Region 7 Write Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_CLC_type;
#define EMEMMPU0_CLC	(*( EMEMMPU0_CLC_type *) 0xfb000000u)	/* EMEM Module Clock Control Register */
#define EMEMMPU1_CLC	(*( EMEMMPU0_CLC_type *) 0xfb010000u)	/* EMEM Module Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int INTERR         : 1;	/* Internal ECC Error */
		unsigned int                : 1;
		unsigned int RMWERR         : 1;	/* Internal Read Modify Write Error */
		unsigned int                : 1;
		unsigned int DATAERR        : 1;	/* SRI Data Phase ECC Error */
		unsigned int ADDERR         : 1;	/* SRI Address Phase ECC Error */
		unsigned int PMIC           : 1;	/* Protection Bit for Memory Integrity Control Bit */
		unsigned int ERRDIS         : 1;	/* ECC Error Disable */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_MEMCON_type;
#define EMEMMPU0_MEMCON	(*( EMEMMPU0_MEMCON_type *) 0xfb000020u)	/* EMEM Module Memory Control Register */
#define EMEMMPU1_MEMCON	(*( EMEMMPU0_MEMCON_type *) 0xfb010020u)	/* EMEM Module Memory Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_MODID_type;
#define EMEMMPU0_MODID	(*( EMEMMPU0_MODID_type *) 0xfb000008u)	/* EMEM Module ID Register */
#define EMEMMPU1_MODID	(*( EMEMMPU0_MODID_type *) 0xfb010008u)	/* EMEM Module ID Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_RGNACCENRA0_type;
#define EMEMMPU0_RGNACCENRA0	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb0000d8u)	/* EMEM Module Region 0 Read Access Enable Register 0 */
#define EMEMMPU0_RGNACCENRA1	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb0000e8u)	/* EMEM Module Region 1 Read Access Enable Register 0 */
#define EMEMMPU0_RGNACCENRA2	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb0000f8u)	/* EMEM Module Region 2 Read Access Enable Register 0 */
#define EMEMMPU0_RGNACCENRA3	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb000108u)	/* EMEM Module Region 3 Read Access Enable Register 0 */
#define EMEMMPU0_RGNACCENRA4	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb000118u)	/* EMEM Module Region 4 Read Access Enable Register 0 */
#define EMEMMPU0_RGNACCENRA5	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb000128u)	/* EMEM Module Region 5 Read Access Enable Register 0 */
#define EMEMMPU0_RGNACCENRA6	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb000138u)	/* EMEM Module Region 6 Read Access Enable Register 0 */
#define EMEMMPU0_RGNACCENRA7	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb000148u)	/* EMEM Module Region 7 Read Access Enable Register 0 */
#define EMEMMPU1_RGNACCENRA0	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb0100d8u)	/* EMEM Module Region 0 Read Access Enable Register 0 */
#define EMEMMPU1_RGNACCENRA1	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb0100e8u)	/* EMEM Module Region 1 Read Access Enable Register 0 */
#define EMEMMPU1_RGNACCENRA2	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb0100f8u)	/* EMEM Module Region 2 Read Access Enable Register 0 */
#define EMEMMPU1_RGNACCENRA3	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb010108u)	/* EMEM Module Region 3 Read Access Enable Register 0 */
#define EMEMMPU1_RGNACCENRA4	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb010118u)	/* EMEM Module Region 4 Read Access Enable Register 0 */
#define EMEMMPU1_RGNACCENRA5	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb010128u)	/* EMEM Module Region 5 Read Access Enable Register 0 */
#define EMEMMPU1_RGNACCENRA6	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb010138u)	/* EMEM Module Region 6 Read Access Enable Register 0 */
#define EMEMMPU1_RGNACCENRA7	(*( EMEMMPU0_RGNACCENRA0_type *) 0xfb010148u)	/* EMEM Module Region 7 Read Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN32           : 1;	/* Access Enable for Master TAG ID 32 */
		unsigned int EN33           : 1;	/* Access Enable for Master TAG ID 33 */
		unsigned int EN34           : 1;	/* Access Enable for Master TAG ID 34 */
		unsigned int EN35           : 1;	/* Access Enable for Master TAG ID 35 */
		unsigned int EN36           : 1;	/* Access Enable for Master TAG ID 36 */
		unsigned int EN37           : 1;	/* Access Enable for Master TAG ID 37 */
		unsigned int EN38           : 1;	/* Access Enable for Master TAG ID 38 */
		unsigned int EN39           : 1;	/* Access Enable for Master TAG ID 39 */
		unsigned int EN40           : 1;	/* Access Enable for Master TAG ID 40 */
		unsigned int EN41           : 1;	/* Access Enable for Master TAG ID 41 */
		unsigned int EN42           : 1;	/* Access Enable for Master TAG ID 42 */
		unsigned int EN43           : 1;	/* Access Enable for Master TAG ID 43 */
		unsigned int EN44           : 1;	/* Access Enable for Master TAG ID 44 */
		unsigned int EN45           : 1;	/* Access Enable for Master TAG ID 45 */
		unsigned int EN46           : 1;	/* Access Enable for Master TAG ID 46 */
		unsigned int EN47           : 1;	/* Access Enable for Master TAG ID 47 */
		unsigned int EN48           : 1;	/* Access Enable for Master TAG ID 48 */
		unsigned int EN49           : 1;	/* Access Enable for Master TAG ID 49 */
		unsigned int EN50           : 1;	/* Access Enable for Master TAG ID 50 */
		unsigned int EN51           : 1;	/* Access Enable for Master TAG ID 51 */
		unsigned int EN52           : 1;	/* Access Enable for Master TAG ID 52 */
		unsigned int EN53           : 1;	/* Access Enable for Master TAG ID 53 */
		unsigned int EN54           : 1;	/* Access Enable for Master TAG ID 54 */
		unsigned int EN55           : 1;	/* Access Enable for Master TAG ID 55 */
		unsigned int EN56           : 1;	/* Access Enable for Master TAG ID 56 */
		unsigned int EN57           : 1;	/* Access Enable for Master TAG ID 57 */
		unsigned int EN58           : 1;	/* Access Enable for Master TAG ID 58 */
		unsigned int EN59           : 1;	/* Access Enable for Master TAG ID 59 */
		unsigned int EN60           : 1;	/* Access Enable for Master TAG ID 60 */
		unsigned int EN61           : 1;	/* Access Enable for Master TAG ID 61 */
		unsigned int EN62           : 1;	/* Access Enable for Master TAG ID 62 */
		unsigned int EN63           : 1;	/* Access Enable for Master TAG ID 63 */
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_RGNACCENRB0_type;
#define EMEMMPU0_RGNACCENRB0	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb0000dcu)	/* EMEM Module Region 0 Read Access Enable Register 1 */
#define EMEMMPU0_RGNACCENRB1	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb0000ecu)	/* EMEM Module Region 1 Read Access Enable Register 1 */
#define EMEMMPU0_RGNACCENRB2	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb0000fcu)	/* EMEM Module Region 2 Read Access Enable Register 1 */
#define EMEMMPU0_RGNACCENRB3	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb00010cu)	/* EMEM Module Region 3 Read Access Enable Register 1 */
#define EMEMMPU0_RGNACCENRB4	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb00011cu)	/* EMEM Module Region 4 Read Access Enable Register 1 */
#define EMEMMPU0_RGNACCENRB5	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb00012cu)	/* EMEM Module Region 5 Read Access Enable Register 1 */
#define EMEMMPU0_RGNACCENRB6	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb00013cu)	/* EMEM Module Region 6 Read Access Enable Register 1 */
#define EMEMMPU0_RGNACCENRB7	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb00014cu)	/* EMEM Module Region 7 Read Access Enable Register 1 */
#define EMEMMPU1_RGNACCENRB0	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb0100dcu)	/* EMEM Module Region 0 Read Access Enable Register 1 */
#define EMEMMPU1_RGNACCENRB1	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb0100ecu)	/* EMEM Module Region 1 Read Access Enable Register 1 */
#define EMEMMPU1_RGNACCENRB2	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb0100fcu)	/* EMEM Module Region 2 Read Access Enable Register 1 */
#define EMEMMPU1_RGNACCENRB3	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb01010cu)	/* EMEM Module Region 3 Read Access Enable Register 1 */
#define EMEMMPU1_RGNACCENRB4	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb01011cu)	/* EMEM Module Region 4 Read Access Enable Register 1 */
#define EMEMMPU1_RGNACCENRB5	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb01012cu)	/* EMEM Module Region 5 Read Access Enable Register 1 */
#define EMEMMPU1_RGNACCENRB6	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb01013cu)	/* EMEM Module Region 6 Read Access Enable Register 1 */
#define EMEMMPU1_RGNACCENRB7	(*( EMEMMPU0_RGNACCENRB0_type *) 0xfb01014cu)	/* EMEM Module Region 7 Read Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 5;
		unsigned int ADDR           : 27;	/* Region Lower Address */
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_RGNLA0_type;
#define EMEMMPU0_RGNLA0	(*( EMEMMPU0_RGNLA0_type *) 0xfb000050u)	/* EMEM Module Region 0 Lower Address Register */
#define EMEMMPU0_RGNLA1	(*( EMEMMPU0_RGNLA0_type *) 0xfb000060u)	/* EMEM Module Region 1 Lower Address Register */
#define EMEMMPU0_RGNLA2	(*( EMEMMPU0_RGNLA0_type *) 0xfb000070u)	/* EMEM Module Region 2 Lower Address Register */
#define EMEMMPU0_RGNLA3	(*( EMEMMPU0_RGNLA0_type *) 0xfb000080u)	/* EMEM Module Region 3 Lower Address Register */
#define EMEMMPU0_RGNLA4	(*( EMEMMPU0_RGNLA0_type *) 0xfb000090u)	/* EMEM Module Region 4 Lower Address Register */
#define EMEMMPU0_RGNLA5	(*( EMEMMPU0_RGNLA0_type *) 0xfb0000a0u)	/* EMEM Module Region 5 Lower Address Register */
#define EMEMMPU0_RGNLA6	(*( EMEMMPU0_RGNLA0_type *) 0xfb0000b0u)	/* EMEM Module Region 6 Lower Address Register */
#define EMEMMPU0_RGNLA7	(*( EMEMMPU0_RGNLA0_type *) 0xfb0000c0u)	/* EMEM Module Region 7 Lower Address Register */
#define EMEMMPU1_RGNLA0	(*( EMEMMPU0_RGNLA0_type *) 0xfb010050u)	/* EMEM Module Region 0 Lower Address Register */
#define EMEMMPU1_RGNLA1	(*( EMEMMPU0_RGNLA0_type *) 0xfb010060u)	/* EMEM Module Region 1 Lower Address Register */
#define EMEMMPU1_RGNLA2	(*( EMEMMPU0_RGNLA0_type *) 0xfb010070u)	/* EMEM Module Region 2 Lower Address Register */
#define EMEMMPU1_RGNLA3	(*( EMEMMPU0_RGNLA0_type *) 0xfb010080u)	/* EMEM Module Region 3 Lower Address Register */
#define EMEMMPU1_RGNLA4	(*( EMEMMPU0_RGNLA0_type *) 0xfb010090u)	/* EMEM Module Region 4 Lower Address Register */
#define EMEMMPU1_RGNLA5	(*( EMEMMPU0_RGNLA0_type *) 0xfb0100a0u)	/* EMEM Module Region 5 Lower Address Register */
#define EMEMMPU1_RGNLA6	(*( EMEMMPU0_RGNLA0_type *) 0xfb0100b0u)	/* EMEM Module Region 6 Lower Address Register */
#define EMEMMPU1_RGNLA7	(*( EMEMMPU0_RGNLA0_type *) 0xfb0100c0u)	/* EMEM Module Region 7 Lower Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 5;
		unsigned int ADDR           : 27;	/* Region Upper Address */
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_RGNUA0_type;
#define EMEMMPU0_RGNUA0	(*( EMEMMPU0_RGNUA0_type *) 0xfb000054u)	/* EMEM Module Region 0 Upper Address Register */
#define EMEMMPU0_RGNUA1	(*( EMEMMPU0_RGNUA0_type *) 0xfb000064u)	/* EMEM Module Region 1 Upper Address Register */
#define EMEMMPU0_RGNUA2	(*( EMEMMPU0_RGNUA0_type *) 0xfb000074u)	/* EMEM Module Region 2 Upper Address Register */
#define EMEMMPU0_RGNUA3	(*( EMEMMPU0_RGNUA0_type *) 0xfb000084u)	/* EMEM Module Region 3 Upper Address Register */
#define EMEMMPU0_RGNUA4	(*( EMEMMPU0_RGNUA0_type *) 0xfb000094u)	/* EMEM Module Region 4 Upper Address Register */
#define EMEMMPU0_RGNUA5	(*( EMEMMPU0_RGNUA0_type *) 0xfb0000a4u)	/* EMEM Module Region 5 Upper Address Register */
#define EMEMMPU0_RGNUA6	(*( EMEMMPU0_RGNUA0_type *) 0xfb0000b4u)	/* EMEM Module Region 6 Upper Address Register */
#define EMEMMPU0_RGNUA7	(*( EMEMMPU0_RGNUA0_type *) 0xfb0000c4u)	/* EMEM Module Region 7 Upper Address Register */
#define EMEMMPU1_RGNUA0	(*( EMEMMPU0_RGNUA0_type *) 0xfb010054u)	/* EMEM Module Region 0 Upper Address Register */
#define EMEMMPU1_RGNUA1	(*( EMEMMPU0_RGNUA0_type *) 0xfb010064u)	/* EMEM Module Region 1 Upper Address Register */
#define EMEMMPU1_RGNUA2	(*( EMEMMPU0_RGNUA0_type *) 0xfb010074u)	/* EMEM Module Region 2 Upper Address Register */
#define EMEMMPU1_RGNUA3	(*( EMEMMPU0_RGNUA0_type *) 0xfb010084u)	/* EMEM Module Region 3 Upper Address Register */
#define EMEMMPU1_RGNUA4	(*( EMEMMPU0_RGNUA0_type *) 0xfb010094u)	/* EMEM Module Region 4 Upper Address Register */
#define EMEMMPU1_RGNUA5	(*( EMEMMPU0_RGNUA0_type *) 0xfb0100a4u)	/* EMEM Module Region 5 Upper Address Register */
#define EMEMMPU1_RGNUA6	(*( EMEMMPU0_RGNUA0_type *) 0xfb0100b4u)	/* EMEM Module Region 6 Upper Address Register */
#define EMEMMPU1_RGNUA7	(*( EMEMMPU0_RGNUA0_type *) 0xfb0100c4u)	/* EMEM Module Region 7 Upper Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int GED            : 1;	/* Generate Error in ECC for Data Protection */
		unsigned int GEC            : 1;	/* Generate Error in ECC for Error Correction */
		unsigned int                : 6;
		unsigned int LSEN           : 2;	/* Lockstep Enable */
		unsigned int LSTST          : 2;	/* Lockstep Test */
		unsigned int                : 4;
		/* const */ unsigned int LSSTAT         : 2;	/* Lockstep Status */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} EMEMMPU0_SCTRL_type;
#define EMEMMPU0_SCTRL	(*( EMEMMPU0_SCTRL_type *) 0xfb000024u)	/* EMEM Module Safety Control Register */
#define EMEMMPU1_SCTRL	(*( EMEMMPU0_SCTRL_type *) 0xfb010024u)	/* EMEM Module Safety Control Register */


/* ERAY */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} ERAY0_ACCEN0_type;
#define ERAY0_ACCEN0	(*( ERAY0_ACCEN0_type *) 0xf001c8fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int VFRA           : 1;	/* Valid Frame Received on Channel A(vSS!ValidFrameA) */
		unsigned int SEDA           : 1;	/* Syntax Error Detected on Channel A(vSS!SyntaxErrorA) */
		unsigned int CEDA           : 1;	/* Content Error Detected on Channel A(vSS!ContentErrorA) */
		unsigned int CIA            : 1;	/* Communication Indicator Channel A */
		unsigned int SBVA           : 1;	/* Slot Boundary Violation on Channel A(vSS!BViolationA) */
		unsigned int                : 3;
		unsigned int VFRB           : 1;	/* Valid Frame Received on Channel B(vSS!ValidFrameB) */
		unsigned int SEDB           : 1;	/* Syntax Error Detected on Channel B(vSS!SyntaxErrorB) */
		unsigned int CEDB           : 1;	/* Content Error Detected on Channel B(vSS!ContentErrorB) */
		unsigned int CIB            : 1;	/* Communication Indicator Channel B */
		unsigned int SBVB           : 1;	/* Slot Boundary Violation on Channel B(vSS!BViolationB) */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ERAY0_ACS_type;
#define ERAY0_ACS	(*( ERAY0_ACS_type *) 0xf001c128u)	/* Aggregated Channel Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CCFC           : 4;	/* Clock Correction Failed Counter(vClockCorrectionFailed) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int ERRM           : 2;	/* Error Mode(vPOC!ErrorMode) */
		/* const */ unsigned int PTAC           : 5;	/* Passive to Active Count(vAllowPassiveToActive) */
		/* const */ unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ERAY0_CCEV_type;
#define ERAY0_CCEV	(*( ERAY0_CCEV_type *) 0xf001c104u)	/* Communication Controller Error Vector */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int POCS           : 6;	/* Protocol Operation Control Status */
		/* const */ unsigned int FSI            : 1;	/* Freeze Status Indicator(vPOC!Freeze) */
		/* const */ unsigned int HRQ            : 1;	/* Halt Request(vPOC!CHIHaltRequest) */
		/* const */ unsigned int SLM            : 2;	/* Slot Mode(vPOC!SlotMode) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int CSNI           : 1;	/* Coldstart Noise Indicator(vPOC!ColdstartNoise) */
		/* const */ unsigned int CSAI           : 1;	/* Coldstart Abort Indicator */
		/* const */ unsigned int CSI            : 1;	/* Cold Start Inhibit(vColdStartInhibit) */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int WSV            : 3;	/* Wakeup Status(vPOC!WakeupStatus) */
		/* const */ unsigned int RCA            : 5;	/* Remaining Coldstart Attempts(vRemainingColdstartAttempts) */
		/* const */ unsigned int PSL            : 6;	/* POC Status Log */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_CCSV_type;
#define ERAY0_CCSV	(*( ERAY0_CCSV_type *) 0xf001c100u)	/* Communication Controller Status Vector */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* External Sleep Mode Request Disable Bit */
		unsigned int                : 4;
		unsigned int RMC            : 3;	/* Clock Divider in Run Mode */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} ERAY0_CLC_type;
#define ERAY0_CLC	(*( ERAY0_CLC_type *) 0xf001c000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DAY            : 8;	/* Design Time Stamp, Day */
		/* const */ unsigned int MON            : 8;	/* Design Time Stamp, Month */
		/* const */ unsigned int YEAR           : 4;	/* Design Time Stamp, Year */
		/* const */ unsigned int SUBSTEP        : 4;	/* Sub-Step of Core Release */
		/* const */ unsigned int STEP           : 4;	/* Step of Core Release */
		/* const */ unsigned int REL            : 4;	/* Core Release */
	} B;
	int I;
	unsigned int U;

} ERAY0_CREL_type;
#define ERAY0_CREL	(*( ERAY0_CREL_type *) 0xf001c3f0u)	/* Core Release Register */

typedef volatile union
{
	struct
	{ 
		unsigned int INT0           : 1;	/* CIF Timeout Service Request Status */
		unsigned int OEN            : 1;	/* Enable auto delay scheme for Output Buffer Control Register (OBCR) */
		unsigned int IEN            : 1;	/* Enable auto delay scheme for Input Buffer Control Register (IBCR) */
		/* const */ unsigned int IBFS           : 1;	/* Input Buffer Status Register */
		unsigned int IBF1PAG        : 1;	/* Input Buffer 1 Page Select Register */
		unsigned int                : 2;
		unsigned int IBF2PAG        : 1;	/* Input Buffer 2 Page Select Register */
		unsigned int                : 2;
		unsigned int RISA           : 2;	/* Receive Input Select Channel A */
		unsigned int RISB           : 2;	/* Receive Input Select Channel B */
		unsigned int STPWTS         : 2;	/* Stop Watch Trigger Input Select */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY0_CUST1_type;
#define ERAY0_CUST1	(*( ERAY0_CUST1_type *) 0xf001c004u)	/* Busy and Input Buffer Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TO             : 32;	/* CIF Timeout Reload Value */
	} B;
	int I;
	unsigned int U;

} ERAY0_CUST3_type;
#define ERAY0_CUST3	(*( ERAY0_CUST3_type *) 0xf001c00cu)	/* Customer Interface Timeout Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PEMCE          : 1;	/* POC Error Mode Changed Service Request Enable */
		unsigned int CNAE           : 1;	/* Command Not Accepted Service Request Enable */
		unsigned int SFBME          : 1;	/* SYNC Frames Below Minimum Service Request Enable */
		unsigned int SFOE           : 1;	/* SYNC Frame Overflow Service Request Enable */
		unsigned int CCFE           : 1;	/* Clock Correction Failure Service Request Enable */
		unsigned int CCLE           : 1;	/* CHI Command Locked Service Request Enable */
		unsigned int EERRE          : 1;	/* ECC Error Service Request Enable */
		unsigned int RFOE           : 1;	/* Receive FIFO Overrun Service Request Enable */
		unsigned int EFAE           : 1;	/* Empty FIFO Access Service Request Enable */
		unsigned int IIBAE          : 1;	/* Illegal Input Buffer Access Service Request Enable */
		unsigned int IOBAE          : 1;	/* Illegal Output Buffer Access Service Request Enable */
		unsigned int MHFE           : 1;	/* Message Handler Constraints Flag Service Request Enable */
		unsigned int                : 4;
		unsigned int EDAE           : 1;	/* Error Detected on Channel A Service Request Enable */
		unsigned int LTVAE          : 1;	/* Latest Transmit Violation Channel A Service Request Enable */
		unsigned int TABAE          : 1;	/* Transmission Across Boundary Channel A Service Request Enable */
		unsigned int                : 5;
		unsigned int EDBE           : 1;	/* Error Detected on Channel B Service Request Enable */
		unsigned int LTVBE          : 1;	/* Latest Transmit Violation Channel B Service Request Enable */
		unsigned int TABBE          : 1;	/* Transmission Across Boundary Channel B Service Request Enable */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_EIER_type;
#define ERAY0_EIER	(*( ERAY0_EIER_type *) 0xf001c034u)	/* Error Service Request Enable Reset */

typedef volatile union
{
	struct
	{ 
		unsigned int PEMCE          : 1;	/* POC Error Mode Changed Service Request Enable */
		unsigned int CNAE           : 1;	/* Command Not Accepted Service Request Enable */
		unsigned int SFBME          : 1;	/* SYNC Frames Below Minimum Service Request Enable */
		unsigned int SFOE           : 1;	/* SYNC Frame Overflow Service Request Enable */
		unsigned int CCFE           : 1;	/* Clock Correction Failure Service Request Enable */
		unsigned int CCLE           : 1;	/* CHI Command Locked Service Request Enable */
		unsigned int EERRE          : 1;	/* ECC Error Service Request Enable */
		unsigned int RFOE           : 1;	/* Receive FIFO Overrun Service Request Enable */
		unsigned int EFAE           : 1;	/* Empty FIFO Access Service Request Enable */
		unsigned int IIBAE          : 1;	/* Illegal Input Buffer Access Service Request Enable */
		unsigned int IOBAE          : 1;	/* Illegal Output Buffer Access Service Request Enable */
		unsigned int MHFE           : 1;	/* Message Handler Constraints Flag Service Request Enable */
		unsigned int                : 4;
		unsigned int EDAE           : 1;	/* Error Detected on Channel A Service Request Enable */
		unsigned int LTVAE          : 1;	/* Latest Transmit Violation Channel A Service Request Enable */
		unsigned int TABAE          : 1;	/* Transmission Across Boundary Channel A Service Request Enable */
		unsigned int                : 5;
		unsigned int EDBE           : 1;	/* Error Detected on Channel B Service Request Enable */
		unsigned int LTVBE          : 1;	/* Latest Transmit Violation Channel B Service Request Enable */
		unsigned int TABBE          : 1;	/* Transmission Across Boundary Channel B Service Request Enable */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_EIES_type;
#define ERAY0_EIES	(*( ERAY0_EIES_type *) 0xf001c030u)	/* Error Service Request Enable Set */

typedef volatile union
{
	struct
	{ 
		unsigned int PEMCL          : 1;	/* POC Error Mode Changed Service Request Line */
		unsigned int CNAL           : 1;	/* Command Not Accepted Service Request Line */
		unsigned int SFBML          : 1;	/* SYNC Frames Below Minimum Service Request Line */
		unsigned int SFOL           : 1;	/* SYNC Frame Overflow Service Request Line */
		unsigned int CCFL           : 1;	/* Clock Correction Failure Service Request Line */
		unsigned int CCLL           : 1;	/* CHI Command Locked Service Request Line */
		unsigned int EERRL          : 1;	/* ECC Error Service Request Line */
		unsigned int RFOL           : 1;	/* Receive FIFO Overrun Service Request Line */
		unsigned int EFAL           : 1;	/* Empty FIFO Access Service Request Line */
		unsigned int IIBAL          : 1;	/* Illegal Input Buffer Access Service Request Line */
		unsigned int IOBAL          : 1;	/* Illegal Output Buffer Access Service Request Line */
		unsigned int MHFL           : 1;	/* Message Handler Constrains Flag Service Request Line */
		unsigned int                : 4;
		unsigned int EDAL           : 1;	/* Error Detected on Channel A Service Request Line */
		unsigned int LTVAL          : 1;	/* Latest Transmit Violation Channel A Service Request Line */
		unsigned int TABAL          : 1;	/* Transmission Across Boundary Channel A Service Request Line */
		unsigned int                : 5;
		unsigned int EDBL           : 1;	/* Error Detected on Channel B Service Request Line */
		unsigned int LTVBL          : 1;	/* Latest Transmit Violation Channel B Service Request Line */
		unsigned int TABBL          : 1;	/* Transmission Across Boundary Channel A Service Request Line */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_EILS_type;
#define ERAY0_EILS	(*( ERAY0_EILS_type *) 0xf001c028u)	/* Error Service Request Line Select */

typedef volatile union
{
	struct
	{ 
		unsigned int PEMC           : 1;	/* POC Error Mode Changed */
		unsigned int CNA            : 1;	/* Command Not Accepted */
		unsigned int SFBM           : 1;	/* SYNC Frames Below Minimum */
		unsigned int SFO            : 1;	/* SYNC Frame Overflow */
		unsigned int CCF            : 1;	/* Clock Correction Failure */
		unsigned int CCL            : 1;	/* CHI Command Locked */
		/* const */ unsigned int EERR           : 1;	/* ECC Error */
		/* const */ unsigned int RFO            : 1;	/* Receive FIFO Overrun */
		unsigned int EFA            : 1;	/* Empty FIFO Access */
		unsigned int IIBA           : 1;	/* Illegal Input Buffer Access */
		unsigned int IOBA           : 1;	/* Illegal Output Buffer Access */
		unsigned int MHF            : 1;	/* Message Handler Constraints Flag */
		unsigned int                : 4;
		unsigned int EDA            : 1;	/* Error Detected on Channel A */
		unsigned int LTVA           : 1;	/* Latest Transmit Violation Channel A */
		unsigned int TABA           : 1;	/* Transmission Across Boundary Channel A */
		unsigned int                : 5;
		unsigned int EDB            : 1;	/* Error Detected on Channel B */
		unsigned int LTVB           : 1;	/* Latest Transmit Violation Channel B */
		unsigned int TABB           : 1;	/* Transmission Across Boundary Channel B */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_EIR_type;
#define ERAY0_EIR	(*( ERAY0_EIR_type *) 0xf001c020u)	/* Error Service Request Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ETV            : 32;	/* Endianness Test Value */
	} B;
	int I;
	unsigned int U;

} ERAY0_ENDN_type;
#define ERAY0_ENDN	(*( ERAY0_ENDN_type *) 0xf001c3f4u)	/* Endian Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EID            : 10;	/* Even Sync ID(vsSyncIDListA,B even) */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int RXEA           : 1;	/* Received/Configured Even Sync ID on Channel A */
		/* const */ unsigned int RXEB           : 1;	/* Received/Configured Even Sync ID on Channel B */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY0_ESID01_type;
#define ERAY0_ESID01	(*( ERAY0_ESID01_type *) 0xf001c130u)	/* Even Sync ID Symbol Window 1 */
#define ERAY0_ESID02	(*( ERAY0_ESID01_type *) 0xf001c134u)	/* Even Sync ID Symbol Window 2 */
#define ERAY0_ESID03	(*( ERAY0_ESID01_type *) 0xf001c138u)	/* Even Sync ID Symbol Window 3 */
#define ERAY0_ESID04	(*( ERAY0_ESID01_type *) 0xf001c13cu)	/* Even Sync ID Symbol Window 4 */
#define ERAY0_ESID05	(*( ERAY0_ESID01_type *) 0xf001c140u)	/* Even Sync ID Symbol Window 5 */
#define ERAY0_ESID06	(*( ERAY0_ESID01_type *) 0xf001c144u)	/* Even Sync ID Symbol Window 6 */
#define ERAY0_ESID07	(*( ERAY0_ESID01_type *) 0xf001c148u)	/* Even Sync ID Symbol Window 7 */
#define ERAY0_ESID08	(*( ERAY0_ESID01_type *) 0xf001c14cu)	/* Even Sync ID Symbol Window 8 */
#define ERAY0_ESID09	(*( ERAY0_ESID01_type *) 0xf001c150u)	/* Even Sync ID Symbol Window 9 */
#define ERAY0_ESID10	(*( ERAY0_ESID01_type *) 0xf001c154u)	/* Even Sync ID Symbol Window 10 */
#define ERAY0_ESID11	(*( ERAY0_ESID01_type *) 0xf001c158u)	/* Even Sync ID Symbol Window 11 */
#define ERAY0_ESID12	(*( ERAY0_ESID01_type *) 0xf001c15cu)	/* Even Sync ID Symbol Window 12 */
#define ERAY0_ESID13	(*( ERAY0_ESID01_type *) 0xf001c160u)	/* Even Sync ID Symbol Window 13 */
#define ERAY0_ESID14	(*( ERAY0_ESID01_type *) 0xf001c164u)	/* Even Sync ID Symbol Window 14 */
#define ERAY0_ESID15	(*( ERAY0_ESID01_type *) 0xf001c168u)	/* Even Sync ID Symbol Window 15 */

typedef volatile union
{
	struct
	{ 
		unsigned int CL             : 8;	/* Critical Level */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} ERAY0_FCL_type;
#define ERAY0_FCL	(*( ERAY0_FCL_type *) 0xf001c30cu)	/* FIFO Critical Level */

typedef volatile union
{
	struct
	{ 
		unsigned int CH             : 2;	/* Channel Filter */
		unsigned int FID            : 11;	/* Frame ID Filter */
		unsigned int                : 3;
		unsigned int CYF            : 7;	/* Cycle Counter Filter */
		unsigned int RSS            : 1;	/* Reject in Static Segment */
		unsigned int RNF            : 1;	/* Reject NULL Frames */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} ERAY0_FRF_type;
#define ERAY0_FRF	(*( ERAY0_FRF_type *) 0xf001c304u)	/* FIFO Rejection Filter */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int MFID           : 11;	/* Mask Frame ID Filter */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} ERAY0_FRFM_type;
#define ERAY0_FRFM	(*( ERAY0_FRFM_type *) 0xf001c308u)	/* FIFO Rejection Filter Mask */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RFNE           : 1;	/* Receive FIFO Not Empty */
		/* const */ unsigned int RFCL           : 1;	/* Receive FIFO Critical Level */
		/* const */ unsigned int RFO            : 1;	/* Receive FIFO Overrun */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int RFFL           : 8;	/* Receive FIFO Fill Level */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY0_FSR_type;
#define ERAY0_FSR	(*( ERAY0_FSR_type *) 0xf001c318u)	/* FIFO Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int UT             : 20;	/* Microtick per Cycle(pMicroPerCycle) */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC01_type;
#define ERAY0_GTUC01	(*( ERAY0_GTUC01_type *) 0xf001c0a0u)	/* GTU Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int MPC            : 14;	/* Macrotick Per Cycle(gMacroPerCycle) */
		unsigned int                : 2;
		unsigned int SNM            : 4;	/* Sync Node Max(gSyncNodeMax) */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC02_type;
#define ERAY0_GTUC02	(*( ERAY0_GTUC02_type *) 0xf001c0a4u)	/* GTU Configuration Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int UIOA           : 8;	/* Microtick Initial Offset Channel A(pMicroInitialOffset[A]) */
		unsigned int UIOB           : 8;	/* Microtick Initial Offset Channel B (pMicroInitialOffset[B]) */
		unsigned int MIOA           : 7;	/* Macrotick Initial Offset Channel A(gMacroInitialOffset[A]) */
		unsigned int                : 1;
		unsigned int MIOB           : 7;	/* Macrotick Initial Offset Channel B(gMacroInitialOffset[B]) */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC03_type;
#define ERAY0_GTUC03	(*( ERAY0_GTUC03_type *) 0xf001c0a8u)	/* GTU Configuration Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int NIT            : 14;	/* Network Idle Time Start(gMacroPerCycle - gdNIT - 1) */
		unsigned int                : 2;
		unsigned int OCS            : 14;	/* Offset Correction Start (gOffsetCorrectionStart - 1) */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC04_type;
#define ERAY0_GTUC04	(*( ERAY0_GTUC04_type *) 0xf001c0acu)	/* GTU Configuration Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int DCA            : 8;	/* Delay Compensation Channel A(pDelayCompensation[A]) */
		unsigned int DCB            : 8;	/* Delay Compensation Channel B (pDelayCompensation[B]) */
		unsigned int CDD            : 5;	/* Cluster Drift Damping(pClusterDriftDamping) */
		unsigned int                : 3;
		unsigned int DEC            : 8;	/* Decoding Correction(pDecodingCorrection) */
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC05_type;
#define ERAY0_GTUC05	(*( ERAY0_GTUC05_type *) 0xf001c0b0u)	/* GTU Configuration Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int ASR            : 11;	/* Accepted Startup Range(pdAcceptedStartupRange) */
		unsigned int                : 5;
		unsigned int MOD            : 11;	/* Maximum Oscillator Drift(pdMaxDrift)1) */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC06_type;
#define ERAY0_GTUC06	(*( ERAY0_GTUC06_type *) 0xf001c0b4u)	/* GTU Configuration Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int SSL            : 10;	/* Static Slot Length(gdStaticSlot) */
		unsigned int                : 6;
		unsigned int NSS            : 10;	/* Number of Static Slots(gNumberOfStaticSlots) */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC07_type;
#define ERAY0_GTUC07	(*( ERAY0_GTUC07_type *) 0xf001c0b8u)	/* GTU Configuration Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSL            : 6;	/* Minislot Length(gdMinislot) */
		unsigned int                : 10;
		unsigned int NMS            : 13;	/* Number of Minislots(gNumberOfMinislots) */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC08_type;
#define ERAY0_GTUC08	(*( ERAY0_GTUC08_type *) 0xf001c0bcu)	/* GTU Configuration Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int APO            : 6;	/* Action Point Offset(gdActionPointOffset) */
		unsigned int                : 2;
		unsigned int MAPO           : 5;	/* Minislot Action Point Offset (gd Minislot Action Point Offset) */
		unsigned int                : 3;
		unsigned int DSI            : 2;	/* Dynamic Slot Idle Phase (gdDynamicSlotIdlePhase) */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC09_type;
#define ERAY0_GTUC09	(*( ERAY0_GTUC09_type *) 0xf001c0c0u)	/* GTU Configuration Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int MOC            : 14;	/* Maximum Offset Correction(pOffsetCorrectionOut) */
		unsigned int                : 2;
		unsigned int MRC            : 11;	/* Maximum Rate Correction (pRateCorrectionOut) */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC10_type;
#define ERAY0_GTUC10	(*( ERAY0_GTUC10_type *) 0xf001c0c4u)	/* GTU Configuration Register 10 */

typedef volatile union
{
	struct
	{ 
		unsigned int EOCC           : 2;	/* External Offset Correction Control(pExternOffsetControl) */
		unsigned int                : 6;
		unsigned int ERCC           : 2;	/* External Rate Correction Control(pExternRateControl) */
		unsigned int                : 6;
		unsigned int EOC            : 3;	/* External Offset Correction(pExternOffsetCorrection) */
		unsigned int                : 5;
		unsigned int ERC            : 3;	/* External Rate Correction (pExternRateCorrection) */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_GTUC11_type;
#define ERAY0_GTUC11	(*( ERAY0_GTUC11_type *) 0xf001c0c8u)	/* GTU Configuration Register 11 */

typedef volatile union
{
	struct
	{ 
		unsigned int LHSH           : 1;	/* Load Header Section Host */
		unsigned int LDSH           : 1;	/* Load Data Section Host */
		unsigned int STXRH          : 1;	/* Set Transmission Request Host */
		unsigned int                : 13;
		/* const */ unsigned int LHSS           : 1;	/* Load Header Section Shadow */
		/* const */ unsigned int LDSS           : 1;	/* Load Data Section Shadow */
		/* const */ unsigned int STXRS          : 1;	/* Transmission Request Shadow */
		unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} ERAY0_IBCM_type;
#define ERAY0_IBCM	(*( ERAY0_IBCM_type *) 0xf001c510u)	/* Input Buffer Command Mask */

typedef volatile union
{
	struct
	{ 
		unsigned int IBRH           : 7;	/* Input Buffer Request Host */
		unsigned int                : 8;
		/* const */ unsigned int IBSYH          : 1;	/* Input Buffer Busy Host */
		/* const */ unsigned int IBRS           : 7;	/* Input Buffer Request Shadow */
		unsigned int                : 8;
		/* const */ unsigned int IBSYS          : 1;	/* Input Buffer Busy Shadow */
	} B;
	int I;
	unsigned int U;

} ERAY0_IBCR_type;
#define ERAY0_IBCR	(*( ERAY0_IBCR_type *) 0xf001c514u)	/* Input Buffer Command Request */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} ERAY0_ID_type;
#define ERAY0_ID	(*( ERAY0_ID_type *) 0xf001c008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EINT0          : 1;	/* Enable Service Request Line 0(INT0SRC) */
		unsigned int EINT1          : 1;	/* Enable Service Request Line 1(INT1SRC) */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} ERAY0_ILE_type;
#define ERAY0_ILE	(*( ERAY0_ILE_type *) 0xf001c040u)	/* Service Request Line Enable */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} ERAY0_KRST0_type;
#define ERAY0_KRST0	(*( ERAY0_KRST0_type *) 0xf001c8f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ERAY0_KRST1_type;
#define ERAY0_KRST1	(*( ERAY0_KRST1_type *) 0xf001c8f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} ERAY0_KRSTCLR_type;
#define ERAY0_KRSTCLR	(*( ERAY0_KRSTCLR_type *) 0xf001c8ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLK            : 8;	/* Configuration Lock Key */
		unsigned int TMK            : 8;	/* Test Mode Key */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY0_LCK_type;
#define ERAY0_LCK	(*( ERAY0_LCK_type *) 0xf001c01cu)	/* Lock Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LDTA           : 11;	/* Last Dynamic Transmission Channel A */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int LDTB           : 11;	/* Last Dynamic Transmission Channel B */
		/* const */ unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_LDTS_type;
#define ERAY0_LDTS	(*( ERAY0_LDTS_type *) 0xf001c314u)	/* Last Dynamic Transmit Slot */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int VFRA           : 1;	/* Valid Frame Received on Channel A(vSS!ValidFrameA) */
		/* const */ unsigned int VFRB           : 1;	/* Valid Frame Received on Channel B(vSS!ValidFrameB) */
		/* const */ unsigned int SEOA           : 1;	/* Syntax Error Observed on Channel A(vSS!SyntaxErrorA) */
		/* const */ unsigned int SEOB           : 1;	/* Syntax Error Observed on Channel B(vSS!SyntaxErrorB) */
		/* const */ unsigned int CEOA           : 1;	/* Content Error Observed on Channel A(vSS!ContentErrorA) */
		/* const */ unsigned int CEOB           : 1;	/* Content Error Observed on Channel B(vSS!ContentErrorB) */
		/* const */ unsigned int SVOA           : 1;	/* Slot Boundary Violation Observed on Channel A(vSS!BViolationA) */
		/* const */ unsigned int SVOB           : 1;	/* Slot Boundary Violation Observed on Channel B(vSS!BViolationB) */
		/* const */ unsigned int TCIA           : 1;	/* Transmission Conflict Indication Channel A(vSS!TxConflictA) */
		/* const */ unsigned int TCIB           : 1;	/* Transmission Conflict Indication Channel B(vSS!TxConflictB) */
		/* const */ unsigned int ESA            : 1;	/* Empty Slot Channel A */
		/* const */ unsigned int ESB            : 1;	/* Empty Slot Channel B */
		/* const */ unsigned int MLST           : 1;	/* Message Lost */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int FTA            : 1;	/* Frame Transmitted on Channel A */
		/* const */ unsigned int FTB            : 1;	/* Frame Transmitted on Channel B */
		/* const */ unsigned int CCS            : 6;	/* Cycle Count Status */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int RCIS           : 1;	/* Received on Channel Indicator Status(vSS!Channel) */
		/* const */ unsigned int SFIS           : 1;	/* Startup Frame Indicator Status(vRF!Header!SuFIndicator) */
		/* const */ unsigned int SYNS           : 1;	/* SYNC Frame Indicator Status(vRF!Header!SyFIndicator) */
		/* const */ unsigned int NFIS           : 1;	/* NULL Frame Indicator Status(vRF!Header!NFIndicator) */
		/* const */ unsigned int PPIS           : 1;	/* Payload Preamble Indictor Status(vRF!Header!PPIndicator) */
		/* const */ unsigned int RESS           : 1;	/* Reserved Bit Status(vRF!Header!Reserved) */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_MBS_type;
#define ERAY0_MBS	(*( ERAY0_MBS_type *) 0xf001c70cu)	/* Message Buffer Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MBC0           : 1;	/* Message Buffer Status Changed 0 (n = 0-31) */
		/* const */ unsigned int MBC1           : 1;	/* Message Buffer Status Changed 1 (n = 0-31) */
		/* const */ unsigned int MBC2           : 1;	/* Message Buffer Status Changed 2 (n = 0-31) */
		/* const */ unsigned int MBC3           : 1;	/* Message Buffer Status Changed 3 (n = 0-31) */
		/* const */ unsigned int MBC4           : 1;	/* Message Buffer Status Changed 4 (n = 0-31) */
		/* const */ unsigned int MBC5           : 1;	/* Message Buffer Status Changed 5 (n = 0-31) */
		/* const */ unsigned int MBC6           : 1;	/* Message Buffer Status Changed 6 (n = 0-31) */
		/* const */ unsigned int MBC7           : 1;	/* Message Buffer Status Changed 7 (n = 0-31) */
		/* const */ unsigned int MBC8           : 1;	/* Message Buffer Status Changed 8 (n = 0-31) */
		/* const */ unsigned int MBC9           : 1;	/* Message Buffer Status Changed 9 (n = 0-31) */
		/* const */ unsigned int MBC10          : 1;	/* Message Buffer Status Changed 10 (n = 0-31) */
		/* const */ unsigned int MBC11          : 1;	/* Message Buffer Status Changed 11 (n = 0-31) */
		/* const */ unsigned int MBC12          : 1;	/* Message Buffer Status Changed 12 (n = 0-31) */
		/* const */ unsigned int MBC13          : 1;	/* Message Buffer Status Changed 13 (n = 0-31) */
		/* const */ unsigned int MBC14          : 1;	/* Message Buffer Status Changed 14 (n = 0-31) */
		/* const */ unsigned int MBC15          : 1;	/* Message Buffer Status Changed 15 (n = 0-31) */
		/* const */ unsigned int MBC16          : 1;	/* Message Buffer Status Changed 16 (n = 0-31) */
		/* const */ unsigned int MBC17          : 1;	/* Message Buffer Status Changed 17 (n = 0-31) */
		/* const */ unsigned int MBC18          : 1;	/* Message Buffer Status Changed 18 (n = 0-31) */
		/* const */ unsigned int MBC19          : 1;	/* Message Buffer Status Changed 19 (n = 0-31) */
		/* const */ unsigned int MBC20          : 1;	/* Message Buffer Status Changed 20 (n = 0-31) */
		/* const */ unsigned int MBC21          : 1;	/* Message Buffer Status Changed 21 (n = 0-31) */
		/* const */ unsigned int MBC22          : 1;	/* Message Buffer Status Changed 22 (n = 0-31) */
		/* const */ unsigned int MBC23          : 1;	/* Message Buffer Status Changed 23 (n = 0-31) */
		/* const */ unsigned int MBC24          : 1;	/* Message Buffer Status Changed 24 (n = 0-31) */
		/* const */ unsigned int MBC25          : 1;	/* Message Buffer Status Changed 25 (n = 0-31) */
		/* const */ unsigned int MBC26          : 1;	/* Message Buffer Status Changed 26 (n = 0-31) */
		/* const */ unsigned int MBC27          : 1;	/* Message Buffer Status Changed 27 (n = 0-31) */
		/* const */ unsigned int MBC28          : 1;	/* Message Buffer Status Changed 28 (n = 0-31) */
		/* const */ unsigned int MBC29          : 1;	/* Message Buffer Status Changed 29 (n = 0-31) */
		/* const */ unsigned int MBC30          : 1;	/* Message Buffer Status Changed 30 (n = 0-31) */
		/* const */ unsigned int MBC31          : 1;	/* Message Buffer Status Changed 31 (n = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY0_MBSC1_type;
#define ERAY0_MBSC1	(*( ERAY0_MBSC1_type *) 0xf001c340u)	/* Message Buffer Status Changed 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MBC32          : 1;	/* Message Buffer Status Changed 32 (n = 32-63) */
		/* const */ unsigned int MBC33          : 1;	/* Message Buffer Status Changed 33 (n = 32-63) */
		/* const */ unsigned int MBC34          : 1;	/* Message Buffer Status Changed 34 (n = 32-63) */
		/* const */ unsigned int MBC35          : 1;	/* Message Buffer Status Changed 35 (n = 32-63) */
		/* const */ unsigned int MBC36          : 1;	/* Message Buffer Status Changed 36 (n = 32-63) */
		/* const */ unsigned int MBC37          : 1;	/* Message Buffer Status Changed 37 (n = 32-63) */
		/* const */ unsigned int MBC38          : 1;	/* Message Buffer Status Changed 38 (n = 32-63) */
		/* const */ unsigned int MBC39          : 1;	/* Message Buffer Status Changed 39 (n = 32-63) */
		/* const */ unsigned int MBC40          : 1;	/* Message Buffer Status Changed 40 (n = 32-63) */
		/* const */ unsigned int MBC41          : 1;	/* Message Buffer Status Changed 41 (n = 32-63) */
		/* const */ unsigned int MBC42          : 1;	/* Message Buffer Status Changed 42 (n = 32-63) */
		/* const */ unsigned int MBC43          : 1;	/* Message Buffer Status Changed 43 (n = 32-63) */
		/* const */ unsigned int MBC44          : 1;	/* Message Buffer Status Changed 44 (n = 32-63) */
		/* const */ unsigned int MBC45          : 1;	/* Message Buffer Status Changed 45 (n = 32-63) */
		/* const */ unsigned int MBC46          : 1;	/* Message Buffer Status Changed 46 (n = 32-63) */
		/* const */ unsigned int MBC47          : 1;	/* Message Buffer Status Changed 47 (n = 32-63) */
		/* const */ unsigned int MBC48          : 1;	/* Message Buffer Status Changed 48 (n = 32-63) */
		/* const */ unsigned int MBC49          : 1;	/* Message Buffer Status Changed 49 (n = 32-63) */
		/* const */ unsigned int MBC50          : 1;	/* Message Buffer Status Changed 50 (n = 32-63) */
		/* const */ unsigned int MBC51          : 1;	/* Message Buffer Status Changed 51 (n = 32-63) */
		/* const */ unsigned int MBC52          : 1;	/* Message Buffer Status Changed 52 (n = 32-63) */
		/* const */ unsigned int MBC53          : 1;	/* Message Buffer Status Changed 53 (n = 32-63) */
		/* const */ unsigned int MBC54          : 1;	/* Message Buffer Status Changed 54 (n = 32-63) */
		/* const */ unsigned int MBC55          : 1;	/* Message Buffer Status Changed 55 (n = 32-63) */
		/* const */ unsigned int MBC56          : 1;	/* Message Buffer Status Changed 56 (n = 32-63) */
		/* const */ unsigned int MBC57          : 1;	/* Message Buffer Status Changed 57 (n = 32-63) */
		/* const */ unsigned int MBC58          : 1;	/* Message Buffer Status Changed 58 (n = 32-63) */
		/* const */ unsigned int MBC59          : 1;	/* Message Buffer Status Changed 59 (n = 32-63) */
		/* const */ unsigned int MBC60          : 1;	/* Message Buffer Status Changed 60 (n = 32-63) */
		/* const */ unsigned int MBC61          : 1;	/* Message Buffer Status Changed 61 (n = 32-63) */
		/* const */ unsigned int MBC62          : 1;	/* Message Buffer Status Changed 62 (n = 32-63) */
		/* const */ unsigned int MBC63          : 1;	/* Message Buffer Status Changed 63 (n = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY0_MBSC2_type;
#define ERAY0_MBSC2	(*( ERAY0_MBSC2_type *) 0xf001c344u)	/* Message Buffer Status Changed 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MBC64          : 1;	/* Message Buffer Status Changed 64 (n = 64-95) */
		/* const */ unsigned int MBC65          : 1;	/* Message Buffer Status Changed 65 (n = 64-95) */
		/* const */ unsigned int MBC66          : 1;	/* Message Buffer Status Changed 66 (n = 64-95) */
		/* const */ unsigned int MBC67          : 1;	/* Message Buffer Status Changed 67 (n = 64-95) */
		/* const */ unsigned int MBC68          : 1;	/* Message Buffer Status Changed 68 (n = 64-95) */
		/* const */ unsigned int MBC69          : 1;	/* Message Buffer Status Changed 69 (n = 64-95) */
		/* const */ unsigned int MBC70          : 1;	/* Message Buffer Status Changed 70 (n = 64-95) */
		/* const */ unsigned int MBC71          : 1;	/* Message Buffer Status Changed 71 (n = 64-95) */
		/* const */ unsigned int MBC72          : 1;	/* Message Buffer Status Changed 72 (n = 64-95) */
		/* const */ unsigned int MBC73          : 1;	/* Message Buffer Status Changed 73 (n = 64-95) */
		/* const */ unsigned int MBC74          : 1;	/* Message Buffer Status Changed 74 (n = 64-95) */
		/* const */ unsigned int MBC75          : 1;	/* Message Buffer Status Changed 75 (n = 64-95) */
		/* const */ unsigned int MBC76          : 1;	/* Message Buffer Status Changed 76 (n = 64-95) */
		/* const */ unsigned int MBC77          : 1;	/* Message Buffer Status Changed 77 (n = 64-95) */
		/* const */ unsigned int MBC78          : 1;	/* Message Buffer Status Changed 78 (n = 64-95) */
		/* const */ unsigned int MBC79          : 1;	/* Message Buffer Status Changed 79 (n = 64-95) */
		/* const */ unsigned int MBC80          : 1;	/* Message Buffer Status Changed 80 (n = 64-95) */
		/* const */ unsigned int MBC81          : 1;	/* Message Buffer Status Changed 81 (n = 64-95) */
		/* const */ unsigned int MBC82          : 1;	/* Message Buffer Status Changed 82 (n = 64-95) */
		/* const */ unsigned int MBC83          : 1;	/* Message Buffer Status Changed 83 (n = 64-95) */
		/* const */ unsigned int MBC84          : 1;	/* Message Buffer Status Changed 84 (n = 64-95) */
		/* const */ unsigned int MBC85          : 1;	/* Message Buffer Status Changed 85 (n = 64-95) */
		/* const */ unsigned int MBC86          : 1;	/* Message Buffer Status Changed 86 (n = 64-95) */
		/* const */ unsigned int MBC87          : 1;	/* Message Buffer Status Changed 87 (n = 64-95) */
		/* const */ unsigned int MBC88          : 1;	/* Message Buffer Status Changed 88 (n = 64-95) */
		/* const */ unsigned int MBC89          : 1;	/* Message Buffer Status Changed 89 (n = 64-95) */
		/* const */ unsigned int MBC90          : 1;	/* Message Buffer Status Changed 90 (n = 64-95) */
		/* const */ unsigned int MBC91          : 1;	/* Message Buffer Status Changed 91 (n = 64-95) */
		/* const */ unsigned int MBC92          : 1;	/* Message Buffer Status Changed 92 (n = 64-95) */
		/* const */ unsigned int MBC93          : 1;	/* Message Buffer Status Changed 93 (n = 64-95) */
		/* const */ unsigned int MBC94          : 1;	/* Message Buffer Status Changed 94 (n = 64-95) */
		/* const */ unsigned int MBC95          : 1;	/* Message Buffer Status Changed 95 (n = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY0_MBSC3_type;
#define ERAY0_MBSC3	(*( ERAY0_MBSC3_type *) 0xf001c348u)	/* Message Buffer Status Changed 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MBC96          : 1;	/* Message Buffer Status Changed 96 (n = 96-127) */
		/* const */ unsigned int MBC97          : 1;	/* Message Buffer Status Changed 97 (n = 96-127) */
		/* const */ unsigned int MBC98          : 1;	/* Message Buffer Status Changed 98 (n = 96-127) */
		/* const */ unsigned int MBC99          : 1;	/* Message Buffer Status Changed 99 (n = 96-127) */
		/* const */ unsigned int MBC100         : 1;	/* Message Buffer Status Changed 100 (n = 96-127) */
		/* const */ unsigned int MBC101         : 1;	/* Message Buffer Status Changed 101 (n = 96-127) */
		/* const */ unsigned int MBC102         : 1;	/* Message Buffer Status Changed 102 (n = 96-127) */
		/* const */ unsigned int MBC103         : 1;	/* Message Buffer Status Changed 103 (n = 96-127) */
		/* const */ unsigned int MBC104         : 1;	/* Message Buffer Status Changed 104 (n = 96-127) */
		/* const */ unsigned int MBC105         : 1;	/* Message Buffer Status Changed 105 (n = 96-127) */
		/* const */ unsigned int MBC106         : 1;	/* Message Buffer Status Changed 106 (n = 96-127) */
		/* const */ unsigned int MBC107         : 1;	/* Message Buffer Status Changed 107 (n = 96-127) */
		/* const */ unsigned int MBC108         : 1;	/* Message Buffer Status Changed 108 (n = 96-127) */
		/* const */ unsigned int MBC109         : 1;	/* Message Buffer Status Changed 109 (n = 96-127) */
		/* const */ unsigned int MBC110         : 1;	/* Message Buffer Status Changed 110 (n = 96-127) */
		/* const */ unsigned int MBC111         : 1;	/* Message Buffer Status Changed 111 (n = 96-127) */
		/* const */ unsigned int MBC112         : 1;	/* Message Buffer Status Changed 112 (n = 96-127) */
		/* const */ unsigned int MBC113         : 1;	/* Message Buffer Status Changed 113 (n = 96-127) */
		/* const */ unsigned int MBC114         : 1;	/* Message Buffer Status Changed 114 (n = 96-127) */
		/* const */ unsigned int MBC115         : 1;	/* Message Buffer Status Changed 115 (n = 96-127) */
		/* const */ unsigned int MBC116         : 1;	/* Message Buffer Status Changed 116 (n = 96-127) */
		/* const */ unsigned int MBC117         : 1;	/* Message Buffer Status Changed 117 (n = 96-127) */
		/* const */ unsigned int MBC118         : 1;	/* Message Buffer Status Changed 118 (n = 96-127) */
		/* const */ unsigned int MBC119         : 1;	/* Message Buffer Status Changed 119 (n = 96-127) */
		/* const */ unsigned int MBC120         : 1;	/* Message Buffer Status Changed 120 (n = 96-127) */
		/* const */ unsigned int MBC121         : 1;	/* Message Buffer Status Changed 121 (n = 96-127) */
		/* const */ unsigned int MBC122         : 1;	/* Message Buffer Status Changed 122 (n = 96-127) */
		/* const */ unsigned int MBC123         : 1;	/* Message Buffer Status Changed 123 (n = 96-127) */
		/* const */ unsigned int MBC124         : 1;	/* Message Buffer Status Changed 124 (n = 96-127) */
		/* const */ unsigned int MBC125         : 1;	/* Message Buffer Status Changed 125 (n = 96-127) */
		/* const */ unsigned int MBC126         : 1;	/* Message Buffer Status Changed 126 (n = 96-127) */
		/* const */ unsigned int MBC127         : 1;	/* Message Buffer Status Changed 127 (n = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY0_MBSC4_type;
#define ERAY0_MBSC4	(*( ERAY0_MBSC4_type *) 0xf001c34cu)	/* Message Buffer Status Changed 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int SFDL           : 7;	/* Static Frame Data Length(gPayloadLengthStatic) */
		unsigned int                : 9;
		unsigned int SLT            : 13;	/* Start of Latest Transmit(pLatestTx) */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} ERAY0_MHDC_type;
#define ERAY0_MHDC	(*( ERAY0_MHDC_type *) 0xf001c098u)	/* MHD Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SNUA           : 1;	/* Status Not Updated Channel A */
		unsigned int SNUB           : 1;	/* Status Not Updated Channel B */
		unsigned int FNFA           : 1;	/* Find Sequence Not Finished Channel A */
		unsigned int FNFB           : 1;	/* Find Sequence Not Finished Channel B */
		unsigned int TBFA           : 1;	/* Transient Buffer Access Failure A */
		unsigned int TBFB           : 1;	/* Transient Buffer Access Failure B */
		unsigned int TNSA           : 1;	/* Transmission Not Started Channel A */
		unsigned int TNSB           : 1;	/* Transmission Not Started Channel B */
		unsigned int WAHP           : 1;	/* Write Attempt to Header Partition */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} ERAY0_MHDF_type;
#define ERAY0_MHDF	(*( ERAY0_MHDF_type *) 0xf001c31cu)	/* Message Handler Constraints Flags */

typedef volatile union
{
	struct
	{ 
		unsigned int EIBF           : 1;	/* ECC Error Input Buffer RAM 1,2 */
		unsigned int EOBF           : 1;	/* ECC Error Output Buffer RAM 1,2 */
		unsigned int EMR            : 1;	/* ECC Error Message RAM */
		unsigned int ETBF1          : 1;	/* ECC Error Transient Buffer RAM A */
		unsigned int ETBF2          : 1;	/* ECC Error Transient Buffer RAM B */
		unsigned int FMBD           : 1;	/* Faulty Message Buffer Detected */
		unsigned int MFMB           : 1;	/* Multiple Faulty Message Buffers detected */
		/* const */ unsigned int CRAM           : 1;	/* Clear all internal RAM?s */
		/* const */ unsigned int FMB            : 7;	/* Faulty Message Buffer */
		unsigned int                : 1;
		/* const */ unsigned int MBT            : 7;	/* Message Buffer Transmitted */
		unsigned int                : 1;
		/* const */ unsigned int MBU            : 7;	/* Message Buffer Updated */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} ERAY0_MHDS_type;
#define ERAY0_MHDS	(*( ERAY0_MHDS_type *) 0xf001c310u)	/* Message Handler Status */

typedef volatile union
{
	struct
	{ 
		unsigned int FDB            : 8;	/* First Dynamic Buffer */
		unsigned int FFB            : 8;	/* First Buffer of FIFO */
		unsigned int LCB            : 8;	/* Last Configured Buffer */
		unsigned int SEC            : 2;	/* Secure Buffers */
		unsigned int SPLM           : 1;	/* SYNC Frame Payload Multiplex */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_MRC_type;
#define ERAY0_MRC	(*( ERAY0_MRC_type *) 0xf001c300u)	/* Message RAM Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIP0          : 1;	/* Message Buffer Status Changed Interrupt Pointer 0 (n = 0-31) */
		unsigned int MSIP1          : 1;	/* Message Buffer Status Changed Interrupt Pointer 1 (n = 0-31) */
		unsigned int MSIP2          : 1;	/* Message Buffer Status Changed Interrupt Pointer 2 (n = 0-31) */
		unsigned int MSIP3          : 1;	/* Message Buffer Status Changed Interrupt Pointer 3 (n = 0-31) */
		unsigned int MSIP4          : 1;	/* Message Buffer Status Changed Interrupt Pointer 4 (n = 0-31) */
		unsigned int MSIP5          : 1;	/* Message Buffer Status Changed Interrupt Pointer 5 (n = 0-31) */
		unsigned int MSIP6          : 1;	/* Message Buffer Status Changed Interrupt Pointer 6 (n = 0-31) */
		unsigned int MSIP7          : 1;	/* Message Buffer Status Changed Interrupt Pointer 7 (n = 0-31) */
		unsigned int MSIP8          : 1;	/* Message Buffer Status Changed Interrupt Pointer 8 (n = 0-31) */
		unsigned int MSIP9          : 1;	/* Message Buffer Status Changed Interrupt Pointer 9 (n = 0-31) */
		unsigned int MSIP10         : 1;	/* Message Buffer Status Changed Interrupt Pointer 10 (n = 0-31) */
		unsigned int MSIP11         : 1;	/* Message Buffer Status Changed Interrupt Pointer 11 (n = 0-31) */
		unsigned int MSIP12         : 1;	/* Message Buffer Status Changed Interrupt Pointer 12 (n = 0-31) */
		unsigned int MSIP13         : 1;	/* Message Buffer Status Changed Interrupt Pointer 13 (n = 0-31) */
		unsigned int MSIP14         : 1;	/* Message Buffer Status Changed Interrupt Pointer 14 (n = 0-31) */
		unsigned int MSIP15         : 1;	/* Message Buffer Status Changed Interrupt Pointer 15 (n = 0-31) */
		unsigned int MSIP16         : 1;	/* Message Buffer Status Changed Interrupt Pointer 16 (n = 0-31) */
		unsigned int MSIP17         : 1;	/* Message Buffer Status Changed Interrupt Pointer 17 (n = 0-31) */
		unsigned int MSIP18         : 1;	/* Message Buffer Status Changed Interrupt Pointer 18 (n = 0-31) */
		unsigned int MSIP19         : 1;	/* Message Buffer Status Changed Interrupt Pointer 19 (n = 0-31) */
		unsigned int MSIP20         : 1;	/* Message Buffer Status Changed Interrupt Pointer 20 (n = 0-31) */
		unsigned int MSIP21         : 1;	/* Message Buffer Status Changed Interrupt Pointer 21 (n = 0-31) */
		unsigned int MSIP22         : 1;	/* Message Buffer Status Changed Interrupt Pointer 22 (n = 0-31) */
		unsigned int MSIP23         : 1;	/* Message Buffer Status Changed Interrupt Pointer 23 (n = 0-31) */
		unsigned int MSIP24         : 1;	/* Message Buffer Status Changed Interrupt Pointer 24 (n = 0-31) */
		unsigned int MSIP25         : 1;	/* Message Buffer Status Changed Interrupt Pointer 25 (n = 0-31) */
		unsigned int MSIP26         : 1;	/* Message Buffer Status Changed Interrupt Pointer 26 (n = 0-31) */
		unsigned int MSIP27         : 1;	/* Message Buffer Status Changed Interrupt Pointer 27 (n = 0-31) */
		unsigned int MSIP28         : 1;	/* Message Buffer Status Changed Interrupt Pointer 28 (n = 0-31) */
		unsigned int MSIP29         : 1;	/* Message Buffer Status Changed Interrupt Pointer 29 (n = 0-31) */
		unsigned int MSIP30         : 1;	/* Message Buffer Status Changed Interrupt Pointer 30 (n = 0-31) */
		unsigned int MSIP31         : 1;	/* Message Buffer Status Changed Interrupt Pointer 31 (n = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY0_MSIC1_type;
#define ERAY0_MSIC1	(*( ERAY0_MSIC1_type *) 0xf001c3b8u)	/* Message Buffer Status Changed Interrupt Control 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIP32         : 1;	/* Message Buffer Status Changed Interrupt Pointer 32 (n = 32-63) */
		unsigned int MSIP33         : 1;	/* Message Buffer Status Changed Interrupt Pointer 33 (n = 32-63) */
		unsigned int MSIP34         : 1;	/* Message Buffer Status Changed Interrupt Pointer 34 (n = 32-63) */
		unsigned int MSIP35         : 1;	/* Message Buffer Status Changed Interrupt Pointer 35 (n = 32-63) */
		unsigned int MSIP36         : 1;	/* Message Buffer Status Changed Interrupt Pointer 36 (n = 32-63) */
		unsigned int MSIP37         : 1;	/* Message Buffer Status Changed Interrupt Pointer 37 (n = 32-63) */
		unsigned int MSIP38         : 1;	/* Message Buffer Status Changed Interrupt Pointer 38 (n = 32-63) */
		unsigned int MSIP39         : 1;	/* Message Buffer Status Changed Interrupt Pointer 39 (n = 32-63) */
		unsigned int MSIP40         : 1;	/* Message Buffer Status Changed Interrupt Pointer 40 (n = 32-63) */
		unsigned int MSIP41         : 1;	/* Message Buffer Status Changed Interrupt Pointer 41 (n = 32-63) */
		unsigned int MSIP42         : 1;	/* Message Buffer Status Changed Interrupt Pointer 42 (n = 32-63) */
		unsigned int MSIP43         : 1;	/* Message Buffer Status Changed Interrupt Pointer 43 (n = 32-63) */
		unsigned int MSIP44         : 1;	/* Message Buffer Status Changed Interrupt Pointer 44 (n = 32-63) */
		unsigned int MSIP45         : 1;	/* Message Buffer Status Changed Interrupt Pointer 45 (n = 32-63) */
		unsigned int MSIP46         : 1;	/* Message Buffer Status Changed Interrupt Pointer 46 (n = 32-63) */
		unsigned int MSIP47         : 1;	/* Message Buffer Status Changed Interrupt Pointer 47 (n = 32-63) */
		unsigned int MSIP48         : 1;	/* Message Buffer Status Changed Interrupt Pointer 48 (n = 32-63) */
		unsigned int MSIP49         : 1;	/* Message Buffer Status Changed Interrupt Pointer 49 (n = 32-63) */
		unsigned int MSIP50         : 1;	/* Message Buffer Status Changed Interrupt Pointer 50 (n = 32-63) */
		unsigned int MSIP51         : 1;	/* Message Buffer Status Changed Interrupt Pointer 51 (n = 32-63) */
		unsigned int MSIP52         : 1;	/* Message Buffer Status Changed Interrupt Pointer 52 (n = 32-63) */
		unsigned int MSIP53         : 1;	/* Message Buffer Status Changed Interrupt Pointer 53 (n = 32-63) */
		unsigned int MSIP54         : 1;	/* Message Buffer Status Changed Interrupt Pointer 54 (n = 32-63) */
		unsigned int MSIP55         : 1;	/* Message Buffer Status Changed Interrupt Pointer 55 (n = 32-63) */
		unsigned int MSIP56         : 1;	/* Message Buffer Status Changed Interrupt Pointer 56 (n = 32-63) */
		unsigned int MSIP57         : 1;	/* Message Buffer Status Changed Interrupt Pointer 57 (n = 32-63) */
		unsigned int MSIP58         : 1;	/* Message Buffer Status Changed Interrupt Pointer 58 (n = 32-63) */
		unsigned int MSIP59         : 1;	/* Message Buffer Status Changed Interrupt Pointer 59 (n = 32-63) */
		unsigned int MSIP60         : 1;	/* Message Buffer Status Changed Interrupt Pointer 60 (n = 32-63) */
		unsigned int MSIP61         : 1;	/* Message Buffer Status Changed Interrupt Pointer 61 (n = 32-63) */
		unsigned int MSIP62         : 1;	/* Message Buffer Status Changed Interrupt Pointer 62 (n = 32-63) */
		unsigned int MSIP63         : 1;	/* Message Buffer Status Changed Interrupt Pointer 63 (n = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY0_MSIC2_type;
#define ERAY0_MSIC2	(*( ERAY0_MSIC2_type *) 0xf001c3bcu)	/* Message Buffer Status Changed Interrupt Control 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIP64         : 1;	/* Message Buffer Status Changed Interrupt Pointer 64 (n = 64-95) */
		unsigned int MSIP65         : 1;	/* Message Buffer Status Changed Interrupt Pointer 65 (n = 64-95) */
		unsigned int MSIP66         : 1;	/* Message Buffer Status Changed Interrupt Pointer 66 (n = 64-95) */
		unsigned int MSIP67         : 1;	/* Message Buffer Status Changed Interrupt Pointer 67 (n = 64-95) */
		unsigned int MSIP68         : 1;	/* Message Buffer Status Changed Interrupt Pointer 68 (n = 64-95) */
		unsigned int MSIP69         : 1;	/* Message Buffer Status Changed Interrupt Pointer 69 (n = 64-95) */
		unsigned int MSIP70         : 1;	/* Message Buffer Status Changed Interrupt Pointer 70 (n = 64-95) */
		unsigned int MSIP71         : 1;	/* Message Buffer Status Changed Interrupt Pointer 71 (n = 64-95) */
		unsigned int MSIP72         : 1;	/* Message Buffer Status Changed Interrupt Pointer 72 (n = 64-95) */
		unsigned int MSIP73         : 1;	/* Message Buffer Status Changed Interrupt Pointer 73 (n = 64-95) */
		unsigned int MSIP74         : 1;	/* Message Buffer Status Changed Interrupt Pointer 74 (n = 64-95) */
		unsigned int MSIP75         : 1;	/* Message Buffer Status Changed Interrupt Pointer 75 (n = 64-95) */
		unsigned int MSIP76         : 1;	/* Message Buffer Status Changed Interrupt Pointer 76 (n = 64-95) */
		unsigned int MSIP77         : 1;	/* Message Buffer Status Changed Interrupt Pointer 77 (n = 64-95) */
		unsigned int MSIP78         : 1;	/* Message Buffer Status Changed Interrupt Pointer 78 (n = 64-95) */
		unsigned int MSIP79         : 1;	/* Message Buffer Status Changed Interrupt Pointer 79 (n = 64-95) */
		unsigned int MSIP80         : 1;	/* Message Buffer Status Changed Interrupt Pointer 80 (n = 64-95) */
		unsigned int MSIP81         : 1;	/* Message Buffer Status Changed Interrupt Pointer 81 (n = 64-95) */
		unsigned int MSIP82         : 1;	/* Message Buffer Status Changed Interrupt Pointer 82 (n = 64-95) */
		unsigned int MSIP83         : 1;	/* Message Buffer Status Changed Interrupt Pointer 83 (n = 64-95) */
		unsigned int MSIP84         : 1;	/* Message Buffer Status Changed Interrupt Pointer 84 (n = 64-95) */
		unsigned int MSIP85         : 1;	/* Message Buffer Status Changed Interrupt Pointer 85 (n = 64-95) */
		unsigned int MSIP86         : 1;	/* Message Buffer Status Changed Interrupt Pointer 86 (n = 64-95) */
		unsigned int MSIP87         : 1;	/* Message Buffer Status Changed Interrupt Pointer 87 (n = 64-95) */
		unsigned int MSIP88         : 1;	/* Message Buffer Status Changed Interrupt Pointer 88 (n = 64-95) */
		unsigned int MSIP89         : 1;	/* Message Buffer Status Changed Interrupt Pointer 89 (n = 64-95) */
		unsigned int MSIP90         : 1;	/* Message Buffer Status Changed Interrupt Pointer 90 (n = 64-95) */
		unsigned int MSIP91         : 1;	/* Message Buffer Status Changed Interrupt Pointer 91 (n = 64-95) */
		unsigned int MSIP92         : 1;	/* Message Buffer Status Changed Interrupt Pointer 92 (n = 64-95) */
		unsigned int MSIP93         : 1;	/* Message Buffer Status Changed Interrupt Pointer 93 (n = 64-95) */
		unsigned int MSIP94         : 1;	/* Message Buffer Status Changed Interrupt Pointer 94 (n = 64-95) */
		unsigned int MSIP95         : 1;	/* Message Buffer Status Changed Interrupt Pointer 95 (n = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY0_MSIC3_type;
#define ERAY0_MSIC3	(*( ERAY0_MSIC3_type *) 0xf001c3c0u)	/* Message Buffer Status Changed Interrupt Control 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIP96         : 1;	/* Message Buffer Status Changed Interrupt Pointer 96 (n = 96-127) */
		unsigned int MSIP97         : 1;	/* Message Buffer Status Changed Interrupt Pointer 97 (n = 96-127) */
		unsigned int MSIP98         : 1;	/* Message Buffer Status Changed Interrupt Pointer 98 (n = 96-127) */
		unsigned int MSIP99         : 1;	/* Message Buffer Status Changed Interrupt Pointer 99 (n = 96-127) */
		unsigned int MSIP100        : 1;	/* Message Buffer Status Changed Interrupt Pointer 100 (n = 96-127) */
		unsigned int MSIP101        : 1;	/* Message Buffer Status Changed Interrupt Pointer 101 (n = 96-127) */
		unsigned int MSIP102        : 1;	/* Message Buffer Status Changed Interrupt Pointer 102 (n = 96-127) */
		unsigned int MSIP103        : 1;	/* Message Buffer Status Changed Interrupt Pointer 103 (n = 96-127) */
		unsigned int MSIP104        : 1;	/* Message Buffer Status Changed Interrupt Pointer 104 (n = 96-127) */
		unsigned int MSIP105        : 1;	/* Message Buffer Status Changed Interrupt Pointer 105 (n = 96-127) */
		unsigned int MSIP106        : 1;	/* Message Buffer Status Changed Interrupt Pointer 106 (n = 96-127) */
		unsigned int MSIP107        : 1;	/* Message Buffer Status Changed Interrupt Pointer 107 (n = 96-127) */
		unsigned int MSIP108        : 1;	/* Message Buffer Status Changed Interrupt Pointer 108 (n = 96-127) */
		unsigned int MSIP109        : 1;	/* Message Buffer Status Changed Interrupt Pointer 109 (n = 96-127) */
		unsigned int MSIP110        : 1;	/* Message Buffer Status Changed Interrupt Pointer 110 (n = 96-127) */
		unsigned int MSIP111        : 1;	/* Message Buffer Status Changed Interrupt Pointer 111 (n = 96-127) */
		unsigned int MSIP112        : 1;	/* Message Buffer Status Changed Interrupt Pointer 112 (n = 96-127) */
		unsigned int MSIP113        : 1;	/* Message Buffer Status Changed Interrupt Pointer 113 (n = 96-127) */
		unsigned int MSIP114        : 1;	/* Message Buffer Status Changed Interrupt Pointer 114 (n = 96-127) */
		unsigned int MSIP115        : 1;	/* Message Buffer Status Changed Interrupt Pointer 115 (n = 96-127) */
		unsigned int MSIP116        : 1;	/* Message Buffer Status Changed Interrupt Pointer 116 (n = 96-127) */
		unsigned int MSIP117        : 1;	/* Message Buffer Status Changed Interrupt Pointer 117 (n = 96-127) */
		unsigned int MSIP118        : 1;	/* Message Buffer Status Changed Interrupt Pointer 118 (n = 96-127) */
		unsigned int MSIP119        : 1;	/* Message Buffer Status Changed Interrupt Pointer 119 (n = 96-127) */
		unsigned int MSIP120        : 1;	/* Message Buffer Status Changed Interrupt Pointer 120 (n = 96-127) */
		unsigned int MSIP121        : 1;	/* Message Buffer Status Changed Interrupt Pointer 121 (n = 96-127) */
		unsigned int MSIP122        : 1;	/* Message Buffer Status Changed Interrupt Pointer 122 (n = 96-127) */
		unsigned int MSIP123        : 1;	/* Message Buffer Status Changed Interrupt Pointer 123 (n = 96-127) */
		unsigned int MSIP124        : 1;	/* Message Buffer Status Changed Interrupt Pointer 124 (n = 96-127) */
		unsigned int MSIP125        : 1;	/* Message Buffer Status Changed Interrupt Pointer 125 (n = 96-127) */
		unsigned int MSIP126        : 1;	/* Message Buffer Status Changed Interrupt Pointer 126 (n = 96-127) */
		unsigned int MSIP127        : 1;	/* Message Buffer Status Changed Interrupt Pointer 127 (n = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY0_MSIC4_type;
#define ERAY0_MSIC4	(*( ERAY0_MSIC4_type *) 0xf001c3c4u)	/* Message Buffer Status Changed Interrupt Control 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MTV            : 14;	/* Macrotick Value(vMacrotick) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int CCV            : 6;	/* Cycle Counter Value(vCycleCounter) */
		/* const */ unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} ERAY0_MTCCV_type;
#define ERAY0_MTCCV	(*( ERAY0_MTCCV_type *) 0xf001c114u)	/* Macrotick and Cycle Counter Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ND0            : 1;	/* New Data 0 (n = 0-31) */
		/* const */ unsigned int ND1            : 1;	/* New Data 1 (n = 0-31) */
		/* const */ unsigned int ND2            : 1;	/* New Data 2 (n = 0-31) */
		/* const */ unsigned int ND3            : 1;	/* New Data 3 (n = 0-31) */
		/* const */ unsigned int ND4            : 1;	/* New Data 4 (n = 0-31) */
		/* const */ unsigned int ND5            : 1;	/* New Data 5 (n = 0-31) */
		/* const */ unsigned int ND6            : 1;	/* New Data 6 (n = 0-31) */
		/* const */ unsigned int ND7            : 1;	/* New Data 7 (n = 0-31) */
		/* const */ unsigned int ND8            : 1;	/* New Data 8 (n = 0-31) */
		/* const */ unsigned int ND9            : 1;	/* New Data 9 (n = 0-31) */
		/* const */ unsigned int ND10           : 1;	/* New Data 10 (n = 0-31) */
		/* const */ unsigned int ND11           : 1;	/* New Data 11 (n = 0-31) */
		/* const */ unsigned int ND12           : 1;	/* New Data 12 (n = 0-31) */
		/* const */ unsigned int ND13           : 1;	/* New Data 13 (n = 0-31) */
		/* const */ unsigned int ND14           : 1;	/* New Data 14 (n = 0-31) */
		/* const */ unsigned int ND15           : 1;	/* New Data 15 (n = 0-31) */
		/* const */ unsigned int ND16           : 1;	/* New Data 16 (n = 0-31) */
		/* const */ unsigned int ND17           : 1;	/* New Data 17 (n = 0-31) */
		/* const */ unsigned int ND18           : 1;	/* New Data 18 (n = 0-31) */
		/* const */ unsigned int ND19           : 1;	/* New Data 19 (n = 0-31) */
		/* const */ unsigned int ND20           : 1;	/* New Data 20 (n = 0-31) */
		/* const */ unsigned int ND21           : 1;	/* New Data 21 (n = 0-31) */
		/* const */ unsigned int ND22           : 1;	/* New Data 22 (n = 0-31) */
		/* const */ unsigned int ND23           : 1;	/* New Data 23 (n = 0-31) */
		/* const */ unsigned int ND24           : 1;	/* New Data 24 (n = 0-31) */
		/* const */ unsigned int ND25           : 1;	/* New Data 25 (n = 0-31) */
		/* const */ unsigned int ND26           : 1;	/* New Data 26 (n = 0-31) */
		/* const */ unsigned int ND27           : 1;	/* New Data 27 (n = 0-31) */
		/* const */ unsigned int ND28           : 1;	/* New Data 28 (n = 0-31) */
		/* const */ unsigned int ND29           : 1;	/* New Data 29 (n = 0-31) */
		/* const */ unsigned int ND30           : 1;	/* New Data 30 (n = 0-31) */
		/* const */ unsigned int ND31           : 1;	/* New Data 31 (n = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY0_NDAT1_type;
#define ERAY0_NDAT1	(*( ERAY0_NDAT1_type *) 0xf001c330u)	/* New Data Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ND32           : 1;	/* New Data 32 (n = 32-63) */
		/* const */ unsigned int ND33           : 1;	/* New Data 33 (n = 32-63) */
		/* const */ unsigned int ND34           : 1;	/* New Data 34 (n = 32-63) */
		/* const */ unsigned int ND35           : 1;	/* New Data 35 (n = 32-63) */
		/* const */ unsigned int ND36           : 1;	/* New Data 36 (n = 32-63) */
		/* const */ unsigned int ND37           : 1;	/* New Data 37 (n = 32-63) */
		/* const */ unsigned int ND38           : 1;	/* New Data 38 (n = 32-63) */
		/* const */ unsigned int ND39           : 1;	/* New Data 39 (n = 32-63) */
		/* const */ unsigned int ND40           : 1;	/* New Data 40 (n = 32-63) */
		/* const */ unsigned int ND41           : 1;	/* New Data 41 (n = 32-63) */
		/* const */ unsigned int ND42           : 1;	/* New Data 42 (n = 32-63) */
		/* const */ unsigned int ND43           : 1;	/* New Data 43 (n = 32-63) */
		/* const */ unsigned int ND44           : 1;	/* New Data 44 (n = 32-63) */
		/* const */ unsigned int ND45           : 1;	/* New Data 45 (n = 32-63) */
		/* const */ unsigned int ND46           : 1;	/* New Data 46 (n = 32-63) */
		/* const */ unsigned int ND47           : 1;	/* New Data 47 (n = 32-63) */
		/* const */ unsigned int ND48           : 1;	/* New Data 48 (n = 32-63) */
		/* const */ unsigned int ND49           : 1;	/* New Data 49 (n = 32-63) */
		/* const */ unsigned int ND50           : 1;	/* New Data 50 (n = 32-63) */
		/* const */ unsigned int ND51           : 1;	/* New Data 51 (n = 32-63) */
		/* const */ unsigned int ND52           : 1;	/* New Data 52 (n = 32-63) */
		/* const */ unsigned int ND53           : 1;	/* New Data 53 (n = 32-63) */
		/* const */ unsigned int ND54           : 1;	/* New Data 54 (n = 32-63) */
		/* const */ unsigned int ND55           : 1;	/* New Data 55 (n = 32-63) */
		/* const */ unsigned int ND56           : 1;	/* New Data 56 (n = 32-63) */
		/* const */ unsigned int ND57           : 1;	/* New Data 57 (n = 32-63) */
		/* const */ unsigned int ND58           : 1;	/* New Data 58 (n = 32-63) */
		/* const */ unsigned int ND59           : 1;	/* New Data 59 (n = 32-63) */
		/* const */ unsigned int ND60           : 1;	/* New Data 60 (n = 32-63) */
		/* const */ unsigned int ND61           : 1;	/* New Data 61 (n = 32-63) */
		/* const */ unsigned int ND62           : 1;	/* New Data 62 (n = 32-63) */
		/* const */ unsigned int ND63           : 1;	/* New Data 63 (n = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY0_NDAT2_type;
#define ERAY0_NDAT2	(*( ERAY0_NDAT2_type *) 0xf001c334u)	/* New Data Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ND64           : 1;	/* New Data 64 (n = 64-95) */
		/* const */ unsigned int ND65           : 1;	/* New Data 65 (n = 64-95) */
		/* const */ unsigned int ND66           : 1;	/* New Data 66 (n = 64-95) */
		/* const */ unsigned int ND67           : 1;	/* New Data 67 (n = 64-95) */
		/* const */ unsigned int ND68           : 1;	/* New Data 68 (n = 64-95) */
		/* const */ unsigned int ND69           : 1;	/* New Data 69 (n = 64-95) */
		/* const */ unsigned int ND70           : 1;	/* New Data 70 (n = 64-95) */
		/* const */ unsigned int ND71           : 1;	/* New Data 71 (n = 64-95) */
		/* const */ unsigned int ND72           : 1;	/* New Data 72 (n = 64-95) */
		/* const */ unsigned int ND73           : 1;	/* New Data 73 (n = 64-95) */
		/* const */ unsigned int ND74           : 1;	/* New Data 74 (n = 64-95) */
		/* const */ unsigned int ND75           : 1;	/* New Data 75 (n = 64-95) */
		/* const */ unsigned int ND76           : 1;	/* New Data 76 (n = 64-95) */
		/* const */ unsigned int ND77           : 1;	/* New Data 77 (n = 64-95) */
		/* const */ unsigned int ND78           : 1;	/* New Data 78 (n = 64-95) */
		/* const */ unsigned int ND79           : 1;	/* New Data 79 (n = 64-95) */
		/* const */ unsigned int ND80           : 1;	/* New Data 80 (n = 64-95) */
		/* const */ unsigned int ND81           : 1;	/* New Data 81 (n = 64-95) */
		/* const */ unsigned int ND82           : 1;	/* New Data 82 (n = 64-95) */
		/* const */ unsigned int ND83           : 1;	/* New Data 83 (n = 64-95) */
		/* const */ unsigned int ND84           : 1;	/* New Data 84 (n = 64-95) */
		/* const */ unsigned int ND85           : 1;	/* New Data 85 (n = 64-95) */
		/* const */ unsigned int ND86           : 1;	/* New Data 86 (n = 64-95) */
		/* const */ unsigned int ND87           : 1;	/* New Data 87 (n = 64-95) */
		/* const */ unsigned int ND88           : 1;	/* New Data 88 (n = 64-95) */
		/* const */ unsigned int ND89           : 1;	/* New Data 89 (n = 64-95) */
		/* const */ unsigned int ND90           : 1;	/* New Data 90 (n = 64-95) */
		/* const */ unsigned int ND91           : 1;	/* New Data 91 (n = 64-95) */
		/* const */ unsigned int ND92           : 1;	/* New Data 92 (n = 64-95) */
		/* const */ unsigned int ND93           : 1;	/* New Data 93 (n = 64-95) */
		/* const */ unsigned int ND94           : 1;	/* New Data 94 (n = 64-95) */
		/* const */ unsigned int ND95           : 1;	/* New Data 95 (n = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY0_NDAT3_type;
#define ERAY0_NDAT3	(*( ERAY0_NDAT3_type *) 0xf001c338u)	/* New Data Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ND96           : 1;	/* New Data 96 (n = 96-127) */
		/* const */ unsigned int ND97           : 1;	/* New Data 97 (n = 96-127) */
		/* const */ unsigned int ND98           : 1;	/* New Data 98 (n = 96-127) */
		/* const */ unsigned int ND99           : 1;	/* New Data 99 (n = 96-127) */
		/* const */ unsigned int ND100          : 1;	/* New Data 100 (n = 96-127) */
		/* const */ unsigned int ND101          : 1;	/* New Data 101 (n = 96-127) */
		/* const */ unsigned int ND102          : 1;	/* New Data 102 (n = 96-127) */
		/* const */ unsigned int ND103          : 1;	/* New Data 103 (n = 96-127) */
		/* const */ unsigned int ND104          : 1;	/* New Data 104 (n = 96-127) */
		/* const */ unsigned int ND105          : 1;	/* New Data 105 (n = 96-127) */
		/* const */ unsigned int ND106          : 1;	/* New Data 106 (n = 96-127) */
		/* const */ unsigned int ND107          : 1;	/* New Data 107 (n = 96-127) */
		/* const */ unsigned int ND108          : 1;	/* New Data 108 (n = 96-127) */
		/* const */ unsigned int ND109          : 1;	/* New Data 109 (n = 96-127) */
		/* const */ unsigned int ND110          : 1;	/* New Data 110 (n = 96-127) */
		/* const */ unsigned int ND111          : 1;	/* New Data 111 (n = 96-127) */
		/* const */ unsigned int ND112          : 1;	/* New Data 112 (n = 96-127) */
		/* const */ unsigned int ND113          : 1;	/* New Data 113 (n = 96-127) */
		/* const */ unsigned int ND114          : 1;	/* New Data 114 (n = 96-127) */
		/* const */ unsigned int ND115          : 1;	/* New Data 115 (n = 96-127) */
		/* const */ unsigned int ND116          : 1;	/* New Data 116 (n = 96-127) */
		/* const */ unsigned int ND117          : 1;	/* New Data 117 (n = 96-127) */
		/* const */ unsigned int ND118          : 1;	/* New Data 118 (n = 96-127) */
		/* const */ unsigned int ND119          : 1;	/* New Data 119 (n = 96-127) */
		/* const */ unsigned int ND120          : 1;	/* New Data 120 (n = 96-127) */
		/* const */ unsigned int ND121          : 1;	/* New Data 121 (n = 96-127) */
		/* const */ unsigned int ND122          : 1;	/* New Data 122 (n = 96-127) */
		/* const */ unsigned int ND123          : 1;	/* New Data 123 (n = 96-127) */
		/* const */ unsigned int ND124          : 1;	/* New Data 124 (n = 96-127) */
		/* const */ unsigned int ND125          : 1;	/* New Data 125 (n = 96-127) */
		/* const */ unsigned int ND126          : 1;	/* New Data 126 (n = 96-127) */
		/* const */ unsigned int ND127          : 1;	/* New Data 127 (n = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY0_NDAT4_type;
#define ERAY0_NDAT4	(*( ERAY0_NDAT4_type *) 0xf001c33cu)	/* New Data Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int NDIP0          : 1;	/* New Data Interrupt Pointer 0 (n = 0-31) */
		unsigned int NDIP1          : 1;	/* New Data Interrupt Pointer 1 (n = 0-31) */
		unsigned int NDIP2          : 1;	/* New Data Interrupt Pointer 2 (n = 0-31) */
		unsigned int NDIP3          : 1;	/* New Data Interrupt Pointer 3 (n = 0-31) */
		unsigned int NDIP4          : 1;	/* New Data Interrupt Pointer 4 (n = 0-31) */
		unsigned int NDIP5          : 1;	/* New Data Interrupt Pointer 5 (n = 0-31) */
		unsigned int NDIP6          : 1;	/* New Data Interrupt Pointer 6 (n = 0-31) */
		unsigned int NDIP7          : 1;	/* New Data Interrupt Pointer 7 (n = 0-31) */
		unsigned int NDIP8          : 1;	/* New Data Interrupt Pointer 8 (n = 0-31) */
		unsigned int NDIP9          : 1;	/* New Data Interrupt Pointer 9 (n = 0-31) */
		unsigned int NDIP10         : 1;	/* New Data Interrupt Pointer 10 (n = 0-31) */
		unsigned int NDIP11         : 1;	/* New Data Interrupt Pointer 11 (n = 0-31) */
		unsigned int NDIP12         : 1;	/* New Data Interrupt Pointer 12 (n = 0-31) */
		unsigned int NDIP13         : 1;	/* New Data Interrupt Pointer 13 (n = 0-31) */
		unsigned int NDIP14         : 1;	/* New Data Interrupt Pointer 14 (n = 0-31) */
		unsigned int NDIP15         : 1;	/* New Data Interrupt Pointer 15 (n = 0-31) */
		unsigned int NDIP16         : 1;	/* New Data Interrupt Pointer 16 (n = 0-31) */
		unsigned int NDIP17         : 1;	/* New Data Interrupt Pointer 17 (n = 0-31) */
		unsigned int NDIP18         : 1;	/* New Data Interrupt Pointer 18 (n = 0-31) */
		unsigned int NDIP19         : 1;	/* New Data Interrupt Pointer 19 (n = 0-31) */
		unsigned int NDIP20         : 1;	/* New Data Interrupt Pointer 20 (n = 0-31) */
		unsigned int NDIP21         : 1;	/* New Data Interrupt Pointer 21 (n = 0-31) */
		unsigned int NDIP22         : 1;	/* New Data Interrupt Pointer 22 (n = 0-31) */
		unsigned int NDIP23         : 1;	/* New Data Interrupt Pointer 23 (n = 0-31) */
		unsigned int NDIP24         : 1;	/* New Data Interrupt Pointer 24 (n = 0-31) */
		unsigned int NDIP25         : 1;	/* New Data Interrupt Pointer 25 (n = 0-31) */
		unsigned int NDIP26         : 1;	/* New Data Interrupt Pointer 26 (n = 0-31) */
		unsigned int NDIP27         : 1;	/* New Data Interrupt Pointer 27 (n = 0-31) */
		unsigned int NDIP28         : 1;	/* New Data Interrupt Pointer 28 (n = 0-31) */
		unsigned int NDIP29         : 1;	/* New Data Interrupt Pointer 29 (n = 0-31) */
		unsigned int NDIP30         : 1;	/* New Data Interrupt Pointer 30 (n = 0-31) */
		unsigned int NDIP31         : 1;	/* New Data Interrupt Pointer 31 (n = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY0_NDIC1_type;
#define ERAY0_NDIC1	(*( ERAY0_NDIC1_type *) 0xf001c3a8u)	/* New Data Interrupt Control 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int NDIP32         : 1;	/* New Data Interrupt Pointer 32 (n = 32-63) */
		unsigned int NDIP33         : 1;	/* New Data Interrupt Pointer 33 (n = 32-63) */
		unsigned int NDIP34         : 1;	/* New Data Interrupt Pointer 34 (n = 32-63) */
		unsigned int NDIP35         : 1;	/* New Data Interrupt Pointer 35 (n = 32-63) */
		unsigned int NDIP36         : 1;	/* New Data Interrupt Pointer 36 (n = 32-63) */
		unsigned int NDIP37         : 1;	/* New Data Interrupt Pointer 37 (n = 32-63) */
		unsigned int NDIP38         : 1;	/* New Data Interrupt Pointer 38 (n = 32-63) */
		unsigned int NDIP39         : 1;	/* New Data Interrupt Pointer 39 (n = 32-63) */
		unsigned int NDIP40         : 1;	/* New Data Interrupt Pointer 40 (n = 32-63) */
		unsigned int NDIP41         : 1;	/* New Data Interrupt Pointer 41 (n = 32-63) */
		unsigned int NDIP42         : 1;	/* New Data Interrupt Pointer 42 (n = 32-63) */
		unsigned int NDIP43         : 1;	/* New Data Interrupt Pointer 43 (n = 32-63) */
		unsigned int NDIP44         : 1;	/* New Data Interrupt Pointer 44 (n = 32-63) */
		unsigned int NDIP45         : 1;	/* New Data Interrupt Pointer 45 (n = 32-63) */
		unsigned int NDIP46         : 1;	/* New Data Interrupt Pointer 46 (n = 32-63) */
		unsigned int NDIP47         : 1;	/* New Data Interrupt Pointer 47 (n = 32-63) */
		unsigned int NDIP48         : 1;	/* New Data Interrupt Pointer 48 (n = 32-63) */
		unsigned int NDIP49         : 1;	/* New Data Interrupt Pointer 49 (n = 32-63) */
		unsigned int NDIP50         : 1;	/* New Data Interrupt Pointer 50 (n = 32-63) */
		unsigned int NDIP51         : 1;	/* New Data Interrupt Pointer 51 (n = 32-63) */
		unsigned int NDIP52         : 1;	/* New Data Interrupt Pointer 52 (n = 32-63) */
		unsigned int NDIP53         : 1;	/* New Data Interrupt Pointer 53 (n = 32-63) */
		unsigned int NDIP54         : 1;	/* New Data Interrupt Pointer 54 (n = 32-63) */
		unsigned int NDIP55         : 1;	/* New Data Interrupt Pointer 55 (n = 32-63) */
		unsigned int NDIP56         : 1;	/* New Data Interrupt Pointer 56 (n = 32-63) */
		unsigned int NDIP57         : 1;	/* New Data Interrupt Pointer 57 (n = 32-63) */
		unsigned int NDIP58         : 1;	/* New Data Interrupt Pointer 58 (n = 32-63) */
		unsigned int NDIP59         : 1;	/* New Data Interrupt Pointer 59 (n = 32-63) */
		unsigned int NDIP60         : 1;	/* New Data Interrupt Pointer 60 (n = 32-63) */
		unsigned int NDIP61         : 1;	/* New Data Interrupt Pointer 61 (n = 32-63) */
		unsigned int NDIP62         : 1;	/* New Data Interrupt Pointer 62 (n = 32-63) */
		unsigned int NDIP63         : 1;	/* New Data Interrupt Pointer 63 (n = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY0_NDIC2_type;
#define ERAY0_NDIC2	(*( ERAY0_NDIC2_type *) 0xf001c3acu)	/* New Data Interrupt Control 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int NDIP64         : 1;	/* New Data Interrupt Pointer 64 (n = 64-95) */
		unsigned int NDIP65         : 1;	/* New Data Interrupt Pointer 65 (n = 64-95) */
		unsigned int NDIP66         : 1;	/* New Data Interrupt Pointer 66 (n = 64-95) */
		unsigned int NDIP67         : 1;	/* New Data Interrupt Pointer 67 (n = 64-95) */
		unsigned int NDIP68         : 1;	/* New Data Interrupt Pointer 68 (n = 64-95) */
		unsigned int NDIP69         : 1;	/* New Data Interrupt Pointer 69 (n = 64-95) */
		unsigned int NDIP70         : 1;	/* New Data Interrupt Pointer 70 (n = 64-95) */
		unsigned int NDIP71         : 1;	/* New Data Interrupt Pointer 71 (n = 64-95) */
		unsigned int NDIP72         : 1;	/* New Data Interrupt Pointer 72 (n = 64-95) */
		unsigned int NDIP73         : 1;	/* New Data Interrupt Pointer 73 (n = 64-95) */
		unsigned int NDIP74         : 1;	/* New Data Interrupt Pointer 74 (n = 64-95) */
		unsigned int NDIP75         : 1;	/* New Data Interrupt Pointer 75 (n = 64-95) */
		unsigned int NDIP76         : 1;	/* New Data Interrupt Pointer 76 (n = 64-95) */
		unsigned int NDIP77         : 1;	/* New Data Interrupt Pointer 77 (n = 64-95) */
		unsigned int NDIP78         : 1;	/* New Data Interrupt Pointer 78 (n = 64-95) */
		unsigned int NDIP79         : 1;	/* New Data Interrupt Pointer 79 (n = 64-95) */
		unsigned int NDIP80         : 1;	/* New Data Interrupt Pointer 80 (n = 64-95) */
		unsigned int NDIP81         : 1;	/* New Data Interrupt Pointer 81 (n = 64-95) */
		unsigned int NDIP82         : 1;	/* New Data Interrupt Pointer 82 (n = 64-95) */
		unsigned int NDIP83         : 1;	/* New Data Interrupt Pointer 83 (n = 64-95) */
		unsigned int NDIP84         : 1;	/* New Data Interrupt Pointer 84 (n = 64-95) */
		unsigned int NDIP85         : 1;	/* New Data Interrupt Pointer 85 (n = 64-95) */
		unsigned int NDIP86         : 1;	/* New Data Interrupt Pointer 86 (n = 64-95) */
		unsigned int NDIP87         : 1;	/* New Data Interrupt Pointer 87 (n = 64-95) */
		unsigned int NDIP88         : 1;	/* New Data Interrupt Pointer 88 (n = 64-95) */
		unsigned int NDIP89         : 1;	/* New Data Interrupt Pointer 89 (n = 64-95) */
		unsigned int NDIP90         : 1;	/* New Data Interrupt Pointer 90 (n = 64-95) */
		unsigned int NDIP91         : 1;	/* New Data Interrupt Pointer 91 (n = 64-95) */
		unsigned int NDIP92         : 1;	/* New Data Interrupt Pointer 92 (n = 64-95) */
		unsigned int NDIP93         : 1;	/* New Data Interrupt Pointer 93 (n = 64-95) */
		unsigned int NDIP94         : 1;	/* New Data Interrupt Pointer 94 (n = 64-95) */
		unsigned int NDIP95         : 1;	/* New Data Interrupt Pointer 95 (n = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY0_NDIC3_type;
#define ERAY0_NDIC3	(*( ERAY0_NDIC3_type *) 0xf001c3b0u)	/* New Data Interrupt Control 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int NDIP96         : 1;	/* New Data Interrupt Pointer 96 (n = 96-127) */
		unsigned int NDIP97         : 1;	/* New Data Interrupt Pointer 97 (n = 96-127) */
		unsigned int NDIP98         : 1;	/* New Data Interrupt Pointer 98 (n = 96-127) */
		unsigned int NDIP99         : 1;	/* New Data Interrupt Pointer 99 (n = 96-127) */
		unsigned int NDIP100        : 1;	/* New Data Interrupt Pointer 100 (n = 96-127) */
		unsigned int NDIP101        : 1;	/* New Data Interrupt Pointer 101 (n = 96-127) */
		unsigned int NDIP102        : 1;	/* New Data Interrupt Pointer 102 (n = 96-127) */
		unsigned int NDIP103        : 1;	/* New Data Interrupt Pointer 103 (n = 96-127) */
		unsigned int NDIP104        : 1;	/* New Data Interrupt Pointer 104 (n = 96-127) */
		unsigned int NDIP105        : 1;	/* New Data Interrupt Pointer 105 (n = 96-127) */
		unsigned int NDIP106        : 1;	/* New Data Interrupt Pointer 106 (n = 96-127) */
		unsigned int NDIP107        : 1;	/* New Data Interrupt Pointer 107 (n = 96-127) */
		unsigned int NDIP108        : 1;	/* New Data Interrupt Pointer 108 (n = 96-127) */
		unsigned int NDIP109        : 1;	/* New Data Interrupt Pointer 109 (n = 96-127) */
		unsigned int NDIP110        : 1;	/* New Data Interrupt Pointer 110 (n = 96-127) */
		unsigned int NDIP111        : 1;	/* New Data Interrupt Pointer 111 (n = 96-127) */
		unsigned int NDIP112        : 1;	/* New Data Interrupt Pointer 112 (n = 96-127) */
		unsigned int NDIP113        : 1;	/* New Data Interrupt Pointer 113 (n = 96-127) */
		unsigned int NDIP114        : 1;	/* New Data Interrupt Pointer 114 (n = 96-127) */
		unsigned int NDIP115        : 1;	/* New Data Interrupt Pointer 115 (n = 96-127) */
		unsigned int NDIP116        : 1;	/* New Data Interrupt Pointer 116 (n = 96-127) */
		unsigned int NDIP117        : 1;	/* New Data Interrupt Pointer 117 (n = 96-127) */
		unsigned int NDIP118        : 1;	/* New Data Interrupt Pointer 118 (n = 96-127) */
		unsigned int NDIP119        : 1;	/* New Data Interrupt Pointer 119 (n = 96-127) */
		unsigned int NDIP120        : 1;	/* New Data Interrupt Pointer 120 (n = 96-127) */
		unsigned int NDIP121        : 1;	/* New Data Interrupt Pointer 121 (n = 96-127) */
		unsigned int NDIP122        : 1;	/* New Data Interrupt Pointer 122 (n = 96-127) */
		unsigned int NDIP123        : 1;	/* New Data Interrupt Pointer 123 (n = 96-127) */
		unsigned int NDIP124        : 1;	/* New Data Interrupt Pointer 124 (n = 96-127) */
		unsigned int NDIP125        : 1;	/* New Data Interrupt Pointer 125 (n = 96-127) */
		unsigned int NDIP126        : 1;	/* New Data Interrupt Pointer 126 (n = 96-127) */
		unsigned int NDIP127        : 1;	/* New Data Interrupt Pointer 127 (n = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY0_NDIC4_type;
#define ERAY0_NDIC4	(*( ERAY0_NDIC4_type *) 0xf001c3b4u)	/* New Data Interrupt Control 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int NML            : 4;	/* Network Management Vector Length(gNetworkManagementVectorLength) */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} ERAY0_NEMC_type;
#define ERAY0_NEMC	(*( ERAY0_NEMC_type *) 0xf001c08cu)	/* NEM Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NM             : 32;	/* Network Management Vector */
	} B;
	int I;
	unsigned int U;

} ERAY0_NMV1_type;
#define ERAY0_NMV1	(*( ERAY0_NMV1_type *) 0xf001c1b0u)	/* Network Management Vector 1 */
#define ERAY0_NMV2	(*( ERAY0_NMV1_type *) 0xf001c1b4u)	/* Network Management Vector 2 */
#define ERAY0_NMV3	(*( ERAY0_NMV1_type *) 0xf001c1b8u)	/* Network Management Vector 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int RHSS           : 1;	/* Read Header Section Shadow */
		unsigned int RDSS           : 1;	/* Read Data Section Shadow */
		unsigned int                : 14;
		/* const */ unsigned int RHSH           : 1;	/* Read Header Section Host */
		/* const */ unsigned int RDSH           : 1;	/* Read Data Section Host */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} ERAY0_OBCM_type;
#define ERAY0_OBCM	(*( ERAY0_OBCM_type *) 0xf001c710u)	/* Output Buffer Command Mask */

typedef volatile union
{
	struct
	{ 
		unsigned int OBRS           : 7;	/* Output Buffer Request Shadow */
		unsigned int                : 1;
		unsigned int VIEW           : 1;	/* View Shadow Buffer */
		unsigned int REQ            : 1;	/* Request Message RAM Transfer */
		unsigned int                : 5;
		/* const */ unsigned int OBSYS          : 1;	/* Output Buffer Busy Shadow */
		/* const */ unsigned int OBRH           : 7;	/* Output Buffer Request Host */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} ERAY0_OBCR_type;
#define ERAY0_OBCR	(*( ERAY0_OBCR_type *) 0xf001c714u)	/* Output Buffer Command Request */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_OCS_type;
#define ERAY0_OCS	(*( ERAY0_OCS_type *) 0xf001c8e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OCV            : 19;	/* Offset Correction Value(vOffsetCorrection) */
		/* const */ unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} ERAY0_OCV_type;
#define ERAY0_OCV	(*( ERAY0_OCV_type *) 0xf001c11cu)	/* Offset Correction Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OID            : 10;	/* Odd Sync ID(vsSyncIDListA,B odd) */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int RXOA           : 1;	/* Received Odd Sync ID on Channel A */
		/* const */ unsigned int RXOB           : 1;	/* Received Odd Sync ID on Channel B */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} ERAY0_OSID01_type;
#define ERAY0_OSID01	(*( ERAY0_OSID01_type *) 0xf001c170u)	/* Odd Sync ID Symbol Window 1 */
#define ERAY0_OSID02	(*( ERAY0_OSID01_type *) 0xf001c174u)	/* Odd Sync ID Symbol Window 2 */
#define ERAY0_OSID03	(*( ERAY0_OSID01_type *) 0xf001c178u)	/* Odd Sync ID Symbol Window 3 */
#define ERAY0_OSID04	(*( ERAY0_OSID01_type *) 0xf001c17cu)	/* Odd Sync ID Symbol Window 4 */
#define ERAY0_OSID05	(*( ERAY0_OSID01_type *) 0xf001c180u)	/* Odd Sync ID Symbol Window 5 */
#define ERAY0_OSID06	(*( ERAY0_OSID01_type *) 0xf001c184u)	/* Odd Sync ID Symbol Window 6 */
#define ERAY0_OSID07	(*( ERAY0_OSID01_type *) 0xf001c188u)	/* Odd Sync ID Symbol Window 7 */
#define ERAY0_OSID08	(*( ERAY0_OSID01_type *) 0xf001c18cu)	/* Odd Sync ID Symbol Window 8 */
#define ERAY0_OSID09	(*( ERAY0_OSID01_type *) 0xf001c190u)	/* Odd Sync ID Symbol Window 9 */
#define ERAY0_OSID10	(*( ERAY0_OSID01_type *) 0xf001c194u)	/* Odd Sync ID Symbol Window 10 */
#define ERAY0_OSID11	(*( ERAY0_OSID01_type *) 0xf001c198u)	/* Odd Sync ID Symbol Window 11 */
#define ERAY0_OSID12	(*( ERAY0_OSID01_type *) 0xf001c19cu)	/* Odd Sync ID Symbol Window 12 */
#define ERAY0_OSID13	(*( ERAY0_OSID01_type *) 0xf001c1a0u)	/* Odd Sync ID Symbol Window 13 */
#define ERAY0_OSID14	(*( ERAY0_OSID01_type *) 0xf001c1a4u)	/* Odd Sync ID Symbol Window 14 */
#define ERAY0_OSID15	(*( ERAY0_OSID01_type *) 0xf001c1a8u)	/* Odd Sync ID Symbol Window 15 */

typedef volatile union
{
	struct
	{ 
		unsigned int OTGB0          : 2;	/* Trigger Set for OTGB0 */
		unsigned int                : 6;
		unsigned int OTGB1          : 2;	/* Trigger Set for OTGB1 */
		unsigned int                : 6;
		unsigned int OTGB2          : 1;	/* Trigger Set for OTGB2 */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} ERAY0_OTSS_type;
#define ERAY0_OTSS	(*( ERAY0_OTSS_type *) 0xf001c870u)	/* OCDS Trigger Set Select */

typedef volatile union
{
	struct
	{ 
		unsigned int TSST           : 4;	/* Transmission Start Sequence Transmitter(gdTSSTransmitter) */
		unsigned int CASM           : 7;	/* Collision Avoidance Symbol Maximum (gdCASRxLowMax) */
		unsigned int                : 1;
		unsigned int SPP            : 2;	/* Strobe Point Position */
		unsigned int BRP            : 2;	/* Baud Rate Prescaler (gdSampleClockPeriod, pSamplePerMicrotick) */
		unsigned int RXW            : 9;	/* Wakeup Symbol Receive Window Length (gdWakeupSymbolRxWindow) */
		unsigned int                : 1;
		unsigned int RWP            : 6;	/* Repetitions of Tx Wakeup Pattern (pWakeupPattern) */
	} B;
	int I;
	unsigned int U;

} ERAY0_PRTC1_type;
#define ERAY0_PRTC1	(*( ERAY0_PRTC1_type *) 0xf001c090u)	/* PRT Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int RXI            : 6;	/* Wakeup Symbol Receive Idle(gdWakeupSymbolRxIdle) */
		unsigned int                : 2;
		unsigned int RXL            : 6;	/* Wakeup Symbol Receive Low (gdWakeupSymbolRxLow) */
		unsigned int                : 2;
		unsigned int TXI            : 8;	/* Wakeup Symbol Transmit Idle (gdWakeupSymbolTxIdle) */
		unsigned int TXL            : 6;	/* Wakeup Symbol Transmit Low (gdWakeupSymbolTxLow) */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_PRTC2_type;
#define ERAY0_PRTC2	(*( ERAY0_PRTC2_type *) 0xf001c094u)	/* PRT Configuration Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RCV            : 12;	/* Rate Correction Value(vRateCorrection) */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ERAY0_RCV_type;
#define ERAY0_RCV	(*( ERAY0_RCV_type *) 0xf001c118u)	/* Rate Correction Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MDRB0          : 8;	/* 32-Bit Word nn, Byte 0 */
		/* const */ unsigned int MDRB1          : 8;	/* 32-Bit Word nn, Byte 1 */
		/* const */ unsigned int MDRB2          : 8;	/* 32-Bit Word nn, Byte 2 */
		/* const */ unsigned int MDRB3          : 8;	/* 32-Bit Word nn, Byte 3 */
	} B;
	int I;
	unsigned int U;

} ERAY0_RDDS01_type;
#define ERAY0_RDDS01	(*( ERAY0_RDDS01_type *) 0xf001c600u)	/* Read Data Section 1 */
#define ERAY0_RDDS02	(*( ERAY0_RDDS01_type *) 0xf001c604u)	/* Read Data Section 2 */
#define ERAY0_RDDS03	(*( ERAY0_RDDS01_type *) 0xf001c608u)	/* Read Data Section 3 */
#define ERAY0_RDDS04	(*( ERAY0_RDDS01_type *) 0xf001c60cu)	/* Read Data Section 4 */
#define ERAY0_RDDS05	(*( ERAY0_RDDS01_type *) 0xf001c610u)	/* Read Data Section 5 */
#define ERAY0_RDDS06	(*( ERAY0_RDDS01_type *) 0xf001c614u)	/* Read Data Section 6 */
#define ERAY0_RDDS07	(*( ERAY0_RDDS01_type *) 0xf001c618u)	/* Read Data Section 7 */
#define ERAY0_RDDS08	(*( ERAY0_RDDS01_type *) 0xf001c61cu)	/* Read Data Section 8 */
#define ERAY0_RDDS09	(*( ERAY0_RDDS01_type *) 0xf001c620u)	/* Read Data Section 9 */
#define ERAY0_RDDS10	(*( ERAY0_RDDS01_type *) 0xf001c624u)	/* Read Data Section 10 */
#define ERAY0_RDDS11	(*( ERAY0_RDDS01_type *) 0xf001c628u)	/* Read Data Section 11 */
#define ERAY0_RDDS12	(*( ERAY0_RDDS01_type *) 0xf001c62cu)	/* Read Data Section 12 */
#define ERAY0_RDDS13	(*( ERAY0_RDDS01_type *) 0xf001c630u)	/* Read Data Section 13 */
#define ERAY0_RDDS14	(*( ERAY0_RDDS01_type *) 0xf001c634u)	/* Read Data Section 14 */
#define ERAY0_RDDS15	(*( ERAY0_RDDS01_type *) 0xf001c638u)	/* Read Data Section 15 */
#define ERAY0_RDDS16	(*( ERAY0_RDDS01_type *) 0xf001c63cu)	/* Read Data Section 16 */
#define ERAY0_RDDS17	(*( ERAY0_RDDS01_type *) 0xf001c640u)	/* Read Data Section 17 */
#define ERAY0_RDDS18	(*( ERAY0_RDDS01_type *) 0xf001c644u)	/* Read Data Section 18 */
#define ERAY0_RDDS19	(*( ERAY0_RDDS01_type *) 0xf001c648u)	/* Read Data Section 19 */
#define ERAY0_RDDS20	(*( ERAY0_RDDS01_type *) 0xf001c64cu)	/* Read Data Section 20 */
#define ERAY0_RDDS21	(*( ERAY0_RDDS01_type *) 0xf001c650u)	/* Read Data Section 21 */
#define ERAY0_RDDS22	(*( ERAY0_RDDS01_type *) 0xf001c654u)	/* Read Data Section 22 */
#define ERAY0_RDDS23	(*( ERAY0_RDDS01_type *) 0xf001c658u)	/* Read Data Section 23 */
#define ERAY0_RDDS24	(*( ERAY0_RDDS01_type *) 0xf001c65cu)	/* Read Data Section 24 */
#define ERAY0_RDDS25	(*( ERAY0_RDDS01_type *) 0xf001c660u)	/* Read Data Section 25 */
#define ERAY0_RDDS26	(*( ERAY0_RDDS01_type *) 0xf001c664u)	/* Read Data Section 26 */
#define ERAY0_RDDS27	(*( ERAY0_RDDS01_type *) 0xf001c668u)	/* Read Data Section 27 */
#define ERAY0_RDDS28	(*( ERAY0_RDDS01_type *) 0xf001c66cu)	/* Read Data Section 28 */
#define ERAY0_RDDS29	(*( ERAY0_RDDS01_type *) 0xf001c670u)	/* Read Data Section 29 */
#define ERAY0_RDDS30	(*( ERAY0_RDDS01_type *) 0xf001c674u)	/* Read Data Section 30 */
#define ERAY0_RDDS31	(*( ERAY0_RDDS01_type *) 0xf001c678u)	/* Read Data Section 31 */
#define ERAY0_RDDS32	(*( ERAY0_RDDS01_type *) 0xf001c67cu)	/* Read Data Section 32 */
#define ERAY0_RDDS33	(*( ERAY0_RDDS01_type *) 0xf001c680u)	/* Read Data Section 33 */
#define ERAY0_RDDS34	(*( ERAY0_RDDS01_type *) 0xf001c684u)	/* Read Data Section 34 */
#define ERAY0_RDDS35	(*( ERAY0_RDDS01_type *) 0xf001c688u)	/* Read Data Section 35 */
#define ERAY0_RDDS36	(*( ERAY0_RDDS01_type *) 0xf001c68cu)	/* Read Data Section 36 */
#define ERAY0_RDDS37	(*( ERAY0_RDDS01_type *) 0xf001c690u)	/* Read Data Section 37 */
#define ERAY0_RDDS38	(*( ERAY0_RDDS01_type *) 0xf001c694u)	/* Read Data Section 38 */
#define ERAY0_RDDS39	(*( ERAY0_RDDS01_type *) 0xf001c698u)	/* Read Data Section 39 */
#define ERAY0_RDDS40	(*( ERAY0_RDDS01_type *) 0xf001c69cu)	/* Read Data Section 40 */
#define ERAY0_RDDS41	(*( ERAY0_RDDS01_type *) 0xf001c6a0u)	/* Read Data Section 41 */
#define ERAY0_RDDS42	(*( ERAY0_RDDS01_type *) 0xf001c6a4u)	/* Read Data Section 42 */
#define ERAY0_RDDS43	(*( ERAY0_RDDS01_type *) 0xf001c6a8u)	/* Read Data Section 43 */
#define ERAY0_RDDS44	(*( ERAY0_RDDS01_type *) 0xf001c6acu)	/* Read Data Section 44 */
#define ERAY0_RDDS45	(*( ERAY0_RDDS01_type *) 0xf001c6b0u)	/* Read Data Section 45 */
#define ERAY0_RDDS46	(*( ERAY0_RDDS01_type *) 0xf001c6b4u)	/* Read Data Section 46 */
#define ERAY0_RDDS47	(*( ERAY0_RDDS01_type *) 0xf001c6b8u)	/* Read Data Section 47 */
#define ERAY0_RDDS48	(*( ERAY0_RDDS01_type *) 0xf001c6bcu)	/* Read Data Section 48 */
#define ERAY0_RDDS49	(*( ERAY0_RDDS01_type *) 0xf001c6c0u)	/* Read Data Section 49 */
#define ERAY0_RDDS50	(*( ERAY0_RDDS01_type *) 0xf001c6c4u)	/* Read Data Section 50 */
#define ERAY0_RDDS51	(*( ERAY0_RDDS01_type *) 0xf001c6c8u)	/* Read Data Section 51 */
#define ERAY0_RDDS52	(*( ERAY0_RDDS01_type *) 0xf001c6ccu)	/* Read Data Section 52 */
#define ERAY0_RDDS53	(*( ERAY0_RDDS01_type *) 0xf001c6d0u)	/* Read Data Section 53 */
#define ERAY0_RDDS54	(*( ERAY0_RDDS01_type *) 0xf001c6d4u)	/* Read Data Section 54 */
#define ERAY0_RDDS55	(*( ERAY0_RDDS01_type *) 0xf001c6d8u)	/* Read Data Section 55 */
#define ERAY0_RDDS56	(*( ERAY0_RDDS01_type *) 0xf001c6dcu)	/* Read Data Section 56 */
#define ERAY0_RDDS57	(*( ERAY0_RDDS01_type *) 0xf001c6e0u)	/* Read Data Section 57 */
#define ERAY0_RDDS58	(*( ERAY0_RDDS01_type *) 0xf001c6e4u)	/* Read Data Section 58 */
#define ERAY0_RDDS59	(*( ERAY0_RDDS01_type *) 0xf001c6e8u)	/* Read Data Section 59 */
#define ERAY0_RDDS60	(*( ERAY0_RDDS01_type *) 0xf001c6ecu)	/* Read Data Section 60 */
#define ERAY0_RDDS61	(*( ERAY0_RDDS01_type *) 0xf001c6f0u)	/* Read Data Section 61 */
#define ERAY0_RDDS62	(*( ERAY0_RDDS01_type *) 0xf001c6f4u)	/* Read Data Section 62 */
#define ERAY0_RDDS63	(*( ERAY0_RDDS01_type *) 0xf001c6f8u)	/* Read Data Section 63 */
#define ERAY0_RDDS64	(*( ERAY0_RDDS01_type *) 0xf001c6fcu)	/* Read Data Section 64 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FID            : 11;	/* Frame ID */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int CYC            : 7;	/* Cycle Code */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CHA            : 1;	/* Channel Filter Control A */
		/* const */ unsigned int CHB            : 1;	/* Channel Filter Control B */
		/* const */ unsigned int CFG            : 1;	/* Message Buffer Direction Configuration Bit */
		/* const */ unsigned int PPIT           : 1;	/* Payload Preamble Indicator Transmit */
		/* const */ unsigned int TXM            : 1;	/* Transmission Mode */
		/* const */ unsigned int MBI            : 1;	/* Message Buffer Service Request */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_RDHS1_type;
#define ERAY0_RDHS1	(*( ERAY0_RDHS1_type *) 0xf001c700u)	/* Read Header Section 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CRC            : 11;	/* Header CRC(vRF!Header!HeaderCRC) */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int PLC            : 7;	/* Payload Length Configured */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int PLR            : 7;	/* Payload Length Received(vRF!Header!Length) */
		/* const */ unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} ERAY0_RDHS2_type;
#define ERAY0_RDHS2	(*( ERAY0_RDHS2_type *) 0xf001c704u)	/* Read Header Section 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DP             : 11;	/* Data Pointer */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int RCC            : 6;	/* Receive Cycle Count(vRF!Header!CycleCount) */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int RCI            : 1;	/* Received on Channel Indicator(vSS!Channel) */
		/* const */ unsigned int SFI            : 1;	/* Startup Frame Indicator(vRF!Header!SuFIndicator) */
		/* const */ unsigned int SYN            : 1;	/* SYNC Frame Indicator(vRF!Header!SyFIndicator) */
		/* const */ unsigned int NFI            : 1;	/* NULL Frame Indicator(vRF!Header!NFIndicator) */
		/* const */ unsigned int PPI            : 1;	/* Payload Preamble Indicator(vRF!Header!PPIndicator) */
		/* const */ unsigned int RES            : 1;	/* Reserved Bit(vRF!Header!Reserved) */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_RDHS3_type;
#define ERAY0_RDHS3	(*( ERAY0_RDHS3_type *) 0xf001c708u)	/* Read Header Section 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SCCA           : 11;	/* Slot Counter Channel A(vSlotCounter[A]) */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int SCCB           : 11;	/* Slot Counter Channel B(vSlotCounter[B]) */
		/* const */ unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_SCV_type;
#define ERAY0_SCV	(*( ERAY0_SCV_type *) 0xf001c110u)	/* Slot Counter Value */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int VSAE           : 4;	/* Valid SYNC Frames Channel A, even communication cycle */
		/* const */ unsigned int VSAO           : 4;	/* Valid SYNC Frames Channel A, odd communication cycle */
		/* const */ unsigned int VSBE           : 4;	/* Valid SYNC Frames Channel B, even communication cycle */
		/* const */ unsigned int VSBO           : 4;	/* Valid SYNC Frames Channel B, odd communication cycle */
		/* const */ unsigned int MOCS           : 1;	/* Missing Offset Correction Signal */
		/* const */ unsigned int OCLR           : 1;	/* Offset Correction Limit Reached */
		/* const */ unsigned int MRCS           : 1;	/* Missing Rate Correction Signal */
		/* const */ unsigned int RCLR           : 1;	/* Rate Correction Limit Reached */
		/* const */ unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} ERAY0_SFS_type;
#define ERAY0_SFS	(*( ERAY0_SFS_type *) 0xf001c120u)	/* SYNC Frame Status */

typedef volatile union
{
	struct
	{ 
		unsigned int WSTE           : 1;	/* Wakeup Status Service Request Enable */
		unsigned int CASE           : 1;	/* Collision Avoidance Symbol Service Request Enable */
		unsigned int CYCSE          : 1;	/* Cycle Start Service Request Enable */
		unsigned int TXIE           : 1;	/* Transmit Service Request Enable */
		unsigned int RXIE           : 1;	/* Receive Service Request Enable */
		unsigned int RFNEE          : 1;	/* Receive FIFO Not Empty Service Request Enable */
		unsigned int RFCLE          : 1;	/* Receive FIFO Critical Level Service Request Enable */
		unsigned int NMVCE          : 1;	/* Network Management Vector Changed Service Request Enable */
		unsigned int TI0E           : 1;	/* Timer Service Request 0 Enable */
		unsigned int TI1E           : 1;	/* Timer Service Request 1 Enable */
		unsigned int TIBCE          : 1;	/* Transfer Input Buffer Completed Service Request Enable */
		unsigned int TOBCE          : 1;	/* Transfer Output Buffer Completed Service Request Enable */
		unsigned int SWEE           : 1;	/* Stop Watch Event Service Request Enable */
		unsigned int SUCSE          : 1;	/* Startup Completed Successfully Service Request Enable */
		unsigned int MBSIE          : 1;	/* Message Buffer Status Service Request Enable */
		unsigned int SDSE           : 1;	/* Start of Dynamic Segment Service Request Enable */
		unsigned int WUPAE          : 1;	/* Wakeup Pattern Channel A Service Request Enable */
		unsigned int MTSAE          : 1;	/* Media Access Test Symbol Channel A Service Request Enable */
		unsigned int                : 6;
		unsigned int WUPBE          : 1;	/* Wakeup Pattern Channel B Service Request Enable */
		unsigned int MTSBE          : 1;	/* Media Access Test Symbol Channel B Service Request Enable */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY0_SIER_type;
#define ERAY0_SIER	(*( ERAY0_SIER_type *) 0xf001c03cu)	/* Status Service Request Enable Reset */

typedef volatile union
{
	struct
	{ 
		unsigned int WSTE           : 1;	/* Wakeup Status Service Request Enable */
		unsigned int CASE           : 1;	/* Collision Avoidance Symbol Service Request Enable */
		unsigned int CYCSE          : 1;	/* Cycle Start Service Request Enable */
		unsigned int TXIE           : 1;	/* Transmit Service Request Enable */
		unsigned int RXIE           : 1;	/* Receive Service Request Enable */
		unsigned int RFNEE          : 1;	/* Receive FIFO Not Empty Service Request Enable */
		unsigned int RFCLE          : 1;	/* Receive FIFO Critical Level Service Request Enable */
		unsigned int NMVCE          : 1;	/* Network Management Vector Changed Service Request Enable */
		unsigned int TI0E           : 1;	/* Timer Service Request 0 Enable */
		unsigned int TI1E           : 1;	/* Timer Service Request 1 Enable */
		unsigned int TIBCE          : 1;	/* Transfer Input Buffer Completed Service Request Enable */
		unsigned int TOBCE          : 1;	/* Transfer Output Buffer Completed Service Request Enable */
		unsigned int SWEE           : 1;	/* Stop Watch Event Service Request Enable */
		unsigned int SUCSE          : 1;	/* Startup Completed Successfully Service Request Enable */
		unsigned int MBSIE          : 1;	/* Message Buffer Status Service Request Enable */
		unsigned int SDSE           : 1;	/* Start of Dynamic Segment Service Request Enable */
		unsigned int WUPAE          : 1;	/* Wakeup Pattern Channel A Service Request Enable */
		unsigned int MTSAE          : 1;	/* Media Access Test Symbol Channel A Service Request Enable */
		unsigned int                : 6;
		unsigned int WUPBE          : 1;	/* Wakeup Pattern Channel B Service Request Enable */
		unsigned int MTSBE          : 1;	/* Media Access Test Symbol Channel B Service Request Enable */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY0_SIES_type;
#define ERAY0_SIES	(*( ERAY0_SIES_type *) 0xf001c038u)	/* Status Service Request Enable Set */

typedef volatile union
{
	struct
	{ 
		unsigned int WSTL           : 1;	/* Wakeup Status Service Request Line */
		unsigned int CASL           : 1;	/* Collision Avoidance Symbol Service Request Line */
		unsigned int CYCSL          : 1;	/* Cycle Start Service Request Line */
		unsigned int TXIL           : 1;	/* Transmit Service Request Line */
		unsigned int RXIL           : 1;	/* Receive Service Request Line */
		unsigned int RFNEL          : 1;	/* Receive FIFO Not Empty Service Request Line */
		unsigned int RFCLL          : 1;	/* Receive FIFO Critical Level Service Request Line */
		unsigned int NMVCL          : 1;	/* Network Management Vector Changed Service Request Line */
		unsigned int TI0L           : 1;	/* Timer Service Request 0 Line */
		unsigned int TI1L           : 1;	/* Timer Service Request 1 Line */
		unsigned int TIBCL          : 1;	/* Transfer Input Buffer Completed Service Request Line */
		unsigned int TOBCL          : 1;	/* Transfer Output Buffer Completed Service Request Line */
		unsigned int SWEL           : 1;	/* Stop Watch Event Service Request Line */
		unsigned int SUCSL          : 1;	/* Startup Completed Successfully Service Request Line */
		unsigned int MBSIL          : 1;	/* Message Buffer Status Service Request Line */
		unsigned int SDSL           : 1;	/* Start of Dynamic Segment Service Request Line */
		unsigned int WUPAL          : 1;	/* Wakeup Pattern Channel A Service Request Line */
		unsigned int MTSAL          : 1;	/* Media Access Test Symbol Channel A Service Request Line */
		unsigned int                : 6;
		unsigned int WUPBL          : 1;	/* Wakeup Pattern Channel B Service Request Line */
		unsigned int MTSBL          : 1;	/* Media Access Test Symbol Channel B Service Request Line */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY0_SILS_type;
#define ERAY0_SILS	(*( ERAY0_SILS_type *) 0xf001c02cu)	/* Status Service Request Line Select */

typedef volatile union
{
	struct
	{ 
		unsigned int WST            : 1;	/* Wakeup Status */
		unsigned int CAS            : 1;	/* Collision Avoidance Symbol */
		unsigned int CYCS           : 1;	/* Cycle Start Service Request */
		unsigned int TXI            : 1;	/* Transmit Service Request */
		unsigned int RXI            : 1;	/* Receive Service Request */
		/* const */ unsigned int RFNE           : 1;	/* Receive FIFO Not Empty */
		/* const */ unsigned int RFCL           : 1;	/* Receive FIFO Critical Level */
		unsigned int NMVC           : 1;	/* Network Management Vector Changed */
		unsigned int TI0            : 1;	/* Timer Service Request 0 */
		unsigned int TI1            : 1;	/* Timer Service Request 1 */
		unsigned int TIBC           : 1;	/* Transfer Input Buffer Completed */
		unsigned int TOBC           : 1;	/* Transfer Output Buffer Completed */
		unsigned int SWE            : 1;	/* Stop Watch Event */
		unsigned int SUCS           : 1;	/* Startup Completed Successfully */
		unsigned int MBSI           : 1;	/* Message Buffer Status Service Request */
		unsigned int SDS            : 1;	/* Start of Dynamic Segment */
		unsigned int WUPA           : 1;	/* Wakeup Pattern Channel A */
		unsigned int MTSA           : 1;	/* MTS Received on Channel A(vSS!ValidMTSA) */
		unsigned int                : 6;
		unsigned int WUPB           : 1;	/* Wakeup Pattern Channel B */
		unsigned int MTSB           : 1;	/* MTS Received on Channel B */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} ERAY0_SIR_type;
#define ERAY0_SIR	(*( ERAY0_SIR_type *) 0xf001c024u)	/* Status Service Request Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ESWT           : 1;	/* Enable Stop Watch Trigger */
		unsigned int SWMS           : 1;	/* Stop Watch Mode Select */
		unsigned int EDGE           : 1;	/* Stop Watch Trigger Edge Select */
		unsigned int SSWT           : 1;	/* Software Stop Watch Trigger */
		unsigned int EETP           : 1;	/* Enable External Trigger Pin */
		unsigned int EINT0          : 1;	/* Enable Service Request 0 Trigger */
		unsigned int EINT1          : 1;	/* Enable Service Request 1 Trigger */
		unsigned int                : 1;
		/* const */ unsigned int SCCV           : 6;	/* Stopped Cycle Counter Value */
		unsigned int                : 2;
		/* const */ unsigned int SMTV           : 14;	/* Stopped Macrotick Value */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_STPW1_type;
#define ERAY0_STPW1	(*( ERAY0_STPW1_type *) 0xf001c04cu)	/* Stop Watch Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SSCVA          : 11;	/* Stop Watch Captured Slot Counter Value Channel A */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int SSCVB          : 11;	/* Stop Watch Captured Slot Counter Value Channel B */
		/* const */ unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} ERAY0_STPW2_type;
#define ERAY0_STPW2	(*( ERAY0_STPW2_type *) 0xf001c050u)	/* Stop Watch Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMD            : 4;	/* CHI Command Vector */
		unsigned int                : 3;
		/* const */ unsigned int PBSY           : 1;	/* POC Busy */
		unsigned int TXST           : 1;	/* Transmit Startup Frame in Key Slot (pKeySlotUsedForStartup) */
		unsigned int TXSY           : 1;	/* Transmit SYNC Frame in Key Slot (pKeySlotUsedForSync) */
		unsigned int                : 1;
		unsigned int CSA            : 5;	/* Cold Start Attempts (gColdStartAttempts) */
		unsigned int PTA            : 5;	/* Passive to Active (pAllowPassiveToActive) */
		unsigned int WUCS           : 1;	/* Wakeup Channel Select (pWakeupChannel) */
		unsigned int TSM            : 1;	/* Transmission Slot Mode (pSingleSlotEnabled) */
		unsigned int HCSE           : 1;	/* Halt due to Clock Sync Error (pAllowHaltDueToClock) */
		unsigned int MTSA           : 1;	/* Select Channel A for MTS Transmission */
		unsigned int MTSB           : 1;	/* Select Channel B for MTS Transmission */
		unsigned int CCHA           : 1;	/* Connected to Channel A (pChannels) */
		unsigned int CCHB           : 1;	/* Connected to Channel B (pChannels) */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ERAY0_SUCC1_type;
#define ERAY0_SUCC1	(*( ERAY0_SUCC1_type *) 0xf001c080u)	/* SUC Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int LT             : 21;	/* Listen Timeout(pdListenTimeout) */
		unsigned int                : 3;
		unsigned int LTN            : 4;	/* Listen Time-out Noise (gListenNoise - 1) */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} ERAY0_SUCC2_type;
#define ERAY0_SUCC2	(*( ERAY0_SUCC2_type *) 0xf001c084u)	/* SUC Configuration Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int WCP            : 4;	/* Maximum Without Clock Correction Passive(gMaxWithoutClockCorrectionPassive) */
		unsigned int WCF            : 4;	/* Maximum Without Clock Correction Fatal (gMaxWithoutClockCorrecti on Fatal) */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} ERAY0_SUCC3_type;
#define ERAY0_SUCC3	(*( ERAY0_SUCC3_type *) 0xf001c088u)	/* SUC Configuration Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SESA           : 1;	/* Syntax Error in Symbol Window Channel A(vSS!SyntaxErrorA) */
		/* const */ unsigned int SBSA           : 1;	/* Slot Boundary Violation in Symbol Window Channel A(vSS!BViolationA) */
		/* const */ unsigned int TCSA           : 1;	/* Transmission Conflict in Symbol Window Channel A(vSS!TxConflictA) */
		/* const */ unsigned int SESB           : 1;	/* Syntax Error in Symbol Window Channel B(vSS!SyntaxErrorB) */
		/* const */ unsigned int SBSB           : 1;	/* Slot Boundary Violation in Symbol Window Channel B(vSS!BViolationB) */
		/* const */ unsigned int TCSB           : 1;	/* Transmission Conflict in Symbol Window Channel B(vSS!TxConflictB) */
		/* const */ unsigned int MTSA           : 1;	/* MTS Received on Channel A(vSS!ValidMTSA) */
		/* const */ unsigned int MTSB           : 1;	/* MTS Received on Channel B(vSS!ValidMTSB) */
		/* const */ unsigned int SENA           : 1;	/* Syntax Error during network idle time (NIT) Channel A(vSS!SyntaxErrorA) */
		/* const */ unsigned int SBNA           : 1;	/* Slot Boundary Violation during network idle time (NIT) Channel A(vSS!BViolationA) */
		/* const */ unsigned int SENB           : 1;	/* Syntax Error during network idle time (NIT) Channel B(vSS!SyntaxErrorB) */
		/* const */ unsigned int SBNB           : 1;	/* Slot Boundary Violation during network idle time (NIT) Channel B(vSS!BViolationB) */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} ERAY0_SWNIT_type;
#define ERAY0_SWNIT	(*( ERAY0_SWNIT_type *) 0xf001c124u)	/* Symbol Window and Network Idle Time Status */

typedef volatile union
{
	struct
	{ 
		unsigned int T0RC           : 1;	/* Timer 0 Run Control */
		unsigned int T0MS           : 1;	/* Timer 0 Mode Select */
		unsigned int                : 6;
		unsigned int T0CC           : 7;	/* Timer 0 Cycle Code */
		unsigned int                : 1;
		unsigned int T0MO           : 14;	/* Timer 0 Macrotick Offset */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_T0C_type;
#define ERAY0_T0C	(*( ERAY0_T0C_type *) 0xf001c044u)	/* Timer 0 Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned int T1RC           : 1;	/* Timer 1 Run Control */
		unsigned int T1MS           : 1;	/* Timer 1 Mode Select */
		unsigned int                : 14;
		unsigned int T1MC           : 14;	/* Timer 1 Macrotick Count */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_T1C_type;
#define ERAY0_T1C	(*( ERAY0_T1C_type *) 0xf001c048u)	/* Timer 1 Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned int WRTEN          : 1;	/* Write Test Register Enable */
		unsigned int ELBE           : 1;	/* External Loop Back Enable */
		unsigned int                : 2;
		unsigned int TMC            : 2;	/* Test Multiplexer Control */
		unsigned int                : 2;
		/* const */ unsigned int AOA            : 1;	/* Activity on A */
		/* const */ unsigned int AOB            : 1;	/* Activity on B */
		unsigned int                : 6;
		/* const */ unsigned int RXA            : 1;	/* Read Channel A Receive Pin */
		/* const */ unsigned int RXB            : 1;	/* Read Channel B Receive Pin */
		unsigned int TXA            : 1;	/* Read or Write to Channel A Transmit Pin */
		unsigned int TXB            : 1;	/* Read or Write to Channel B Transmit Pin */
		unsigned int TXENA          : 1;	/* Read or Write to Channel A Transmit Enable Pin */
		unsigned int TXENB          : 1;	/* Read or Write to Channel B Transmit Enable Pin */
		unsigned int                : 2;
		/* const */ unsigned int CERA           : 4;	/* Coding Error Report Channel A */
		/* const */ unsigned int CERB           : 4;	/* Coding Error Report Channel B */
	} B;
	int I;
	unsigned int U;

} ERAY0_TEST1_type;
#define ERAY0_TEST1	(*( ERAY0_TEST1_type *) 0xf001c010u)	/* Test Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int RS             : 3;	/* RAM Select */
		unsigned int                : 1;
		unsigned int SSEL           : 3;	/* Segment Select */
		unsigned int                : 7;
		unsigned int WRECC          : 1;	/* Write ECC Data Enable */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} ERAY0_TEST2_type;
#define ERAY0_TEST2	(*( ERAY0_TEST2_type *) 0xf001c014u)	/* Test Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXR0           : 1;	/* Transmission Request 0 (n = 0-31) */
		/* const */ unsigned int TXR1           : 1;	/* Transmission Request 1 (n = 0-31) */
		/* const */ unsigned int TXR2           : 1;	/* Transmission Request 2 (n = 0-31) */
		/* const */ unsigned int TXR3           : 1;	/* Transmission Request 3 (n = 0-31) */
		/* const */ unsigned int TXR4           : 1;	/* Transmission Request 4 (n = 0-31) */
		/* const */ unsigned int TXR5           : 1;	/* Transmission Request 5 (n = 0-31) */
		/* const */ unsigned int TXR6           : 1;	/* Transmission Request 6 (n = 0-31) */
		/* const */ unsigned int TXR7           : 1;	/* Transmission Request 7 (n = 0-31) */
		/* const */ unsigned int TXR8           : 1;	/* Transmission Request 8 (n = 0-31) */
		/* const */ unsigned int TXR9           : 1;	/* Transmission Request 9 (n = 0-31) */
		/* const */ unsigned int TXR10          : 1;	/* Transmission Request 10 (n = 0-31) */
		/* const */ unsigned int TXR11          : 1;	/* Transmission Request 11 (n = 0-31) */
		/* const */ unsigned int TXR12          : 1;	/* Transmission Request 12 (n = 0-31) */
		/* const */ unsigned int TXR13          : 1;	/* Transmission Request 13 (n = 0-31) */
		/* const */ unsigned int TXR14          : 1;	/* Transmission Request 14 (n = 0-31) */
		/* const */ unsigned int TXR15          : 1;	/* Transmission Request 15 (n = 0-31) */
		/* const */ unsigned int TXR16          : 1;	/* Transmission Request 16 (n = 0-31) */
		/* const */ unsigned int TXR17          : 1;	/* Transmission Request 17 (n = 0-31) */
		/* const */ unsigned int TXR18          : 1;	/* Transmission Request 18 (n = 0-31) */
		/* const */ unsigned int TXR19          : 1;	/* Transmission Request 19 (n = 0-31) */
		/* const */ unsigned int TXR20          : 1;	/* Transmission Request 20 (n = 0-31) */
		/* const */ unsigned int TXR21          : 1;	/* Transmission Request 21 (n = 0-31) */
		/* const */ unsigned int TXR22          : 1;	/* Transmission Request 22 (n = 0-31) */
		/* const */ unsigned int TXR23          : 1;	/* Transmission Request 23 (n = 0-31) */
		/* const */ unsigned int TXR24          : 1;	/* Transmission Request 24 (n = 0-31) */
		/* const */ unsigned int TXR25          : 1;	/* Transmission Request 25 (n = 0-31) */
		/* const */ unsigned int TXR26          : 1;	/* Transmission Request 26 (n = 0-31) */
		/* const */ unsigned int TXR27          : 1;	/* Transmission Request 27 (n = 0-31) */
		/* const */ unsigned int TXR28          : 1;	/* Transmission Request 28 (n = 0-31) */
		/* const */ unsigned int TXR29          : 1;	/* Transmission Request 29 (n = 0-31) */
		/* const */ unsigned int TXR30          : 1;	/* Transmission Request 30 (n = 0-31) */
		/* const */ unsigned int TXR31          : 1;	/* Transmission Request 31 (n = 0-31) */
	} B;
	int I;
	unsigned int U;

} ERAY0_TXRQ1_type;
#define ERAY0_TXRQ1	(*( ERAY0_TXRQ1_type *) 0xf001c320u)	/* Transmission Request Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXR32          : 1;	/* Transmission Request 32 (n = 32-63) */
		/* const */ unsigned int TXR33          : 1;	/* Transmission Request 33 (n = 32-63) */
		/* const */ unsigned int TXR34          : 1;	/* Transmission Request 34 (n = 32-63) */
		/* const */ unsigned int TXR35          : 1;	/* Transmission Request 35 (n = 32-63) */
		/* const */ unsigned int TXR36          : 1;	/* Transmission Request 36 (n = 32-63) */
		/* const */ unsigned int TXR37          : 1;	/* Transmission Request 37 (n = 32-63) */
		/* const */ unsigned int TXR38          : 1;	/* Transmission Request 38 (n = 32-63) */
		/* const */ unsigned int TXR39          : 1;	/* Transmission Request 39 (n = 32-63) */
		/* const */ unsigned int TXR40          : 1;	/* Transmission Request 40 (n = 32-63) */
		/* const */ unsigned int TXR41          : 1;	/* Transmission Request 41 (n = 32-63) */
		/* const */ unsigned int TXR42          : 1;	/* Transmission Request 42 (n = 32-63) */
		/* const */ unsigned int TXR43          : 1;	/* Transmission Request 43 (n = 32-63) */
		/* const */ unsigned int TXR44          : 1;	/* Transmission Request 44 (n = 32-63) */
		/* const */ unsigned int TXR45          : 1;	/* Transmission Request 45 (n = 32-63) */
		/* const */ unsigned int TXR46          : 1;	/* Transmission Request 46 (n = 32-63) */
		/* const */ unsigned int TXR47          : 1;	/* Transmission Request 47 (n = 32-63) */
		/* const */ unsigned int TXR48          : 1;	/* Transmission Request 48 (n = 32-63) */
		/* const */ unsigned int TXR49          : 1;	/* Transmission Request 49 (n = 32-63) */
		/* const */ unsigned int TXR50          : 1;	/* Transmission Request 50 (n = 32-63) */
		/* const */ unsigned int TXR51          : 1;	/* Transmission Request 51 (n = 32-63) */
		/* const */ unsigned int TXR52          : 1;	/* Transmission Request 52 (n = 32-63) */
		/* const */ unsigned int TXR53          : 1;	/* Transmission Request 53 (n = 32-63) */
		/* const */ unsigned int TXR54          : 1;	/* Transmission Request 54 (n = 32-63) */
		/* const */ unsigned int TXR55          : 1;	/* Transmission Request 55 (n = 32-63) */
		/* const */ unsigned int TXR56          : 1;	/* Transmission Request 56 (n = 32-63) */
		/* const */ unsigned int TXR57          : 1;	/* Transmission Request 57 (n = 32-63) */
		/* const */ unsigned int TXR58          : 1;	/* Transmission Request 58 (n = 32-63) */
		/* const */ unsigned int TXR59          : 1;	/* Transmission Request 59 (n = 32-63) */
		/* const */ unsigned int TXR60          : 1;	/* Transmission Request 60 (n = 32-63) */
		/* const */ unsigned int TXR61          : 1;	/* Transmission Request 61 (n = 32-63) */
		/* const */ unsigned int TXR62          : 1;	/* Transmission Request 62 (n = 32-63) */
		/* const */ unsigned int TXR63          : 1;	/* Transmission Request 63 (n = 32-63) */
	} B;
	int I;
	unsigned int U;

} ERAY0_TXRQ2_type;
#define ERAY0_TXRQ2	(*( ERAY0_TXRQ2_type *) 0xf001c324u)	/* Transmission Request Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXR64          : 1;	/* Transmission Request 64 (n = 64-95) */
		/* const */ unsigned int TXR65          : 1;	/* Transmission Request 65 (n = 64-95) */
		/* const */ unsigned int TXR66          : 1;	/* Transmission Request 66 (n = 64-95) */
		/* const */ unsigned int TXR67          : 1;	/* Transmission Request 67 (n = 64-95) */
		/* const */ unsigned int TXR68          : 1;	/* Transmission Request 68 (n = 64-95) */
		/* const */ unsigned int TXR69          : 1;	/* Transmission Request 69 (n = 64-95) */
		/* const */ unsigned int TXR70          : 1;	/* Transmission Request 70 (n = 64-95) */
		/* const */ unsigned int TXR71          : 1;	/* Transmission Request 71 (n = 64-95) */
		/* const */ unsigned int TXR72          : 1;	/* Transmission Request 72 (n = 64-95) */
		/* const */ unsigned int TXR73          : 1;	/* Transmission Request 73 (n = 64-95) */
		/* const */ unsigned int TXR74          : 1;	/* Transmission Request 74 (n = 64-95) */
		/* const */ unsigned int TXR75          : 1;	/* Transmission Request 75 (n = 64-95) */
		/* const */ unsigned int TXR76          : 1;	/* Transmission Request 76 (n = 64-95) */
		/* const */ unsigned int TXR77          : 1;	/* Transmission Request 77 (n = 64-95) */
		/* const */ unsigned int TXR78          : 1;	/* Transmission Request 78 (n = 64-95) */
		/* const */ unsigned int TXR79          : 1;	/* Transmission Request 79 (n = 64-95) */
		/* const */ unsigned int TXR80          : 1;	/* Transmission Request 80 (n = 64-95) */
		/* const */ unsigned int TXR81          : 1;	/* Transmission Request 81 (n = 64-95) */
		/* const */ unsigned int TXR82          : 1;	/* Transmission Request 82 (n = 64-95) */
		/* const */ unsigned int TXR83          : 1;	/* Transmission Request 83 (n = 64-95) */
		/* const */ unsigned int TXR84          : 1;	/* Transmission Request 84 (n = 64-95) */
		/* const */ unsigned int TXR85          : 1;	/* Transmission Request 85 (n = 64-95) */
		/* const */ unsigned int TXR86          : 1;	/* Transmission Request 86 (n = 64-95) */
		/* const */ unsigned int TXR87          : 1;	/* Transmission Request 87 (n = 64-95) */
		/* const */ unsigned int TXR88          : 1;	/* Transmission Request 88 (n = 64-95) */
		/* const */ unsigned int TXR89          : 1;	/* Transmission Request 89 (n = 64-95) */
		/* const */ unsigned int TXR90          : 1;	/* Transmission Request 90 (n = 64-95) */
		/* const */ unsigned int TXR91          : 1;	/* Transmission Request 91 (n = 64-95) */
		/* const */ unsigned int TXR92          : 1;	/* Transmission Request 92 (n = 64-95) */
		/* const */ unsigned int TXR93          : 1;	/* Transmission Request 93 (n = 64-95) */
		/* const */ unsigned int TXR94          : 1;	/* Transmission Request 94 (n = 64-95) */
		/* const */ unsigned int TXR95          : 1;	/* Transmission Request 95 (n = 64-95) */
	} B;
	int I;
	unsigned int U;

} ERAY0_TXRQ3_type;
#define ERAY0_TXRQ3	(*( ERAY0_TXRQ3_type *) 0xf001c328u)	/* Transmission Request Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXR96          : 1;	/* Transmission Request 96 (n = 96-127) */
		/* const */ unsigned int TXR97          : 1;	/* Transmission Request 97 (n = 96-127) */
		/* const */ unsigned int TXR98          : 1;	/* Transmission Request 98 (n = 96-127) */
		/* const */ unsigned int TXR99          : 1;	/* Transmission Request 99 (n = 96-127) */
		/* const */ unsigned int TXR100         : 1;	/* Transmission Request 100 (n = 96-127) */
		/* const */ unsigned int TXR101         : 1;	/* Transmission Request 101 (n = 96-127) */
		/* const */ unsigned int TXR102         : 1;	/* Transmission Request 102 (n = 96-127) */
		/* const */ unsigned int TXR103         : 1;	/* Transmission Request 103 (n = 96-127) */
		/* const */ unsigned int TXR104         : 1;	/* Transmission Request 104 (n = 96-127) */
		/* const */ unsigned int TXR105         : 1;	/* Transmission Request 105 (n = 96-127) */
		/* const */ unsigned int TXR106         : 1;	/* Transmission Request 106 (n = 96-127) */
		/* const */ unsigned int TXR107         : 1;	/* Transmission Request 107 (n = 96-127) */
		/* const */ unsigned int TXR108         : 1;	/* Transmission Request 108 (n = 96-127) */
		/* const */ unsigned int TXR109         : 1;	/* Transmission Request 109 (n = 96-127) */
		/* const */ unsigned int TXR110         : 1;	/* Transmission Request 110 (n = 96-127) */
		/* const */ unsigned int TXR111         : 1;	/* Transmission Request 111 (n = 96-127) */
		/* const */ unsigned int TXR112         : 1;	/* Transmission Request 112 (n = 96-127) */
		/* const */ unsigned int TXR113         : 1;	/* Transmission Request 113 (n = 96-127) */
		/* const */ unsigned int TXR114         : 1;	/* Transmission Request 114 (n = 96-127) */
		/* const */ unsigned int TXR115         : 1;	/* Transmission Request 115 (n = 96-127) */
		/* const */ unsigned int TXR116         : 1;	/* Transmission Request 116 (n = 96-127) */
		/* const */ unsigned int TXR117         : 1;	/* Transmission Request 117 (n = 96-127) */
		/* const */ unsigned int TXR118         : 1;	/* Transmission Request 118 (n = 96-127) */
		/* const */ unsigned int TXR119         : 1;	/* Transmission Request 119 (n = 96-127) */
		/* const */ unsigned int TXR120         : 1;	/* Transmission Request 120 (n = 96-127) */
		/* const */ unsigned int TXR121         : 1;	/* Transmission Request 121 (n = 96-127) */
		/* const */ unsigned int TXR122         : 1;	/* Transmission Request 122 (n = 96-127) */
		/* const */ unsigned int TXR123         : 1;	/* Transmission Request 123 (n = 96-127) */
		/* const */ unsigned int TXR124         : 1;	/* Transmission Request 124 (n = 96-127) */
		/* const */ unsigned int TXR125         : 1;	/* Transmission Request 125 (n = 96-127) */
		/* const */ unsigned int TXR126         : 1;	/* Transmission Request 126 (n = 96-127) */
		/* const */ unsigned int TXR127         : 1;	/* Transmission Request 127 (n = 96-127) */
	} B;
	int I;
	unsigned int U;

} ERAY0_TXRQ4_type;
#define ERAY0_TXRQ4	(*( ERAY0_TXRQ4_type *) 0xf001c32cu)	/* Transmission Request Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int MDWB0          : 8;	/* 32-Bit Word nn, Byte 0 */
		unsigned int MDWB1          : 8;	/* 32-Bit Word nn, Byte 1 */
		unsigned int MDWB2          : 8;	/* 32-Bit Word nn, Byte 2 */
		unsigned int MDWB3          : 8;	/* 32-Bit Word nn, Byte 3 */
	} B;
	int I;
	unsigned int U;

} ERAY0_WRDS01_type;
#define ERAY0_WRDS01	(*( ERAY0_WRDS01_type *) 0xf001c400u)	/* Write Data Section 1 */
#define ERAY0_WRDS02	(*( ERAY0_WRDS01_type *) 0xf001c404u)	/* Write Data Section 2 */
#define ERAY0_WRDS03	(*( ERAY0_WRDS01_type *) 0xf001c408u)	/* Write Data Section 3 */
#define ERAY0_WRDS04	(*( ERAY0_WRDS01_type *) 0xf001c40cu)	/* Write Data Section 4 */
#define ERAY0_WRDS05	(*( ERAY0_WRDS01_type *) 0xf001c410u)	/* Write Data Section 5 */
#define ERAY0_WRDS06	(*( ERAY0_WRDS01_type *) 0xf001c414u)	/* Write Data Section 6 */
#define ERAY0_WRDS07	(*( ERAY0_WRDS01_type *) 0xf001c418u)	/* Write Data Section 7 */
#define ERAY0_WRDS08	(*( ERAY0_WRDS01_type *) 0xf001c41cu)	/* Write Data Section 8 */
#define ERAY0_WRDS09	(*( ERAY0_WRDS01_type *) 0xf001c420u)	/* Write Data Section 9 */
#define ERAY0_WRDS10	(*( ERAY0_WRDS01_type *) 0xf001c424u)	/* Write Data Section 10 */
#define ERAY0_WRDS11	(*( ERAY0_WRDS01_type *) 0xf001c428u)	/* Write Data Section 11 */
#define ERAY0_WRDS12	(*( ERAY0_WRDS01_type *) 0xf001c42cu)	/* Write Data Section 12 */
#define ERAY0_WRDS13	(*( ERAY0_WRDS01_type *) 0xf001c430u)	/* Write Data Section 13 */
#define ERAY0_WRDS14	(*( ERAY0_WRDS01_type *) 0xf001c434u)	/* Write Data Section 14 */
#define ERAY0_WRDS15	(*( ERAY0_WRDS01_type *) 0xf001c438u)	/* Write Data Section 15 */
#define ERAY0_WRDS16	(*( ERAY0_WRDS01_type *) 0xf001c43cu)	/* Write Data Section 16 */
#define ERAY0_WRDS17	(*( ERAY0_WRDS01_type *) 0xf001c440u)	/* Write Data Section 17 */
#define ERAY0_WRDS18	(*( ERAY0_WRDS01_type *) 0xf001c444u)	/* Write Data Section 18 */
#define ERAY0_WRDS19	(*( ERAY0_WRDS01_type *) 0xf001c448u)	/* Write Data Section 19 */
#define ERAY0_WRDS20	(*( ERAY0_WRDS01_type *) 0xf001c44cu)	/* Write Data Section 20 */
#define ERAY0_WRDS21	(*( ERAY0_WRDS01_type *) 0xf001c450u)	/* Write Data Section 21 */
#define ERAY0_WRDS22	(*( ERAY0_WRDS01_type *) 0xf001c454u)	/* Write Data Section 22 */
#define ERAY0_WRDS23	(*( ERAY0_WRDS01_type *) 0xf001c458u)	/* Write Data Section 23 */
#define ERAY0_WRDS24	(*( ERAY0_WRDS01_type *) 0xf001c45cu)	/* Write Data Section 24 */
#define ERAY0_WRDS25	(*( ERAY0_WRDS01_type *) 0xf001c460u)	/* Write Data Section 25 */
#define ERAY0_WRDS26	(*( ERAY0_WRDS01_type *) 0xf001c464u)	/* Write Data Section 26 */
#define ERAY0_WRDS27	(*( ERAY0_WRDS01_type *) 0xf001c468u)	/* Write Data Section 27 */
#define ERAY0_WRDS28	(*( ERAY0_WRDS01_type *) 0xf001c46cu)	/* Write Data Section 28 */
#define ERAY0_WRDS29	(*( ERAY0_WRDS01_type *) 0xf001c470u)	/* Write Data Section 29 */
#define ERAY0_WRDS30	(*( ERAY0_WRDS01_type *) 0xf001c474u)	/* Write Data Section 30 */
#define ERAY0_WRDS31	(*( ERAY0_WRDS01_type *) 0xf001c478u)	/* Write Data Section 31 */
#define ERAY0_WRDS32	(*( ERAY0_WRDS01_type *) 0xf001c47cu)	/* Write Data Section 32 */
#define ERAY0_WRDS33	(*( ERAY0_WRDS01_type *) 0xf001c480u)	/* Write Data Section 33 */
#define ERAY0_WRDS34	(*( ERAY0_WRDS01_type *) 0xf001c484u)	/* Write Data Section 34 */
#define ERAY0_WRDS35	(*( ERAY0_WRDS01_type *) 0xf001c488u)	/* Write Data Section 35 */
#define ERAY0_WRDS36	(*( ERAY0_WRDS01_type *) 0xf001c48cu)	/* Write Data Section 36 */
#define ERAY0_WRDS37	(*( ERAY0_WRDS01_type *) 0xf001c490u)	/* Write Data Section 37 */
#define ERAY0_WRDS38	(*( ERAY0_WRDS01_type *) 0xf001c494u)	/* Write Data Section 38 */
#define ERAY0_WRDS39	(*( ERAY0_WRDS01_type *) 0xf001c498u)	/* Write Data Section 39 */
#define ERAY0_WRDS40	(*( ERAY0_WRDS01_type *) 0xf001c49cu)	/* Write Data Section 40 */
#define ERAY0_WRDS41	(*( ERAY0_WRDS01_type *) 0xf001c4a0u)	/* Write Data Section 41 */
#define ERAY0_WRDS42	(*( ERAY0_WRDS01_type *) 0xf001c4a4u)	/* Write Data Section 42 */
#define ERAY0_WRDS43	(*( ERAY0_WRDS01_type *) 0xf001c4a8u)	/* Write Data Section 43 */
#define ERAY0_WRDS44	(*( ERAY0_WRDS01_type *) 0xf001c4acu)	/* Write Data Section 44 */
#define ERAY0_WRDS45	(*( ERAY0_WRDS01_type *) 0xf001c4b0u)	/* Write Data Section 45 */
#define ERAY0_WRDS46	(*( ERAY0_WRDS01_type *) 0xf001c4b4u)	/* Write Data Section 46 */
#define ERAY0_WRDS47	(*( ERAY0_WRDS01_type *) 0xf001c4b8u)	/* Write Data Section 47 */
#define ERAY0_WRDS48	(*( ERAY0_WRDS01_type *) 0xf001c4bcu)	/* Write Data Section 48 */
#define ERAY0_WRDS49	(*( ERAY0_WRDS01_type *) 0xf001c4c0u)	/* Write Data Section 49 */
#define ERAY0_WRDS50	(*( ERAY0_WRDS01_type *) 0xf001c4c4u)	/* Write Data Section 50 */
#define ERAY0_WRDS51	(*( ERAY0_WRDS01_type *) 0xf001c4c8u)	/* Write Data Section 51 */
#define ERAY0_WRDS52	(*( ERAY0_WRDS01_type *) 0xf001c4ccu)	/* Write Data Section 52 */
#define ERAY0_WRDS53	(*( ERAY0_WRDS01_type *) 0xf001c4d0u)	/* Write Data Section 53 */
#define ERAY0_WRDS54	(*( ERAY0_WRDS01_type *) 0xf001c4d4u)	/* Write Data Section 54 */
#define ERAY0_WRDS55	(*( ERAY0_WRDS01_type *) 0xf001c4d8u)	/* Write Data Section 55 */
#define ERAY0_WRDS56	(*( ERAY0_WRDS01_type *) 0xf001c4dcu)	/* Write Data Section 56 */
#define ERAY0_WRDS57	(*( ERAY0_WRDS01_type *) 0xf001c4e0u)	/* Write Data Section 57 */
#define ERAY0_WRDS58	(*( ERAY0_WRDS01_type *) 0xf001c4e4u)	/* Write Data Section 58 */
#define ERAY0_WRDS59	(*( ERAY0_WRDS01_type *) 0xf001c4e8u)	/* Write Data Section 59 */
#define ERAY0_WRDS60	(*( ERAY0_WRDS01_type *) 0xf001c4ecu)	/* Write Data Section 60 */
#define ERAY0_WRDS61	(*( ERAY0_WRDS01_type *) 0xf001c4f0u)	/* Write Data Section 61 */
#define ERAY0_WRDS62	(*( ERAY0_WRDS01_type *) 0xf001c4f4u)	/* Write Data Section 62 */
#define ERAY0_WRDS63	(*( ERAY0_WRDS01_type *) 0xf001c4f8u)	/* Write Data Section 63 */
#define ERAY0_WRDS64	(*( ERAY0_WRDS01_type *) 0xf001c4fcu)	/* Write Data Section 64 */

typedef volatile union
{
	struct
	{ 
		unsigned int FID            : 11;	/* Frame ID */
		unsigned int                : 5;
		unsigned int CYC            : 7;	/* Cycle Code */
		unsigned int                : 1;
		unsigned int CHA            : 1;	/* Channel Filter Control A */
		unsigned int CHB            : 1;	/* Channel Filter Control B */
		unsigned int CFG            : 1;	/* Message Buffer Direction Configuration Bit */
		unsigned int PPIT           : 1;	/* Payload Preamble Indicator Transmit */
		unsigned int TXM            : 1;	/* Transmission Mode */
		unsigned int MBI            : 1;	/* Message Buffer Service Request */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} ERAY0_WRHS1_type;
#define ERAY0_WRHS1	(*( ERAY0_WRHS1_type *) 0xf001c500u)	/* Write Header Section 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CRC            : 11;	/* Header CRC(vRF!Header!HeaderCRC) */
		unsigned int                : 5;
		unsigned int PLC            : 7;	/* Payload Length Configured */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} ERAY0_WRHS2_type;
#define ERAY0_WRHS2	(*( ERAY0_WRHS2_type *) 0xf001c504u)	/* Write Header Section 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int DP             : 11;	/* Data Pointer */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} ERAY0_WRHS3_type;
#define ERAY0_WRHS3	(*( ERAY0_WRHS3_type *) 0xf001c508u)	/* Write Header Section 3 */


/* EVADC */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} EVADC_ACCEN0_type;
#define EVADC_ACCEN0	(*( EVADC_ACCEN0_type *) 0xf002003cu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int APCP           : 2;	/* Access Protection Channel Control, Primary Groups */
		unsigned int                : 14;
		unsigned int APIP           : 2;	/* Access Protection Initialization, Primary Groups */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} EVADC_ACCPROT0_type;
#define EVADC_ACCPROT0	(*( EVADC_ACCPROT0_type *) 0xf0020088u)	/* Access Protection Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int APSP           : 2;	/* Access Protection Service Request, Primary Groups */
		unsigned int                : 14;
		unsigned int APRP           : 2;	/* Access Protection Result Registers, Primary Groups */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} EVADC_ACCPROT1_type;
#define EVADC_ACCPROT1	(*( EVADC_ACCPROT1_type *) 0xf002008cu)	/* Access Protection Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int APGC           : 1;	/* Access Protection Global Configuration */
		unsigned int APEM           : 1;	/* Access Protection External Multiplexer */
		unsigned int APTF           : 1;	/* Access Protection Test Function */
		unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} EVADC_ACCPROT2_type;
#define EVADC_ACCPROT2	(*( EVADC_ACCPROT2_type *) 0xf0020090u)	/* Access Protection Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} EVADC_CLC_type;
#define EVADC_CLC	(*( EVADC_CLC_type *) 0xf0020000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EMUXGRP0       : 4;	/* External Multiplexer Group for Interface 0 */
		unsigned int EMUXGRP1       : 4;	/* External Multiplexer Group for Interface 1 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} EVADC_EMUXSEL_type;
#define EVADC_EMUXSEL	(*( EVADC_EMUXSEL_type *) 0xf00203f0u)	/* External Multiplexer Interface Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALIAS0         : 5;	/* Alias Value for CH0 Conversion Requests */
		unsigned int                : 3;
		unsigned int ALIAS1         : 5;	/* Alias Value for CH1 Conversion Requests */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} EVADC_G0ALIAS_type;
#define EVADC_G0ALIAS	(*( EVADC_G0ALIAS_type *) 0xf00204b0u)	/* Alias Register, Group 0 */
#define EVADC_G1ALIAS	(*( EVADC_G0ALIAS_type *) 0xf00208b0u)	/* Alias Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int IPE            : 1;	/* Idle Precharge Enable */
		unsigned int BE             : 1;	/* Input Buffer Enable */
		unsigned int RPE            : 1;	/* Reference Precharge Enable */
		unsigned int RPC            : 1;	/* Reference Precharge Control */
		unsigned int CALSTC         : 2;	/* Calibration Sample Time Control */
		unsigned int DPCAL          : 1;	/* Disable Post-Calibration */
		unsigned int                : 9;
		unsigned int ACSD           : 3;	/* Analog Clock Synchronization Delay */
		unsigned int SSE            : 1;	/* Sample Synchronization Enable */
		unsigned int DIVA           : 5;	/* Divider Factor for the Analog Internal Clock */
		unsigned int DCMSB          : 1;	/* Double Clock for the MSB Conversion */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} EVADC_G0ANCFG_type;
#define EVADC_G0ANCFG	(*( EVADC_G0ANCFG_type *) 0xf0020488u)	/* Analog Fct. Config. Register, Group 0 */
#define EVADC_G1ANCFG	(*( EVADC_G0ANCFG_type *) 0xf0020888u)	/* Analog Fct. Config. Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int ANONC          : 2;	/* Analog Converter Control */
		unsigned int                : 14;
		/* const */ unsigned int ANONS          : 2;	/* Analog Converter Control Status */
		/* const */ unsigned int CSRC           : 2;	/* Currently Converted Request Source */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int SYNRUN         : 1;	/* Synchronous Conversion Running */
		unsigned int                : 2;
		/* const */ unsigned int CAL            : 1;	/* Start-Up Calibration Active Indication */
		unsigned int                : 1;
		/* const */ unsigned int BUSY           : 1;	/* Converter Busy Flag */
		/* const */ unsigned int SAMPLE         : 1;	/* Sample Phase Flag */
	} B;
	int I;
	unsigned int U;

} EVADC_G0ARBCFG_type;
#define EVADC_G0ARBCFG	(*( EVADC_G0ARBCFG_type *) 0xf0020480u)	/* Arbitration Config. Register, Group 0 */
#define EVADC_G1ARBCFG	(*( EVADC_G0ARBCFG_type *) 0xf0020880u)	/* Arbitration Config. Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int PRIO0          : 2;	/* Priority of Request Source 0 */
		unsigned int                : 1;
		unsigned int CSM0           : 1;	/* Conversion Start Mode of Request Source 0 */
		unsigned int PRIO1          : 2;	/* Priority of Request Source 1 */
		unsigned int                : 1;
		unsigned int CSM1           : 1;	/* Conversion Start Mode of Request Source 1 */
		unsigned int PRIO2          : 2;	/* Priority of Request Source 2 */
		unsigned int                : 1;
		unsigned int CSM2           : 1;	/* Conversion Start Mode of Request Source 2 */
		unsigned int                : 12;
		unsigned int ASEN0          : 1;	/* Arbitration Source Input 0 Enable */
		unsigned int ASEN1          : 1;	/* Arbitration Source Input 1 Enable */
		unsigned int ASEN2          : 1;	/* Arbitration Source Input 2 Enable */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} EVADC_G0ARBPR_type;
#define EVADC_G0ARBPR	(*( EVADC_G0ARBPR_type *) 0xf0020484u)	/* Arbitration Priority Register, Group 0 */
#define EVADC_G1ARBPR	(*( EVADC_G0ARBPR_type *) 0xf0020884u)	/* Arbitration Priority Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int BOUNDARY0      : 12;	/* Boundary Value 0 for Limit Checking */
		unsigned int                : 4;
		unsigned int BOUNDARY1      : 12;	/* Boundary Value 1 for Limit Checking */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} EVADC_G0BOUND_type;
#define EVADC_G0BOUND	(*( EVADC_G0BOUND_type *) 0xf00204b8u)	/* Boundary Select Register, Group 0 */
#define EVADC_G1BOUND	(*( EVADC_G0BOUND_type *) 0xf00208b8u)	/* Boundary Select Register, Group 1 */
#define EVADC_GLOBBOUND	(*( EVADC_G0BOUND_type *) 0xf00200b8u)	/* Global Boundary Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CEV0           : 1;	/* Clear Channel Event for Channel 0 */
		unsigned int CEV1           : 1;	/* Clear Channel Event for Channel 1 */
		unsigned int CEV2           : 1;	/* Clear Channel Event for Channel 2 */
		unsigned int CEV3           : 1;	/* Clear Channel Event for Channel 3 */
		unsigned int CEV4           : 1;	/* Clear Channel Event for Channel 4 */
		unsigned int CEV5           : 1;	/* Clear Channel Event for Channel 5 */
		unsigned int CEV6           : 1;	/* Clear Channel Event for Channel 6 */
		unsigned int CEV7           : 1;	/* Clear Channel Event for Channel 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} EVADC_G0CEFCLR_type;
#define EVADC_G0CEFCLR	(*( EVADC_G0CEFCLR_type *) 0xf0020590u)	/* Channel Event Flag Clear Register, Group 0 */
#define EVADC_G1CEFCLR	(*( EVADC_G0CEFCLR_type *) 0xf0020990u)	/* Channel Event Flag Clear Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CEV0           : 1;	/* Channel Event for Channel 0 */
		unsigned int CEV1           : 1;	/* Channel Event for Channel 1 */
		unsigned int CEV2           : 1;	/* Channel Event for Channel 2 */
		unsigned int CEV3           : 1;	/* Channel Event for Channel 3 */
		unsigned int CEV4           : 1;	/* Channel Event for Channel 4 */
		unsigned int CEV5           : 1;	/* Channel Event for Channel 5 */
		unsigned int CEV6           : 1;	/* Channel Event for Channel 6 */
		unsigned int CEV7           : 1;	/* Channel Event for Channel 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} EVADC_G0CEFLAG_type;
#define EVADC_G0CEFLAG	(*( EVADC_G0CEFLAG_type *) 0xf0020580u)	/* Channel Event Flag Register, Group 0 */
#define EVADC_G1CEFLAG	(*( EVADC_G0CEFLAG_type *) 0xf0020980u)	/* Channel Event Flag Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CEV0NP         : 4;	/* Service Request Node Pointer Channel Event 0 */
		unsigned int CEV1NP         : 4;	/* Service Request Node Pointer Channel Event 1 */
		unsigned int CEV2NP         : 4;	/* Service Request Node Pointer Channel Event 2 */
		unsigned int CEV3NP         : 4;	/* Service Request Node Pointer Channel Event 3 */
		unsigned int CEV4NP         : 4;	/* Service Request Node Pointer Channel Event 4 */
		unsigned int CEV5NP         : 4;	/* Service Request Node Pointer Channel Event 5 */
		unsigned int CEV6NP         : 4;	/* Service Request Node Pointer Channel Event 6 */
		unsigned int CEV7NP         : 4;	/* Service Request Node Pointer Channel Event 7 */
	} B;
	int I;
	unsigned int U;

} EVADC_G0CEVNP0_type;
#define EVADC_G0CEVNP0	(*( EVADC_G0CEVNP0_type *) 0xf00205a0u)	/* Channel Event Node Pointer Reg. 0, Group 0 */
#define EVADC_G1CEVNP0	(*( EVADC_G0CEVNP0_type *) 0xf00209a0u)	/* Channel Event Node Pointer Reg. 0, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int ICLSEL         : 2;	/* Input Class Select */
		unsigned int                : 2;
		unsigned int BNDSELL        : 2;	/* Lower Boundary Select */
		unsigned int BNDSELU        : 2;	/* Upper Boundary Select */
		unsigned int CHEVMODE       : 2;	/* Channel Event Mode */
		unsigned int SYNC           : 1;	/* Synchronization Request */
		unsigned int REFSEL         : 1;	/* Reference Input Selection */
		unsigned int BNDSELX        : 4;	/* BoundaryExtension */
		unsigned int RESREG         : 4;	/* Result Register */
		unsigned int RESTGT         : 1;	/* Result Target */
		unsigned int RESPOS         : 1;	/* Result Position */
		unsigned int                : 6;
		unsigned int BWDCH          : 2;	/* Broken Wire Detection Channel */
		unsigned int BWDEN          : 1;	/* Broken Wire Detection Enable */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} EVADC_G0CHCTR0_type;
#define EVADC_G0CHCTR0	(*( EVADC_G0CHCTR0_type *) 0xf0020600u)	/* Group 0, Channel 0 Control Register */
#define EVADC_G0CHCTR1	(*( EVADC_G0CHCTR0_type *) 0xf0020604u)	/* Group 0, Channel 1 Control Register */
#define EVADC_G0CHCTR2	(*( EVADC_G0CHCTR0_type *) 0xf0020608u)	/* Group 0, Channel 2 Control Register */
#define EVADC_G0CHCTR3	(*( EVADC_G0CHCTR0_type *) 0xf002060cu)	/* Group 0, Channel 3 Control Register */
#define EVADC_G0CHCTR4	(*( EVADC_G0CHCTR0_type *) 0xf0020610u)	/* Group 0, Channel 4 Control Register */
#define EVADC_G0CHCTR5	(*( EVADC_G0CHCTR0_type *) 0xf0020614u)	/* Group 0, Channel 5 Control Register */
#define EVADC_G0CHCTR6	(*( EVADC_G0CHCTR0_type *) 0xf0020618u)	/* Group 0, Channel 6 Control Register */
#define EVADC_G0CHCTR7	(*( EVADC_G0CHCTR0_type *) 0xf002061cu)	/* Group 0, Channel 7 Control Register */
#define EVADC_G1CHCTR0	(*( EVADC_G0CHCTR0_type *) 0xf0020a00u)	/* Group 1, Channel 0 Control Register */
#define EVADC_G1CHCTR1	(*( EVADC_G0CHCTR0_type *) 0xf0020a04u)	/* Group 1, Channel 1 Control Register */
#define EVADC_G1CHCTR2	(*( EVADC_G0CHCTR0_type *) 0xf0020a08u)	/* Group 1, Channel 2 Control Register */
#define EVADC_G1CHCTR3	(*( EVADC_G0CHCTR0_type *) 0xf0020a0cu)	/* Group 1, Channel 3 Control Register */
#define EVADC_G1CHCTR4	(*( EVADC_G0CHCTR0_type *) 0xf0020a10u)	/* Group 1, Channel 4 Control Register */
#define EVADC_G1CHCTR5	(*( EVADC_G0CHCTR0_type *) 0xf0020a14u)	/* Group 1, Channel 5 Control Register */
#define EVADC_G1CHCTR6	(*( EVADC_G0CHCTR0_type *) 0xf0020a18u)	/* Group 1, Channel 6 Control Register */
#define EVADC_G1CHCTR7	(*( EVADC_G0CHCTR0_type *) 0xf0020a1cu)	/* Group 1, Channel 7 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EMUXCH         : 16;	/* External Multiplexer Channel Select */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EVADC_G0EMUXCS_type;
#define EVADC_G0EMUXCS	(*( EVADC_G0EMUXCS_type *) 0xf00205f4u)	/* Ext. Multiplexer Channel Select Reg., Group 0 */
#define EVADC_G1EMUXCS	(*( EVADC_G0EMUXCS_type *) 0xf00209f4u)	/* Ext. Multiplexer Channel Select Reg., Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int EMUXSET        : 3;	/* External Multiplexer Start Selection */
		unsigned int                : 1;
		unsigned int EMUXMODE       : 3;	/* External Multiplexer Mode */
		unsigned int                : 5;
		unsigned int EMXCOD         : 1;	/* External Multiplexer Coding Scheme */
		unsigned int EMXST          : 1;	/* External Multiplexer Sample Time Control */
		unsigned int EMXCSS         : 1;	/* External Multiplexer Channel Selection Style */
		unsigned int EMXWC          : 1;	/* Write Control for EMUX Configuration */
		/* const */ unsigned int EMUXACT        : 3;	/* External Multiplexer Actual Selection */
		unsigned int                : 1;
		unsigned int EMUXCCB        : 5;	/* External Multiplexer Channel Selection for Block Mode */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} EVADC_G0EMUXCTR_type;
#define EVADC_G0EMUXCTR	(*( EVADC_G0EMUXCTR_type *) 0xf00205f0u)	/* External Multiplexer Control Reg., Group 0 */
#define EVADC_G1EMUXCTR	(*( EVADC_G0EMUXCTR_type *) 0xf00209f0u)	/* External Multiplexer Control Reg., Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int STCS           : 5;	/* Sample Time Control for Standard Conversions */
		unsigned int                : 1;
		unsigned int AIPS           : 2;	/* Analog Input Precharge Control for Standard Conversions */
		unsigned int CMS            : 2;	/* Conversion Mode for Standard Conversions */
		unsigned int SESPS          : 1;	/* Spread Early Sample Point for Standard Conversions */
		unsigned int                : 5;
		unsigned int STCE           : 5;	/* Sample Time Control for EMUX Conversions */
		unsigned int                : 1;
		unsigned int AIPE           : 2;	/* Analog Input Precharge Control for EMUX Conversions */
		unsigned int CME            : 2;	/* Conversion Mode for EMUX Conversions */
		unsigned int SESPE          : 1;	/* Spread Early Sample Point for EMUX Conversions */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} EVADC_G0ICLASS0_type;
#define EVADC_G0ICLASS0	(*( EVADC_G0ICLASS0_type *) 0xf00204a0u)	/* Input Class Reg0ster i, Group 0 */
#define EVADC_G0ICLASS1	(*( EVADC_G0ICLASS0_type *) 0xf00204a4u)	/* Input Class Reg1ster i, Group 0 */
#define EVADC_G1ICLASS0	(*( EVADC_G0ICLASS0_type *) 0xf00208a0u)	/* Input Class Reg0ster i, Group 1 */
#define EVADC_G1ICLASS1	(*( EVADC_G0ICLASS0_type *) 0xf00208a4u)	/* Input Class Reg1ster i, Group 1 */
#define EVADC_GLOBICLASS0	(*( EVADC_G0ICLASS0_type *) 0xf00200a0u)	/* Input Class Reg0ster i, Global */
#define EVADC_GLOBICLASS1	(*( EVADC_G0ICLASS0_type *) 0xf00200a4u)	/* Input Class Reg1ster i, Global */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REQCHNR        : 5;	/* Request Channel Number */
		/* const */ unsigned int RF             : 1;	/* Refill */
		/* const */ unsigned int ENSI           : 1;	/* Enable Source Interrupt */
		/* const */ unsigned int EXTR           : 1;	/* External Trigger */
		/* const */ unsigned int V              : 1;	/* Request Channel Number Valid */
		/* const */ unsigned int PDD            : 1;	/* Pull-Down Diagnostics Enable */
		/* const */ unsigned int MDPD           : 1;	/* Multiplexer Diagnostics Pull-Devices Enable */
		/* const */ unsigned int MDPU           : 1;	/* Multiplexer Diagnostics Pull-Devices Enable - MDPD,MDPU */
		/* const */ unsigned int CDEN           : 1;	/* Converter Diagnostics Enable */
		/* const */ unsigned int CDSEL          : 2;	/* Converter Diagnostics Pull-Devices Select */
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} EVADC_G0Q0R0_type;
#define EVADC_G0Q0R0	(*( EVADC_G0Q0R0_type *) 0xf002050cu)	/* Queue 0 Register 0, Group 0 */
#define EVADC_G0Q0R1	(*( EVADC_G0Q0R0_type *) 0xf002052cu)	/* Queue 1 Register 0, Group 0 */
#define EVADC_G0Q0R2	(*( EVADC_G0Q0R0_type *) 0xf002054cu)	/* Queue 2 Register 0, Group 0 */
#define EVADC_G1Q0R0	(*( EVADC_G0Q0R0_type *) 0xf002090cu)	/* Queue 0 Register 0, Group 1 */
#define EVADC_G1Q0R1	(*( EVADC_G0Q0R0_type *) 0xf002092cu)	/* Queue 1 Register 0, Group 1 */
#define EVADC_G1Q0R2	(*( EVADC_G0Q0R0_type *) 0xf002094cu)	/* Queue 2 Register 0, Group 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REQCHNR        : 5;	/* Request Channel Number */
		/* const */ unsigned int RF             : 1;	/* Refill */
		/* const */ unsigned int ENSI           : 1;	/* Enable Source Interrupt */
		/* const */ unsigned int EXTR           : 1;	/* External Trigger */
		/* const */ unsigned int V              : 1;	/* Request Channel Number Valid */
		/* const */ unsigned int PDD            : 1;	/* Pull-Down Diagnostics Enable */
		/* const */ unsigned int MDPD           : 1;	/* Multiplexer Diagnostics Pull-Down Devices Enable */
		/* const */ unsigned int MDPU           : 1;	/* Multiplexer Diagnostics Pull-Up Devices Enable */
		/* const */ unsigned int CDEN           : 1;	/* Converter Diagnostics Enable */
		/* const */ unsigned int CDSEL          : 2;	/* Converter Diagnostics Pull-Devices Select */
		/* const */ unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} EVADC_G0QBUR0_type;
#define EVADC_G0QBUR0	(*( EVADC_G0QBUR0_type *) 0xf0020514u)	/* Queue 0 Backup Register, Group 0 */
#define EVADC_G0QBUR1	(*( EVADC_G0QBUR0_type *) 0xf0020534u)	/* Queue 1 Backup Register, Group 0 */
#define EVADC_G0QBUR2	(*( EVADC_G0QBUR0_type *) 0xf0020554u)	/* Queue 2 Backup Register, Group 0 */
#define EVADC_G1QBUR0	(*( EVADC_G0QBUR0_type *) 0xf0020914u)	/* Queue 0 Backup Register, Group 1 */
#define EVADC_G1QBUR1	(*( EVADC_G0QBUR0_type *) 0xf0020934u)	/* Queue 1 Backup Register, Group 1 */
#define EVADC_G1QBUR2	(*( EVADC_G0QBUR0_type *) 0xf0020954u)	/* Queue 2 Backup Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SRCRESREG      : 4;	/* Source-specific Result Register */
		unsigned int                : 2;
		unsigned int TRSEL          : 2;	/* Trigger Source Selection */
		unsigned int XTSEL          : 4;	/* External Trigger Input Selection */
		/* const */ unsigned int XTLVL          : 1;	/* External Trigger Level */
		unsigned int XTMODE         : 2;	/* Trigger Operating Mode */
		unsigned int XTWC           : 1;	/* Write Control for Trigger Configuration */
		unsigned int GTSEL          : 4;	/* Gate Input Selection */
		/* const */ unsigned int GTLVL          : 1;	/* Gate Input Level */
		unsigned int                : 2;
		unsigned int GTWC           : 1;	/* Write Control for Gate Configuration */
		unsigned int                : 4;
		unsigned int TMEN           : 1;	/* Timer Mode Enable */
		unsigned int                : 2;
		unsigned int TMWC           : 1;	/* Write Control for Timer Mode */
	} B;
	int I;
	unsigned int U;

} EVADC_G0QCTRL0_type;
#define EVADC_G0QCTRL0	(*( EVADC_G0QCTRL0_type *) 0xf0020500u)	/* Queue 0 Source Contr. Register, Group 0 */
#define EVADC_G0QCTRL1	(*( EVADC_G0QCTRL0_type *) 0xf0020520u)	/* Queue 1 Source Contr. Register, Group 0 */
#define EVADC_G0QCTRL2	(*( EVADC_G0QCTRL0_type *) 0xf0020540u)	/* Queue 2 Source Contr. Register, Group 0 */
#define EVADC_G1QCTRL0	(*( EVADC_G0QCTRL0_type *) 0xf0020900u)	/* Queue 0 Source Contr. Register, Group 1 */
#define EVADC_G1QCTRL1	(*( EVADC_G0QCTRL0_type *) 0xf0020920u)	/* Queue 1 Source Contr. Register, Group 1 */
#define EVADC_G1QCTRL2	(*( EVADC_G0QCTRL0_type *) 0xf0020940u)	/* Queue 2 Source Contr. Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int REQCHNR        : 5;	/* Request Channel Number */
		unsigned int RF             : 1;	/* Refill */
		unsigned int ENSI           : 1;	/* Enable Source Interrupt */
		unsigned int EXTR           : 1;	/* External Trigger */
		unsigned int                : 1;
		unsigned int PDD            : 1;	/* Pull-Down Diagnostics Enable */
		unsigned int MDPD           : 1;	/* Multiplexer Diagnostics Pull-Devices Enable */
		unsigned int MDPU           : 1;	/* Multiplexer Diagnostics Pull-Devices Enable - MDPD,MDPU */
		unsigned int CDEN           : 1;	/* Converter Diagnostics Enable */
		unsigned int CDSEL          : 2;	/* Converter Diagnostics Pull-Devices Select */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} EVADC_G0QINR0_type;
#define EVADC_G0QINR0	(*( EVADC_G0QINR0_type *) 0xf0020510u)	/* Queue 0 Input Register, Group 0 */
#define EVADC_G0QINR1	(*( EVADC_G0QINR0_type *) 0xf0020530u)	/* Queue 1 Input Register, Group 0 */
#define EVADC_G0QINR2	(*( EVADC_G0QINR0_type *) 0xf0020550u)	/* Queue 2 Input Register, Group 0 */
#define EVADC_G1QINR0	(*( EVADC_G0QINR0_type *) 0xf0020910u)	/* Queue 0 Input Register, Group 1 */
#define EVADC_G1QINR1	(*( EVADC_G0QINR0_type *) 0xf0020930u)	/* Queue 1 Input Register, Group 1 */
#define EVADC_G1QINR2	(*( EVADC_G0QINR0_type *) 0xf0020950u)	/* Queue 2 Input Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int ENGT           : 2;	/* Enable Gate */
		unsigned int ENTR           : 1;	/* Enable External Trigger */
		unsigned int                : 5;
		unsigned int CLRV           : 1;	/* Clear Valid Bit */
		unsigned int TREV           : 1;	/* Trigger Event */
		unsigned int FLUSH          : 1;	/* Flush Queue */
		unsigned int CEV            : 1;	/* Clear Event Flag */
		unsigned int                : 4;
		unsigned int RPTDIS         : 1;	/* Repeat Disable */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} EVADC_G0QMR0_type;
#define EVADC_G0QMR0	(*( EVADC_G0QMR0_type *) 0xf0020504u)	/* Queue 0 Mode Register, Group 0 */
#define EVADC_G0QMR1	(*( EVADC_G0QMR0_type *) 0xf0020524u)	/* Queue 1 Mode Register, Group 0 */
#define EVADC_G0QMR2	(*( EVADC_G0QMR0_type *) 0xf0020544u)	/* Queue 2 Mode Register, Group 0 */
#define EVADC_G1QMR0	(*( EVADC_G0QMR0_type *) 0xf0020904u)	/* Queue 0 Mode Register, Group 1 */
#define EVADC_G1QMR1	(*( EVADC_G0QMR0_type *) 0xf0020924u)	/* Queue 1 Mode Register, Group 1 */
#define EVADC_G1QMR2	(*( EVADC_G0QMR0_type *) 0xf0020944u)	/* Queue 2 Mode Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FILL           : 4;	/* Filling Level for Queue */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int EMPTY          : 1;	/* Queue Empty */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int REQGT          : 1;	/* Request Gate Level */
		/* const */ unsigned int EV             : 1;	/* Event Detected */
		/* const */ unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} EVADC_G0QSR0_type;
#define EVADC_G0QSR0	(*( EVADC_G0QSR0_type *) 0xf0020508u)	/* Queue 0 Status Register, Group 0 */
#define EVADC_G0QSR1	(*( EVADC_G0QSR0_type *) 0xf0020528u)	/* Queue 1 Status Register, Group 0 */
#define EVADC_G0QSR2	(*( EVADC_G0QSR0_type *) 0xf0020548u)	/* Queue 2 Status Register, Group 0 */
#define EVADC_G1QSR0	(*( EVADC_G0QSR0_type *) 0xf0020908u)	/* Queue 0 Status Register, Group 1 */
#define EVADC_G1QSR1	(*( EVADC_G0QSR0_type *) 0xf0020928u)	/* Queue 1 Status Register, Group 1 */
#define EVADC_G1QSR2	(*( EVADC_G0QSR0_type *) 0xf0020948u)	/* Queue 2 Status Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int DRCTR          : 4;	/* Data Reduction Control */
		unsigned int DMM            : 2;	/* Data Modification Mode */
		unsigned int                : 2;
		unsigned int WFR            : 1;	/* Wait-for-Read Mode Enable */
		unsigned int FEN            : 2;	/* FIFO Mode Enable */
		unsigned int                : 4;
		unsigned int SRGEN          : 1;	/* Service Request Generation Enable */
	} B;
	int I;
	unsigned int U;

} EVADC_G0RCR0_type;
#define EVADC_G0RCR0	(*( EVADC_G0RCR0_type *) 0xf0020680u)	/* Group 0 Result Control Register 0 */
#define EVADC_G0RCR1	(*( EVADC_G0RCR0_type *) 0xf0020684u)	/* Group 0 Result Control Register 1 */
#define EVADC_G0RCR10	(*( EVADC_G0RCR0_type *) 0xf00206a8u)	/* Group 0 Result Control Register 10 */
#define EVADC_G0RCR11	(*( EVADC_G0RCR0_type *) 0xf00206acu)	/* Group 0 Result Control Register 11 */
#define EVADC_G0RCR12	(*( EVADC_G0RCR0_type *) 0xf00206b0u)	/* Group 0 Result Control Register 12 */
#define EVADC_G0RCR13	(*( EVADC_G0RCR0_type *) 0xf00206b4u)	/* Group 0 Result Control Register 13 */
#define EVADC_G0RCR14	(*( EVADC_G0RCR0_type *) 0xf00206b8u)	/* Group 0 Result Control Register 14 */
#define EVADC_G0RCR15	(*( EVADC_G0RCR0_type *) 0xf00206bcu)	/* Group 0 Result Control Register 15 */
#define EVADC_G0RCR2	(*( EVADC_G0RCR0_type *) 0xf0020688u)	/* Group 0 Result Control Register 2 */
#define EVADC_G0RCR3	(*( EVADC_G0RCR0_type *) 0xf002068cu)	/* Group 0 Result Control Register 3 */
#define EVADC_G0RCR4	(*( EVADC_G0RCR0_type *) 0xf0020690u)	/* Group 0 Result Control Register 4 */
#define EVADC_G0RCR5	(*( EVADC_G0RCR0_type *) 0xf0020694u)	/* Group 0 Result Control Register 5 */
#define EVADC_G0RCR6	(*( EVADC_G0RCR0_type *) 0xf0020698u)	/* Group 0 Result Control Register 6 */
#define EVADC_G0RCR7	(*( EVADC_G0RCR0_type *) 0xf002069cu)	/* Group 0 Result Control Register 7 */
#define EVADC_G0RCR8	(*( EVADC_G0RCR0_type *) 0xf00206a0u)	/* Group 0 Result Control Register 8 */
#define EVADC_G0RCR9	(*( EVADC_G0RCR0_type *) 0xf00206a4u)	/* Group 0 Result Control Register 9 */
#define EVADC_G1RCR0	(*( EVADC_G0RCR0_type *) 0xf0020a80u)	/* Group 1 Result Control Register 0 */
#define EVADC_G1RCR1	(*( EVADC_G0RCR0_type *) 0xf0020a84u)	/* Group 1 Result Control Register 1 */
#define EVADC_G1RCR10	(*( EVADC_G0RCR0_type *) 0xf0020aa8u)	/* Group 1 Result Control Register 10 */
#define EVADC_G1RCR11	(*( EVADC_G0RCR0_type *) 0xf0020aacu)	/* Group 1 Result Control Register 11 */
#define EVADC_G1RCR12	(*( EVADC_G0RCR0_type *) 0xf0020ab0u)	/* Group 1 Result Control Register 12 */
#define EVADC_G1RCR13	(*( EVADC_G0RCR0_type *) 0xf0020ab4u)	/* Group 1 Result Control Register 13 */
#define EVADC_G1RCR14	(*( EVADC_G0RCR0_type *) 0xf0020ab8u)	/* Group 1 Result Control Register 14 */
#define EVADC_G1RCR15	(*( EVADC_G0RCR0_type *) 0xf0020abcu)	/* Group 1 Result Control Register 15 */
#define EVADC_G1RCR2	(*( EVADC_G0RCR0_type *) 0xf0020a88u)	/* Group 1 Result Control Register 2 */
#define EVADC_G1RCR3	(*( EVADC_G0RCR0_type *) 0xf0020a8cu)	/* Group 1 Result Control Register 3 */
#define EVADC_G1RCR4	(*( EVADC_G0RCR0_type *) 0xf0020a90u)	/* Group 1 Result Control Register 4 */
#define EVADC_G1RCR5	(*( EVADC_G0RCR0_type *) 0xf0020a94u)	/* Group 1 Result Control Register 5 */
#define EVADC_G1RCR6	(*( EVADC_G0RCR0_type *) 0xf0020a98u)	/* Group 1 Result Control Register 6 */
#define EVADC_G1RCR7	(*( EVADC_G0RCR0_type *) 0xf0020a9cu)	/* Group 1 Result Control Register 7 */
#define EVADC_G1RCR8	(*( EVADC_G0RCR0_type *) 0xf0020aa0u)	/* Group 1 Result Control Register 8 */
#define EVADC_G1RCR9	(*( EVADC_G0RCR0_type *) 0xf0020aa4u)	/* Group 1 Result Control Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int REV0           : 1;	/* Clear Result Event for Result Register 0 */
		unsigned int REV1           : 1;	/* Clear Result Event for Result Register 1 */
		unsigned int REV2           : 1;	/* Clear Result Event for Result Register 2 */
		unsigned int REV3           : 1;	/* Clear Result Event for Result Register 3 */
		unsigned int REV4           : 1;	/* Clear Result Event for Result Register 4 */
		unsigned int REV5           : 1;	/* Clear Result Event for Result Register 5 */
		unsigned int REV6           : 1;	/* Clear Result Event for Result Register 6 */
		unsigned int REV7           : 1;	/* Clear Result Event for Result Register 7 */
		unsigned int REV8           : 1;	/* Clear Result Event for Result Register 8 */
		unsigned int REV9           : 1;	/* Clear Result Event for Result Register 9 */
		unsigned int REV10          : 1;	/* Clear Result Event for Result Register 10 */
		unsigned int REV11          : 1;	/* Clear Result Event for Result Register 11 */
		unsigned int REV12          : 1;	/* Clear Result Event for Result Register 12 */
		unsigned int REV13          : 1;	/* Clear Result Event for Result Register 13 */
		unsigned int REV14          : 1;	/* Clear Result Event for Result Register 14 */
		unsigned int REV15          : 1;	/* Clear Result Event for Result Register 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EVADC_G0REFCLR_type;
#define EVADC_G0REFCLR	(*( EVADC_G0REFCLR_type *) 0xf0020594u)	/* Result Event Flag Clear Register, Group 0 */
#define EVADC_G1REFCLR	(*( EVADC_G0REFCLR_type *) 0xf0020994u)	/* Result Event Flag Clear Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int REV0           : 1;	/* Result Event for Result Register 0 */
		unsigned int REV1           : 1;	/* Result Event for Result Register 1 */
		unsigned int REV2           : 1;	/* Result Event for Result Register 2 */
		unsigned int REV3           : 1;	/* Result Event for Result Register 3 */
		unsigned int REV4           : 1;	/* Result Event for Result Register 4 */
		unsigned int REV5           : 1;	/* Result Event for Result Register 5 */
		unsigned int REV6           : 1;	/* Result Event for Result Register 6 */
		unsigned int REV7           : 1;	/* Result Event for Result Register 7 */
		unsigned int REV8           : 1;	/* Result Event for Result Register 8 */
		unsigned int REV9           : 1;	/* Result Event for Result Register 9 */
		unsigned int REV10          : 1;	/* Result Event for Result Register 10 */
		unsigned int REV11          : 1;	/* Result Event for Result Register 11 */
		unsigned int REV12          : 1;	/* Result Event for Result Register 12 */
		unsigned int REV13          : 1;	/* Result Event for Result Register 13 */
		unsigned int REV14          : 1;	/* Result Event for Result Register 14 */
		unsigned int REV15          : 1;	/* Result Event for Result Register 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EVADC_G0REFLAG_type;
#define EVADC_G0REFLAG	(*( EVADC_G0REFLAG_type *) 0xf0020584u)	/* Result Event Flag Register, Group 0 */
#define EVADC_G1REFLAG	(*( EVADC_G0REFLAG_type *) 0xf0020984u)	/* Result Event Flag Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEQMOD         : 2;	/* Sequence Mode */
		unsigned int                : 4;
		unsigned int SEQTIMSET      : 10;	/* Sequence Timer, Set Value */
		unsigned int REQTS          : 1;	/* Request Timer Start Trigger */
		unsigned int ENTR           : 1;	/* Enable External Trigger */
		unsigned int                : 4;
		unsigned int SEQTIMOFF      : 10;	/* Sequence Timer, Switch Off Value */
	} B;
	int I;
	unsigned int U;

} EVADC_G0REQTM0_type;
#define EVADC_G0REQTM0	(*( EVADC_G0REQTM0_type *) 0xf0020518u)	/* Queue 0 Requ. Timer Mode Reg., Group 0 */
#define EVADC_G0REQTM1	(*( EVADC_G0REQTM0_type *) 0xf0020538u)	/* Queue 1 Requ. Timer Mode Reg., Group 0 */
#define EVADC_G0REQTM2	(*( EVADC_G0REQTM0_type *) 0xf0020558u)	/* Queue 2 Requ. Timer Mode Reg., Group 0 */
#define EVADC_G1REQTM0	(*( EVADC_G0REQTM0_type *) 0xf0020918u)	/* Queue 0 Requ. Timer Mode Reg., Group 1 */
#define EVADC_G1REQTM1	(*( EVADC_G0REQTM0_type *) 0xf0020938u)	/* Queue 1 Requ. Timer Mode Reg., Group 1 */
#define EVADC_G1REQTM2	(*( EVADC_G0REQTM0_type *) 0xf0020958u)	/* Queue 2 Requ. Timer Mode Reg., Group 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 6;
		/* const */ unsigned int SEQTIMER       : 10;	/* Sequence Timer */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EVADC_G0REQTS0_type;
#define EVADC_G0REQTS0	(*( EVADC_G0REQTS0_type *) 0xf002051cu)	/* Queue 0 Requ. Timer Status Reg., Group 0 */
#define EVADC_G0REQTS1	(*( EVADC_G0REQTS0_type *) 0xf002053cu)	/* Queue 1 Requ. Timer Status Reg., Group 0 */
#define EVADC_G0REQTS2	(*( EVADC_G0REQTS0_type *) 0xf002055cu)	/* Queue 2 Requ. Timer Status Reg., Group 0 */
#define EVADC_G1REQTS0	(*( EVADC_G0REQTS0_type *) 0xf002091cu)	/* Queue 0 Requ. Timer Status Reg., Group 1 */
#define EVADC_G1REQTS1	(*( EVADC_G0REQTS0_type *) 0xf002093cu)	/* Queue 1 Requ. Timer Status Reg., Group 1 */
#define EVADC_G1REQTS2	(*( EVADC_G0REQTS0_type *) 0xf002095cu)	/* Queue 2 Requ. Timer Status Reg., Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int RESULT         : 16;	/* Result of Most Recent Conversion */
		/* const */ unsigned int DRC            : 4;	/* Data Reduction Counter */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int EMUX           : 3;	/* External Multiplexer Setting */
		/* const */ unsigned int CRS            : 2;	/* Converted Request Source */
		unsigned int                : 1;
		/* const */ unsigned int VF             : 1;	/* Valid Flag */
	} B;
	int I;
	unsigned int U;

} EVADC_G0RES0_type;
#define EVADC_G0RES0	(*( EVADC_G0RES0_type *) 0xf0020700u)	/* Group 0 Result Register 0 */
#define EVADC_G0RES1	(*( EVADC_G0RES0_type *) 0xf0020704u)	/* Group 0 Result Register 1 */
#define EVADC_G0RES10	(*( EVADC_G0RES0_type *) 0xf0020728u)	/* Group 0 Result Register 10 */
#define EVADC_G0RES11	(*( EVADC_G0RES0_type *) 0xf002072cu)	/* Group 0 Result Register 11 */
#define EVADC_G0RES12	(*( EVADC_G0RES0_type *) 0xf0020730u)	/* Group 0 Result Register 12 */
#define EVADC_G0RES13	(*( EVADC_G0RES0_type *) 0xf0020734u)	/* Group 0 Result Register 13 */
#define EVADC_G0RES14	(*( EVADC_G0RES0_type *) 0xf0020738u)	/* Group 0 Result Register 14 */
#define EVADC_G0RES15	(*( EVADC_G0RES0_type *) 0xf002073cu)	/* Group 0 Result Register 15 */
#define EVADC_G0RES2	(*( EVADC_G0RES0_type *) 0xf0020708u)	/* Group 0 Result Register 2 */
#define EVADC_G0RES3	(*( EVADC_G0RES0_type *) 0xf002070cu)	/* Group 0 Result Register 3 */
#define EVADC_G0RES4	(*( EVADC_G0RES0_type *) 0xf0020710u)	/* Group 0 Result Register 4 */
#define EVADC_G0RES5	(*( EVADC_G0RES0_type *) 0xf0020714u)	/* Group 0 Result Register 5 */
#define EVADC_G0RES6	(*( EVADC_G0RES0_type *) 0xf0020718u)	/* Group 0 Result Register 6 */
#define EVADC_G0RES7	(*( EVADC_G0RES0_type *) 0xf002071cu)	/* Group 0 Result Register 7 */
#define EVADC_G0RES8	(*( EVADC_G0RES0_type *) 0xf0020720u)	/* Group 0 Result Register 8 */
#define EVADC_G0RES9	(*( EVADC_G0RES0_type *) 0xf0020724u)	/* Group 0 Result Register 9 */
#define EVADC_G1RES0	(*( EVADC_G0RES0_type *) 0xf0020b00u)	/* Group 1 Result Register 0 */
#define EVADC_G1RES1	(*( EVADC_G0RES0_type *) 0xf0020b04u)	/* Group 1 Result Register 1 */
#define EVADC_G1RES10	(*( EVADC_G0RES0_type *) 0xf0020b28u)	/* Group 1 Result Register 10 */
#define EVADC_G1RES11	(*( EVADC_G0RES0_type *) 0xf0020b2cu)	/* Group 1 Result Register 11 */
#define EVADC_G1RES12	(*( EVADC_G0RES0_type *) 0xf0020b30u)	/* Group 1 Result Register 12 */
#define EVADC_G1RES13	(*( EVADC_G0RES0_type *) 0xf0020b34u)	/* Group 1 Result Register 13 */
#define EVADC_G1RES14	(*( EVADC_G0RES0_type *) 0xf0020b38u)	/* Group 1 Result Register 14 */
#define EVADC_G1RES15	(*( EVADC_G0RES0_type *) 0xf0020b3cu)	/* Group 1 Result Register 15 */
#define EVADC_G1RES2	(*( EVADC_G0RES0_type *) 0xf0020b08u)	/* Group 1 Result Register 2 */
#define EVADC_G1RES3	(*( EVADC_G0RES0_type *) 0xf0020b0cu)	/* Group 1 Result Register 3 */
#define EVADC_G1RES4	(*( EVADC_G0RES0_type *) 0xf0020b10u)	/* Group 1 Result Register 4 */
#define EVADC_G1RES5	(*( EVADC_G0RES0_type *) 0xf0020b14u)	/* Group 1 Result Register 5 */
#define EVADC_G1RES6	(*( EVADC_G0RES0_type *) 0xf0020b18u)	/* Group 1 Result Register 6 */
#define EVADC_G1RES7	(*( EVADC_G0RES0_type *) 0xf0020b1cu)	/* Group 1 Result Register 7 */
#define EVADC_G1RES8	(*( EVADC_G0RES0_type *) 0xf0020b20u)	/* Group 1 Result Register 8 */
#define EVADC_G1RES9	(*( EVADC_G0RES0_type *) 0xf0020b24u)	/* Group 1 Result Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESULT         : 16;	/* Result of Most Recent Conversion */
		/* const */ unsigned int DRC            : 4;	/* Data Reduction Counter */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int EMUX           : 3;	/* External Multiplexer Setting */
		/* const */ unsigned int CRS            : 2;	/* Converted Request Source */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int VF             : 1;	/* Valid Flag */
	} B;
	int I;
	unsigned int U;

} EVADC_G0RESD0_type;
#define EVADC_G0RESD0	(*( EVADC_G0RESD0_type *) 0xf0020780u)	/* Group 0 Result Reg. 0, Debug */
#define EVADC_G0RESD1	(*( EVADC_G0RESD0_type *) 0xf0020784u)	/* Group 0 Result Reg. 1, Debug */
#define EVADC_G0RESD10	(*( EVADC_G0RESD0_type *) 0xf00207a8u)	/* Group 0 Result Reg. 10, Debug */
#define EVADC_G0RESD11	(*( EVADC_G0RESD0_type *) 0xf00207acu)	/* Group 0 Result Reg. 11, Debug */
#define EVADC_G0RESD12	(*( EVADC_G0RESD0_type *) 0xf00207b0u)	/* Group 0 Result Reg. 12, Debug */
#define EVADC_G0RESD13	(*( EVADC_G0RESD0_type *) 0xf00207b4u)	/* Group 0 Result Reg. 13, Debug */
#define EVADC_G0RESD14	(*( EVADC_G0RESD0_type *) 0xf00207b8u)	/* Group 0 Result Reg. 14, Debug */
#define EVADC_G0RESD15	(*( EVADC_G0RESD0_type *) 0xf00207bcu)	/* Group 0 Result Reg. 15, Debug */
#define EVADC_G0RESD2	(*( EVADC_G0RESD0_type *) 0xf0020788u)	/* Group 0 Result Reg. 2, Debug */
#define EVADC_G0RESD3	(*( EVADC_G0RESD0_type *) 0xf002078cu)	/* Group 0 Result Reg. 3, Debug */
#define EVADC_G0RESD4	(*( EVADC_G0RESD0_type *) 0xf0020790u)	/* Group 0 Result Reg. 4, Debug */
#define EVADC_G0RESD5	(*( EVADC_G0RESD0_type *) 0xf0020794u)	/* Group 0 Result Reg. 5, Debug */
#define EVADC_G0RESD6	(*( EVADC_G0RESD0_type *) 0xf0020798u)	/* Group 0 Result Reg. 6, Debug */
#define EVADC_G0RESD7	(*( EVADC_G0RESD0_type *) 0xf002079cu)	/* Group 0 Result Reg. 7, Debug */
#define EVADC_G0RESD8	(*( EVADC_G0RESD0_type *) 0xf00207a0u)	/* Group 0 Result Reg. 8, Debug */
#define EVADC_G0RESD9	(*( EVADC_G0RESD0_type *) 0xf00207a4u)	/* Group 0 Result Reg. 9, Debug */
#define EVADC_G1RESD0	(*( EVADC_G0RESD0_type *) 0xf0020b80u)	/* Group 1 Result Reg. 0, Debug */
#define EVADC_G1RESD1	(*( EVADC_G0RESD0_type *) 0xf0020b84u)	/* Group 1 Result Reg. 1, Debug */
#define EVADC_G1RESD10	(*( EVADC_G0RESD0_type *) 0xf0020ba8u)	/* Group 1 Result Reg. 10, Debug */
#define EVADC_G1RESD11	(*( EVADC_G0RESD0_type *) 0xf0020bacu)	/* Group 1 Result Reg. 11, Debug */
#define EVADC_G1RESD12	(*( EVADC_G0RESD0_type *) 0xf0020bb0u)	/* Group 1 Result Reg. 12, Debug */
#define EVADC_G1RESD13	(*( EVADC_G0RESD0_type *) 0xf0020bb4u)	/* Group 1 Result Reg. 13, Debug */
#define EVADC_G1RESD14	(*( EVADC_G0RESD0_type *) 0xf0020bb8u)	/* Group 1 Result Reg. 14, Debug */
#define EVADC_G1RESD15	(*( EVADC_G0RESD0_type *) 0xf0020bbcu)	/* Group 1 Result Reg. 15, Debug */
#define EVADC_G1RESD2	(*( EVADC_G0RESD0_type *) 0xf0020b88u)	/* Group 1 Result Reg. 2, Debug */
#define EVADC_G1RESD3	(*( EVADC_G0RESD0_type *) 0xf0020b8cu)	/* Group 1 Result Reg. 3, Debug */
#define EVADC_G1RESD4	(*( EVADC_G0RESD0_type *) 0xf0020b90u)	/* Group 1 Result Reg. 4, Debug */
#define EVADC_G1RESD5	(*( EVADC_G0RESD0_type *) 0xf0020b94u)	/* Group 1 Result Reg. 5, Debug */
#define EVADC_G1RESD6	(*( EVADC_G0RESD0_type *) 0xf0020b98u)	/* Group 1 Result Reg. 6, Debug */
#define EVADC_G1RESD7	(*( EVADC_G0RESD0_type *) 0xf0020b9cu)	/* Group 1 Result Reg. 7, Debug */
#define EVADC_G1RESD8	(*( EVADC_G0RESD0_type *) 0xf0020ba0u)	/* Group 1 Result Reg. 8, Debug */
#define EVADC_G1RESD9	(*( EVADC_G0RESD0_type *) 0xf0020ba4u)	/* Group 1 Result Reg. 9, Debug */

typedef volatile union
{
	struct
	{ 
		unsigned int REV0NP         : 4;	/* Service Request Node Pointer Result Event 0 */
		unsigned int REV1NP         : 4;	/* Service Request Node Pointer Result Event 1 */
		unsigned int REV2NP         : 4;	/* Service Request Node Pointer Result Event 2 */
		unsigned int REV3NP         : 4;	/* Service Request Node Pointer Result Event 3 */
		unsigned int REV4NP         : 4;	/* Service Request Node Pointer Result Event 4 */
		unsigned int REV5NP         : 4;	/* Service Request Node Pointer Result Event 5 */
		unsigned int REV6NP         : 4;	/* Service Request Node Pointer Result Event 6 */
		unsigned int REV7NP         : 4;	/* Service Request Node Pointer Result Event 7 */
	} B;
	int I;
	unsigned int U;

} EVADC_G0REVNP0_type;
#define EVADC_G0REVNP0	(*( EVADC_G0REVNP0_type *) 0xf00205b0u)	/* Result Event Node Pointer Reg. 0, Group 0 */
#define EVADC_G1REVNP0	(*( EVADC_G0REVNP0_type *) 0xf00209b0u)	/* Result Event Node Pointer Reg. 0, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int REV8NP         : 4;	/* Service Request Node Pointer Result Event 8 */
		unsigned int REV9NP         : 4;	/* Service Request Node Pointer Result Event 9 */
		unsigned int REV10NP        : 4;	/* Service Request Node Pointer Result Event 10 */
		unsigned int REV11NP        : 4;	/* Service Request Node Pointer Result Event 11 */
		unsigned int REV12NP        : 4;	/* Service Request Node Pointer Result Event 12 */
		unsigned int REV13NP        : 4;	/* Service Request Node Pointer Result Event 13 */
		unsigned int REV14NP        : 4;	/* Service Request Node Pointer Result Event 14 */
		unsigned int REV15NP        : 4;	/* Service Request Node Pointer Result Event 15 */
	} B;
	int I;
	unsigned int U;

} EVADC_G0REVNP1_type;
#define EVADC_G0REVNP1	(*( EVADC_G0REVNP1_type *) 0xf00205b4u)	/* Result Event Node Pointer Reg. 1, Group 0 */
#define EVADC_G1REVNP1	(*( EVADC_G0REVNP1_type *) 0xf00209b4u)	/* Result Event Node Pointer Reg. 1, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEV0           : 1;	/* Clear Source Event 0 */
		unsigned int SEV1           : 1;	/* Clear Source Event 1 */
		unsigned int SEV2           : 1;	/* Clear Source Event 2 */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} EVADC_G0SEFCLR_type;
#define EVADC_G0SEFCLR	(*( EVADC_G0SEFCLR_type *) 0xf0020598u)	/* Source Event Flag Clear Reg., Group 0 */
#define EVADC_G1SEFCLR	(*( EVADC_G0SEFCLR_type *) 0xf0020998u)	/* Source Event Flag Clear Reg., Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEV0           : 1;	/* Source Event 0 */
		unsigned int SEV1           : 1;	/* Source Event 1 */
		unsigned int SEV2           : 1;	/* Source Event 2 */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} EVADC_G0SEFLAG_type;
#define EVADC_G0SEFLAG	(*( EVADC_G0SEFLAG_type *) 0xf0020588u)	/* Source Event Flag Register, Group 0 */
#define EVADC_G1SEFLAG	(*( EVADC_G0SEFLAG_type *) 0xf0020988u)	/* Source Event Flag Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEV0NP         : 4;	/* Service Request Node Pointer Source Event 0 */
		unsigned int SEV1NP         : 4;	/* Service Request Node Pointer Source Event 1 */
		unsigned int SEV2NP         : 4;	/* Service Request Node Pointer Source Event 2 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} EVADC_G0SEVNP_type;
#define EVADC_G0SEVNP	(*( EVADC_G0SEVNP_type *) 0xf00205c0u)	/* Source Event Node Pointer Reg., Group 0 */
#define EVADC_G1SEVNP	(*( EVADC_G0SEVNP_type *) 0xf00209c0u)	/* Source Event Node Pointer Reg., Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int AGSR0          : 1;	/* Activate Group Service Request Node 0 */
		unsigned int AGSR1          : 1;	/* Activate Group Service Request Node 1 */
		unsigned int AGSR2          : 1;	/* Activate Group Service Request Node 2 */
		unsigned int AGSR3          : 1;	/* Activate Group Service Request Node 3 */
		unsigned int                : 4;
		unsigned int ASSR0          : 1;	/* Activate Shared Service Request Node 0 */
		unsigned int ASSR1          : 1;	/* Activate Shared Service Request Node 1 */
		unsigned int ASSR2          : 1;	/* Activate Shared Service Request Node 2 */
		unsigned int ASSR3          : 1;	/* Activate Shared Service Request Node 3 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} EVADC_G0SRACT_type;
#define EVADC_G0SRACT	(*( EVADC_G0SRACT_type *) 0xf00205c8u)	/* Service Request Software Activation Trigger, Group 0 */
#define EVADC_G1SRACT	(*( EVADC_G0SRACT_type *) 0xf00209c8u)	/* Service Request Software Activation Trigger, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int STSEL          : 2;	/* Start Selection */
		unsigned int                : 2;
		unsigned int EVALR1         : 1;	/* Evaluate Ready Input R1 */
		unsigned int EVALR2         : 1;	/* Evaluate Ready Input R2 */
		unsigned int EVALR3         : 1;	/* Evaluate Ready Input R3 */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} EVADC_G0SYNCTR_type;
#define EVADC_G0SYNCTR	(*( EVADC_G0SYNCTR_type *) 0xf00204c0u)	/* Synchronization Control Register, Group 0 */
#define EVADC_G1SYNCTR	(*( EVADC_G0SYNCTR_type *) 0xf00208c0u)	/* Synchronization Control Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TSC            : 6;	/* Trigger Sequence Counter */
		unsigned int                : 8;
		/* const */ unsigned int QACT           : 1;	/* Queue Active */
		/* const */ unsigned int OV             : 1;	/* Overflow Detected */
		unsigned int TSCSET         : 6;	/* Trigger Sequence Counter Start Value */
		unsigned int                : 2;
		unsigned int ITSEL          : 2;	/* Internal Trigger Input Selection */
		unsigned int                : 2;
		unsigned int SRDIS          : 1;	/* Service Request Disable */
		unsigned int                : 2;
		unsigned int COV            : 1;	/* Clear Overflow Flag */
	} B;
	int I;
	unsigned int U;

} EVADC_G0TRCTR_type;
#define EVADC_G0TRCTR	(*( EVADC_G0TRCTR_type *) 0xf0020410u)	/* Trigger Control Register, Group 0 */
#define EVADC_G1TRCTR	(*( EVADC_G0TRCTR_type *) 0xf0020810u)	/* Trigger Control Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int VF0            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF1            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF2            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF3            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF4            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF5            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF6            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF7            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF8            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF9            : 1;	/* Valid Flag of Result Register x */
		unsigned int VF10           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF11           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF12           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF13           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF14           : 1;	/* Valid Flag of Result Register x */
		unsigned int VF15           : 1;	/* Valid Flag of Result Register x */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EVADC_G0VFR_type;
#define EVADC_G0VFR	(*( EVADC_G0VFR_type *) 0xf00205f8u)	/* Valid Flag Register, Group 0 */
#define EVADC_G1VFR	(*( EVADC_G0VFR_type *) 0xf00209f8u)	/* Valid Flag Register, Group 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 12;
		unsigned int USC            : 1;	/* Unsynchronized Clock Generation */
		unsigned int SUPLEV         : 2;	/* Supply Voltage Level */
		unsigned int CPWC           : 1;	/* Write Control for Control Parameters */
		unsigned int                : 15;
		unsigned int SUCAL          : 1;	/* Start-Up Calibration */
	} B;
	int I;
	unsigned int U;

} EVADC_GLOBCFG_type;
#define EVADC_GLOBCFG	(*( EVADC_GLOBCFG_type *) 0xf0020080u)	/* Global Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int REVGLB         : 1;	/* Global Result Event */
		unsigned int                : 15;
		unsigned int REVGLBCLR      : 1;	/* Clear Global Result Event */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} EVADC_GLOBEFLAG_type;
#define EVADC_GLOBEFLAG	(*( EVADC_GLOBEFLAG_type *) 0xf00200e0u)	/* Global Event Flag Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int REV0NP         : 4;	/* Service Request Node Pointer Global Result */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} EVADC_GLOBEVNP_type;
#define EVADC_GLOBEVNP	(*( EVADC_GLOBEVNP_type *) 0xf0020140u)	/* Global Event Node Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int DRCTR          : 4;	/* Data Reduction Control */
		unsigned int                : 4;
		unsigned int WFR            : 1;	/* Wait-for-Read Mode Enable */
		unsigned int                : 6;
		unsigned int SRGEN          : 1;	/* Service Request Generation Enable */
	} B;
	int I;
	unsigned int U;

} EVADC_GLOBRCR_type;
#define EVADC_GLOBRCR	(*( EVADC_GLOBRCR_type *) 0xf0020280u)	/* Global Result Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RESULT         : 16;	/* Result of most recent conversion */
		/* const */ unsigned int GNR            : 4;	/* Group Number */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int EMUX           : 3;	/* External Multiplexer Setting */
		/* const */ unsigned int CRS            : 2;	/* Converted Request Source */
		unsigned int                : 1;
		unsigned int VF             : 1;	/* Valid Flag */
	} B;
	int I;
	unsigned int U;

} EVADC_GLOBRES_type;
#define EVADC_GLOBRES	(*( EVADC_GLOBRES_type *) 0xf0020300u)	/* Global Result Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESULT         : 16;	/* Result of most recent conversion */
		/* const */ unsigned int GNR            : 4;	/* Group Number */
		/* const */ unsigned int CHNR           : 5;	/* Channel Number */
		/* const */ unsigned int EMUX           : 3;	/* External Multiplexer Setting */
		/* const */ unsigned int CRS            : 2;	/* Converted Request Source */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int VF             : 1;	/* Valid Flag */
	} B;
	int I;
	unsigned int U;

} EVADC_GLOBRESD_type;
#define EVADC_GLOBRESD	(*( EVADC_GLOBRESD_type *) 0xf0020380u)	/* Global Result Register, Debug */

typedef volatile union
{
	struct
	{ 
		unsigned int TFEP           : 2;	/* Test Function Enable, Primary Groups */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} EVADC_GLOBTE_type;
#define EVADC_GLOBTE	(*( EVADC_GLOBTE_type *) 0xf0020164u)	/* Global Test Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CDCH           : 4;	/* Conversion Diagnostics Channel */
		unsigned int CDGR           : 4;	/* Conversion Diagnostics Group */
		unsigned int CDEN           : 1;	/* Converter Diagnostics Enable */
		unsigned int CDSEL          : 2;	/* Converter Diagnostics Pull-Devices Select */
		unsigned int                : 4;
		unsigned int CDWC           : 1;	/* Write Control for Conversion Diagnostics */
		unsigned int PDD            : 1;	/* Pull-Down Diagnostics Enable */
		unsigned int MDPD           : 1;	/* Multiplexer Diagnostics Pull-Down-Devices Enable */
		unsigned int MDPU           : 1;	/* Multiplexer Diagnostics Pull-Up-Devices Enable */
		unsigned int                : 4;
		unsigned int MDWC           : 1;	/* Write Control for Multiplexer Diagnostics */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} EVADC_GLOBTF_type;
#define EVADC_GLOBTF	(*( EVADC_GLOBTF_type *) 0xf0020160u)	/* Global Test Functions Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} EVADC_ID_type;
#define EVADC_ID	(*( EVADC_ID_type *) 0xf0020008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} EVADC_KRST0_type;
#define EVADC_KRST0	(*( EVADC_KRST0_type *) 0xf0020034u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} EVADC_KRST1_type;
#define EVADC_KRST1	(*( EVADC_KRST1_type *) 0xf0020030u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} EVADC_KRSTCLR_type;
#define EVADC_KRSTCLR	(*( EVADC_KRSTCLR_type *) 0xf002002cu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned int TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned int TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned int                : 20;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} EVADC_OCS_type;
#define EVADC_OCS	(*( EVADC_OCS_type *) 0xf0020028u)	/* OCDS Control and Status Register */


/* FCE */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} FCE_ACCEN0_type;
#define FCE_ACCEN0	(*( FCE_ACCEN0_type *) 0xf00000fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} FCE_ACCEN1_type;
#define FCE_ACCEN1	(*( FCE_ACCEN1_type *) 0xf00000f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMI            : 1;	/* CRC Mismatch Interrupt */
		unsigned int CEI            : 1;	/* Configuration Error Interrupt */
		unsigned int LEI            : 1;	/* Length Error Interrupt */
		unsigned int BEI            : 1;	/* Bus Error Interrupt */
		unsigned int CCE            : 1;	/* CRC Check Comparison */
		unsigned int ALR            : 1;	/* Automatic Length Reload */
		unsigned int                : 2;
		unsigned int REFIN          : 1;	/* IR Byte Wise Reflection */
		unsigned int REFOUT         : 1;	/* CRC Bit Wise Reflection */
		unsigned int XSEL           : 1;	/* Selects the value to be xored with the final CRC */
		unsigned int BYTESWAP       : 1;	/* Swaps the order of the bytes in the IR input register. */
		unsigned int                : 4;
		unsigned int KERNEL         : 4;	/* Selects the CRC Kernel (Polynomial Engine) used by this channel. */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} FCE_CFG0_type;
#define FCE_CFG0	(*( FCE_CFG0_type *) 0xf0000108u)	/* CRC Configuration Register 0 */
#define FCE_CFG1	(*( FCE_CFG0_type *) 0xf0000128u)	/* CRC Configuration Register 1 */
#define FCE_CFG2	(*( FCE_CFG0_type *) 0xf0000148u)	/* CRC Configuration Register 2 */
#define FCE_CFG3	(*( FCE_CFG0_type *) 0xf0000168u)	/* CRC Configuration Register 3 */
#define FCE_CFG4	(*( FCE_CFG0_type *) 0xf0000188u)	/* CRC Configuration Register 4 */
#define FCE_CFG5	(*( FCE_CFG0_type *) 0xf00001a8u)	/* CRC Configuration Register 5 */
#define FCE_CFG6	(*( FCE_CFG0_type *) 0xf00001c8u)	/* CRC Configuration Register 6 */
#define FCE_CFG7	(*( FCE_CFG0_type *) 0xf00001e8u)	/* CRC Configuration Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CHECK          : 32;	/* CHECK Register */
	} B;
	int I;
	unsigned int U;

} FCE_CHECK0_type;
#define FCE_CHECK0	(*( FCE_CHECK0_type *) 0xf0000114u)	/* CRC Check Register 0 */
#define FCE_CHECK1	(*( FCE_CHECK0_type *) 0xf0000134u)	/* CRC Check Register 1 */
#define FCE_CHECK2	(*( FCE_CHECK0_type *) 0xf0000154u)	/* CRC Check Register 2 */
#define FCE_CHECK3	(*( FCE_CHECK0_type *) 0xf0000174u)	/* CRC Check Register 3 */
#define FCE_CHECK4	(*( FCE_CHECK0_type *) 0xf0000194u)	/* CRC Check Register 4 */
#define FCE_CHECK5	(*( FCE_CHECK0_type *) 0xf00001b4u)	/* CRC Check Register 5 */
#define FCE_CHECK6	(*( FCE_CHECK0_type *) 0xf00001d4u)	/* CRC Check Register 6 */
#define FCE_CHECK7	(*( FCE_CHECK0_type *) 0xf00001f4u)	/* CRC Check Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CH0            : 1;	/* Channel0 Status */
		/* const */ unsigned int CH1            : 1;	/* Channel1 Status */
		/* const */ unsigned int CH2            : 1;	/* Channel2 Status */
		/* const */ unsigned int CH3            : 1;	/* Channel3 Status */
		/* const */ unsigned int CH4            : 1;	/* Channel4 Status */
		/* const */ unsigned int CH5            : 1;	/* Channel5 Status */
		/* const */ unsigned int CH6            : 1;	/* Channel6 Status */
		/* const */ unsigned int CH7            : 1;	/* Channel7 Status */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} FCE_CHSTS_type;
#define FCE_CHSTS	(*( FCE_CHSTS_type *) 0xf0000020u)	/* Channels Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} FCE_CLC_type;
#define FCE_CLC	(*( FCE_CLC_type *) 0xf0000000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CRC            : 32;	/* CRC Register */
	} B;
	int I;
	unsigned int U;

} FCE_CRC0_type;
#define FCE_CRC0	(*( FCE_CRC0_type *) 0xf0000118u)	/* CRC Regsister 0 */
#define FCE_CRC1	(*( FCE_CRC0_type *) 0xf0000138u)	/* CRC Regsister 1 */
#define FCE_CRC2	(*( FCE_CRC0_type *) 0xf0000158u)	/* CRC Regsister 2 */
#define FCE_CRC3	(*( FCE_CRC0_type *) 0xf0000178u)	/* CRC Regsister 3 */
#define FCE_CRC4	(*( FCE_CRC0_type *) 0xf0000198u)	/* CRC Regsister 4 */
#define FCE_CRC5	(*( FCE_CRC0_type *) 0xf00001b8u)	/* CRC Regsister 5 */
#define FCE_CRC6	(*( FCE_CRC0_type *) 0xf00001d8u)	/* CRC Regsister 6 */
#define FCE_CRC7	(*( FCE_CRC0_type *) 0xf00001f8u)	/* CRC Regsister 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int FCM            : 1;	/* Force CRC Mismatch */
		unsigned int FRM_CFG        : 1;	/* Force CFG Register Mismatch */
		unsigned int FRM_CHECK      : 1;	/* Force Check Register Mismatch */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} FCE_CTR0_type;
#define FCE_CTR0	(*( FCE_CTR0_type *) 0xf000011cu)	/* CRC Test Register 0 */
#define FCE_CTR1	(*( FCE_CTR0_type *) 0xf000013cu)	/* CRC Test Register 1 */
#define FCE_CTR2	(*( FCE_CTR0_type *) 0xf000015cu)	/* CRC Test Register 2 */
#define FCE_CTR3	(*( FCE_CTR0_type *) 0xf000017cu)	/* CRC Test Register 3 */
#define FCE_CTR4	(*( FCE_CTR0_type *) 0xf000019cu)	/* CRC Test Register 4 */
#define FCE_CTR5	(*( FCE_CTR0_type *) 0xf00001bcu)	/* CRC Test Register 5 */
#define FCE_CTR6	(*( FCE_CTR0_type *) 0xf00001dcu)	/* CRC Test Register 6 */
#define FCE_CTR7	(*( FCE_CTR0_type *) 0xf00001fcu)	/* CRC Test Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} FCE_ID_type;
#define FCE_ID	(*( FCE_ID_type *) 0xf0000008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IR             : 32;	/* Input Register */
	} B;
	int I;
	unsigned int U;

} FCE_IR0_type;
#define FCE_IR0	(*( FCE_IR0_type *) 0xf0000100u)	/* Input Register 0 */
#define FCE_IR1	(*( FCE_IR0_type *) 0xf0000120u)	/* Input Register 1 */
#define FCE_IR2	(*( FCE_IR0_type *) 0xf0000140u)	/* Input Register 2 */
#define FCE_IR3	(*( FCE_IR0_type *) 0xf0000160u)	/* Input Register 3 */
#define FCE_IR4	(*( FCE_IR0_type *) 0xf0000180u)	/* Input Register 4 */
#define FCE_IR5	(*( FCE_IR0_type *) 0xf00001a0u)	/* Input Register 5 */
#define FCE_IR6	(*( FCE_IR0_type *) 0xf00001c0u)	/* Input Register 6 */
#define FCE_IR7	(*( FCE_IR0_type *) 0xf00001e0u)	/* Input Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} FCE_KRST0_type;
#define FCE_KRST0	(*( FCE_KRST0_type *) 0xf00000f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} FCE_KRST1_type;
#define FCE_KRST1	(*( FCE_KRST1_type *) 0xf00000f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} FCE_KRSTCLR_type;
#define FCE_KRSTCLR	(*( FCE_KRSTCLR_type *) 0xf00000ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LENGTH         : 16;	/* Message Length Register */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} FCE_LENGTH0_type;
#define FCE_LENGTH0	(*( FCE_LENGTH0_type *) 0xf0000110u)	/* CRC Length Register 0 */
#define FCE_LENGTH1	(*( FCE_LENGTH0_type *) 0xf0000130u)	/* CRC Length Register 1 */
#define FCE_LENGTH2	(*( FCE_LENGTH0_type *) 0xf0000150u)	/* CRC Length Register 2 */
#define FCE_LENGTH3	(*( FCE_LENGTH0_type *) 0xf0000170u)	/* CRC Length Register 3 */
#define FCE_LENGTH4	(*( FCE_LENGTH0_type *) 0xf0000190u)	/* CRC Length Register 4 */
#define FCE_LENGTH5	(*( FCE_LENGTH0_type *) 0xf00001b0u)	/* CRC Length Register 5 */
#define FCE_LENGTH6	(*( FCE_LENGTH0_type *) 0xf00001d0u)	/* CRC Length Register 6 */
#define FCE_LENGTH7	(*( FCE_LENGTH0_type *) 0xf00001f0u)	/* CRC Length Register 7 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 32;	/* Result Register */
	} B;
	int I;
	unsigned int U;

} FCE_RES0_type;
#define FCE_RES0	(*( FCE_RES0_type *) 0xf0000104u)	/* CRC Result Register 0 */
#define FCE_RES1	(*( FCE_RES0_type *) 0xf0000124u)	/* CRC Result Register 1 */
#define FCE_RES2	(*( FCE_RES0_type *) 0xf0000144u)	/* CRC Result Register 2 */
#define FCE_RES3	(*( FCE_RES0_type *) 0xf0000164u)	/* CRC Result Register 3 */
#define FCE_RES4	(*( FCE_RES0_type *) 0xf0000184u)	/* CRC Result Register 4 */
#define FCE_RES5	(*( FCE_RES0_type *) 0xf00001a4u)	/* CRC Result Register 5 */
#define FCE_RES6	(*( FCE_RES0_type *) 0xf00001c4u)	/* CRC Result Register 6 */
#define FCE_RES7	(*( FCE_RES0_type *) 0xf00001e4u)	/* CRC Result Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMF            : 1;	/* CRC Mismatch Flag */
		unsigned int CEF            : 1;	/* Configuration Error Flag */
		unsigned int LEF            : 1;	/* Length Error Flag */
		unsigned int BEF            : 1;	/* Bus Error Flag */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} FCE_STS0_type;
#define FCE_STS0	(*( FCE_STS0_type *) 0xf000010cu)	/* CRC Status Register 0 */
#define FCE_STS1	(*( FCE_STS0_type *) 0xf000012cu)	/* CRC Status Register 1 */
#define FCE_STS2	(*( FCE_STS0_type *) 0xf000014cu)	/* CRC Status Register 2 */
#define FCE_STS3	(*( FCE_STS0_type *) 0xf000016cu)	/* CRC Status Register 3 */
#define FCE_STS4	(*( FCE_STS0_type *) 0xf000018cu)	/* CRC Status Register 4 */
#define FCE_STS5	(*( FCE_STS0_type *) 0xf00001acu)	/* CRC Status Register 5 */
#define FCE_STS6	(*( FCE_STS0_type *) 0xf00001ccu)	/* CRC Status Register 6 */
#define FCE_STS7	(*( FCE_STS0_type *) 0xf00001ecu)	/* CRC Status Register 7 */


/* EBCU_SBCU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} EBCU_ACCEN0_type;
#define EBCU_ACCEN0	(*( EBCU_ACCEN0_type *) 0xfa0001fcu)	/* Access Enable Register 0 */
#define SBCU_ACCEN0	(*( EBCU_ACCEN0_type *) 0xf00300fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} EBCU_ACCEN1_type;
#define EBCU_ACCEN1	(*( EBCU_ACCEN1_type *) 0xfa0001f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR00          : 1;	/* Clear alarm 0 */
		unsigned int CLR01          : 1;	/* Clear alarm 1 */
		unsigned int CLR02          : 1;	/* Clear alarm 2 */
		unsigned int CLR03          : 1;	/* Clear alarm 3 */
		unsigned int CLR04          : 1;	/* Clear alarm 4 */
		unsigned int CLR05          : 1;	/* Clear alarm 5 */
		unsigned int CLR06          : 1;	/* Clear alarm 6 */
		unsigned int CLR07          : 1;	/* Clear alarm 7 */
		unsigned int CLR08          : 1;	/* Clear alarm 8 */
		unsigned int CLR09          : 1;	/* Clear alarm 9 */
		unsigned int CLR10          : 1;	/* Clear alarm 10 */
		unsigned int CLR11          : 1;	/* Clear alarm 11 */
		unsigned int CLR12          : 1;	/* Clear alarm 12 */
		unsigned int CLR13          : 1;	/* Clear alarm 13 */
		unsigned int CLR14          : 1;	/* Clear alarm 14 */
		unsigned int CLR15          : 1;	/* Clear alarm 15 */
		unsigned int CLR16          : 1;	/* Clear alarm 16 */
		unsigned int CLR17          : 1;	/* Clear alarm 17 */
		unsigned int CLR18          : 1;	/* Clear alarm 18 */
		unsigned int CLR19          : 1;	/* Clear alarm 19 */
		unsigned int CLR20          : 1;	/* Clear alarm 20 */
		unsigned int CLR21          : 1;	/* Clear alarm 21 */
		unsigned int CLR22          : 1;	/* Clear alarm 22 */
		unsigned int CLR23          : 1;	/* Clear alarm 23 */
		unsigned int CLR24          : 1;	/* Clear alarm 24 */
		unsigned int CLR25          : 1;	/* Clear alarm 25 */
		unsigned int CLR26          : 1;	/* Clear alarm 26 */
		unsigned int CLR27          : 1;	/* Clear alarm 27 */
		unsigned int CLR28          : 1;	/* Clear alarm 28 */
		unsigned int CLR29          : 1;	/* Clear alarm 29 */
		unsigned int CLR30          : 1;	/* Clear alarm 30 */
		unsigned int CLR31          : 1;	/* Clear alarm 31 */
	} B;
	int I;
	unsigned int U;

} EBCU_ALCLR0_type;
#define EBCU_ALCLR0	(*( EBCU_ALCLR0_type *) 0xfa000170u)	/* BCU EDC Alarm Clear Register 0 */
#define EBCU_ALCLR1	(*( EBCU_ALCLR0_type *) 0xfa000174u)	/* BCU EDC Alarm Clear Register 1 */
#define EBCU_ALCLR2	(*( EBCU_ALCLR0_type *) 0xfa000178u)	/* BCU EDC Alarm Clear Register 2 */
#define EBCU_ALCLR3	(*( EBCU_ALCLR0_type *) 0xfa00017cu)	/* BCU EDC Alarm Clear Register 3 */
#define SBCU_ALCLR0	(*( EBCU_ALCLR0_type *) 0xf0030070u)	/* BCU EDC Alarm Clear Register 0 */
#define SBCU_ALCLR1	(*( EBCU_ALCLR0_type *) 0xf0030074u)	/* BCU EDC Alarm Clear Register 1 */
#define SBCU_ALCLR2	(*( EBCU_ALCLR0_type *) 0xf0030078u)	/* BCU EDC Alarm Clear Register 2 */
#define SBCU_ALCLR3	(*( EBCU_ALCLR0_type *) 0xf003007cu)	/* BCU EDC Alarm Clear Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ALOV           : 1;	/* Alarm Overflow */
		unsigned int ALOVCLR        : 1;	/* Alarm Overflow Clear */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} EBCU_ALCTRL_type;
#define EBCU_ALCTRL	(*( EBCU_ALCTRL_type *) 0xfa000180u)	/* BCU EDC Alarm Control Register */
#define SBCU_ALCTRL	(*( EBCU_ALCTRL_type *) 0xf0030080u)	/* BCU EDC Alarm Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AL00           : 1;	/* Alarm 0 */
		/* const */ unsigned int AL01           : 1;	/* Alarm 1 */
		/* const */ unsigned int AL02           : 1;	/* Alarm 2 */
		/* const */ unsigned int AL03           : 1;	/* Alarm 3 */
		/* const */ unsigned int AL04           : 1;	/* Alarm 4 */
		/* const */ unsigned int AL05           : 1;	/* Alarm 5 */
		/* const */ unsigned int AL06           : 1;	/* Alarm 6 */
		/* const */ unsigned int AL07           : 1;	/* Alarm 7 */
		/* const */ unsigned int AL08           : 1;	/* Alarm 8 */
		/* const */ unsigned int AL09           : 1;	/* Alarm 9 */
		/* const */ unsigned int AL10           : 1;	/* Alarm 10 */
		/* const */ unsigned int AL11           : 1;	/* Alarm 11 */
		/* const */ unsigned int AL12           : 1;	/* Alarm 12 */
		/* const */ unsigned int AL13           : 1;	/* Alarm 13 */
		/* const */ unsigned int AL14           : 1;	/* Alarm 14 */
		/* const */ unsigned int AL15           : 1;	/* Alarm 15 */
		/* const */ unsigned int AL16           : 1;	/* Alarm 16 */
		/* const */ unsigned int AL17           : 1;	/* Alarm 17 */
		/* const */ unsigned int AL18           : 1;	/* Alarm 18 */
		/* const */ unsigned int AL19           : 1;	/* Alarm 19 */
		/* const */ unsigned int AL20           : 1;	/* Alarm 20 */
		/* const */ unsigned int AL21           : 1;	/* Alarm 21 */
		/* const */ unsigned int AL22           : 1;	/* Alarm 22 */
		/* const */ unsigned int AL23           : 1;	/* Alarm 23 */
		/* const */ unsigned int AL24           : 1;	/* Alarm 24 */
		/* const */ unsigned int AL25           : 1;	/* Alarm 25 */
		/* const */ unsigned int AL26           : 1;	/* Alarm 26 */
		/* const */ unsigned int AL27           : 1;	/* Alarm 27 */
		/* const */ unsigned int AL28           : 1;	/* Alarm 28 */
		/* const */ unsigned int AL29           : 1;	/* Alarm 29 */
		/* const */ unsigned int AL30           : 1;	/* Alarm 30 */
		/* const */ unsigned int AL31           : 1;	/* Alarm 31 */
	} B;
	int I;
	unsigned int U;

} EBCU_ALSTAT0_type;
#define EBCU_ALSTAT0	(*( EBCU_ALSTAT0_type *) 0xfa000160u)	/* BCU EDC Alarm Status Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AL00           : 1;	/* Alarm 0 */
		/* const */ unsigned int AL01           : 1;	/* Alarm 1 */
		/* const */ unsigned int AL02           : 1;	/* Alarm 2 */
		/* const */ unsigned int AL03           : 1;	/* Alarm 3 */
		/* const */ unsigned int AL04           : 1;	/* Alarm 4 */
		/* const */ unsigned int AL05           : 1;	/* Alarm 5 */
		/* const */ unsigned int AL06           : 1;	/* Alarm 6 */
		/* const */ unsigned int AL07           : 1;	/* Alarm 7 */
		/* const */ unsigned int AL08           : 1;	/* Alarm 8 */
		/* const */ unsigned int AL09           : 1;	/* Alarm 9 */
		/* const */ unsigned int AL10           : 1;	/* Alarm 10 */
		/* const */ unsigned int AL11           : 1;	/* Alarm 11 */
		/* const */ unsigned int AL12           : 1;	/* Alarm 12 */
		/* const */ unsigned int AL13           : 1;	/* Alarm 13 */
		/* const */ unsigned int AL14           : 1;	/* Alarm 14 */
		/* const */ unsigned int AL15           : 1;	/* Alarm 15 */
		/* const */ unsigned int AL16           : 1;	/* Alarm 16 */
		/* const */ unsigned int AL17           : 1;	/* Alarm 17 */
		/* const */ unsigned int AL18           : 1;	/* Alarm 18 */
		/* const */ unsigned int AL19           : 1;	/* Alarm 19 */
		/* const */ unsigned int AL20           : 1;	/* Alarm 20 */
		/* const */ unsigned int AL21           : 1;	/* Alarm 21 */
		/* const */ unsigned int AL22           : 1;	/* Alarm 22 */
		/* const */ unsigned int AL23           : 1;	/* Alarm 23 */
		/* const */ unsigned int AL24           : 1;	/* Alarm 24 */
		/* const */ unsigned int AL25           : 1;	/* Alarm 25 */
		/* const */ unsigned int AL26           : 1;	/* Alarm 26 */
		/* const */ unsigned int AL27           : 1;	/* Alarm 27 */
		/* const */ unsigned int AL28           : 1;	/* Alarm 28 */
		/* const */ unsigned int AL29           : 1;	/* Alarm 29 */
		/* const */ unsigned int AL30           : 1;	/* Alarm 30 */
		/* const */ unsigned int AL31           : 1;	/* Alarm 31 */
	} B;
	int I;
	unsigned int U;

} EBCU_ALSTAT1_type;
#define EBCU_ALSTAT1	(*( EBCU_ALSTAT1_type *) 0xfa000164u)	/* BCU EDC Alarm Status Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AL00           : 1;	/* Alarm 0 */
		/* const */ unsigned int AL01           : 1;	/* Alarm 1 */
		/* const */ unsigned int AL02           : 1;	/* Alarm 2 */
		/* const */ unsigned int AL03           : 1;	/* Alarm 3 */
		/* const */ unsigned int AL04           : 1;	/* Alarm 4 */
		/* const */ unsigned int AL05           : 1;	/* Alarm 5 */
		/* const */ unsigned int AL06           : 1;	/* Alarm 6 */
		/* const */ unsigned int AL07           : 1;	/* Alarm 7 */
		/* const */ unsigned int AL08           : 1;	/* Alarm 8 */
		/* const */ unsigned int AL09           : 1;	/* Alarm 9 */
		/* const */ unsigned int AL10           : 1;	/* Alarm 10 */
		/* const */ unsigned int AL11           : 1;	/* Alarm 11 */
		/* const */ unsigned int AL12           : 1;	/* Alarm 12 */
		/* const */ unsigned int AL13           : 1;	/* Alarm 13 */
		/* const */ unsigned int AL14           : 1;	/* Alarm 14 */
		/* const */ unsigned int AL15           : 1;	/* Alarm 15 */
		/* const */ unsigned int AL16           : 1;	/* Alarm 16 */
		/* const */ unsigned int AL17           : 1;	/* Alarm 17 */
		/* const */ unsigned int AL18           : 1;	/* Alarm 18 */
		/* const */ unsigned int AL19           : 1;	/* Alarm 19 */
		/* const */ unsigned int AL20           : 1;	/* Alarm 20 */
		/* const */ unsigned int AL21           : 1;	/* Alarm 21 */
		/* const */ unsigned int AL22           : 1;	/* Alarm 22 */
		/* const */ unsigned int AL23           : 1;	/* Alarm 23 */
		/* const */ unsigned int AL24           : 1;	/* Alarm 24 */
		/* const */ unsigned int AL25           : 1;	/* Alarm 25 */
		/* const */ unsigned int AL26           : 1;	/* Alarm 26 */
		/* const */ unsigned int AL27           : 1;	/* Alarm 27 */
		/* const */ unsigned int AL28           : 1;	/* Alarm 28 */
		/* const */ unsigned int AL29           : 1;	/* Alarm 29 */
		/* const */ unsigned int AL30           : 1;	/* Alarm 30 */
		/* const */ unsigned int AL31           : 1;	/* Alarm 31 */
	} B;
	int I;
	unsigned int U;

} EBCU_ALSTAT2_type;
#define EBCU_ALSTAT2	(*( EBCU_ALSTAT2_type *) 0xfa000168u)	/* BCU EDC Alarm Status Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AL00           : 1;	/* Alarm 0 */
		/* const */ unsigned int AL01           : 1;	/* Alarm 1 */
		/* const */ unsigned int AL02           : 1;	/* Alarm 2 */
		/* const */ unsigned int AL03           : 1;	/* Alarm 3 */
		/* const */ unsigned int AL04           : 1;	/* Alarm 4 */
		/* const */ unsigned int AL05           : 1;	/* Alarm 5 */
		/* const */ unsigned int AL06           : 1;	/* Alarm 6 */
		/* const */ unsigned int AL07           : 1;	/* Alarm 7 */
		/* const */ unsigned int AL08           : 1;	/* Alarm 8 */
		/* const */ unsigned int AL09           : 1;	/* Alarm 9 */
		/* const */ unsigned int AL10           : 1;	/* Alarm 10 */
		/* const */ unsigned int AL11           : 1;	/* Alarm 11 */
		/* const */ unsigned int AL12           : 1;	/* Alarm 12 */
		/* const */ unsigned int AL13           : 1;	/* Alarm 13 */
		/* const */ unsigned int AL14           : 1;	/* Alarm 14 */
		/* const */ unsigned int AL15           : 1;	/* Alarm 15 */
		/* const */ unsigned int AL16           : 1;	/* Alarm 16 */
		/* const */ unsigned int AL17           : 1;	/* Alarm 17 */
		/* const */ unsigned int AL18           : 1;	/* Alarm 18 */
		/* const */ unsigned int AL19           : 1;	/* Alarm 19 */
		/* const */ unsigned int AL20           : 1;	/* Alarm 20 */
		/* const */ unsigned int AL21           : 1;	/* Alarm 21 */
		/* const */ unsigned int AL22           : 1;	/* Alarm 22 */
		/* const */ unsigned int AL23           : 1;	/* Alarm 23 */
		/* const */ unsigned int AL24           : 1;	/* Alarm 24 */
		/* const */ unsigned int AL25           : 1;	/* Alarm 25 */
		/* const */ unsigned int AL26           : 1;	/* Alarm 26 */
		/* const */ unsigned int AL27           : 1;	/* Alarm 27 */
		/* const */ unsigned int AL28           : 1;	/* Alarm 28 */
		/* const */ unsigned int AL29           : 1;	/* Alarm 29 */
		/* const */ unsigned int AL30           : 1;	/* Alarm 30 */
		/* const */ unsigned int AL31           : 1;	/* Alarm 31 */
	} B;
	int I;
	unsigned int U;

} EBCU_ALSTAT3_type;
#define EBCU_ALSTAT3	(*( EBCU_ALSTAT3_type *) 0xfa00016cu)	/* BCU EDC Alarm Status Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TOUT           : 16;	/* BCU Bus Time-Out Value */
		unsigned int DBG            : 1;	/* BCU Debug Trace Enable */
		unsigned int                : 7;
		unsigned int SPC            : 8;	/* Starvation Period Control */
	} B;
	int I;
	unsigned int U;

} EBCU_CON_type;
#define EBCU_CON	(*( EBCU_CON_type *) 0xfa000110u)	/* BCU Control Register */
#define SBCU_CON	(*( EBCU_CON_type *) 0xf0030010u)	/* BCU Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADR1           : 32;	/* Debug Trigger Address 1 */
	} B;
	int I;
	unsigned int U;

} EBCU_DBADR1_type;
#define EBCU_DBADR1	(*( EBCU_DBADR1_type *) 0xfa000138u)	/* BCU Debug Address 1 Register */
#define SBCU_DBADR1	(*( EBCU_DBADR1_type *) 0xf0030038u)	/* BCU Debug Address 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADR2           : 32;	/* Debug Trigger Address 2 */
	} B;
	int I;
	unsigned int U;

} EBCU_DBADR2_type;
#define EBCU_DBADR2	(*( EBCU_DBADR2_type *) 0xfa00013cu)	/* BCU Debug Address 2 Register */
#define SBCU_DBADR2	(*( EBCU_DBADR2_type *) 0xf003003cu)	/* BCU Debug Address 2 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIADR         : 32;	/* FPI Bus Address Status */
	} B;
	int I;
	unsigned int U;

} EBCU_DBADRT_type;
#define EBCU_DBADRT	(*( EBCU_DBADRT_type *) 0xfa000148u)	/* BCU Debug Trapped Address Register */
#define SBCU_DBADRT	(*( EBCU_DBADRT_type *) 0xf0030048u)	/* BCU Debug Trapped Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OPC            : 4;	/* Opcode for Signal Status Debug Trigger */
		unsigned int SVM            : 1;	/* SVM Signal for Status Debug Trigger */
		unsigned int                : 3;
		unsigned int WR             : 1;	/* Write Signal for Status Debug Trigger */
		unsigned int                : 3;
		unsigned int RD             : 1;	/* Write Signal for Status Debug Trigger */
		unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} EBCU_DBBOS_type;
#define EBCU_DBBOS	(*( EBCU_DBBOS_type *) 0xfa000140u)	/* BCU Debug Bus Operation Signals Register */
#define SBCU_DBBOS	(*( EBCU_DBBOS_type *) 0xf0030040u)	/* BCU Debug Bus Operation Signals Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIOPC         : 4;	/* FPI Bus Opcode Status */
		/* const */ unsigned int FPISVM         : 1;	/* FPI Bus Supervisor Mode Status */
		/* const */ unsigned int FPIACK         : 2;	/* FPI Bus Acknowledge Status */
		/* const */ unsigned int FPIRDY         : 1;	/* FPI Bus Ready Status */
		/* const */ unsigned int FPIWR          : 1;	/* FPI Bus Write Indication Status */
		/* const */ unsigned int FPIRST         : 2;	/* FPI Bus Reset Status */
		/* const */ unsigned int FPIOPS         : 1;	/* FPI Bus OCDS Suspend Status */
		/* const */ unsigned int FPIRD          : 1;	/* FPI Bus Read Indication Status */
		/* const */ unsigned int FPIABORT       : 1;	/* FPI Bus Abort Status */
		/* const */ unsigned int FPITOUT        : 1;	/* FPI Bus Time-out Status */
		/* const */ unsigned int ENDINIT        : 1;	/* FPI Bus Endinit Status */
		/* const */ unsigned int FPITAG         : 6;	/* FPI Bus Master TAG Status */
		/* const */ unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} EBCU_DBBOST_type;
#define EBCU_DBBOST	(*( EBCU_DBBOST_type *) 0xfa00014cu)	/* BCU Debug Trapped Bus Operation Signals Register */
#define SBCU_DBBOST	(*( EBCU_DBBOST_type *) 0xf003004cu)	/* BCU Debug Trapped Bus Operation Signals Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EO             : 1;	/* Status of BCU Debug Support Enable */
		/* const */ unsigned int OA             : 1;	/* Status of BCU Breakpoint Logic */
		unsigned int                : 2;
		unsigned int RA             : 1;	/* Rearm BCU Breakpoint Logic */
		unsigned int                : 7;
		unsigned int CONCOM0        : 1;	/* Grant and Address Trigger Relation */
		unsigned int CONCOM1        : 1;	/* Address 1 and Address 2 Trigger Relation */
		unsigned int CONCOM2        : 1;	/* Address and Signal Trigger Relation */
		unsigned int                : 1;
		unsigned int ONG            : 1;	/* Grant Trigger Enable */
		unsigned int                : 3;
		unsigned int ONA1           : 2;	/* Address 1 Trigger Control */
		unsigned int                : 2;
		unsigned int ONA2           : 2;	/* Address 2 Trigger Control */
		unsigned int                : 2;
		unsigned int ONBOS0         : 1;	/* Op code Signal Status Trigger Condition */
		unsigned int ONBOS1         : 1;	/* Supervisor Mode Signal Trigger Condition */
		unsigned int ONBOS2         : 1;	/* Write Signal Trigger Condition */
		unsigned int ONBOS3         : 1;	/* Read Signal Trigger Condition */
	} B;
	int I;
	unsigned int U;

} EBCU_DBCNTL_type;
#define EBCU_DBCNTL	(*( EBCU_DBCNTL_type *) 0xfa000130u)	/* BCU Debug Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FPIDATA        : 32;	/* FPI Bus Data Status */
	} B;
	int I;
	unsigned int U;

} EBCU_DBDAT_type;
#define EBCU_DBDAT	(*( EBCU_DBDAT_type *) 0xfa000150u)	/* BCU Debug Data Status Register */
#define SBCU_DBDAT	(*( EBCU_DBDAT_type *) 0xf0030050u)	/* BCU Debug Data Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int IOC32P         : 1;	/* IOC32P FPI Bus Master Status */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int IOC32E         : 1;	/* IOC32E FPI Bus Master Status */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int SFI_S2F        : 1;	/* SFI_S2F FPI Bus Master Status */
		/* const */ unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} EBCU_DBGNTT_type;
#define EBCU_DBGNTT	(*( EBCU_DBGNTT_type *) 0xfa000144u)	/* EBCU Debug Trapped Master Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IOC32P         : 1;	/* IOC32P Trigger Enable */
		unsigned int                : 2;
		unsigned int IOC32E         : 1;	/* IOC32E Grant Trigger Enable */
		unsigned int                : 2;
		unsigned int SFI_S2F        : 1;	/* SFI_S2F Grant Trigger Enable */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} EBCU_DBGRNT_type;
#define EBCU_DBGRNT	(*( EBCU_DBGRNT_type *) 0xfa000134u)	/* EBCU Debug Grant Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FPIADR         : 32;	/* Captured FPI Bus Address */
	} B;
	int I;
	unsigned int U;

} EBCU_EADD_type;
#define EBCU_EADD	(*( EBCU_EADD_type *) 0xfa000124u)	/* BCU Error Address Capture Register */
#define SBCU_EADD	(*( EBCU_EADD_type *) 0xf0030024u)	/* BCU Error Address Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRCNT         : 14;	/* FPI Bus Error Counter */
		unsigned int TOUT           : 1;	/* State of FPI Bus Time-Out Signal */
		unsigned int RDY            : 1;	/* State of FPI Bus Ready Signal */
		unsigned int ABT            : 1;	/* State of FPI Bus Abort Signal */
		unsigned int ACK            : 2;	/* State of FPI Bus Acknowledge Signals */
		unsigned int SVM            : 1;	/* State of FPI Bus Supervisor Mode Signal */
		unsigned int WRN            : 1;	/* State of FPI Bus Write Signal */
		unsigned int RDN            : 1;	/* State of FPI Bus Read Signal */
		unsigned int TAG            : 6;	/* FPI Bus Master Tag Number Signals */
		unsigned int OPC            : 4;	/* FPI Bus Operation Code Signals */
	} B;
	int I;
	unsigned int U;

} EBCU_ECON_type;
#define EBCU_ECON	(*( EBCU_ECON_type *) 0xfa000120u)	/* BCU Error Control Capture Register */
#define SBCU_ECON	(*( EBCU_ECON_type *) 0xf0030020u)	/* BCU Error Control Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FPIDAT         : 32;	/* Captured FPI Bus Data */
	} B;
	int I;
	unsigned int U;

} EBCU_EDAT_type;
#define EBCU_EDAT	(*( EBCU_EDAT_type *) 0xfa000128u)	/* BCU Error Data Capture Register */
#define SBCU_EDAT	(*( EBCU_EDAT_type *) 0xf0030028u)	/* BCU Error Data Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SEDM           : 3;	/* SEDM (Slave Encoder) */
		unsigned int                : 5;
		unsigned int MEDM           : 3;	/* MEDM (Master Encoder) Type of Error */
		unsigned int                : 5;
		unsigned int EN             : 3;	/* Enable Signal Type of Error */
		unsigned int                : 5;
		unsigned int BCU            : 2;	/* BCU Type of Error */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} EBCU_FEGEN_type;
#define EBCU_FEGEN	(*( EBCU_FEGEN_type *) 0xfa000184u)	/* FPI Error Generation Control Register */
#define SBCU_FEGEN	(*( EBCU_FEGEN_type *) 0xf0030084u)	/* FPI Error Generation Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_NUMBER     : 8;	/* Module Number Value */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} EBCU_ID_type;
#define EBCU_ID	(*( EBCU_ID_type *) 0xfa000108u)	/* Module Identification Register */
#define SBCU_ID	(*( EBCU_ID_type *) 0xf0030008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RESERVED       : 4;	/* Reserved */
		unsigned int RESERVED_2     : 4;	/* Reserved */
		unsigned int RESERVED_3     : 4;	/* Reserved */
		unsigned int RESERVED_4     : 4;	/* Reserved */
		unsigned int RESERVED_5     : 4;	/* Reserved */
		unsigned int RESERVED_6     : 4;	/* Reserved */
		unsigned int RESERVED_7     : 4;	/* Reserved */
		unsigned int RESERVED_8     : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} EBCU_PRIOH_type;
#define EBCU_PRIOH	(*( EBCU_PRIOH_type *) 0xfa000114u)	/* Arbiter Priority Register High */

typedef volatile union
{
	struct
	{ 
		unsigned int IOC32P         : 4;	/* IOC32P Priority (Index 0) */
		unsigned int RESERVED       : 4;	/* Reserved */
		unsigned int RESERVED_3     : 4;	/* Reserved */
		unsigned int IOC32E         : 4;	/* IOC32E Priority (Index 3) */
		unsigned int RESERVED_5     : 4;	/* Reserved */
		unsigned int RESERVED_6     : 4;	/* Reserved */
		unsigned int SFI_S2F        : 4;	/* SFI Bridge SRI2FPI Priority (Index 6) */
		unsigned int RESERVED_8     : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} EBCU_PRIOL_type;
#define EBCU_PRIOL	(*( EBCU_PRIOL_type *) 0xfa000118u)	/* Arbiter Priority Register Low */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SBCU_ACCEN1_type;
#define SBCU_ACCEN1	(*( SBCU_ACCEN1_type *) 0xf00300f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AL00           : 1;	/* Alarm 0 */
		/* const */ unsigned int AL01           : 1;	/* Alarm 1 */
		/* const */ unsigned int AL02           : 1;	/* Alarm 2 */
		/* const */ unsigned int AL03           : 1;	/* Alarm 3 */
		/* const */ unsigned int AL04           : 1;	/* Alarm 4 */
		/* const */ unsigned int AL05           : 1;	/* Alarm 5 */
		/* const */ unsigned int AL06           : 1;	/* Alarm 6 */
		/* const */ unsigned int AL07           : 1;	/* Alarm 7 */
		/* const */ unsigned int AL08           : 1;	/* Alarm 8 */
		/* const */ unsigned int AL09           : 1;	/* Alarm 9 */
		/* const */ unsigned int AL10           : 1;	/* Alarm 10 */
		/* const */ unsigned int AL11           : 1;	/* Alarm 11 */
		/* const */ unsigned int AL12           : 1;	/* Alarm 12 */
		/* const */ unsigned int AL13           : 1;	/* Alarm 13 */
		/* const */ unsigned int AL14           : 1;	/* Alarm 14 */
		/* const */ unsigned int AL15           : 1;	/* Alarm 15 */
		/* const */ unsigned int AL16           : 1;	/* Alarm 16 */
		/* const */ unsigned int AL17           : 1;	/* Alarm 17 */
		/* const */ unsigned int AL18           : 1;	/* Alarm 18 */
		/* const */ unsigned int AL19           : 1;	/* Alarm 19 */
		/* const */ unsigned int AL20           : 1;	/* Alarm 20 */
		/* const */ unsigned int AL21           : 1;	/* Alarm 21 */
		/* const */ unsigned int AL22           : 1;	/* Alarm 22 */
		/* const */ unsigned int AL23           : 1;	/* Alarm 23 */
		/* const */ unsigned int AL24           : 1;	/* Alarm 24 */
		/* const */ unsigned int AL25           : 1;	/* Alarm 25 */
		/* const */ unsigned int AL26           : 1;	/* Alarm 26 */
		/* const */ unsigned int AL27           : 1;	/* Alarm 27 */
		/* const */ unsigned int AL28           : 1;	/* Alarm 28 */
		/* const */ unsigned int AL29           : 1;	/* Alarm 29 */
		/* const */ unsigned int AL30           : 1;	/* Alarm 30 */
		/* const */ unsigned int AL31           : 1;	/* Alarm 31 */
	} B;
	int I;
	unsigned int U;

} SBCU_ALSTAT0_type;
#define SBCU_ALSTAT0	(*( SBCU_ALSTAT0_type *) 0xf0030060u)	/* BCU EDC Alarm Status Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AL00           : 1;	/* Alarm 0 */
		/* const */ unsigned int AL01           : 1;	/* Alarm 1 */
		/* const */ unsigned int AL02           : 1;	/* Alarm 2 */
		/* const */ unsigned int AL03           : 1;	/* Alarm 3 */
		/* const */ unsigned int AL04           : 1;	/* Alarm 4 */
		/* const */ unsigned int AL05           : 1;	/* Alarm 5 */
		/* const */ unsigned int AL06           : 1;	/* Alarm 6 */
		/* const */ unsigned int AL07           : 1;	/* Alarm 7 */
		/* const */ unsigned int AL08           : 1;	/* Alarm 8 */
		/* const */ unsigned int AL09           : 1;	/* Alarm 9 */
		/* const */ unsigned int AL10           : 1;	/* Alarm 10 */
		/* const */ unsigned int AL11           : 1;	/* Alarm 11 */
		/* const */ unsigned int AL12           : 1;	/* Alarm 12 */
		/* const */ unsigned int AL13           : 1;	/* Alarm 13 */
		/* const */ unsigned int AL14           : 1;	/* Alarm 14 */
		/* const */ unsigned int AL15           : 1;	/* Alarm 15 */
		/* const */ unsigned int AL16           : 1;	/* Alarm 16 */
		/* const */ unsigned int AL17           : 1;	/* Alarm 17 */
		/* const */ unsigned int AL18           : 1;	/* Alarm 18 */
		/* const */ unsigned int AL19           : 1;	/* Alarm 19 */
		/* const */ unsigned int AL20           : 1;	/* Alarm 20 */
		/* const */ unsigned int AL21           : 1;	/* Alarm 21 */
		/* const */ unsigned int AL22           : 1;	/* Alarm 22 */
		/* const */ unsigned int AL23           : 1;	/* Alarm 23 */
		/* const */ unsigned int AL24           : 1;	/* Alarm 24 */
		/* const */ unsigned int AL25           : 1;	/* Alarm 25 */
		/* const */ unsigned int AL26           : 1;	/* Alarm 26 */
		/* const */ unsigned int AL27           : 1;	/* Alarm 27 */
		/* const */ unsigned int AL28           : 1;	/* Alarm 28 */
		/* const */ unsigned int AL29           : 1;	/* Alarm 29 */
		/* const */ unsigned int AL30           : 1;	/* Alarm 30 */
		/* const */ unsigned int AL31           : 1;	/* Alarm 31 */
	} B;
	int I;
	unsigned int U;

} SBCU_ALSTAT1_type;
#define SBCU_ALSTAT1	(*( SBCU_ALSTAT1_type *) 0xf0030064u)	/* BCU EDC Alarm Status Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AL00           : 1;	/* Alarm 0 */
		/* const */ unsigned int AL01           : 1;	/* Alarm 1 */
		/* const */ unsigned int AL02           : 1;	/* Alarm 2 */
		/* const */ unsigned int AL03           : 1;	/* Alarm 3 */
		/* const */ unsigned int AL04           : 1;	/* Alarm 4 */
		/* const */ unsigned int AL05           : 1;	/* Alarm 5 */
		/* const */ unsigned int AL06           : 1;	/* Alarm 6 */
		/* const */ unsigned int AL07           : 1;	/* Alarm 7 */
		/* const */ unsigned int AL08           : 1;	/* Alarm 8 */
		/* const */ unsigned int AL09           : 1;	/* Alarm 9 */
		/* const */ unsigned int AL10           : 1;	/* Alarm 10 */
		/* const */ unsigned int AL11           : 1;	/* Alarm 11 */
		/* const */ unsigned int AL12           : 1;	/* Alarm 12 */
		/* const */ unsigned int AL13           : 1;	/* Alarm 13 */
		/* const */ unsigned int AL14           : 1;	/* Alarm 14 */
		/* const */ unsigned int AL15           : 1;	/* Alarm 15 */
		/* const */ unsigned int AL16           : 1;	/* Alarm 16 */
		/* const */ unsigned int AL17           : 1;	/* Alarm 17 */
		/* const */ unsigned int AL18           : 1;	/* Alarm 18 */
		/* const */ unsigned int AL19           : 1;	/* Alarm 19 */
		/* const */ unsigned int AL20           : 1;	/* Alarm 20 */
		/* const */ unsigned int AL21           : 1;	/* Alarm 21 */
		/* const */ unsigned int AL22           : 1;	/* Alarm 22 */
		/* const */ unsigned int AL23           : 1;	/* Alarm 23 */
		/* const */ unsigned int AL24           : 1;	/* Alarm 24 */
		/* const */ unsigned int AL25           : 1;	/* Alarm 25 */
		/* const */ unsigned int AL26           : 1;	/* Alarm 26 */
		/* const */ unsigned int AL27           : 1;	/* Alarm 27 */
		/* const */ unsigned int AL28           : 1;	/* Alarm 28 */
		/* const */ unsigned int AL29           : 1;	/* Alarm 29 */
		/* const */ unsigned int AL30           : 1;	/* Alarm 30 */
		/* const */ unsigned int AL31           : 1;	/* Alarm 31 */
	} B;
	int I;
	unsigned int U;

} SBCU_ALSTAT2_type;
#define SBCU_ALSTAT2	(*( SBCU_ALSTAT2_type *) 0xf0030068u)	/* BCU EDC Alarm Status Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AL00           : 1;	/* Alarm 0 */
		/* const */ unsigned int AL01           : 1;	/* Alarm 1 */
		/* const */ unsigned int AL02           : 1;	/* Alarm 2 */
		/* const */ unsigned int AL03           : 1;	/* Alarm 3 */
		/* const */ unsigned int AL04           : 1;	/* Alarm 4 */
		/* const */ unsigned int AL05           : 1;	/* Alarm 5 */
		/* const */ unsigned int AL06           : 1;	/* Alarm 6 */
		/* const */ unsigned int AL07           : 1;	/* Alarm 7 */
		/* const */ unsigned int AL08           : 1;	/* Alarm 8 */
		/* const */ unsigned int AL09           : 1;	/* Alarm 9 */
		/* const */ unsigned int AL10           : 1;	/* Alarm 10 */
		/* const */ unsigned int AL11           : 1;	/* Alarm 11 */
		/* const */ unsigned int AL12           : 1;	/* Alarm 12 */
		/* const */ unsigned int AL13           : 1;	/* Alarm 13 */
		/* const */ unsigned int AL14           : 1;	/* Alarm 14 */
		/* const */ unsigned int AL15           : 1;	/* Alarm 15 */
		/* const */ unsigned int AL16           : 1;	/* Alarm 16 */
		/* const */ unsigned int AL17           : 1;	/* Alarm 17 */
		/* const */ unsigned int AL18           : 1;	/* Alarm 18 */
		/* const */ unsigned int AL19           : 1;	/* Alarm 19 */
		/* const */ unsigned int AL20           : 1;	/* Alarm 20 */
		/* const */ unsigned int AL21           : 1;	/* Alarm 21 */
		/* const */ unsigned int AL22           : 1;	/* Alarm 22 */
		/* const */ unsigned int AL23           : 1;	/* Alarm 23 */
		/* const */ unsigned int AL24           : 1;	/* Alarm 24 */
		/* const */ unsigned int AL25           : 1;	/* Alarm 25 */
		/* const */ unsigned int AL26           : 1;	/* Alarm 26 */
		/* const */ unsigned int AL27           : 1;	/* Alarm 27 */
		/* const */ unsigned int AL28           : 1;	/* Alarm 28 */
		/* const */ unsigned int AL29           : 1;	/* Alarm 29 */
		/* const */ unsigned int AL30           : 1;	/* Alarm 30 */
		/* const */ unsigned int AL31           : 1;	/* Alarm 31 */
	} B;
	int I;
	unsigned int U;

} SBCU_ALSTAT3_type;
#define SBCU_ALSTAT3	(*( SBCU_ALSTAT3_type *) 0xf003006cu)	/* BCU EDC Alarm Status Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EO             : 1;	/* Status of BCU Debug Support Enable */
		/* const */ unsigned int OA             : 1;	/* Status of BCU Breakpoint Logic */
		unsigned int                : 2;
		unsigned int RA             : 1;	/* Rearm BCU Breakpoint Logic */
		/* const */ unsigned int HSMTRTREN      : 2;	/* Status of HSM Transaction Trace Logic */
		/* const */ unsigned int HSMDBGEN       : 1;	/* Status of HSM Debug Mode */
		unsigned int                : 4;
		unsigned int CONCOM0        : 1;	/* Grant and Address Trigger Relation */
		unsigned int CONCOM1        : 1;	/* Address 1 and Address 2 Trigger Relation */
		unsigned int CONCOM2        : 1;	/* Address and Signal Trigger Relation */
		unsigned int                : 1;
		unsigned int ONG            : 1;	/* Grant Trigger Enable */
		unsigned int                : 3;
		unsigned int ONA1           : 2;	/* Address 1 Trigger Control */
		unsigned int                : 2;
		unsigned int ONA2           : 2;	/* Address 2 Trigger Control */
		unsigned int                : 2;
		unsigned int ONBOS0         : 1;	/* Op code Signal Status Trigger Condition */
		unsigned int ONBOS1         : 1;	/* Supervisor Mode Signal Trigger Condition */
		unsigned int ONBOS2         : 1;	/* Write Signal Trigger Condition */
		unsigned int ONBOS3         : 1;	/* Read Signal Trigger Condition */
	} B;
	int I;
	unsigned int U;

} SBCU_DBCNTL_type;
#define SBCU_DBCNTL	(*( SBCU_DBCNTL_type *) 0xf0030030u)	/* BCU Debug Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DMA            : 1;	/* DMA / Cerberus FPI Bus Master Status */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int CPU0           : 1;	/* CPU0 FPI Bus Master Status */
		/* const */ unsigned int CPU1           : 1;	/* CPU1 FPI Bus Master Status */
		/* const */ unsigned int CPU2           : 1;	/* CPU2 Grant Trigger Enable */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int HSMRMI         : 1;	/* HSM Register FPI Bus Master Interface Status */
		/* const */ unsigned int HSMCMI         : 1;	/* HSM Cache FPI Bus Master Interface Status */
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} SBCU_DBGNTT_type;
#define SBCU_DBGNTT	(*( SBCU_DBGNTT_type *) 0xf0030044u)	/* SBCU Debug Trapped Master Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DMA            : 1;	/* DMA / Cerberus Trigger Enable */
		unsigned int                : 5;
		unsigned int CPU0           : 1;	/* CPU0 Grant Trigger Enable */
		unsigned int CPU1           : 1;	/* CPU1 Grant Trigger Enable */
		unsigned int CPU2           : 1;	/* CPU2 Grant Trigger Enable */
		unsigned int                : 3;
		unsigned int HSMRMI         : 1;	/* HSM Register Master Interface Grant Trigger Enable */
		unsigned int HSMCMI         : 1;	/* HSM Cache Master Interface Grant Trigger Enable */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} SBCU_DBGRNT_type;
#define SBCU_DBGRNT	(*( SBCU_DBGRNT_type *) 0xf0030034u)	/* SBCU Debug Grant Mask Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU2           : 4;	/* CPU2 Priority (Index 8) */
		unsigned int RESERVED       : 4;	/* Reserved */
		unsigned int RESERVED_3     : 4;	/* Reserved */
		unsigned int RESERVED_4     : 4;	/* Reserved */
		unsigned int HSMRMI         : 4;	/* HSMRMI Priority (Index 12) */
		unsigned int HSMCMI         : 4;	/* HSMCMI Priority (Index 13) */
		unsigned int RESERVED_7     : 4;	/* Reserved */
		unsigned int RESERVED_8     : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SBCU_PRIOH_type;
#define SBCU_PRIOH	(*( SBCU_PRIOH_type *) 0xf0030014u)	/* Arbiter Priority Register High */

typedef volatile union
{
	struct
	{ 
		unsigned int DMA            : 4;	/* DMA / Cerberus Priority (Index 0) */
		unsigned int RESERVED       : 4;	/* Reserved */
		unsigned int RESERVED_3     : 4;	/* Reserved */
		unsigned int RESERVED_4     : 4;	/* Reserved */
		unsigned int RESERVED_5     : 4;	/* Reserved */
		unsigned int RESERVED_6     : 4;	/* Reserved */
		unsigned int CPU0           : 4;	/* CPU0 Priority (Index 6) */
		unsigned int CPU1           : 4;	/* CPU1 Priority (Index 7) */
	} B;
	int I;
	unsigned int U;

} SBCU_PRIOL_type;
#define SBCU_PRIOL	(*( SBCU_PRIOL_type *) 0xf0030018u)	/* Arbiter Priority Register Low */


/* GETH */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} GETH_ACCEN0_type;
#define GETH_ACCEN0	(*( GETH_ACCEN0_type *) 0xf001f00cu)	/* Access Enable Register 0 */
#define GETH_ACCEN0D0	(*( GETH_ACCEN0_type *) 0xf001f020u)	/* Access Enable Register 0 for DMA0 */
#define GETH_ACCEN0D1	(*( GETH_ACCEN0_type *) 0xf001f028u)	/* Access Enable Register 0 for DMA1 */
#define GETH_ACCEN0D2	(*( GETH_ACCEN0_type *) 0xf001f030u)	/* Access Enable Register 0 for DMA2 */
#define GETH_ACCEN0D3	(*( GETH_ACCEN0_type *) 0xf001f038u)	/* Access Enable Register 0 for DMA3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_ACCEN1_type;
#define GETH_ACCEN1	(*( GETH_ACCEN1_type *) 0xf001f010u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_ACCEN1D0_type;
#define GETH_ACCEN1D0	(*( GETH_ACCEN1D0_type *) 0xf001f024u)	/* Access Enable Register 1 for DMA0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_ACCEN1D1_type;
#define GETH_ACCEN1D1	(*( GETH_ACCEN1D1_type *) 0xf001f02cu)	/* Access Enable Register 1 for DMA1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_ACCEN1D2_type;
#define GETH_ACCEN1D2	(*( GETH_ACCEN1D2_type *) 0xf001f034u)	/* Access Enable Register 1 for DMA2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_ACCEN1D3_type;
#define GETH_ACCEN1D3	(*( GETH_ACCEN1D3_type *) 0xf001f03cu)	/* Access Enable Register 1 for DMA3 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} GETH_CLC_type;
#define GETH_CLC	(*( GETH_CLC_type *) 0xf001f000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_13_0       : 14;	/* Reserved for future use. */
		/* const */ unsigned int RES_15_14      : 2;	/* Reserved */
		unsigned int PBLx8          : 1;	/* 8xPBL mode */
		/* const */ unsigned int RES_17         : 1;	/* Reserved */
		unsigned int DSL            : 3;	/* Descriptor Skip Length */
		/* const */ unsigned int RES_23_21      : 3;	/* Reserved */
		unsigned int SPH            : 1;	/* Split Headers */
		/* const */ unsigned int RES_31_25      : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_CONTROL_type;
#define GETH_DMA_CH0_CONTROL	(*( GETH_DMA_CH0_CONTROL_type *) 0xf001e100u)	/* DMA Channel 0 Control Register */
#define GETH_DMA_CH1_CONTROL	(*( GETH_DMA_CH0_CONTROL_type *) 0xf001e180u)	/* DMA Channel 1 Control Register */
#define GETH_DMA_CH2_CONTROL	(*( GETH_DMA_CH0_CONTROL_type *) 0xf001e200u)	/* DMA Channel 2 Control Register */
#define GETH_DMA_CH3_CONTROL	(*( GETH_DMA_CH0_CONTROL_type *) 0xf001e280u)	/* DMA Channel 3 Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURRBUFAPTR    : 32;	/* Application Receive Buffer Address Pointer */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_CURRENT_APP_RXBUFFER_type;
#define GETH_DMA_CH0_CURRENT_APP_RXBUFFER	(*( GETH_DMA_CH0_CURRENT_APP_RXBUFFER_type *) 0xf001e15cu)	/* DMA Channel 0 Current Application Receive Buffer Address Register */
#define GETH_DMA_CH1_CURRENT_APP_RXBUFFER	(*( GETH_DMA_CH0_CURRENT_APP_RXBUFFER_type *) 0xf001e1dcu)	/* DMA Channel 1 Current Application Receive Buffer Address Register */
#define GETH_DMA_CH2_CURRENT_APP_RXBUFFER	(*( GETH_DMA_CH0_CURRENT_APP_RXBUFFER_type *) 0xf001e25cu)	/* DMA Channel 2 Current Application Receive Buffer Address Register */
#define GETH_DMA_CH3_CURRENT_APP_RXBUFFER	(*( GETH_DMA_CH0_CURRENT_APP_RXBUFFER_type *) 0xf001e2dcu)	/* DMA Channel 3 Current Application Receive Buffer Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURRDESAPTR    : 32;	/* Application Receive Descriptor Address Pointer */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_CURRENT_APP_RXDESC_type;
#define GETH_DMA_CH0_CURRENT_APP_RXDESC	(*( GETH_DMA_CH0_CURRENT_APP_RXDESC_type *) 0xf001e14cu)	/* DMA Channel 0 Current Application Receive Descriptor Register */
#define GETH_DMA_CH1_CURRENT_APP_RXDESC	(*( GETH_DMA_CH0_CURRENT_APP_RXDESC_type *) 0xf001e1ccu)	/* DMA Channel 1 Current Application Receive Descriptor Register */
#define GETH_DMA_CH2_CURRENT_APP_RXDESC	(*( GETH_DMA_CH0_CURRENT_APP_RXDESC_type *) 0xf001e24cu)	/* DMA Channel 2 Current Application Receive Descriptor Register */
#define GETH_DMA_CH3_CURRENT_APP_RXDESC	(*( GETH_DMA_CH0_CURRENT_APP_RXDESC_type *) 0xf001e2ccu)	/* DMA Channel 3 Current Application Receive Descriptor Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURTBUFAPTR    : 32;	/* Application Transmit Buffer Address Pointer */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_CURRENT_APP_TXBUFFER_type;
#define GETH_DMA_CH0_CURRENT_APP_TXBUFFER	(*( GETH_DMA_CH0_CURRENT_APP_TXBUFFER_type *) 0xf001e154u)	/* DMA Channel 0 Current Application Transmit Buffer Address Register */
#define GETH_DMA_CH1_CURRENT_APP_TXBUFFER	(*( GETH_DMA_CH0_CURRENT_APP_TXBUFFER_type *) 0xf001e1d4u)	/* DMA Channel 1 Current Application Transmit Buffer Address Register */
#define GETH_DMA_CH2_CURRENT_APP_TXBUFFER	(*( GETH_DMA_CH0_CURRENT_APP_TXBUFFER_type *) 0xf001e254u)	/* DMA Channel 2 Current Application Transmit Buffer Address Register */
#define GETH_DMA_CH3_CURRENT_APP_TXBUFFER	(*( GETH_DMA_CH0_CURRENT_APP_TXBUFFER_type *) 0xf001e2d4u)	/* DMA Channel 3 Current Application Transmit Buffer Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURTDESAPTR    : 32;	/* Application Transmit Descriptor Address Pointer */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_CURRENT_APP_TXDESC_type;
#define GETH_DMA_CH0_CURRENT_APP_TXDESC	(*( GETH_DMA_CH0_CURRENT_APP_TXDESC_type *) 0xf001e144u)	/* DMA Channel 0 Current Application Transmit Descriptor Register */
#define GETH_DMA_CH1_CURRENT_APP_TXDESC	(*( GETH_DMA_CH0_CURRENT_APP_TXDESC_type *) 0xf001e1c4u)	/* DMA Channel 1 Current Application Transmit Descriptor Register */
#define GETH_DMA_CH2_CURRENT_APP_TXDESC	(*( GETH_DMA_CH0_CURRENT_APP_TXDESC_type *) 0xf001e244u)	/* DMA Channel 2 Current Application Transmit Descriptor Register */
#define GETH_DMA_CH3_CURRENT_APP_TXDESC	(*( GETH_DMA_CH0_CURRENT_APP_TXDESC_type *) 0xf001e2c4u)	/* DMA Channel 3 Current Application Transmit Descriptor Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TIE            : 1;	/* Transmit Interrupt Enable */
		unsigned int TXSE           : 1;	/* Transmit Stopped Enable */
		unsigned int TBUE           : 1;	/* Transmit Buffer Unavailable Enable */
		/* const */ unsigned int RES_5_3        : 3;	/* Reserved */
		unsigned int RIE            : 1;	/* Receive Interrupt Enable */
		unsigned int RBUE           : 1;	/* Receive Buffer Unavailable Enable */
		unsigned int RSE            : 1;	/* Receive Stopped Enable */
		unsigned int RWTE           : 1;	/* Receive Watchdog Timeout Enable */
		unsigned int ETIE           : 1;	/* Early Transmit Interrupt Enable */
		unsigned int ERIE           : 1;	/* Early Receive Interrupt Enable */
		unsigned int FBEE           : 1;	/* Fatal Bus Error Enable */
		unsigned int CDEE           : 1;	/* Context Descriptor Error Enable */
		unsigned int AIE            : 1;	/* Abnormal Interrupt Summary Enable */
		unsigned int NIE            : 1;	/* Normal Interrupt Summary Enable */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_INTERRUPT_ENABLE_type;
#define GETH_DMA_CH0_INTERRUPT_ENABLE	(*( GETH_DMA_CH0_INTERRUPT_ENABLE_type *) 0xf001e134u)	/* DMA Channel 0 Interrupt Enable Register */
#define GETH_DMA_CH1_INTERRUPT_ENABLE	(*( GETH_DMA_CH0_INTERRUPT_ENABLE_type *) 0xf001e1b4u)	/* DMA Channel 1 Interrupt Enable Register */
#define GETH_DMA_CH2_INTERRUPT_ENABLE	(*( GETH_DMA_CH0_INTERRUPT_ENABLE_type *) 0xf001e234u)	/* DMA Channel 2 Interrupt Enable Register */
#define GETH_DMA_CH3_INTERRUPT_ENABLE	(*( GETH_DMA_CH0_INTERRUPT_ENABLE_type *) 0xf001e2b4u)	/* DMA Channel 3 Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MFC            : 11;	/* Dropped Packet Counters */
		/* const */ unsigned int RES_14_11      : 4;	/* Reserved */
		/* const */ unsigned int MFCO           : 1;	/* Overflow status of the MFC Counter */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_MISS_FRAME_CNT_type;
#define GETH_DMA_CH0_MISS_FRAME_CNT	(*( GETH_DMA_CH0_MISS_FRAME_CNT_type *) 0xf001e164u)	/* DMA Channel 0 Missed Frames Count Register */
#define GETH_DMA_CH1_MISS_FRAME_CNT	(*( GETH_DMA_CH0_MISS_FRAME_CNT_type *) 0xf001e1e4u)	/* DMA Channel 1 Missed Frames Count Register */
#define GETH_DMA_CH2_MISS_FRAME_CNT	(*( GETH_DMA_CH0_MISS_FRAME_CNT_type *) 0xf001e264u)	/* DMA Channel 2 Missed Frames Count Register */
#define GETH_DMA_CH3_MISS_FRAME_CNT	(*( GETH_DMA_CH0_MISS_FRAME_CNT_type *) 0xf001e2e4u)	/* DMA Channel 3 Missed Frames Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_LSb        : 2;	/* Reserved */
		unsigned int RDESLA         : 30;	/* Start of Receive List */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_RXDESC_LIST_ADDRESS_type;
#define GETH_DMA_CH0_RXDESC_LIST_ADDRESS	(*( GETH_DMA_CH0_RXDESC_LIST_ADDRESS_type *) 0xf001e11cu)	/* DMA Channel 0 Receive Descriptor List Address Register */
#define GETH_DMA_CH1_RXDESC_LIST_ADDRESS	(*( GETH_DMA_CH0_RXDESC_LIST_ADDRESS_type *) 0xf001e19cu)	/* DMA Channel 1 Receive Descriptor List Address Register */
#define GETH_DMA_CH2_RXDESC_LIST_ADDRESS	(*( GETH_DMA_CH0_RXDESC_LIST_ADDRESS_type *) 0xf001e21cu)	/* DMA Channel 2 Receive Descriptor List Address Register */
#define GETH_DMA_CH3_RXDESC_LIST_ADDRESS	(*( GETH_DMA_CH0_RXDESC_LIST_ADDRESS_type *) 0xf001e29cu)	/* DMA Channel 3 Receive Descriptor List Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RDRL           : 10;	/* Receive Descriptor Ring Length */
		/* const */ unsigned int RES_31_22      : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_RXDESC_RING_LENGTH_type;
#define GETH_DMA_CH0_RXDESC_RING_LENGTH	(*( GETH_DMA_CH0_RXDESC_RING_LENGTH_type *) 0xf001e130u)	/* DMA Channel 0 Recieve Descriptor Ring Length Register */
#define GETH_DMA_CH1_RXDESC_RING_LENGTH	(*( GETH_DMA_CH0_RXDESC_RING_LENGTH_type *) 0xf001e1b0u)	/* DMA Channel 1 Recieve Descriptor Ring Length Register */
#define GETH_DMA_CH2_RXDESC_RING_LENGTH	(*( GETH_DMA_CH0_RXDESC_RING_LENGTH_type *) 0xf001e230u)	/* DMA Channel 2 Recieve Descriptor Ring Length Register */
#define GETH_DMA_CH3_RXDESC_RING_LENGTH	(*( GETH_DMA_CH0_RXDESC_RING_LENGTH_type *) 0xf001e2b0u)	/* DMA Channel 3 Recieve Descriptor Ring Length Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_LSb        : 2;	/* Reserved */
		unsigned int RDTP           : 30;	/* Receive Descriptor Tail Pointer */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_RXDESC_TAIL_POINTER_type;
#define GETH_DMA_CH0_RXDESC_TAIL_POINTER	(*( GETH_DMA_CH0_RXDESC_TAIL_POINTER_type *) 0xf001e128u)	/* DMA Channel 0 Recieve Descriptor Tail Pointer Register */
#define GETH_DMA_CH1_RXDESC_TAIL_POINTER	(*( GETH_DMA_CH0_RXDESC_TAIL_POINTER_type *) 0xf001e1a8u)	/* DMA Channel 1 Recieve Descriptor Tail Pointer Register */
#define GETH_DMA_CH2_RXDESC_TAIL_POINTER	(*( GETH_DMA_CH0_RXDESC_TAIL_POINTER_type *) 0xf001e228u)	/* DMA Channel 2 Recieve Descriptor Tail Pointer Register */
#define GETH_DMA_CH3_RXDESC_TAIL_POINTER	(*( GETH_DMA_CH0_RXDESC_TAIL_POINTER_type *) 0xf001e2a8u)	/* DMA Channel 3 Recieve Descriptor Tail Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SR             : 1;	/* Start or Stop Receive */
		/* const */ unsigned int RBSZ_x_0       : 2;	/* Receive Buffer size Low */
		unsigned int RBSZ_13_y      : 12;	/* Receive Buffer size High */
		/* const */ unsigned int RES_15         : 1;	/* Reserved */
		unsigned int RxPBL          : 6;	/* Receive Programmable Burst Length */
		/* const */ unsigned int RES_23_22      : 2;	/* Reserved */
		/* const */ unsigned int RES_27_24      : 4;	/* Reserved for future use. */
		/* const */ unsigned int RES_30_28      : 3;	/* Reserved */
		unsigned int RPF            : 1;	/* DMA Rx Channel0 Packet Flush */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_RX_CONTROL_type;
#define GETH_DMA_CH0_RX_CONTROL	(*( GETH_DMA_CH0_RX_CONTROL_type *) 0xf001e108u)	/* DMA Channel 0 Receive Control Register */
#define GETH_DMA_CH1_RX_CONTROL	(*( GETH_DMA_CH0_RX_CONTROL_type *) 0xf001e188u)	/* DMA Channel 1 Receive Control Register */
#define GETH_DMA_CH2_RX_CONTROL	(*( GETH_DMA_CH0_RX_CONTROL_type *) 0xf001e208u)	/* DMA Channel 2 Receive Control Register */
#define GETH_DMA_CH3_RX_CONTROL	(*( GETH_DMA_CH0_RX_CONTROL_type *) 0xf001e288u)	/* DMA Channel 3 Receive Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RWT            : 8;	/* Receive Interrupt Watchdog Timer Count */
		/* const */ unsigned int RES_15_8       : 8;	/* Reserved */
		unsigned int RWTU           : 2;	/* Receive Interrupt Watchdog Timer Count Units */
		/* const */ unsigned int RES_31_18      : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_type;
#define GETH_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER	(*( GETH_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_type *) 0xf001e138u)	/* DMA Channel 0 Recieve Interrupt Watchdog Timer Register */
#define GETH_DMA_CH1_RX_INTERRUPT_WATCHDOG_TIMER	(*( GETH_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_type *) 0xf001e1b8u)	/* DMA Channel 1 Recieve Interrupt Watchdog Timer Register */
#define GETH_DMA_CH2_RX_INTERRUPT_WATCHDOG_TIMER	(*( GETH_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_type *) 0xf001e238u)	/* DMA Channel 2 Recieve Interrupt Watchdog Timer Register */
#define GETH_DMA_CH3_RX_INTERRUPT_WATCHDOG_TIMER	(*( GETH_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_type *) 0xf001e2b8u)	/* DMA Channel 3 Recieve Interrupt Watchdog Timer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ESC            : 1;	/* Enable Slot Comparison */
		unsigned int ASC            : 1;	/* Advance Slot Check */
		/* const */ unsigned int RES_3_2        : 2;	/* Reserved */
		unsigned int SIV            : 12;	/* Slot Interval Value */
		/* const */ unsigned int RSN            : 4;	/* Reference Slot Number */
		/* const */ unsigned int RES_31_20      : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_type;
#define GETH_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS	(*( GETH_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_type *) 0xf001e13cu)	/* DMA Channel 0 Slot Function Control and Status Register */
#define GETH_DMA_CH1_SLOT_FUNCTION_CONTROL_STATUS	(*( GETH_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_type *) 0xf001e1bcu)	/* DMA Channel 1 Slot Function Control and Status Register */
#define GETH_DMA_CH2_SLOT_FUNCTION_CONTROL_STATUS	(*( GETH_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_type *) 0xf001e23cu)	/* DMA Channel 2 Slot Function Control and Status Register */
#define GETH_DMA_CH3_SLOT_FUNCTION_CONTROL_STATUS	(*( GETH_DMA_CH0_SLOT_FUNCTION_CONTROL_STATUS_type *) 0xf001e2bcu)	/* DMA Channel 3 Slot Function Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TI             : 1;	/* Transmit Interrupt */
		unsigned int TPS            : 1;	/* Transmit Process Stopped */
		unsigned int TBU            : 1;	/* Transmit Buffer Unavailable */
		/* const */ unsigned int RES_5_3        : 3;	/* Reserved */
		unsigned int RI             : 1;	/* Receive Interrupt */
		unsigned int RBU            : 1;	/* Receive Buffer Unavailable */
		unsigned int RPS            : 1;	/* Receive Process Stopped */
		unsigned int RWT            : 1;	/* Receive Watchdog Timeout */
		unsigned int ETI            : 1;	/* Early Transmit Interrupt */
		unsigned int ERI            : 1;	/* Early Receive Interrupt */
		unsigned int FBE            : 1;	/* Fatal Bus Error */
		unsigned int CDE            : 1;	/* Context Descriptor Error */
		unsigned int AIS            : 1;	/* Abnormal Interrupt Summary */
		unsigned int NIS            : 1;	/* Normal Interrupt Summary */
		/* const */ unsigned int TEB            : 3;	/* Tx DMA Error Bits */
		/* const */ unsigned int REB            : 3;	/* Rx DMA Error Bits */
		/* const */ unsigned int RES_31_22      : 10;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_STATUS_type;
#define GETH_DMA_CH0_STATUS	(*( GETH_DMA_CH0_STATUS_type *) 0xf001e160u)	/* DMA Channel 0 Status Register */
#define GETH_DMA_CH1_STATUS	(*( GETH_DMA_CH0_STATUS_type *) 0xf001e1e0u)	/* DMA Channel 1 Status Register */
#define GETH_DMA_CH2_STATUS	(*( GETH_DMA_CH0_STATUS_type *) 0xf001e260u)	/* DMA Channel 2 Status Register */
#define GETH_DMA_CH3_STATUS	(*( GETH_DMA_CH0_STATUS_type *) 0xf001e2e0u)	/* DMA Channel 3 Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_LSb        : 2;	/* Reserved */
		unsigned int TDESLA         : 30;	/* Start of Transmit List */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_TXDESC_LIST_ADDRESS_type;
#define GETH_DMA_CH0_TXDESC_LIST_ADDRESS	(*( GETH_DMA_CH0_TXDESC_LIST_ADDRESS_type *) 0xf001e114u)	/* DMA Channel 0 Transmit Descriptor List Address Register */
#define GETH_DMA_CH1_TXDESC_LIST_ADDRESS	(*( GETH_DMA_CH0_TXDESC_LIST_ADDRESS_type *) 0xf001e194u)	/* DMA Channel 1 Transmit Descriptor List Address Register */
#define GETH_DMA_CH2_TXDESC_LIST_ADDRESS	(*( GETH_DMA_CH0_TXDESC_LIST_ADDRESS_type *) 0xf001e214u)	/* DMA Channel 2 Transmit Descriptor List Address Register */
#define GETH_DMA_CH3_TXDESC_LIST_ADDRESS	(*( GETH_DMA_CH0_TXDESC_LIST_ADDRESS_type *) 0xf001e294u)	/* DMA Channel 3 Transmit Descriptor List Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TDRL           : 10;	/* Transmit Descriptor Ring Length */
		/* const */ unsigned int RES_31_22      : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_TXDESC_RING_LENGTH_type;
#define GETH_DMA_CH0_TXDESC_RING_LENGTH	(*( GETH_DMA_CH0_TXDESC_RING_LENGTH_type *) 0xf001e12cu)	/* DMA Channel 0 Transmit Descriptor Ring Length Register */
#define GETH_DMA_CH1_TXDESC_RING_LENGTH	(*( GETH_DMA_CH0_TXDESC_RING_LENGTH_type *) 0xf001e1acu)	/* DMA Channel 1 Transmit Descriptor Ring Length Register */
#define GETH_DMA_CH2_TXDESC_RING_LENGTH	(*( GETH_DMA_CH0_TXDESC_RING_LENGTH_type *) 0xf001e22cu)	/* DMA Channel 2 Transmit Descriptor Ring Length Register */
#define GETH_DMA_CH3_TXDESC_RING_LENGTH	(*( GETH_DMA_CH0_TXDESC_RING_LENGTH_type *) 0xf001e2acu)	/* DMA Channel 3 Transmit Descriptor Ring Length Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_LSb        : 2;	/* Reserved */
		unsigned int TDTP           : 30;	/* Transmit Descriptor Tail Pointer */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_TXDESC_TAIL_POINTER_type;
#define GETH_DMA_CH0_TXDESC_TAIL_POINTER	(*( GETH_DMA_CH0_TXDESC_TAIL_POINTER_type *) 0xf001e120u)	/* DMA Channel 0 Transmit Descriptor Tail Pointer Register */
#define GETH_DMA_CH1_TXDESC_TAIL_POINTER	(*( GETH_DMA_CH0_TXDESC_TAIL_POINTER_type *) 0xf001e1a0u)	/* DMA Channel 1 Transmit Descriptor Tail Pointer Register */
#define GETH_DMA_CH2_TXDESC_TAIL_POINTER	(*( GETH_DMA_CH0_TXDESC_TAIL_POINTER_type *) 0xf001e220u)	/* DMA Channel 2 Transmit Descriptor Tail Pointer Register */
#define GETH_DMA_CH3_TXDESC_TAIL_POINTER	(*( GETH_DMA_CH0_TXDESC_TAIL_POINTER_type *) 0xf001e2a0u)	/* DMA Channel 3 Transmit Descriptor Tail Pointer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ST             : 1;	/* Start or Stop Transmission Command */
		unsigned int TCW            : 3;	/* Transmit Channel Weight */
		unsigned int OSF            : 1;	/* Operate on Second Packet */
		/* const */ unsigned int RES_11_5       : 7;	/* Reserved */
		/* const */ unsigned int RES_12         : 1;	/* Reserved for future use. */
		/* const */ unsigned int RES_14_13      : 2;	/* Reserved */
		/* const */ unsigned int RES_15         : 1;	/* Reserved for future use. */
		unsigned int TxPBL          : 6;	/* Transmit Programmable Burst Length */
		/* const */ unsigned int RES_23_22      : 2;	/* Reserved */
		/* const */ unsigned int RES_27_24      : 4;	/* Reserved for future use. */
		/* const */ unsigned int RES_31_28      : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_CH0_TX_CONTROL_type;
#define GETH_DMA_CH0_TX_CONTROL	(*( GETH_DMA_CH0_TX_CONTROL_type *) 0xf001e104u)	/* DMA Channel 0 Transmit Control Register */
#define GETH_DMA_CH1_TX_CONTROL	(*( GETH_DMA_CH0_TX_CONTROL_type *) 0xf001e184u)	/* DMA Channel 1 Transmit Control Register */
#define GETH_DMA_CH2_TX_CONTROL	(*( GETH_DMA_CH0_TX_CONTROL_type *) 0xf001e204u)	/* DMA Channel 2 Transmit Control Register */
#define GETH_DMA_CH3_TX_CONTROL	(*( GETH_DMA_CH0_TX_CONTROL_type *) 0xf001e284u)	/* DMA Channel 3 Transmit Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AXWHSTS        : 1;	/* AHB Master Status */
		/* const */ unsigned int RES_1          : 1;	/* Reserved for future use. */
		/* const */ unsigned int RES_7_2        : 6;	/* Reserved */
		/* const */ unsigned int RPS0           : 4;	/* DMA Channel 0 Receive Process State */
		/* const */ unsigned int TPS0           : 4;	/* DMA Channel 0 Transmit Process State */
		/* const */ unsigned int RPS1           : 4;	/* DMA Channel 1 Receive Process State */
		/* const */ unsigned int TPS1           : 4;	/* DMA Channel 1 Transmit Process State */
		/* const */ unsigned int RPS2           : 4;	/* DMA Channel 2 Receive Process State */
		/* const */ unsigned int TPS2           : 4;	/* DMA Channel 2 Transmit Process State */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_DEBUG_STATUS0_type;
#define GETH_DMA_DEBUG_STATUS0	(*( GETH_DMA_DEBUG_STATUS0_type *) 0xf001e00cu)	/* DMA Debug Status 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RPS3           : 4;	/* DMA Channel 3 Receive Process State */
		/* const */ unsigned int TPS3           : 4;	/* DMA Channel 3 Transmit Process State */
		/* const */ unsigned int RES_31_8       : 24;	/* Reserved for future use. */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_DEBUG_STATUS1_type;
#define GETH_DMA_DEBUG_STATUS1	(*( GETH_DMA_DEBUG_STATUS1_type *) 0xf001e010u)	/* DMA Debug Status 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DC0IS          : 1;	/* DMA Channel 0 Interrupt Status */
		/* const */ unsigned int DC1IS          : 1;	/* DMA Channel 1 Interrupt Status */
		/* const */ unsigned int DC2IS          : 1;	/* DMA Channel 2 Interrupt Status */
		/* const */ unsigned int DC3IS          : 1;	/* DMA Channel 3 Interrupt Status */
		/* const */ unsigned int RES_7_4        : 4;	/* Reserved for future use. */
		/* const */ unsigned int RES_15_8       : 8;	/* Reserved */
		/* const */ unsigned int MTLIS          : 1;	/* MTL Interrupt Status */
		/* const */ unsigned int MACIS          : 1;	/* MAC Interrupt Status */
		/* const */ unsigned int RES_31_18      : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_INTERRUPT_STATUS_type;
#define GETH_DMA_INTERRUPT_STATUS	(*( GETH_DMA_INTERRUPT_STATUS_type *) 0xf001e008u)	/* DMA Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SWR            : 1;	/* Software Reset */
		unsigned int DA             : 1;	/* DMA Tx or Rx Arbitration Scheme */
		unsigned int TAA            : 3;	/* Transmit Arbitration Algorithm */
		/* const */ unsigned int RES_8_5        : 4;	/* Reserved */
		unsigned int ARBC           : 1;	/* Arbitration Control */
		/* const */ unsigned int RES_10         : 1;	/* Reserved */
		unsigned int TXPR           : 1;	/* Transmit Priority */
		unsigned int PR             : 3;	/* Priority Ratio */
		/* const */ unsigned int RES_15         : 1;	/* Reserved */
		unsigned int INTM           : 2;	/* Interrupt Mode */
		/* const */ unsigned int RES_18_31      : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_MODE_type;
#define GETH_DMA_MODE	(*( GETH_DMA_MODE_type *) 0xf001e000u)	/* DMA Bus Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FB             : 1;	/* Fixed Burst Length */
		/* const */ unsigned int RES_7_1        : 7;	/* Reserved for future use. */
		/* const */ unsigned int RES_9_8        : 2;	/* Reserved */
		/* const */ unsigned int RES_11_10      : 2;	/* Reserved for future use. */
		unsigned int AAL            : 1;	/* Address-Aligned Beats */
		/* const */ unsigned int RES_13         : 1;	/* Reserved for future use. */
		unsigned int MB             : 1;	/* Mixed Burst */
		unsigned int RB             : 1;	/* Rebuild INCRx Burst */
		/* const */ unsigned int RES_18_16      : 3;	/* Reserved for future use. */
		/* const */ unsigned int RES_23_x       : 5;	/* Reserved */
		/* const */ unsigned int RES_26_24      : 3;	/* Reserved for future use. */
		/* const */ unsigned int RES_28_x       : 3;	/* Reserved */
		/* const */ unsigned int RES_31_30      : 2;	/* Reserved for future use. */
	} B;
	int I;
	unsigned int U;

} GETH_DMA_SYSBUS_MODE_type;
#define GETH_DMA_SYSBUS_MODE	(*( GETH_DMA_SYSBUS_MODE_type *) 0xf001e004u)	/* DMA System Bus Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ALTI0          : 2;	/* Alternate Input Select */
		unsigned int ALTI1          : 2;	/* Alternate Input Select */
		unsigned int ALTI2          : 2;	/* Alternate Input Select */
		unsigned int ALTI3          : 2;	/* Alternate Input Select */
		unsigned int ALTI4          : 2;	/* Alternate Input Select */
		unsigned int ALTI5          : 2;	/* Alternate Input Select */
		unsigned int ALTI6          : 2;	/* Alternate Input Select */
		unsigned int ALTI7          : 2;	/* Alternate Input Select */
		unsigned int ALTI8          : 2;	/* Alternate Input Select */
		unsigned int ALTI9          : 2;	/* Alternate Input Select */
		unsigned int ALTI10         : 2;	/* Alternate Input Select */
		unsigned int EPR            : 3;	/* External Phy Interface RMMI Mode Bit */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} GETH_GPCTL_type;
#define GETH_GPCTL	(*( GETH_GPCTL_type *) 0xf001f008u)	/* General Purpose Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUM         : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} GETH_ID_type;
#define GETH_ID	(*( GETH_ID_type *) 0xf001f004u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} GETH_KRST0_type;
#define GETH_KRST0	(*( GETH_KRST0_type *) 0xf001f014u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} GETH_KRST1_type;
#define GETH_KRST1	(*( GETH_KRST1_type *) 0xf001f018u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} GETH_KRSTCLR_type;
#define GETH_KRSTCLR	(*( GETH_KRSTCLR_type *) 0xf001f01cu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TIC_1US_CNTR   : 12;	/* 1US TIC Counter */
		/* const */ unsigned int RES_31_12      : 20;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_1US_TIC_COUNTER_type;
#define GETH_MAC_1US_TIC_COUNTER	(*( GETH_MAC_1US_TIC_COUNTER_type *) 0xf001d0dcu)	/* MAC One Microsecond Tic Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address0[47:32] */
		unsigned int DCS            : 2;	/* DMA Channel Select */
		/* const */ unsigned int RES_30_x       : 13;	/* Reserved */
		/* const */ unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_ADDRESS0_HIGH_type;
#define GETH_MAC_ADDRESS0_HIGH	(*( GETH_MAC_ADDRESS0_HIGH_type *) 0xf001d300u)	/* MAC Address 0 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address0[31:0] */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_ADDRESS0_LOW_type;
#define GETH_MAC_ADDRESS0_LOW	(*( GETH_MAC_ADDRESS0_LOW_type *) 0xf001d304u)	/* MAC Address 0 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRHI         : 16;	/* MAC Address1 [47:32] */
		unsigned int DCS            : 2;	/* DMA Channel Select */
		/* const */ unsigned int RES_23_x       : 6;	/* Reserved */
		unsigned int MBC            : 6;	/* Mask Byte Control */
		unsigned int SA             : 1;	/* Source Address */
		unsigned int AE             : 1;	/* Address Enable */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_ADDRESS10_HIGH_type;
#define GETH_MAC_ADDRESS10_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d350u)	/* MAC Address 10 High Register */
#define GETH_MAC_ADDRESS11_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d358u)	/* MAC Address 11 High Register */
#define GETH_MAC_ADDRESS12_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d360u)	/* MAC Address 12 High Register */
#define GETH_MAC_ADDRESS13_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d368u)	/* MAC Address 13 High Register */
#define GETH_MAC_ADDRESS14_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d370u)	/* MAC Address 14 High Register */
#define GETH_MAC_ADDRESS15_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d378u)	/* MAC Address 15 High Register */
#define GETH_MAC_ADDRESS16_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d380u)	/* MAC Address 16 High Register */
#define GETH_MAC_ADDRESS17_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d388u)	/* MAC Address 17 High Register */
#define GETH_MAC_ADDRESS18_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d390u)	/* MAC Address 18 High Register */
#define GETH_MAC_ADDRESS19_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d398u)	/* MAC Address 19 High Register */
#define GETH_MAC_ADDRESS1_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d308u)	/* MAC Address 1 High Register */
#define GETH_MAC_ADDRESS20_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3a0u)	/* MAC Address 20 High Register */
#define GETH_MAC_ADDRESS21_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3a8u)	/* MAC Address 21 High Register */
#define GETH_MAC_ADDRESS22_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3b0u)	/* MAC Address 22 High Register */
#define GETH_MAC_ADDRESS23_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3b8u)	/* MAC Address 23 High Register */
#define GETH_MAC_ADDRESS24_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3c0u)	/* MAC Address 24 High Register */
#define GETH_MAC_ADDRESS25_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3c8u)	/* MAC Address 25 High Register */
#define GETH_MAC_ADDRESS26_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3d0u)	/* MAC Address 26 High Register */
#define GETH_MAC_ADDRESS27_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3d8u)	/* MAC Address 27 High Register */
#define GETH_MAC_ADDRESS28_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3e0u)	/* MAC Address 28 High Register */
#define GETH_MAC_ADDRESS29_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3e8u)	/* MAC Address 29 High Register */
#define GETH_MAC_ADDRESS2_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d310u)	/* MAC Address 2 High Register */
#define GETH_MAC_ADDRESS30_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3f0u)	/* MAC Address 30 High Register */
#define GETH_MAC_ADDRESS31_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d3f8u)	/* MAC Address 31 High Register */
#define GETH_MAC_ADDRESS3_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d318u)	/* MAC Address 3 High Register */
#define GETH_MAC_ADDRESS4_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d320u)	/* MAC Address 4 High Register */
#define GETH_MAC_ADDRESS5_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d328u)	/* MAC Address 5 High Register */
#define GETH_MAC_ADDRESS6_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d330u)	/* MAC Address 6 High Register */
#define GETH_MAC_ADDRESS7_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d338u)	/* MAC Address 7 High Register */
#define GETH_MAC_ADDRESS8_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d340u)	/* MAC Address 8 High Register */
#define GETH_MAC_ADDRESS9_HIGH	(*( GETH_MAC_ADDRESS10_HIGH_type *) 0xf001d348u)	/* MAC Address 9 High Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRLO         : 32;	/* MAC Address1 [31:0] */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_ADDRESS10_LOW_type;
#define GETH_MAC_ADDRESS10_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d354u)	/* MAC Address 10 Low Register */
#define GETH_MAC_ADDRESS11_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d35cu)	/* MAC Address 11 Low Register */
#define GETH_MAC_ADDRESS12_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d364u)	/* MAC Address 12 Low Register */
#define GETH_MAC_ADDRESS13_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d36cu)	/* MAC Address 13 Low Register */
#define GETH_MAC_ADDRESS14_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d374u)	/* MAC Address 14 Low Register */
#define GETH_MAC_ADDRESS15_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d37cu)	/* MAC Address 15 Low Register */
#define GETH_MAC_ADDRESS16_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d384u)	/* MAC Address 16 Low Register */
#define GETH_MAC_ADDRESS17_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d38cu)	/* MAC Address 17 Low Register */
#define GETH_MAC_ADDRESS18_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d394u)	/* MAC Address 18 Low Register */
#define GETH_MAC_ADDRESS19_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d39cu)	/* MAC Address 19 Low Register */
#define GETH_MAC_ADDRESS1_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d30cu)	/* MAC Address 1 Low Register */
#define GETH_MAC_ADDRESS20_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3a4u)	/* MAC Address 20 Low Register */
#define GETH_MAC_ADDRESS21_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3acu)	/* MAC Address 21 Low Register */
#define GETH_MAC_ADDRESS22_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3b4u)	/* MAC Address 22 Low Register */
#define GETH_MAC_ADDRESS23_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3bcu)	/* MAC Address 23 Low Register */
#define GETH_MAC_ADDRESS24_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3c4u)	/* MAC Address 24 Low Register */
#define GETH_MAC_ADDRESS25_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3ccu)	/* MAC Address 25 Low Register */
#define GETH_MAC_ADDRESS26_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3d4u)	/* MAC Address 26 Low Register */
#define GETH_MAC_ADDRESS27_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3dcu)	/* MAC Address 27 Low Register */
#define GETH_MAC_ADDRESS28_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3e4u)	/* MAC Address 28 Low Register */
#define GETH_MAC_ADDRESS29_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3ecu)	/* MAC Address 29 Low Register */
#define GETH_MAC_ADDRESS2_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d314u)	/* MAC Address 2 Low Register */
#define GETH_MAC_ADDRESS30_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3f4u)	/* MAC Address 30 Low Register */
#define GETH_MAC_ADDRESS31_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d3fcu)	/* MAC Address 31 Low Register */
#define GETH_MAC_ADDRESS3_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d31cu)	/* MAC Address 3 Low Register */
#define GETH_MAC_ADDRESS4_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d324u)	/* MAC Address 4 Low Register */
#define GETH_MAC_ADDRESS5_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d32cu)	/* MAC Address 5 Low Register */
#define GETH_MAC_ADDRESS6_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d334u)	/* MAC Address 6 Low Register */
#define GETH_MAC_ADDRESS7_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d33cu)	/* MAC Address 7 Low Register */
#define GETH_MAC_ADDRESS8_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d344u)	/* MAC Address 8 Low Register */
#define GETH_MAC_ADDRESS9_LOW	(*( GETH_MAC_ADDRESS10_LOW_type *) 0xf001d34cu)	/* MAC Address 9 Low Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RE             : 1;	/* Receiver Enable */
		unsigned int TE             : 1;	/* Transmitter Enable */
		unsigned int PRELEN         : 2;	/* Preamble Length for Transmit packets */
		unsigned int DC             : 1;	/* Deferral Check */
		unsigned int BL             : 2;	/* Back-Off Limit */
		/* const */ unsigned int RES_7          : 1;	/* Reserved */
		unsigned int DR             : 1;	/* Disable Retry */
		unsigned int DCRS           : 1;	/* Disable Carrier Sense During Transmission */
		unsigned int DO             : 1;	/* Disable Receive Own */
		unsigned int ECRSFD         : 1;	/* Enable Carrier Sense Before Transmission in Full-Duplex Mode */
		unsigned int LM             : 1;	/* Loopback Mode */
		unsigned int DM             : 1;	/* Duplex Mode */
		unsigned int FES            : 1;	/* Speed */
		unsigned int PS             : 1;	/* Port Select */
		unsigned int JE             : 1;	/* Jumbo Packet Enable */
		unsigned int JD             : 1;	/* Jabber Disable */
		unsigned int BE             : 1;	/* Packet Burst Enable */
		unsigned int WD             : 1;	/* Watchdog Disable */
		unsigned int ACS            : 1;	/* Automatic Pad or CRC Stripping */
		unsigned int CST            : 1;	/* CRC stripping for Type packets */
		unsigned int S2KP           : 1;	/* IEEE 802.3as Support for 2K Packets */
		unsigned int GPSLCE         : 1;	/* Giant Packet Size Limit Control Enable */
		unsigned int IPG            : 3;	/* Inter-Packet Gap */
		unsigned int IPC            : 1;	/* Checksum Offload */
		unsigned int SARC           : 3;	/* Source Address Insertion or Replacement Control */
		/* const */ unsigned int RES_31         : 1;	/* Reserved for future use. */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_CONFIGURATION_type;
#define GETH_MAC_CONFIGURATION	(*( GETH_MAC_CONFIGURATION_type *) 0xf001d000u)	/* MAC Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RCWE           : 1;	/* Register Clear on Write 1 Enable - RCWE */
		/* const */ unsigned int RES_7_1        : 7;	/* Reserved */
		unsigned int SEEN           : 1;	/* Slave Error Response Enable */
		/* const */ unsigned int RES_31_9       : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_CSR_SW_CTRL_type;
#define GETH_MAC_CSR_SW_CTRL	(*( GETH_MAC_CSR_SW_CTRL_type *) 0xf001d230u)	/* MAC CSR Software Controls Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RPESTS         : 1;	/* MAC GMII or MII Receive Protocol Engine Status */
		/* const */ unsigned int RFCFCSTS       : 2;	/* MAC Receive Packet Controller FIFO Status */
		/* const */ unsigned int RES_15_3       : 13;	/* Reserved */
		/* const */ unsigned int TPESTS         : 1;	/* MAC GMII or MII Transmit Protocol Engine Status */
		/* const */ unsigned int TFCSTS         : 2;	/* MAC Transmit Packet Controller Status */
		/* const */ unsigned int RES_31_19      : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_DEBUG_type;
#define GETH_MAC_DEBUG	(*( GETH_MAC_DEBUG_type *) 0xf001d114u)	/* MAC Debug Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SPLOFST        : 7;	/* Split Offset */
		/* const */ unsigned int RES_7          : 1;	/* Reserved */
		unsigned int SPLM           : 2;	/* Split Mode */
		/* const */ unsigned int RES_31_10      : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_EXT_CFG1_type;
#define GETH_MAC_EXT_CFG1	(*( GETH_MAC_EXT_CFG1_type *) 0xf001d238u)	/* MAC Extended Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int GPSL           : 14;	/* Giant Packet Size Limit */
		/* const */ unsigned int RES_15_14      : 2;	/* Reserved */
		unsigned int DCRCC          : 1;	/* Disable CRC Checking for Received Packets */
		unsigned int SPEN           : 1;	/* Slow Protocol Detection Enable */
		unsigned int USP            : 1;	/* Unicast Slow Protocol Packet Detect */
		/* const */ unsigned int RES_19         : 1;	/* Reserved */
		unsigned int HDSMS          : 3;	/* Maximum Size for Splitting the Header Data */
		/* const */ unsigned int RES_23         : 1;	/* Reserved */
		unsigned int EIPGEN         : 1;	/* Extended Inter-Packet Gap Enable */
		unsigned int EIPG           : 5;	/* Extended Inter-Packet Gap */
		/* const */ unsigned int RES_30         : 1;	/* Reserved */
		unsigned int FHE            : 1;	/* Flexible Header Enable */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_EXT_CONFIGURATION_type;
#define GETH_MAC_EXT_CONFIGURATION	(*( GETH_MAC_EXT_CONFIGURATION_type *) 0xf001d004u)	/* MAC Extended Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MIISEL         : 1;	/* 10 or 100 Mbps Support */
		/* const */ unsigned int GMIISEL        : 1;	/* 1000 Mbps Support */
		/* const */ unsigned int HDSEL          : 1;	/* Half-duplex Support */
		/* const */ unsigned int PCSSEL         : 1;	/* PCS Registers (TBI, SGMII, or RTBI PHY interface) */
		/* const */ unsigned int VLHASH         : 1;	/* VLAN Hash Filter Selected */
		/* const */ unsigned int SMASEL         : 1;	/* SMA (MDIO) Interface */
		/* const */ unsigned int RWKSEL         : 1;	/* PMT Remote Wake-up Packet Enable */
		/* const */ unsigned int MGKSEL         : 1;	/* PMT Magic Packet Enable */
		/* const */ unsigned int MMCSEL         : 1;	/* RMON Module Enable */
		/* const */ unsigned int ARPOFFSEL      : 1;	/* ARP Offload Enabled */
		/* const */ unsigned int RES_11_10      : 2;	/* Reserved */
		/* const */ unsigned int TSSEL          : 1;	/* IEEE 1588-2008 Timestamp Enabled */
		/* const */ unsigned int EEESEL         : 1;	/* Energy Efficient Ethernet Enabled */
		/* const */ unsigned int TXCOESEL       : 1;	/* Transmit Checksum Offload Enabled */
		/* const */ unsigned int RES_15         : 1;	/* Reserved */
		/* const */ unsigned int RXCOESEL       : 1;	/* Receive Checksum Offload Enabled */
		/* const */ unsigned int RES_17         : 1;	/* Reserved */
		/* const */ unsigned int ADDMACADRSEL   : 5;	/* MAC Addresses 1-31 Selected */
		/* const */ unsigned int MACADR32SEL    : 1;	/* MAC Addresses 32-63 Selected */
		/* const */ unsigned int MACADR64SEL    : 1;	/* MAC Addresses 64-127 Selected */
		/* const */ unsigned int TSSTSSEL       : 2;	/* Timestamp System Time Source */
		/* const */ unsigned int SAVLANINS      : 1;	/* Source Address or VLAN Insertion Enable */
		/* const */ unsigned int ACTPHYSEL      : 3;	/* Active PHY Selected */
		/* const */ unsigned int RES_31         : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_HW_FEATURE0_type;
#define GETH_MAC_HW_FEATURE0	(*( GETH_MAC_HW_FEATURE0_type *) 0xf001d11cu)	/* MAC Hardware Feature Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFIFOSIZE     : 5;	/* MTL Receive FIFO Size */
		/* const */ unsigned int SPRAM          : 1;	/* Single Port RAM Enable */
		/* const */ unsigned int TXFIFOSIZE     : 5;	/* MTL Transmit FIFO Size */
		/* const */ unsigned int OSTEN          : 1;	/* One-Step Timestamping Enable */
		/* const */ unsigned int PTOEN          : 1;	/* PTP Offload Enable */
		/* const */ unsigned int ADVTHWORD      : 1;	/* IEEE 1588 High Word Register Enable */
		/* const */ unsigned int ADDR64         : 2;	/* Address Width. */
		/* const */ unsigned int DCBEN          : 1;	/* DCB Feature Enable */
		/* const */ unsigned int SPHEN          : 1;	/* Split Header Feature Enable */
		/* const */ unsigned int TSOEN          : 1;	/* TCP Segmentation Offload Enable */
		/* const */ unsigned int DBGMEMA        : 1;	/* DMA Debug Registers Enable */
		/* const */ unsigned int AVSEL          : 1;	/* AV Feature Enable */
		/* const */ unsigned int RAVSEL         : 1;	/* Rx Side Only AV Feature Enable */
		/* const */ unsigned int RES_22         : 1;	/* Reserved */
		/* const */ unsigned int POUOST         : 1;	/* One Step for PTP over UDP/IP Feature Enable */
		/* const */ unsigned int HASHTBLSZ      : 2;	/* Hash Table Size */
		/* const */ unsigned int RES_26         : 1;	/* Reserved */
		/* const */ unsigned int L3L4FNUM       : 4;	/* Total number of L3 or L4 Filters */
		/* const */ unsigned int RES_31         : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_HW_FEATURE1_type;
#define GETH_MAC_HW_FEATURE1	(*( GETH_MAC_HW_FEATURE1_type *) 0xf001d120u)	/* MAC Hardware Feature Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXQCNT         : 4;	/* Number of MTL Receive Queues */
		/* const */ unsigned int RES_5_4        : 2;	/* Reserved */
		/* const */ unsigned int TXQCNT         : 4;	/* Number of MTL Transmit Queues */
		/* const */ unsigned int RES_11_10      : 2;	/* Reserved */
		/* const */ unsigned int RXCHCNT        : 4;	/* Number of DMA Receive Channels */
		/* const */ unsigned int RES_17_16      : 2;	/* Reserved */
		/* const */ unsigned int TXCHCNT        : 4;	/* Number of DMA Transmit Channels */
		/* const */ unsigned int RES_23_22      : 2;	/* Reserved */
		/* const */ unsigned int PPSOUTNUM      : 3;	/* Number of PPS Outputs */
		/* const */ unsigned int RES_27         : 1;	/* Reserved */
		/* const */ unsigned int AUXSNAPNUM     : 3;	/* Number of Auxiliary Snapshot Inputs */
		/* const */ unsigned int RES_31         : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_HW_FEATURE2_type;
#define GETH_MAC_HW_FEATURE2	(*( GETH_MAC_HW_FEATURE2_type *) 0xf001d124u)	/* MAC Hardware Feature Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int NRVF           : 3;	/* Number of Extended VLAN Tag Filters Enabled */
		/* const */ unsigned int RES_3          : 1;	/* Reserved */
		/* const */ unsigned int CBTISEL        : 1;	/* Queue/Channel based VLAN tag insertion on Tx Enable */
		/* const */ unsigned int DVLAN          : 1;	/* DVLAN */
		/* const */ unsigned int RES_31_6       : 26;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_HW_FEATURE3_type;
#define GETH_MAC_HW_FEATURE3	(*( GETH_MAC_HW_FEATURE3_type *) 0xf001d128u)	/* MAC Hardware Feature Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int VLT            : 16;	/* VLAN Tag for Transmit Packets */
		unsigned int VLC            : 2;	/* VLAN Tag Control in Transmit Packets */
		unsigned int VLP            : 1;	/* VLAN Priority Control */
		unsigned int CSVL           : 1;	/* C-VLAN or S-VLAN */
		unsigned int VLTI           : 1;	/* VLAN Tag Input */
		/* const */ unsigned int RES_31_21      : 11;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_INNER_VLAN_INCL_0_type;
#define GETH_MAC_INNER_VLAN_INCL_0	(*( GETH_MAC_INNER_VLAN_INCL_0_type *) 0xf001d064u)	/* MAC Inner VLAN Tag Inclus0on or Replacement Register */
#define GETH_MAC_INNER_VLAN_INCL_1	(*( GETH_MAC_INNER_VLAN_INCL_0_type *) 0xf001d064u)	/* MAC Inner VLAN Tag Inclus1on or Replacement Register */
#define GETH_MAC_INNER_VLAN_INCL_2	(*( GETH_MAC_INNER_VLAN_INCL_0_type *) 0xf001d064u)	/* MAC Inner VLAN Tag Inclus2on or Replacement Register */
#define GETH_MAC_INNER_VLAN_INCL_3	(*( GETH_MAC_INNER_VLAN_INCL_0_type *) 0xf001d064u)	/* MAC Inner VLAN Tag Inclus3on or Replacement Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RGSMIIIE       : 1;	/* RGMII or SMII Interrupt Enable */
		/* const */ unsigned int RES_2_1        : 2;	/* Reserved for future use. */
		unsigned int PHYIE          : 1;	/* PHY Interrupt Enable */
		unsigned int PMTIE          : 1;	/* PMT Interrupt Enable */
		unsigned int LPIIE          : 1;	/* LPI Interrupt Enable */
		/* const */ unsigned int RES_11_6       : 6;	/* Reserved */
		unsigned int TSIE           : 1;	/* Timestamp Interrupt Enable */
		unsigned int TXSTSIE        : 1;	/* Transmit Status Interrupt Enable */
		unsigned int RXSTSIE        : 1;	/* Receive Status Interrupt Enable */
		/* const */ unsigned int RES_17_15      : 3;	/* Reserved for future use. */
		unsigned int MDIOIE         : 1;	/* MDIO Interrupt Enable */
		/* const */ unsigned int RES_31_19      : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_INTERRUPT_ENABLE_type;
#define GETH_MAC_INTERRUPT_ENABLE	(*( GETH_MAC_INTERRUPT_ENABLE_type *) 0xf001d0b4u)	/* MAC Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RGSMIIIS       : 1;	/* RGMII or SMII Interrupt Status */
		/* const */ unsigned int RES_2_1        : 2;	/* Reserved for future use. */
		/* const */ unsigned int PHYIS          : 1;	/* PHY Interrupt */
		/* const */ unsigned int PMTIS          : 1;	/* PMT Interrupt Status */
		/* const */ unsigned int LPIIS          : 1;	/* LPI Interrupt Status */
		/* const */ unsigned int RES_7_6        : 2;	/* Reserved */
		/* const */ unsigned int MMCIS          : 1;	/* MMC Interrupt Status */
		/* const */ unsigned int MMCRXIS        : 1;	/* MMC Receive Interrupt Status */
		/* const */ unsigned int MMCTXIS        : 1;	/* MMC Transmit Interrupt Status */
		/* const */ unsigned int MMCRXIPIS      : 1;	/* MMC Receive Checksum Offload Interrupt Status */
		/* const */ unsigned int TSIS           : 1;	/* Timestamp Interrupt Status */
		/* const */ unsigned int TXSTSIS        : 1;	/* Transmit Status Interrupt */
		/* const */ unsigned int RXSTSIS        : 1;	/* Receive Status Interrupt */
		/* const */ unsigned int RES_17_15      : 3;	/* Reserved for future use. */
		/* const */ unsigned int MDIOIS         : 1;	/* MDIO Interrupt Status */
		/* const */ unsigned int RES_31_19      : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_INTERRUPT_STATUS_type;
#define GETH_MAC_INTERRUPT_STATUS	(*( GETH_MAC_INTERRUPT_STATUS_type *) 0xf001d0b0u)	/* MAC Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TLPIEN         : 1;	/* Transmit LPI Entry */
		/* const */ unsigned int TLPIEX         : 1;	/* Transmit LPI Exit */
		/* const */ unsigned int RLPIEN         : 1;	/* Receive LPI Entry */
		/* const */ unsigned int RLPIEX         : 1;	/* Receive LPI Exit */
		/* const */ unsigned int RES_7_4        : 4;	/* Reserved */
		/* const */ unsigned int TLPIST         : 1;	/* Transmit LPI State */
		/* const */ unsigned int RLPIST         : 1;	/* Receive LPI State */
		/* const */ unsigned int RES_15_10      : 6;	/* Reserved */
		unsigned int LPIEN          : 1;	/* LPI Enable */
		unsigned int PLS            : 1;	/* PHY Link Status */
		unsigned int PLSEN          : 1;	/* PHY Link Status Enable */
		unsigned int LPITXA         : 1;	/* LPI Tx Automate */
		unsigned int LPIATE         : 1;	/* LPI Timer Enable */
		unsigned int LPITCSE        : 1;	/* LPI Tx Clock Stop Enable */
		/* const */ unsigned int RES_31_22      : 10;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_LPI_CONTROL_STATUS_type;
#define GETH_MAC_LPI_CONTROL_STATUS	(*( GETH_MAC_LPI_CONTROL_STATUS_type *) 0xf001d0d0u)	/* MAC LPI Control and Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_2_0        : 3;	/* Reserved */
		unsigned int LPIET          : 17;	/* LPI Entry Timer */
		/* const */ unsigned int RES_31_20      : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_LPI_ENTRY_TIMER_type;
#define GETH_MAC_LPI_ENTRY_TIMER	(*( GETH_MAC_LPI_ENTRY_TIMER_type *) 0xf001d0d8u)	/* MAC LPI Entry Timer Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TWT            : 16;	/* LPI TW Timer */
		unsigned int LST            : 10;	/* LPI LS Timer */
		/* const */ unsigned int RES_31_26      : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_LPI_TIMERS_CONTROL_type;
#define GETH_MAC_LPI_TIMERS_CONTROL	(*( GETH_MAC_LPI_TIMERS_CONTROL_type *) 0xf001d0d4u)	/* MAC LPI Timers Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int GB             : 1;	/* GMII Busy */
		unsigned int C45E           : 1;	/* Clause 45 PHY Enable */
		unsigned int GOC_0          : 1;	/* GMII Operation Command 0 */
		unsigned int GOC_1          : 1;	/* GMII Operation Command 1 */
		unsigned int SKAP           : 1;	/* Skip Address Packet */
		/* const */ unsigned int RES_7_5        : 3;	/* Reserved */
		unsigned int CR             : 4;	/* CSR Clock Range */
		unsigned int NTC            : 3;	/* Number of Trailing Clocks */
		/* const */ unsigned int RES_15         : 1;	/* Reserved */
		unsigned int RDA            : 5;	/* Register/Device Address */
		unsigned int PA             : 5;	/* Physical Layer Address */
		unsigned int BTB            : 1;	/* Back to Back transactions */
		unsigned int PSE            : 1;	/* Preamble Suppression Enable */
		/* const */ unsigned int RES_31_28      : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_MDIO_ADDRESS_type;
#define GETH_MAC_MDIO_ADDRESS	(*( GETH_MAC_MDIO_ADDRESS_type *) 0xf001d200u)	/* MAC MDIO Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int GD             : 16;	/* GMII Data */
		unsigned int RA             : 16;	/* Register Address */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_MDIO_DATA_type;
#define GETH_MAC_MDIO_DATA	(*( GETH_MAC_MDIO_DATA_type *) 0xf001d204u)	/* MAC MDIO Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PR             : 1;	/* Promiscuous Mode */
		/* const */ unsigned int RES_2_1        : 2;	/* Reserved */
		unsigned int DAIF           : 1;	/* DA Inverse Filtering */
		unsigned int PM             : 1;	/* Pass All Multicast */
		unsigned int DBF            : 1;	/* Disable Broadcast Packets */
		unsigned int PCF            : 2;	/* Pass Control Packets */
		unsigned int SAIF           : 1;	/* SA Inverse Filtering */
		unsigned int SAF            : 1;	/* Source Address Filter Enable */
		/* const */ unsigned int RES_10         : 1;	/* Reserved */
		/* const */ unsigned int RES_15_11      : 5;	/* Reserved */
		unsigned int VTFE           : 1;	/* VLAN Tag Filter Enable */
		/* const */ unsigned int RES_19_17      : 3;	/* Reserved */
		/* const */ unsigned int RES_21_20      : 2;	/* Reserved */
		/* const */ unsigned int RES_30_22      : 9;	/* Reserved */
		unsigned int RA             : 1;	/* Receive All */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_PACKET_FILTER_type;
#define GETH_MAC_PACKET_FILTER	(*( GETH_MAC_PACKET_FILTER_type *) 0xf001d008u)	/* MAC Packet Filter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TC             : 1;	/* Transmit Configuration in RGMII, SGMII, or SMII */
		unsigned int LUD            : 1;	/* Link Up or Down */
		/* const */ unsigned int RES_2          : 1;	/* Reserved for future use. */
		/* const */ unsigned int RES_3          : 1;	/* Reserved */
		/* const */ unsigned int RES_4          : 1;	/* Reserved for future use. */
		/* const */ unsigned int RES_15_5       : 11;	/* Reserved */
		/* const */ unsigned int LNKMOD         : 1;	/* Link Mode */
		/* const */ unsigned int LNKSPEED       : 2;	/* Link Speed */
		/* const */ unsigned int LNKSTS         : 1;	/* Link Status */
		/* const */ unsigned int RES_31_20      : 10;	/* Reserved */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} GETH_MAC_PHYIF_CONTROL_STATUS_type;
#define GETH_MAC_PHYIF_CONTROL_STATUS	(*( GETH_MAC_PHYIF_CONTROL_STATUS_type *) 0xf001d0f8u)	/* MAC PHY Interface Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PWRDWN         : 1;	/* Power Down */
		unsigned int MGKPKTEN       : 1;	/* Magic Packet Enable */
		unsigned int RWKPKTEN       : 1;	/* Remote Wake-Up Packet Enable */
		/* const */ unsigned int RES_4_3        : 2;	/* Reserved */
		/* const */ unsigned int MGKPRCVD       : 1;	/* Magic Packet Received */
		/* const */ unsigned int RWKPRCVD       : 1;	/* Remote Wake-Up Packet Received */
		/* const */ unsigned int RES_8_7        : 2;	/* Reserved */
		unsigned int GLBLUCAST      : 1;	/* Global Unicast */
		unsigned int RWKPFE         : 1;	/* Remote Wake-up Packet Forwarding Enable */
		/* const */ unsigned int RES_23_11      : 13;	/* Reserved */
		/* const */ unsigned int RWKPTR         : 5;	/* Remote Wake-up FIFO Pointer */
		/* const */ unsigned int RES_30_29      : 2;	/* Reserved */
		unsigned int RWKFILTRST     : 1;	/* Remote Wake-Up Packet Filter Register Pointer Reset */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_PMT_CONTROL_STATUS_type;
#define GETH_MAC_PMT_CONTROL_STATUS	(*( GETH_MAC_PMT_CONTROL_STATUS_type *) 0xf001d0c0u)	/* MAC PMT Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PPSINT0        : 32;	/* PPS Output Signal Interval */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_PPS0_INTERVAL_type;
#define GETH_MAC_PPS0_INTERVAL	(*( GETH_MAC_PPS0_INTERVAL_type *) 0xf001db88u)	/* MAC PPS 0 Interval Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TTSL0          : 31;	/* Target Time Low for PPS Register */
		unsigned int TRGTBUSY0      : 1;	/* PPS Target Time Register Busy */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS_type;
#define GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS	(*( GETH_MAC_PPS0_TARGET_TIME_NANOSECONDS_type *) 0xf001db84u)	/* MAC PPS 0 Target Time Nanoeconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSTRH0         : 32;	/* PPS Target Time Seconds Register */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_PPS0_TARGET_TIME_SECONDS_type;
#define GETH_MAC_PPS0_TARGET_TIME_SECONDS	(*( GETH_MAC_PPS0_TARGET_TIME_SECONDS_type *) 0xf001db80u)	/* MAC PPS 0 Target Time Seconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PPSWIDTH0      : 32;	/* PPS Output Signal Width */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_PPS0_WIDTH_type;
#define GETH_MAC_PPS0_WIDTH	(*( GETH_MAC_PPS0_WIDTH_type *) 0xf001db8cu)	/* MAC PPS 0 Width Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PPSCTRL_PPSCMD : 4;	/* Flexible PPS Output (ptp_pps_o[0]) Control */
		unsigned int PPSEN0         : 1;	/* Flexible PPS Output Mode Enable */
		unsigned int TRGTMODSEL0    : 2;	/* Target Time Register Mode for PPS0 Output */
		/* const */ unsigned int RES_7          : 1;	/* Reserved */
		/* const */ unsigned int RES_10_8       : 3;	/* Reserved for future use. */
		/* const */ unsigned int RES_12_11      : 2;	/* Reserved */
		/* const */ unsigned int RES_14_13      : 2;	/* Reserved for future use. */
		/* const */ unsigned int RES_15         : 1;	/* Reserved */
		/* const */ unsigned int RES_18_16      : 3;	/* Reserved for future use. */
		/* const */ unsigned int RES_20_19      : 2;	/* Reserved */
		/* const */ unsigned int RES_22_21      : 2;	/* Reserved for future use. */
		/* const */ unsigned int RES_23         : 1;	/* Reserved */
		/* const */ unsigned int RES_26_24      : 3;	/* Reserved for future use. */
		/* const */ unsigned int RES_28_27      : 2;	/* Reserved */
		/* const */ unsigned int RES_30_29      : 2;	/* Reserved for future use. */
		/* const */ unsigned int RES_31         : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_PPS_CONTROL_type;
#define GETH_MAC_PPS_CONTROL	(*( GETH_MAC_PPS_CONTROL_type *) 0xf001db70u)	/* MAC PPS Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FCB_BPA        : 1;	/* Flow Control Busy or Backpressure Activate */
		unsigned int TFE            : 1;	/* Transmit Flow Control Enable */
		/* const */ unsigned int RES_3_2        : 2;	/* Reserved */
		unsigned int PLT            : 3;	/* Pause Low Threshold */
		unsigned int DZPQ           : 1;	/* Disable Zero-Quanta Pause */
		/* const */ unsigned int RES_15_8       : 8;	/* Reserved */
		unsigned int PT             : 16;	/* Pause Time */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_Q0_TX_FLOW_CTRL_type;
#define GETH_MAC_Q0_TX_FLOW_CTRL	(*( GETH_MAC_Q0_TX_FLOW_CTRL_type *) 0xf001d070u)	/* MAC Queue 0 TX Flow Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WKUPFRMFTR     : 32;	/* RWK Packet Filter */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_RWK_PACKET_FILTER_type;
#define GETH_MAC_RWK_PACKET_FILTER	(*( GETH_MAC_RWK_PACKET_FILTER_type *) 0xf001d0c4u)	/* MAC Wake-up Packet Filter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXQ0EN         : 2;	/* Receive Queue 0 Enable */
		unsigned int RXQ1EN         : 2;	/* Receive Queue 1 Enable */
		unsigned int RXQ2EN         : 2;	/* Receive Queue 2 Enable */
		unsigned int RXQ3EN         : 2;	/* Receive Queue 3 Enable */
		/* const */ unsigned int RES_15_8       : 8;	/* Reserved for future use. */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_RXQ_CTRL0_type;
#define GETH_MAC_RXQ_CTRL0	(*( GETH_MAC_RXQ_CTRL0_type *) 0xf001d0a0u)	/* MAC Receive Queue Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AVCPQ          : 3;	/* AV Untagged Control Packets Queue */
		/* const */ unsigned int RES_3          : 1;	/* Reserved */
		unsigned int PTPQ           : 3;	/* PTP Packets Queue */
		/* const */ unsigned int RES_7          : 1;	/* Reserved */
		/* const */ unsigned int RES_10_8       : 3;	/* Reserved for future use. */
		/* const */ unsigned int RES_11         : 1;	/* Reserved */
		unsigned int UPQ            : 3;	/* Untagged Packet Queue */
		/* const */ unsigned int RES_15         : 1;	/* Reserved */
		unsigned int MCBCQ          : 3;	/* Multicast and Broadcast Queue */
		/* const */ unsigned int RES_19         : 1;	/* Reserved */
		unsigned int MCBCQEN        : 1;	/* Multicast and Broadcast Queue Enable */
		unsigned int TACPQE         : 1;	/* Tagged AV Control Packets Queuing Enable. */
		unsigned int TPQC           : 2;	/* Tagged PTP over Ethernet Packets Queuing Control - MFFQE */
		/* const */ unsigned int RES_31_24      : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_RXQ_CTRL1_type;
#define GETH_MAC_RXQ_CTRL1	(*( GETH_MAC_RXQ_CTRL1_type *) 0xf001d0a4u)	/* MAC Receive Queue Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PSRQ0          : 8;	/* Priorities Selected in the Receive Queue 0 */
		unsigned int PSRQ1          : 8;	/* Priorities Selected in the Receive Queue 1 */
		unsigned int PSRQ2          : 8;	/* Priorities Selected in the Receive Queue 2 */
		unsigned int PSRQ3          : 8;	/* Priorities Selected in the Receive Queue 3 */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_RXQ_CTRL2_type;
#define GETH_MAC_RXQ_CTRL2	(*( GETH_MAC_RXQ_CTRL2_type *) 0xf001d0a8u)	/* MAC Receive Queue Control 2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RFE            : 1;	/* Receive Flow Control Enable */
		unsigned int UP             : 1;	/* Unicast Pause Packet Detect */
		/* const */ unsigned int RES_7_2        : 6;	/* Reserved */
		/* const */ unsigned int RES_8          : 1;	/* Reserved for future use. */
		/* const */ unsigned int RES_31_9       : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_RX_FLOW_CTRL_type;
#define GETH_MAC_RX_FLOW_CTRL	(*( GETH_MAC_RX_FLOW_CTRL_type *) 0xf001d090u)	/* MAC Receive Flow Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TJT            : 1;	/* Transmit Jabber Timeout */
		/* const */ unsigned int NCARR          : 1;	/* No Carrier */
		/* const */ unsigned int LCARR          : 1;	/* Loss of Carrier */
		/* const */ unsigned int EXDEF          : 1;	/* Excessive Deferral */
		/* const */ unsigned int LCOL           : 1;	/* Late Collision */
		/* const */ unsigned int EXCOL          : 1;	/* Excessive Collisions */
		/* const */ unsigned int RES_7_6        : 2;	/* Reserved */
		/* const */ unsigned int RWT            : 1;	/* Receive Watchdog Timeout */
		/* const */ unsigned int RES_31_9       : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_RX_TX_STATUS_type;
#define GETH_MAC_RX_TX_STATUS	(*( GETH_MAC_RX_TX_STATUS_type *) 0xf001d0b8u)	/* MAC Receive Transmit Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int UFFQE          : 1;	/* Unicast Address Filter Fail Packets Queuing Enable */
		unsigned int UFFQ           : 2;	/* Unicast Address Filter Fail Packets Queue */
		/* const */ unsigned int RES_7_3        : 5;	/* Reserved */
		unsigned int MFFQE          : 1;	/* Multicast Address Filter Fail Packets Queuing Enable */
		unsigned int MFFQ           : 2;	/* Multicast Address Filter Fail Packets Queue */
		/* const */ unsigned int RES_15_11      : 5;	/* Reserved */
		unsigned int VFFQE          : 1;	/* VLAN Tag Filter Fail Packets Queuing Enable */
		unsigned int VFFQ           : 2;	/* VLAN Tag Filter Fail Packets Queue */
		/* const */ unsigned int RES_31_19      : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_RxQ_CTRL4_type;
#define GETH_MAC_RxQ_CTRL4	(*( GETH_MAC_RxQ_CTRL4_type *) 0xf001d094u)	/* MAC Receive Queue Control 4 register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_7_0        : 8;	/* Reserved */
		unsigned int SNSINC         : 8;	/* Sub-nanosecond Increment Value */
		unsigned int SSINC          : 8;	/* Sub-second Increment Value */
		/* const */ unsigned int RES_31_24      : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_SUB_SECOND_INCREMENT_type;
#define GETH_MAC_SUB_SECOND_INCREMENT	(*( GETH_MAC_SUB_SECOND_INCREMENT_type *) 0xf001db04u)	/* MAC Sub-Second Increment Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSHWR          : 16;	/* Timestamp Higher Word Register */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_type;
#define GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS	(*( GETH_MAC_SYSTEM_TIME_HIGHER_WORD_SECONDS_type *) 0xf001db1cu)	/* MAC System Time Higher Word Seconds Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TSSS           : 31;	/* Timestamp Sub Seconds */
		/* const */ unsigned int RES_31         : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_SYSTEM_TIME_NANOSECONDS_type;
#define GETH_MAC_SYSTEM_TIME_NANOSECONDS	(*( GETH_MAC_SYSTEM_TIME_NANOSECONDS_type *) 0xf001db0cu)	/* MAC System Time Nanoseconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSSS           : 31;	/* Timestamp Sub Seconds */
		unsigned int ADDSUB         : 1;	/* Add or Subtract Time */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_type;
#define GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE	(*( GETH_MAC_SYSTEM_TIME_NANOSECONDS_UPDATE_type *) 0xf001db14u)	/* MAC System Time Nanoseconds Update Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TSS            : 32;	/* Timestamp Second */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_SYSTEM_TIME_SECONDS_type;
#define GETH_MAC_SYSTEM_TIME_SECONDS	(*( GETH_MAC_SYSTEM_TIME_SECONDS_type *) 0xf001db08u)	/* MAC System Time Seconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSS            : 32;	/* Timestamp Seconds */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE_type;
#define GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE	(*( GETH_MAC_SYSTEM_TIME_SECONDS_UPDATE_type *) 0xf001db10u)	/* MAC System Time Seconds Update Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSAR           : 32;	/* Timestamp Addend Register */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_ADDEND_type;
#define GETH_MAC_TIMESTAMP_ADDEND	(*( GETH_MAC_TIMESTAMP_ADDEND_type *) 0xf001db18u)	/* MAC Timestamp Addend Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSENA          : 1;	/* Enable Timestamp */
		unsigned int TSCFUPDT       : 1;	/* Fine or Coarse Timestamp Update */
		unsigned int TSINIT         : 1;	/* Initialize Timestamp */
		unsigned int TSUPDT         : 1;	/* Update Timestamp */
		/* const */ unsigned int RES_4          : 1;	/* Reserved for future use. */
		unsigned int TSADDREG       : 1;	/* Update Addend Register */
		/* const */ unsigned int RES_7_6        : 2;	/* Reserved */
		unsigned int TSENALL        : 1;	/* Enable Timestamp for All Packets */
		unsigned int TSCTRLSSR      : 1;	/* Timestamp Digital or Binary Rollover Control */
		unsigned int TSVER2ENA      : 1;	/* Enable PTP Packet Processing for Version 2 Format */
		unsigned int TSIPENA        : 1;	/* Enable Processing of PTP over Ethernet Packets */
		unsigned int TSIPV6ENA      : 1;	/* Enable Processing of PTP Packets Sent over IPv6-UDP */
		unsigned int TSIPV4ENA      : 1;	/* Enable Processing of PTP Packets Sent over IPv4-UDP */
		unsigned int TSEVNTENA      : 1;	/* Enable Timestamp Snapshot for Event Messages */
		unsigned int TSMSTRENA      : 1;	/* Enable Snapshot for Messages Relevant to Master */
		unsigned int SNAPTYPSEL     : 2;	/* Select PTP packets for Taking Snapshots */
		unsigned int TSENMACADDR    : 1;	/* Enable MAC Address for PTP Packet Filtering */
		unsigned int CSC            : 1;	/* Enable checksum correction during OST for PTP over UDP/IPv4 packets */
		/* const */ unsigned int RES_20         : 1;	/* Reserved for future use. */
		/* const */ unsigned int RES_23_21      : 3;	/* Reserved */
		unsigned int TXTSSTSM       : 1;	/* Transmit Timestamp Status Mode */
		/* const */ unsigned int RES_27_25      : 3;	/* Reserved */
		unsigned int AV8021ASMEN    : 1;	/* AV 802.1AS Mode Enable */
		/* const */ unsigned int RES_31_29      : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_CONTROL_type;
#define GETH_MAC_TIMESTAMP_CONTROL	(*( GETH_MAC_TIMESTAMP_CONTROL_type *) 0xf001db00u)	/* MAC Timestamp Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OSTEAC         : 32;	/* One-Step Timestamp Egress Asymmetry Correction */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR_type;
#define GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR	(*( GETH_MAC_TIMESTAMP_EGRESS_ASYM_CORR_type *) 0xf001db54u)	/* MAC Timestamp Egress Asymmetry Correction Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSEC           : 32;	/* Timestamp Egress Correction */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_type;
#define GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND	(*( GETH_MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND_type *) 0xf001db5cu)	/* MAC Timestamp Egress Correction Nanoseconds Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_7_0        : 8;	/* Reserved */
		unsigned int TSECSNS        : 8;	/* Timestamp Egress Correction, sub-nanoseconds */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_type;
#define GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC	(*( GETH_MAC_TIMESTAMP_EGRESS_CORR_SUBNANOSEC_type *) 0xf001db64u)	/* MAC Timestamp Egress Correction Subnanoseconds Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OSTIAC         : 32;	/* One-Step Timestamp Ingress Asymmetry Correction */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR_type;
#define GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR	(*( GETH_MAC_TIMESTAMP_INGRESS_ASYM_CORR_type *) 0xf001db50u)	/* MAC Timestamp Ingress Asymmetry Correction Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSIC           : 32;	/* Timestamp Ingress Correction */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_type;
#define GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND	(*( GETH_MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND_type *) 0xf001db58u)	/* MAC Timestamp Ingress Correction Nanoseconds Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_7_0        : 8;	/* Reserved */
		unsigned int TSICSNS        : 8;	/* Timestamp Ingress Correction, sub-nanoseconds */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_type;
#define GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC	(*( GETH_MAC_TIMESTAMP_INGRESS_CORR_SUBNANOSEC_type *) 0xf001db60u)	/* MAC Timestamp Ingress Correction Subnanoseconds Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TSSOVF         : 1;	/* Timestamp Seconds Overflow */
		/* const */ unsigned int TSTARGT0       : 1;	/* Timestamp Target Time Reached */
		/* const */ unsigned int RES_2          : 1;	/* Reserved for future use. */
		/* const */ unsigned int TSTRGTERR0     : 1;	/* Timestamp Target Time Error */
		/* const */ unsigned int TSTARGT1       : 1;	/* Timestamp Target Time Reached for Target Time PPS1 */
		/* const */ unsigned int TSTRGTERR1     : 1;	/* Timestamp Target Time Error */
		/* const */ unsigned int TSTARGT2       : 1;	/* Timestamp Target Time Reached for Target Time PPS2 */
		/* const */ unsigned int TSTRGTERR2     : 1;	/* Timestamp Target Time Error */
		/* const */ unsigned int TSTARGT3       : 1;	/* Timestamp Target Time Reached for Target Time PPS3 */
		/* const */ unsigned int TSTRGTERR3     : 1;	/* Timestamp Target Time Error */
		/* const */ unsigned int RES_14_10      : 5;	/* Reserved */
		/* const */ unsigned int TXTSSIS        : 1;	/* Tx Timestamp Status Interrupt Status */
		/* const */ unsigned int RES_19_16      : 4;	/* Reserved for future use. */
		/* const */ unsigned int RES_23_20      : 4;	/* Reserved */
		/* const */ unsigned int RES_29_24      : 6;	/* Reserved for future use. */
		/* const */ unsigned int RES_31_30      : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TIMESTAMP_STATUS_type;
#define GETH_MAC_TIMESTAMP_STATUS	(*( GETH_MAC_TIMESTAMP_STATUS_type *) 0xf001db20u)	/* MAC Timestamp Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXTSSLO        : 31;	/* Transmit Timestamp Status Low */
		/* const */ unsigned int TXTSSMIS       : 1;	/* Transmit Timestamp Status Missed */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_type;
#define GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS	(*( GETH_MAC_TX_TIMESTAMP_STATUS_NANOSECONDS_type *) 0xf001db30u)	/* MAC Transmit Timestamp Nanoseconds Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXTSSHI        : 32;	/* Transmit Timestamp Status High */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS_type;
#define GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS	(*( GETH_MAC_TX_TIMESTAMP_STATUS_SECONDS_type *) 0xf001db34u)	/* MAC Transmit Timestamp Seconds Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SNPSVER        : 8;	/* Synopsys-defined Version */
		/* const */ unsigned int USERVER        : 8;	/* User-defined Version (configured with coreConsultant) */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_VERSION_type;
#define GETH_MAC_VERSION	(*( GETH_MAC_VERSION_type *) 0xf001d110u)	/* MAC Version Register */

typedef volatile union
{
	struct
	{ 
		unsigned int VLHT           : 16;	/* VLAN Hash Table */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_VLAN_HASH_TABLE_type;
#define GETH_MAC_VLAN_HASH_TABLE	(*( GETH_MAC_VLAN_HASH_TABLE_type *) 0xf001d058u)	/* MAC VLAN Hash Table Register */

typedef volatile union
{
	struct
	{ 
		unsigned int VLT            : 16;	/* VLAN Tag for Transmit Packets */
		unsigned int VLC            : 2;	/* VLAN Tag Control in Transmit Packets */
		unsigned int VLP            : 1;	/* VLAN Priority Control */
		unsigned int CSVL           : 1;	/* C-VLAN or S-VLAN */
		unsigned int VLTI           : 1;	/* VLAN Tag Input */
		unsigned int CBTI           : 1;	/* Channel based tag insertion */
		/* const */ unsigned int RES_23_22      : 2;	/* Reserved */
		unsigned int ADDR           : 2;	/* Address */
		/* const */ unsigned int RES_29_x       : 4;	/* Reserved */
		unsigned int RDWR           : 1;	/* Read write control */
		/* const */ unsigned int BUSY           : 1;	/* Busy */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_VLAN_INCL_type;
#define GETH_MAC_VLAN_INCL	(*( GETH_MAC_VLAN_INCL_type *) 0xf001d060u)	/* MAC VLAN Tag Inclusion or Replacement Register */

typedef volatile union
{
	struct
	{ 
		unsigned int VLT            : 16;	/* VLAN Tag for Transmit Packets */
		/* const */ unsigned int RES_18_16      : 3;	/* Reserved */
		unsigned int CSVL           : 1;	/* C-VLAN or S-VLAN */
		/* const */ unsigned int RES_31_20      : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_VLAN_INCL_Q_0_type;
#define GETH_MAC_VLAN_INCL_Q_0	(*( GETH_MAC_VLAN_INCL_Q_0_type *) 0xf001d060u)	/* MAC VLAN Tag Inclus0on or Replacement Register per Queue */
#define GETH_MAC_VLAN_INCL_Q_1	(*( GETH_MAC_VLAN_INCL_Q_0_type *) 0xf001d060u)	/* MAC VLAN Tag Inclus1on or Replacement Register per Queue */
#define GETH_MAC_VLAN_INCL_Q_2	(*( GETH_MAC_VLAN_INCL_Q_0_type *) 0xf001d060u)	/* MAC VLAN Tag Inclus2on or Replacement Register per Queue */
#define GETH_MAC_VLAN_INCL_Q_3	(*( GETH_MAC_VLAN_INCL_Q_0_type *) 0xf001d060u)	/* MAC VLAN Tag Inclus3on or Replacement Register per Queue */

typedef volatile union
{
	struct
	{ 
		unsigned int OB             : 1;	/* Operation Busy */
		unsigned int CT             : 1;	/* Command Type */
		unsigned int OFS            : 5;	/* Offset */
		/* const */ unsigned int RES_7_16       : 10;	/* Reserved */
		unsigned int VTIM           : 1;	/* VLAN Tag Inverse Match Enable */
		unsigned int ESVL           : 1;	/* Enable S-VLAN */
		/* const */ unsigned int RES_19_20      : 2;	/* Reserved */
		unsigned int EVLS           : 2;	/* Enable VLAN Tag Stripping on Receive */
		/* const */ unsigned int RES_23         : 1;	/* Reserved */
		unsigned int EVLRXS         : 1;	/* Enable VLAN Tag in Rx status */
		unsigned int VTHM           : 1;	/* VLAN Tag Hash Table Match Enable */
		unsigned int EDVLP          : 1;	/* Enable Double VLAN Processing */
		unsigned int RES_27         : 1;	/* Reserved */
		unsigned int EIVLS          : 2;	/* Enable Inner VLAN Tag Stripping on Receive */
		/* const */ unsigned int RES_30         : 1;	/* Reserved */
		unsigned int EIVLRXS        : 1;	/* Enable Inner VLAN Tag in Rx Status */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_VLAN_TAG_CTRL_type;
#define GETH_MAC_VLAN_TAG_CTRL	(*( GETH_MAC_VLAN_TAG_CTRL_type *) 0xf001d050u)	/* MAC VLAN Tag Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int VID            : 16;	/* VLAN Tag ID */
		unsigned int VEN            : 1;	/* VLAN Tag Enable */
		unsigned int ETV            : 1;	/* 12bits or 16bits VLAN comparison */
		unsigned int DOVLTC         : 1;	/* Disable VLAN Type Comparison */
		unsigned int ERSVLM         : 1;	/* Enable S-VLAN Match for received Frames */
		unsigned int ERIVLT         : 1;	/* Enable Inner VLAN Tag Comparison */
		/* const */ unsigned int RES_21         : 3;	/* Reserved */
		unsigned int DMACHEN        : 1;	/* DMA Channel Number Enable */
		unsigned int DMACHN         : 2;	/* DMA Channel Number */
		/* const */ unsigned int RES_31         : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_VLAN_TAG_DATA_type;
#define GETH_MAC_VLAN_TAG_DATA	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Data Register */
#define GETH_MAC_VLAN_TAG_FILTER_0	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Filter 0 Register */
#define GETH_MAC_VLAN_TAG_FILTER_1	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Filter 1 Register */
#define GETH_MAC_VLAN_TAG_FILTER_2	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Filter 2 Register */
#define GETH_MAC_VLAN_TAG_FILTER_3	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Filter 3 Register */
#define GETH_MAC_VLAN_TAG_FILTER_4	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Filter 4 Register */
#define GETH_MAC_VLAN_TAG_FILTER_5	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Filter 5 Register */
#define GETH_MAC_VLAN_TAG_FILTER_6	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Filter 6 Register */
#define GETH_MAC_VLAN_TAG_FILTER_7	(*( GETH_MAC_VLAN_TAG_DATA_type *) 0xf001d054u)	/* MAC VLAN Tag Filter 7 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WTO            : 4;	/* Watchdog Timeout */
		/* const */ unsigned int RES_7_4        : 4;	/* Reserved */
		unsigned int PWE            : 1;	/* Programmable Watchdog Enable */
		/* const */ unsigned int RES_31_9       : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MAC_WATCHDOG_TIMEOUT_type;
#define GETH_MAC_WATCHDOG_TIMEOUT	(*( GETH_MAC_WATCHDOG_TIMEOUT_type *) 0xf001d00cu)	/* MAC Watchdog Timeout Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CNTRST         : 1;	/* Counters Reset */
		unsigned int CNTSTOPRO      : 1;	/* Counter Stop Rollover */
		unsigned int RSTONRD        : 1;	/* Reset on Read */
		unsigned int CNTFREEZ       : 1;	/* MMC Counter Freeze */
		unsigned int CNTPRST        : 1;	/* Counters Preset */
		unsigned int CNTPRSTLVL     : 1;	/* Full-Half Preset */
		/* const */ unsigned int RES_7_6        : 2;	/* Reserved */
		unsigned int UCDBC          : 1;	/* Update MMC Counters for Dropped Broadcast Packets */
		/* const */ unsigned int RES_31_9       : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MMC_CONTROL_type;
#define GETH_MMC_CONTROL	(*( GETH_MMC_CONTROL_type *) 0xf001d700u)	/* MMC Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4GPIS     : 1;	/* MMC Receive IPV4 Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4HERPIS   : 1;	/* MMC Receive IPV4 Header Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4NOPAYPIS : 1;	/* MMC Receive IPV4 No Payload Packet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4FRAGPIS  : 1;	/* MMC Receive IPV4 Fragmented Packet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4UDSBLPIS : 1;	/* MMC Receive IPV4 UDP Checksum Disabled Packet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6GPIS     : 1;	/* MMC Receive IPV6 Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6HERPIS   : 1;	/* MMC Receive IPV6 Header Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6NOPAYPIS : 1;	/* MMC Receive IPV6 No Payload Packet Counter Interrupt Status */
		/* const */ unsigned int RXUDPGPIS      : 1;	/* MC Receive UDP Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXUDPERPIS     : 1;	/* MMC Receive UDP Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXTCPGPIS      : 1;	/* MMC Receive TCP Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXTCPERPIS     : 1;	/* MMC Receive TCP Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXICMPGPIS     : 1;	/* MMC Receive ICMP Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXICMPERPIS    : 1;	/* MMC Receive ICMP Error Packet Counter Interrupt Status */
		/* const */ unsigned int RES_15_14      : 2;	/* Reserved */
		/* const */ unsigned int RXIPV4GOIS     : 1;	/* MMC Receive IPV4 Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4HEROIS   : 1;	/* MMC Receive IPV4 Header Error Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4NOPAYOIS : 1;	/* MMC Receive IPV4 No Payload Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4FRAGOIS  : 1;	/* MMC Receive IPV4 Fragmented Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV4UDSBLOIS : 1;	/* MMC Receive IPV4 UDP Checksum Disabled Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6GOIS     : 1;	/* MMC Receive IPV6 Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6HEROIS   : 1;	/* MMC Receive IPV6 Header Error Octet Counter Interrupt Status */
		/* const */ unsigned int RXIPV6NOPAYOIS : 1;	/* MMC Receive IPV6 No Payload Octet Counter Interrupt Status */
		/* const */ unsigned int RXUDPGOIS      : 1;	/* MMC Receive UDP Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXUDPEROIS     : 1;	/* MMC Receive UDP Error Octet Counter Interrupt Status */
		/* const */ unsigned int RXTCPGOIS      : 1;	/* MMC Receive TCP Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXTCPEROIS     : 1;	/* MMC Receive TCP Error Octet Counter Interrupt Status */
		/* const */ unsigned int RXICMPGOIS     : 1;	/* MMC Receive ICMP Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXICMPEROIS    : 1;	/* MMC Receive ICMP Error Octet Counter Interrupt Status */
		/* const */ unsigned int RES_31_30      : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MMC_IPC_RX_INTERRUPT_type;
#define GETH_MMC_IPC_RX_INTERRUPT	(*( GETH_MMC_IPC_RX_INTERRUPT_type *) 0xf001d808u)	/* MMC IPC Receive Interrupts Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXIPV4GPIM     : 1;	/* MMC Receive IPV4 Good Packet Counter Interrupt Mask */
		unsigned int RXIPV4HERPIM   : 1;	/* MMC Receive IPV4 Header Error Packet Counter Interrupt Mask */
		unsigned int RXIPV4NOPAYPIM : 1;	/* MMC Receive IPV4 No Payload Packet Counter Interrupt Mask */
		unsigned int RXIPV4FRAGPIM  : 1;	/* MMC Receive IPV4 Fragmented Packet Counter Interrupt Mask */
		unsigned int RXIPV4UDSBLPIM : 1;	/* MMC Receive IPV4 UDP Checksum Disabled Packet Counter Interrupt Mask */
		unsigned int RXIPV6GPIM     : 1;	/* MMC Receive IPV6 Good Packet Counter Interrupt Mask */
		unsigned int RXIPV6HERPIM   : 1;	/* MMC Receive IPV6 Header Error Packet Counter Interrupt Mask */
		unsigned int RXIPV6NOPAYPIM : 1;	/* MMC Receive IPV6 No Payload Packet Counter Interrupt Mask */
		unsigned int RXUDPGPIM      : 1;	/* MMC Receive UDP Good Packet Counter Interrupt Mask */
		unsigned int RXUDPERPIM     : 1;	/* MMC Receive UDP Error Packet Counter Interrupt Mask */
		unsigned int RXTCPGPIM      : 1;	/* MMC Receive TCP Good Packet Counter Interrupt Mask */
		unsigned int RXTCPERPIM     : 1;	/* MMC Receive TCP Error Packet Counter Interrupt Mask */
		unsigned int RXICMPGPIM     : 1;	/* MMC Receive ICMP Good Packet Counter Interrupt Mask */
		unsigned int RXICMPERPIM    : 1;	/* MMC Receive ICMP Error Packet Counter Interrupt Mask */
		/* const */ unsigned int RES_15_14      : 2;	/* Reserved */
		unsigned int RXIPV4GOIM     : 1;	/* MMC Receive IPV4 Good Octet Counter Interrupt Mask */
		unsigned int RXIPV4HEROIM   : 1;	/* MMC Receive IPV4 Header Error Octet Counter Interrupt Mask */
		unsigned int RXIPV4NOPAYOIM : 1;	/* MMC Receive IPV4 No Payload Octet Counter Interrupt Mask */
		unsigned int RXIPV4FRAGOIM  : 1;	/* MMC Receive IPV4 Fragmented Octet Counter Interrupt Mask */
		unsigned int RXIPV4UDSBLOIM : 1;	/* MMC Receive IPV4 UDP Checksum Disabled Octet Counter Interrupt Mask */
		unsigned int RXIPV6GOIM     : 1;	/* MMC Receive IPV6 Good Octet Counter Interrupt Mask */
		unsigned int RXIPV6HEROIM   : 1;	/* MMC Receive IPV6 Good Octet Counter Interrupt Mask */
		unsigned int RXIPV6NOPAYOIM : 1;	/* MMC Receive IPV6 Header Error Octet Counter Interrupt Mask */
		unsigned int RXUDPGOIM      : 1;	/* MMC Receive IPV6 No Payload Octet Counter Interrupt Mask */
		unsigned int RXUDPEROIM     : 1;	/* MMC Receive UDP Good Octet Counter Interrupt Mask */
		unsigned int RXTCPGOIM      : 1;	/* MMC Receive TCP Good Octet Counter Interrupt Mask */
		unsigned int RXTCPEROIM     : 1;	/* MMC Receive TCP Error Octet Counter Interrupt Mask */
		unsigned int RXICMPGOIM     : 1;	/* MMC Receive ICMP Good Octet Counter Interrupt Mask */
		unsigned int RXICMPEROIM    : 1;	/* MMC Receive ICMP Error Octet Counter Interrupt Mask */
		/* const */ unsigned int RES_31_30      : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MMC_IPC_RX_INTERRUPT_MASK_type;
#define GETH_MMC_IPC_RX_INTERRUPT_MASK	(*( GETH_MMC_IPC_RX_INTERRUPT_MASK_type *) 0xf001d800u)	/* MMC IPC Receive Interrupts Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXGBPKTIS      : 1;	/* MMC Receive Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int RXGBOCTIS      : 1;	/* MMC Receive Good Bad Octet Counter Interrupt Status */
		/* const */ unsigned int RXGOCTIS       : 1;	/* MMC Receive Good Octet Counter Interrupt Status */
		/* const */ unsigned int RXBCGPIS       : 1;	/* MMC Receive Broadcast Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXMCGPIS       : 1;	/* MMC Receive Multicast Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXCRCERPIS     : 1;	/* MMC Receive CRC Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXALGNERPIS    : 1;	/* MMC Receive Alignment Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXRUNTPIS      : 1;	/* MMC Receive Runt Packet Counter Interrupt Status */
		/* const */ unsigned int RXJABERPIS     : 1;	/* MMC Receive Jabber Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXUSIZEGPIS    : 1;	/* MMC Receive Undersize Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXOSIZEGPIS    : 1;	/* MMC Receive Oversize Good Packet Counter Interrupt Status */
		/* const */ unsigned int RX64OCTGBPIS   : 1;	/* MMC Receive 64 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int RX65T127OCTGBPIS: 1;	/* MMC Receive 65 to 127 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int RX128T255OCTGBPIS: 1;	/* MMC Receive 128 to 255 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int RX256T511OCTGBPIS: 1;	/* MMC Receive 256 to 511 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int RX512T1023OCTGBPIS: 1;	/* MMC Receive 512 to 1023 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int RX1024TMAXOCTGBPIS: 1;	/* MMC Receive 1024 to Maximum Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int RXUCGPIS       : 1;	/* MMC Receive Unicast Good Packet Counter Interrupt Status */
		/* const */ unsigned int RXLENERPIS     : 1;	/* MMC Receive Length Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXORANGEPIS    : 1;	/* MMC Receive Out Of Range Error Packet Counter Interrupt Status. */
		/* const */ unsigned int RXPAUSPIS      : 1;	/* MMC Receive Pause Packet Counter Interrupt Status */
		/* const */ unsigned int RXFOVPIS       : 1;	/* MMC Receive FIFO Overflow Packet Counter Interrupt Status */
		/* const */ unsigned int RXVLANGBPIS    : 1;	/* MMC Receive VLAN Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int RXWDOGPIS      : 1;	/* MMC Receive Watchdog Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXRCVERRPIS    : 1;	/* MMC Receive Error Packet Counter Interrupt Status */
		/* const */ unsigned int RXCTRLPIS      : 1;	/* MMC Receive Control Packet Counter Interrupt Status */
		/* const */ unsigned int RXLPIUSCIS     : 1;	/* MMC Receive LPI microsecond counter interrupt status */
		/* const */ unsigned int RXLPITRCIS     : 1;	/* MMC Receive LPI transition counter interrupt status */
		/* const */ unsigned int RES_31_28      : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MMC_RX_INTERRUPT_type;
#define GETH_MMC_RX_INTERRUPT	(*( GETH_MMC_RX_INTERRUPT_type *) 0xf001d704u)	/* MMC Receive Interrupts Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXGBPKTIM      : 1;	/* MMC Receive Good Bad Packet Counter Interrupt Mask */
		unsigned int RXGBOCTIM      : 1;	/* MMC Receive Good Bad Octet Counter Interrupt Mask */
		unsigned int RXGOCTIM       : 1;	/* MMC Receive Good Octet Counter Interrupt Mask */
		unsigned int RXBCGPIM       : 1;	/* MMC Receive Broadcast Good Packet Counter Interrupt Mask */
		unsigned int RXMCGPIM       : 1;	/* MMC Receive Multicast Good Packet Counter Interrupt Mask */
		unsigned int RXCRCERPIM     : 1;	/* MMC Receive CRC Error Packet Counter Interrupt Mask */
		unsigned int RXALGNERPIM    : 1;	/* MMC Receive Alignment Error Packet Counter Interrupt Mask */
		unsigned int RXRUNTPIM      : 1;	/* MMC Receive Runt Packet Counter Interrupt Mask */
		unsigned int RXJABERPIM     : 1;	/* MMC Receive Jabber Error Packet Counter Interrupt Mask */
		unsigned int RXUSIZEGPIM    : 1;	/* MMC Receive Undersize Good Packet Counter Interrupt Mask */
		unsigned int RXOSIZEGPIM    : 1;	/* MMC Receive Oversize Good Packet Counter Interrupt Mask */
		unsigned int RX64OCTGBPIM   : 1;	/* MMC Receive 64 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int RX65T127OCTGBPIM: 1;	/* MMC Receive 65 to 127 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int RX128T255OCTGBPIM: 1;	/* MMC Receive 128 to 255 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int RX256T511OCTGBPIM: 1;	/* MMC Receive 256 to 511 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int RX512T1023OCTGBPIM: 1;	/* MMC Receive 512 to 1023 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int RX1024TMAXOCTGBPIM: 1;	/* MMC Receive 1024 to Maximum Octet Good Bad Packet Counter Interrupt Mask. */
		unsigned int RXUCGPIM       : 1;	/* MMC Receive Unicast Good Packet Counter Interrupt Mask */
		unsigned int RXLENERPIM     : 1;	/* MMC Receive Length Error Packet Counter Interrupt Mask */
		unsigned int RXORANGEPIM    : 1;	/* MMC Receive Out Of Range Error Packet Counter Interrupt Mask */
		unsigned int RXPAUSPIM      : 1;	/* MMC Receive Pause Packet Counter Interrupt Mask */
		unsigned int RXFOVPIM       : 1;	/* MMC Receive FIFO Overflow Packet Counter Interrupt Mask */
		unsigned int RXVLANGBPIM    : 1;	/* MMC Receive VLAN Good Bad Packet Counter Interrupt Mask */
		unsigned int RXWDOGPIM      : 1;	/* MMC Receive Watchdog Error Packet Counter Interrupt Mask */
		unsigned int RXRCVERRPIM    : 1;	/* MMC Receive Error Packet Counter Interrupt Mask */
		unsigned int RXCTRLPIM      : 1;	/* MMC Receive Control Packet Counter Interrupt Mask */
		unsigned int RXLPIUSCIM     : 1;	/* MMC Receive LPI microsecond counter interrupt Mask */
		unsigned int RXLPITRCIM     : 1;	/* MMC Receive LPI transition counter interrupt Mask */
		/* const */ unsigned int RES_31_28      : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MMC_RX_INTERRUPT_MASK_type;
#define GETH_MMC_RX_INTERRUPT_MASK	(*( GETH_MMC_RX_INTERRUPT_MASK_type *) 0xf001d70cu)	/* MMC Receive Interrupts Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXGBOCTIS      : 1;	/* MMC Transmit Good Bad Octet Counter Interrupt Status */
		/* const */ unsigned int TXGBPKTIS      : 1;	/* MMC Transmit Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TXBCGPIS       : 1;	/* MMC Transmit Broadcast Good Packet Counter Interrupt Status */
		/* const */ unsigned int TXMCGPIS       : 1;	/* MMC Transmit Multicast Good Packet Counter Interrupt Status */
		/* const */ unsigned int TX64OCTGBPIS   : 1;	/* MMC Transmit 64 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TX65T127OCTGBPIS: 1;	/* MMC Transmit 65 to 127 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TX128T255OCTGBPIS: 1;	/* MMC Transmit 128 to 255 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TX256T511OCTGBPIS: 1;	/* MMC Transmit 256 to 511 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TX512T1023OCTGBPIS: 1;	/* MMC Transmit 512 to 1023 Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TX1024TMAXOCTGBPIS: 1;	/* MMC Transmit 1024 to Maximum Octet Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TXUCGBPIS      : 1;	/* MMC Transmit Unicast Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TXMCGBPIS      : 1;	/* MMC Transmit Multicast Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TXBCGBPIS      : 1;	/* MMC Transmit Broadcast Good Bad Packet Counter Interrupt Status */
		/* const */ unsigned int TXUFLOWERPIS   : 1;	/* MMC Transmit Underflow Error Packet Counter Interrupt Status */
		/* const */ unsigned int TXSCOLGPIS     : 1;	/* MMC Transmit Single Collision Good Packet Counter Interrupt Status */
		/* const */ unsigned int TXMCOLGPIS     : 1;	/* MMC Transmit Multiple Collision Good Packet Counter Interrupt Status */
		/* const */ unsigned int TXDEFPIS       : 1;	/* MMC Transmit Deferred Packet Counter Interrupt Status */
		/* const */ unsigned int TXLATCOLPIS    : 1;	/* MMC Transmit Late Collision Packet Counter Interrupt Status */
		/* const */ unsigned int TXEXCOLPIS     : 1;	/* MMC Transmit Excessive Collision Packet Counter Interrupt Status */
		/* const */ unsigned int TXCARERPIS     : 1;	/* MMC Transmit Carrier Error Packet Counter Interrupt Status */
		/* const */ unsigned int TXGOCTIS       : 1;	/* MMC Transmit Good Octet Counter Interrupt Status */
		/* const */ unsigned int TXGPKTIS       : 1;	/* MMC Transmit Good Packet Counter Interrupt Status */
		/* const */ unsigned int TXEXDEFPIS     : 1;	/* MMC Transmit Excessive Deferral Packet Counter Interrupt Status */
		/* const */ unsigned int TXPAUSPIS      : 1;	/* MMC Transmit Pause Packet Counter Interrupt Status */
		/* const */ unsigned int TXVLANGPIS     : 1;	/* MMC Transmit VLAN Good Packet Counter Interrupt Status */
		/* const */ unsigned int TXOSIZEGPIS    : 1;	/* MMC Transmit Oversize Good Packet Counter Interrupt Status */
		/* const */ unsigned int TXLPIUSCIS     : 1;	/* MMC Transmit LPI microsecond counter interrupt status */
		/* const */ unsigned int TXLPITRCIS     : 1;	/* MMC Transmit LPI transition counter interrupt status */
		/* const */ unsigned int RES_31_28      : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MMC_TX_INTERRUPT_type;
#define GETH_MMC_TX_INTERRUPT	(*( GETH_MMC_TX_INTERRUPT_type *) 0xf001d708u)	/* MMC Transmit Interrupts Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXGBOCTIM      : 1;	/* MMC Transmit Good Bad Octet Counter Interrupt Mask */
		unsigned int TXGBPKTIM      : 1;	/* MMC Transmit Good Bad Packet Counter Interrupt Mask */
		unsigned int TXBCGPIM       : 1;	/* MMC Transmit Broadcast Good Packet Counter Interrupt Mask */
		unsigned int TXMCGPIM       : 1;	/* MMC Transmit Multicast Good Packet Counter Interrupt Mask */
		unsigned int TX64OCTGBPIM   : 1;	/* MMC Transmit 64 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int TX65T127OCTGBPIM: 1;	/* MMC Transmit 65 to 127 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int TX128T255OCTGBPIM: 1;	/* MMC Transmit 128 to 255 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int TX256T511OCTGBPIM: 1;	/* MMC Transmit 256 to 511 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int TX512T1023OCTGBPIM: 1;	/* MMC Transmit 512 to 1023 Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int TX1024TMAXOCTGBPIM: 1;	/* MMC Transmit 1024 to Maximum Octet Good Bad Packet Counter Interrupt Mask */
		unsigned int TXUCGBPIM      : 1;	/* MMC Transmit Unicast Good Bad Packet Counter Interrupt Mask */
		unsigned int TXMCGBPIM      : 1;	/* MMC Transmit Multicast Good Bad Packet Counter Interrupt Mask */
		unsigned int TXBCGBPIM      : 1;	/* MMC Transmit Broadcast Good Bad Packet Counter Interrupt Mask */
		unsigned int TXUFLOWERPIM   : 1;	/* MMC Transmit Underflow Error Packet Counter Interrupt Mask */
		unsigned int TXSCOLGPIM     : 1;	/* MMC Transmit Single Collision Good Packet Counter Interrupt Mask */
		unsigned int TXMCOLGPIM     : 1;	/* MMC Transmit Multiple Collision Good Packet Counter Interrupt Mask */
		unsigned int TXDEFPIM       : 1;	/* MMC Transmit Deferred Packet Counter Interrupt Mask */
		unsigned int TXLATCOLPIM    : 1;	/* MMC Transmit Late Collision Packet Counter Interrupt Mask */
		unsigned int TXEXCOLPIM     : 1;	/* MMC Transmit Excessive Collision Packet Counter Interrupt Mask */
		unsigned int TXCARERPIM     : 1;	/* MMC Transmit Carrier Error Packet Counter Interrupt Mask */
		unsigned int TXGOCTIM       : 1;	/* MMC Transmit Good Octet Counter Interrupt Mask */
		unsigned int TXGPKTIM       : 1;	/* MMC Transmit Good Packet Counter Interrupt Mask */
		unsigned int TXEXDEFPIM     : 1;	/* MMC Transmit Excessive Deferral Packet Counter Interrupt Mask */
		unsigned int TXPAUSPIM      : 1;	/* MMC Transmit Pause Packet Counter Interrupt Mask */
		unsigned int TXVLANGPIM     : 1;	/* MMC Transmit VLAN Good Packet Counter Interrupt Mask */
		unsigned int TXOSIZEGPIM    : 1;	/* MMC Transmit Oversize Good Packet Counter Interrupt Mask */
		unsigned int TXLPIUSCIM     : 1;	/* MMC Transmit LPI microsecond counter interrupt Mask */
		unsigned int TXLPITRCIM     : 1;	/* MMC Transmit LPI transition counter interrupt Mask */
		/* const */ unsigned int RES_31_28      : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MMC_TX_INTERRUPT_MASK_type;
#define GETH_MMC_TX_INTERRUPT_MASK	(*( GETH_MMC_TX_INTERRUPT_MASK_type *) 0xf001d710u)	/* MMC Transmit Interrupts Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Q0IS           : 1;	/* Queue 0 Interrupt status */
		/* const */ unsigned int Q1IS           : 1;	/* Queue 1 Interrupt status */
		/* const */ unsigned int Q2IS           : 1;	/* Queue 2 Interrupt status */
		/* const */ unsigned int Q3IS           : 1;	/* Queue 3 Interrupt status */
		/* const */ unsigned int RES_7_4        : 4;	/* Reserved for future use. */
		/* const */ unsigned int RES_15_8       : 8;	/* Reserved */
		/* const */ unsigned int RES_17_16      : 2;	/* Reserved for future use. */
		/* const */ unsigned int RES_31_18      : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_INTERRUPT_STATUS_type;
#define GETH_MTL_INTERRUPT_STATUS	(*( GETH_MTL_INTERRUPT_STATUS_type *) 0xf001dc20u)	/* MTL Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_0          : 1;	/* Reserved */
		unsigned int DTXSTS         : 1;	/* Drop Transmit Status */
		unsigned int RAA            : 1;	/* Receive Arbitration Algorithm */
		/* const */ unsigned int RES_4_3        : 2;	/* Reserved */
		unsigned int SCHALG         : 2;	/* Tx Scheduling Algorithm */
		/* const */ unsigned int RES_7          : 1;	/* Reserved */
		unsigned int CNTPRST        : 1;	/* Counters Preset */
		unsigned int CNTCLR         : 1;	/* Counters Reset */
		/* const */ unsigned int RES_31_10      : 22;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_OPERATION_MODE_type;
#define GETH_MTL_OPERATION_MODE	(*( GETH_MTL_OPERATION_MODE_type *) 0xf001dc00u)	/* MTL Operation Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXUNFIS        : 1;	/* Transmit Queue Underflow Interrupt Status */
		unsigned int ABPSIS         : 1;	/* Average Bits Per Slot Interrupt Status */
		/* const */ unsigned int RES_7_2        : 6;	/* Reserved */
		unsigned int TXUIE          : 1;	/* Transmit Queue Underflow Interrupt Enable */
		unsigned int ABPSIE         : 1;	/* Average Bits Per Slot Interrupt Enable */
		/* const */ unsigned int RES_15_10      : 6;	/* Reserved */
		unsigned int RXOVFIS        : 1;	/* Receive Queue Overflow Interrupt Status */
		/* const */ unsigned int RES_23_17      : 7;	/* Reserved */
		unsigned int RXOIE          : 1;	/* Receive Queue Overflow Interrupt Enable */
		/* const */ unsigned int RES_31_25      : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_type;
#define GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS	(*( GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_type *) 0xf001dd2cu)	/* MTL Queue 0 Interrupt Control Status Register */
#define GETH_MTL_Q1_INTERRUPT_CONTROL_STATUS	(*( GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_type *) 0xf001dd6cu)	/* MTL Queue 1 Interrupt Status Register */
#define GETH_MTL_Q2_INTERRUPT_CONTROL_STATUS	(*( GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_type *) 0xf001ddacu)	/* MTL Queue 2 Interrupt Status Register */
#define GETH_MTL_Q3_INTERRUPT_CONTROL_STATUS	(*( GETH_MTL_Q0_INTERRUPT_CONTROL_STATUS_type *) 0xf001ddecu)	/* MTL Queue 3 Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXQ_WEGT       : 3;	/* Receive Queue Weight */
		unsigned int RXQ_FRM_ARBIT  : 1;	/* Receive Queue Packet Arbitration */
		/* const */ unsigned int RES_31_4       : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_RXQ0_CONTROL_type;
#define GETH_MTL_RXQ0_CONTROL	(*( GETH_MTL_RXQ0_CONTROL_type *) 0xf001dd3cu)	/* MTL Queue 0 Receive Control Register */
#define GETH_MTL_RXQ1_CONTROL	(*( GETH_MTL_RXQ0_CONTROL_type *) 0xf001dd7cu)	/* MTL Queue 1 Receive Control Register */
#define GETH_MTL_RXQ2_CONTROL	(*( GETH_MTL_RXQ0_CONTROL_type *) 0xf001ddbcu)	/* MTL Queue 2 Receive Control Register */
#define GETH_MTL_RXQ3_CONTROL	(*( GETH_MTL_RXQ0_CONTROL_type *) 0xf001ddfcu)	/* MTL Queue 3 Receive Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RWCSTS         : 1;	/* MTL Rx Queue Write Controller Active Status */
		/* const */ unsigned int RRCSTS         : 2;	/* MTL Rx Queue Read Controller State */
		/* const */ unsigned int RES_3          : 1;	/* Reserved */
		/* const */ unsigned int RXQSTS         : 2;	/* MTL Rx Queue Fill-Level Status */
		/* const */ unsigned int RES_15_6       : 10;	/* Reserved */
		/* const */ unsigned int PRXQ           : 14;	/* Number of Packets in Receive Queue */
		/* const */ unsigned int RES_31_30      : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_RXQ0_DEBUG_type;
#define GETH_MTL_RXQ0_DEBUG	(*( GETH_MTL_RXQ0_DEBUG_type *) 0xf001dd38u)	/* MTL Queue 0 Receive Debug Register */
#define GETH_MTL_RXQ1_DEBUG	(*( GETH_MTL_RXQ0_DEBUG_type *) 0xf001dd78u)	/* MTL Queue 1 Receive Debug Register */
#define GETH_MTL_RXQ2_DEBUG	(*( GETH_MTL_RXQ0_DEBUG_type *) 0xf001ddb8u)	/* MTL Queue 2 Receive Debug Register */
#define GETH_MTL_RXQ3_DEBUG	(*( GETH_MTL_RXQ0_DEBUG_type *) 0xf001ddf8u)	/* MTL Queue 3 Receive Debug Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OVFPKTCNT      : 11;	/* Overflow Packet Counter */
		/* const */ unsigned int OVFCNTOVF      : 1;	/* Overflow Counter Overflow Bit */
		/* const */ unsigned int RES_15_12      : 4;	/* Reserved */
		/* const */ unsigned int MISPKTCNT      : 11;	/* Missed Packet Counter */
		/* const */ unsigned int MISCNTOVF      : 1;	/* Missed Packet Counter Overflow Bit */
		/* const */ unsigned int RES_31_28      : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_type;
#define GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT	(*( GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_type *) 0xf001dd34u)	/* MTL Queue 0 Receive Missed Packet and Overflow Counter Register */
#define GETH_MTL_RXQ1_MISSED_PACKET_OVERFLOW_CNT	(*( GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_type *) 0xf001dd74u)	/* MTL Queue 1 Receive Missed Packet and Overflow Counter Register */
#define GETH_MTL_RXQ2_MISSED_PACKET_OVERFLOW_CNT	(*( GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_type *) 0xf001ddb4u)	/* MTL Queue 2 Receive Missed Packet and Overflow Counter Register */
#define GETH_MTL_RXQ3_MISSED_PACKET_OVERFLOW_CNT	(*( GETH_MTL_RXQ0_MISSED_PACKET_OVERFLOW_CNT_type *) 0xf001ddf4u)	/* MTL Queue 3 Receive Missed Packet and Overflow Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RTC            : 2;	/* Receive Queue Threshold Control */
		/* const */ unsigned int RES_2          : 1;	/* Reserved */
		unsigned int FUP            : 1;	/* Forward Undersized Good Packets */
		unsigned int FEP            : 1;	/* Forward Error Packets */
		unsigned int RSF            : 1;	/* Receive Queue Store and Forward */
		unsigned int DIS_TCP_EF     : 1;	/* Disable Dropping of TCP/IP Checksum Error Packets */
		unsigned int EHFC           : 1;	/* Enable Hardware Flow Control */
		unsigned int RFA            : 4;	/* Threshold for Activating Flow Control (in half-duplex and full-duplex */
		/* const */ unsigned int RES_13_x       : 2;	/* Reserved */
		unsigned int RFD            : 4;	/* Threshold for Deactivating Flow Control (in half-duplex and full-duplex modes) */
		/* const */ unsigned int RES_19_x       : 2;	/* Reserved */
		unsigned int RQS            : 5;	/* Receive Queue Size */
		/* const */ unsigned int RES_31_x       : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_RXQ0_OPERATION_MODE_type;
#define GETH_MTL_RXQ0_OPERATION_MODE	(*( GETH_MTL_RXQ0_OPERATION_MODE_type *) 0xf001dd30u)	/* MTL Queue 0 Receive Operation Mode Register */
#define GETH_MTL_RXQ1_OPERATION_MODE	(*( GETH_MTL_RXQ0_OPERATION_MODE_type *) 0xf001dd70u)	/* MTL Queue 1 Receive Operation Mode Register */
#define GETH_MTL_RXQ2_OPERATION_MODE	(*( GETH_MTL_RXQ0_OPERATION_MODE_type *) 0xf001ddb0u)	/* MTL Queue 2 Receive Operation Mode Register */
#define GETH_MTL_RXQ3_OPERATION_MODE	(*( GETH_MTL_RXQ0_OPERATION_MODE_type *) 0xf001ddf0u)	/* MTL Queue 3 Receive Operation Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int Q0MDMACH       : 2;	/* Queue 0 Mapped to DMA Channel */
		/* const */ unsigned int RES_3_x        : 2;	/* Reserved */
		unsigned int Q0DDMACH       : 1;	/* Queue 0 Enabled for DA-based DMA Channel Selection */
		/* const */ unsigned int RES_7_5        : 3;	/* Reserved */
		unsigned int Q1MDMACH       : 2;	/* Queue 1 Mapped to DMA Channel */
		/* const */ unsigned int RES_11_x       : 2;	/* Reserved */
		unsigned int Q1DDMACH       : 1;	/* Queue 1 Enabled for DA-based DMA Channel Selection */
		/* const */ unsigned int RES_15_13      : 3;	/* Reserved */
		unsigned int Q2MDMACH       : 2;	/* Queue 2 Mapped to DMA Channel */
		/* const */ unsigned int RES_19_x       : 2;	/* Reserved */
		unsigned int Q2DDMACH       : 1;	/* Queue 2 Enabled for DA-based DMA Channel Selection */
		/* const */ unsigned int RES_23_21      : 3;	/* Reserved */
		unsigned int Q3MDMACH       : 2;	/* Queue 3 Mapped to DMA Channel */
		/* const */ unsigned int RES_27_x       : 2;	/* Reserved */
		unsigned int Q3DDMACH       : 1;	/* Queue 3 Enabled for Dynamic (per packet) DMA Channel Selection */
		/* const */ unsigned int RES_31_29      : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_RXQ_DMA_MAP0_type;
#define GETH_MTL_RXQ_DMA_MAP0	(*( GETH_MTL_RXQ_DMA_MAP0_type *) 0xf001dc30u)	/* MTL Receive Queue and DMA Channel Mapping 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXQPAUSED      : 1;	/* Transmit Queue in Pause */
		/* const */ unsigned int TRCSTS         : 2;	/* MTL Tx Queue Read Controller Status */
		/* const */ unsigned int TWCSTS         : 1;	/* MTL Tx Queue Write Controller Status */
		/* const */ unsigned int TXQSTS         : 1;	/* MTL Tx Queue Not Empty Status */
		/* const */ unsigned int TXSTSFSTS      : 1;	/* MTL Tx Status FIFO Full Status */
		/* const */ unsigned int RES_15_6       : 10;	/* Reserved */
		/* const */ unsigned int PTXQ           : 3;	/* Number of Packets in the Transmit Queue */
		/* const */ unsigned int RES_19         : 1;	/* Reserved */
		/* const */ unsigned int STXSTSF        : 3;	/* Number of Status Words in Tx Status FIFO of Queue */
		/* const */ unsigned int RES_31_23      : 9;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ0_DEBUG_type;
#define GETH_MTL_TXQ0_DEBUG	(*( GETH_MTL_TXQ0_DEBUG_type *) 0xf001dd08u)	/* MTL Queue 0 Transmit Debug Register */
#define GETH_MTL_TXQ1_DEBUG	(*( GETH_MTL_TXQ0_DEBUG_type *) 0xf001dd48u)	/* MTL Queue 1 Transmit Debug Register */
#define GETH_MTL_TXQ2_DEBUG	(*( GETH_MTL_TXQ0_DEBUG_type *) 0xf001dd88u)	/* MTL Queue 2 Transmit Debug Register */
#define GETH_MTL_TXQ3_DEBUG	(*( GETH_MTL_TXQ0_DEBUG_type *) 0xf001ddc8u)	/* MTL Queue 3 Transmit Debug Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ABS            : 24;	/* Average Bits per Slot This field contains the average transmitted bits per slot. */
		/* const */ unsigned int RES_31_24      : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ0_ETS_STATUS_type;
#define GETH_MTL_TXQ0_ETS_STATUS	(*( GETH_MTL_TXQ0_ETS_STATUS_type *) 0xf001dd14u)	/* MTL Queue 0 Transmit Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FTQ            : 1;	/* Flush Transmit Queue */
		unsigned int TSF            : 1;	/* Transmit Store and Forward */
		unsigned int TXQEN          : 2;	/* Transmit Queue Enable */
		unsigned int TTC            : 3;	/* Transmit Threshold Control */
		/* const */ unsigned int RES_15_7       : 9;	/* Reserved */
		unsigned int TQS            : 4;	/* Transmit Queue Size */
		/* const */ unsigned int RES_31_x       : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ0_OPERATION_MODE_type;
#define GETH_MTL_TXQ0_OPERATION_MODE	(*( GETH_MTL_TXQ0_OPERATION_MODE_type *) 0xf001dd00u)	/* MTL Queue 0 Transmit Operation Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ISCQW          : 21;	/* Quantum or Weights */
		/* const */ unsigned int RES_31_21      : 11;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ0_QUANTUM_WEIGHT_type;
#define GETH_MTL_TXQ0_QUANTUM_WEIGHT	(*( GETH_MTL_TXQ0_QUANTUM_WEIGHT_type *) 0xf001dd18u)	/* MTL Queue 0 Transmit Quantum or Weights Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int UFFRMCNT       : 11;	/* Underflow Packet Counter */
		/* const */ unsigned int UFCNTOVF       : 1;	/* Overflow Bit for Underflow Packet Counter */
		/* const */ unsigned int RES_31_12      : 20;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ0_UNDERFLOW_type;
#define GETH_MTL_TXQ0_UNDERFLOW	(*( GETH_MTL_TXQ0_UNDERFLOW_type *) 0xf001dd04u)	/* MTL Queue 0 Transmit Underflow Counter Register */
#define GETH_MTL_TXQ1_UNDERFLOW	(*( GETH_MTL_TXQ0_UNDERFLOW_type *) 0xf001dd44u)	/* MTL Queue 1 Transmit Underflow Counter Register */
#define GETH_MTL_TXQ2_UNDERFLOW	(*( GETH_MTL_TXQ0_UNDERFLOW_type *) 0xf001dd84u)	/* MTL Queue 2 Transmit Underflow Counter Register */
#define GETH_MTL_TXQ3_UNDERFLOW	(*( GETH_MTL_TXQ0_UNDERFLOW_type *) 0xf001ddc4u)	/* MTL Queue 3 Transmit Underflow Counter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES_1_0        : 2;	/* Reserved */
		unsigned int AVALG          : 1;	/* AV Algorithm */
		unsigned int CC             : 1;	/* Credit Control */
		unsigned int SLC            : 3;	/* Slot Count */
		/* const */ unsigned int RES_31_7       : 25;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ1_ETS_CONTROL_type;
#define GETH_MTL_TXQ1_ETS_CONTROL	(*( GETH_MTL_TXQ1_ETS_CONTROL_type *) 0xf001dd50u)	/* MTL Queue 1 Transmit ETS Control Register */
#define GETH_MTL_TXQ2_ETS_CONTROL	(*( GETH_MTL_TXQ1_ETS_CONTROL_type *) 0xf001dd90u)	/* MTL Queue 2 Transmit ETS Control Register */
#define GETH_MTL_TXQ3_ETS_CONTROL	(*( GETH_MTL_TXQ1_ETS_CONTROL_type *) 0xf001ddd0u)	/* MTL Queue 3 Transmit ETS Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ABS            : 24;	/* Average Bits per Slot */
		/* const */ unsigned int RES_31_24      : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ1_ETS_STATUS_type;
#define GETH_MTL_TXQ1_ETS_STATUS	(*( GETH_MTL_TXQ1_ETS_STATUS_type *) 0xf001dd54u)	/* MTL Queue 1 Transmit ETS Status Register */
#define GETH_MTL_TXQ2_ETS_STATUS	(*( GETH_MTL_TXQ1_ETS_STATUS_type *) 0xf001dd94u)	/* MTL Queue 2 Transmit ETS Status Register */
#define GETH_MTL_TXQ3_ETS_STATUS	(*( GETH_MTL_TXQ1_ETS_STATUS_type *) 0xf001ddd4u)	/* MTL Queue 3 Transmit ETS Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int HC             : 29;	/* hiCredit Value */
		/* const */ unsigned int RES_31_29      : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ1_HICREDIT_type;
#define GETH_MTL_TXQ1_HICREDIT	(*( GETH_MTL_TXQ1_HICREDIT_type *) 0xf001dd60u)	/* MTL Queue 1 Transmit HiCredit Register */
#define GETH_MTL_TXQ2_HICREDIT	(*( GETH_MTL_TXQ1_HICREDIT_type *) 0xf001dda0u)	/* MTL Queue 2 Transmit HiCredit Register */
#define GETH_MTL_TXQ3_HICREDIT	(*( GETH_MTL_TXQ1_HICREDIT_type *) 0xf001dde0u)	/* MTL Queue 3 Transmit HiCredit Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LC             : 29;	/* loCredit Value */
		/* const */ unsigned int RES_31_29      : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ1_LOCREDIT_type;
#define GETH_MTL_TXQ1_LOCREDIT	(*( GETH_MTL_TXQ1_LOCREDIT_type *) 0xf001dd64u)	/* MTL Queue 1 Transmit LoCredit Register */
#define GETH_MTL_TXQ2_LOCREDIT	(*( GETH_MTL_TXQ1_LOCREDIT_type *) 0xf001dda4u)	/* MTL Queue 2 Transmit LoCredit Register */
#define GETH_MTL_TXQ3_LOCREDIT	(*( GETH_MTL_TXQ1_LOCREDIT_type *) 0xf001dde4u)	/* MTL Queue 3 Transmit LoCredit Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FTQ            : 1;	/* Flush Transmit Queue */
		unsigned int TSF            : 1;	/* Transmit Store and Forward */
		unsigned int TXQEN          : 2;	/* Transmit Queue Enable */
		unsigned int TTC            : 3;	/* Transmit Threshold Control */
		/* const */ unsigned int RES_15_7       : 9;	/* Reserved */
		unsigned int TQS            : 4;	/* Transmit Queue Size */
		/* const */ unsigned int RES_31_x       : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ1_OPERATION_MODE_type;
#define GETH_MTL_TXQ1_OPERATION_MODE	(*( GETH_MTL_TXQ1_OPERATION_MODE_type *) 0xf001dd40u)	/* MTL Queue 1 Transmit Operation Mode Register */
#define GETH_MTL_TXQ2_OPERATION_MODE	(*( GETH_MTL_TXQ1_OPERATION_MODE_type *) 0xf001dd80u)	/* MTL Queue 2 Transmit Operation Mode Register */
#define GETH_MTL_TXQ3_OPERATION_MODE	(*( GETH_MTL_TXQ1_OPERATION_MODE_type *) 0xf001ddc0u)	/* MTL Queue 3 Transmit Operation Mode Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ISCQW          : 21;	/* idleSlopeCredit, Quantum or Weights */
		/* const */ unsigned int RES_31_21      : 11;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ1_QUANTUM_WEIGHT_type;
#define GETH_MTL_TXQ1_QUANTUM_WEIGHT	(*( GETH_MTL_TXQ1_QUANTUM_WEIGHT_type *) 0xf001dd58u)	/* MTL Queue 1 Transmit Quantum or Weights Register */
#define GETH_MTL_TXQ2_QUANTUM_WEIGHT	(*( GETH_MTL_TXQ1_QUANTUM_WEIGHT_type *) 0xf001dd98u)	/* MTL Queue 2 Transmit Quantum or Weights Register */
#define GETH_MTL_TXQ3_QUANTUM_WEIGHT	(*( GETH_MTL_TXQ1_QUANTUM_WEIGHT_type *) 0xf001ddd8u)	/* MTL Queue 3 Transmit Quantum or Weights Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SSC            : 14;	/* sendSlopeCredit Value */
		/* const */ unsigned int RES_31_14      : 18;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_MTL_TXQ1_SENDSLOPECREDIT_type;
#define GETH_MTL_TXQ1_SENDSLOPECREDIT	(*( GETH_MTL_TXQ1_SENDSLOPECREDIT_type *) 0xf001dd5cu)	/* MTL Queue 1 Transmit SendSlopeCredit Register */
#define GETH_MTL_TXQ2_SENDSLOPECREDIT	(*( GETH_MTL_TXQ1_SENDSLOPECREDIT_type *) 0xf001dd9cu)	/* MTL Queue 2 Transmit SendSlopeCredit Register */
#define GETH_MTL_TXQ3_SENDSLOPECREDIT	(*( GETH_MTL_TXQ1_SENDSLOPECREDIT_type *) 0xf001dddcu)	/* MTL Queue 3 Transmit SendSlopeCredit Register */

typedef volatile union
{
	struct
	{ 
		unsigned int F0lter0_Byte_Mask: 32;	/* Filteri 32-bit Mask */
	} B;
	int I;
	unsigned int U;

} GETH_RWK_FILTER_BYTE_MASK_0_type;
#define GETH_RWK_FILTER_BYTE_MASK_0	(*( GETH_RWK_FILTER_BYTE_MASK_0_type *) 0xf001d0c4u)	/* MAC Wake-up 0 Filter Byte Mask register */

typedef volatile union
{
	struct
	{ 
		unsigned int F1lter1_Byte_Mask: 32;	/* Filteri 32-bit Mask */
	} B;
	int I;
	unsigned int U;

} GETH_RWK_FILTER_BYTE_MASK_1_type;
#define GETH_RWK_FILTER_BYTE_MASK_1	(*( GETH_RWK_FILTER_BYTE_MASK_1_type *) 0xf001d0c4u)	/* MAC Wake-up 1 Filter Byte Mask register */

typedef volatile union
{
	struct
	{ 
		unsigned int F2lter2_Byte_Mask: 32;	/* Filteri 32-bit Mask */
	} B;
	int I;
	unsigned int U;

} GETH_RWK_FILTER_BYTE_MASK_2_type;
#define GETH_RWK_FILTER_BYTE_MASK_2	(*( GETH_RWK_FILTER_BYTE_MASK_2_type *) 0xf001d0c4u)	/* MAC Wake-up 2 Filter Byte Mask register */

typedef volatile union
{
	struct
	{ 
		unsigned int F3lter3_Byte_Mask: 32;	/* Filteri 32-bit Mask */
	} B;
	int I;
	unsigned int U;

} GETH_RWK_FILTER_BYTE_MASK_3_type;
#define GETH_RWK_FILTER_BYTE_MASK_3	(*( GETH_RWK_FILTER_BYTE_MASK_3_type *) 0xf001d0c4u)	/* MAC Wake-up 3 Filter Byte Mask register */

typedef volatile union
{
	struct
	{ 
		unsigned int Filter0_Command: 4;	/* Filter0_Command */
		/* const */ unsigned int RSVD0          : 4;	/* Reserved */
		unsigned int Filter1_Command: 4;	/* Filter1_Command */
		/* const */ unsigned int RSVD1          : 4;	/* Reserved */
		unsigned int Filter2_Command: 4;	/* Filter2_Command */
		/* const */ unsigned int RSVD2          : 4;	/* Reserved */
		unsigned int Filter3_Command: 4;	/* Filter3_Command */
		/* const */ unsigned int RSVD3          : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RWK_FILTER_COMMAND_0_type;
#define GETH_RWK_FILTER_COMMAND_0	(*( GETH_RWK_FILTER_COMMAND_0_type *) 0xf001d0c4u)	/* MAC Wake-up Filter Command 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RWK_FILTER_CRC_0: 16;	/* Filter2 x i 0_CRC */
		unsigned int RWK_FILTER_CRC_0_2: 16;	/* Filter2 x i 0_CRC */
	} B;
	int I;
	unsigned int U;

} GETH_RWK_FILTER_CRC_0_type;
#define GETH_RWK_FILTER_CRC_0	(*( GETH_RWK_FILTER_CRC_0_type *) 0xf001d0c4u)	/* MAC Wake-up Filter CRC 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RWK_FILTER_CRC_1: 16;	/* Filter2 x i 0_CRC */
		unsigned int RWK_FILTER_CRC_1_2: 16;	/* Filter2 x i 0_CRC */
	} B;
	int I;
	unsigned int U;

} GETH_RWK_FILTER_CRC_1_type;
#define GETH_RWK_FILTER_CRC_1	(*( GETH_RWK_FILTER_CRC_1_type *) 0xf001d0c4u)	/* MAC Wake-up Filter CRC 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int Filter0_Offset : 8;	/* Filter0_Offset */
		unsigned int Filter1_Offset : 8;	/* Filter1_Offset */
		unsigned int Filter2_Offset : 8;	/* Filter2_Offset */
		unsigned int Filter3_Offset : 8;	/* Filter3_Offset */
	} B;
	int I;
	unsigned int U;

} GETH_RWK_FILTER_OFFSET_0_type;
#define GETH_RWK_FILTER_OFFSET_0	(*( GETH_RWK_FILTER_OFFSET_0_type *) 0xf001d0c4u)	/* MAC Wake-up Filter Offset 0 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXICMPERROCT   : 32;	/* RxICMP Error Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXICMP_ERROR_OCTETS_type;
#define GETH_RXICMP_ERROR_OCTETS	(*( GETH_RXICMP_ERROR_OCTETS_type *) 0xf001d884u)	/* Received ICMP Error Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXICMPERRPKT   : 16;	/* RxICMP Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXICMP_ERROR_PACKETS_type;
#define GETH_RXICMP_ERROR_PACKETS	(*( GETH_RXICMP_ERROR_PACKETS_type *) 0xf001d844u)	/* Received ICMP Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXICMPGDOCT    : 32;	/* RxICMP Good Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXICMP_GOOD_OCTETS_type;
#define GETH_RXICMP_GOOD_OCTETS	(*( GETH_RXICMP_GOOD_OCTETS_type *) 0xf001d880u)	/* Good Received ICMP Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXICMPGDPKT    : 16;	/* RxICMP Good Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXICMP_GOOD_PACKETS_type;
#define GETH_RXICMP_GOOD_PACKETS	(*( GETH_RXICMP_GOOD_PACKETS_type *) 0xf001d840u)	/* Good Received ICMP Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4FRAGOCT  : 32;	/* RxIPv4 Fragmented Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_FRAGMENTED_OCTETS_type;
#define GETH_RXIPV4_FRAGMENTED_OCTETS	(*( GETH_RXIPV4_FRAGMENTED_OCTETS_type *) 0xf001d85cu)	/* Received IPV4 Fragmented Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4FRAGPKT  : 16;	/* RxIPv4 Fragmented Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_FRAGMENTED_PACKETS_type;
#define GETH_RXIPV4_FRAGMENTED_PACKETS	(*( GETH_RXIPV4_FRAGMENTED_PACKETS_type *) 0xf001d81cu)	/* Received IPv4 Fragmented Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4GDOCT    : 32;	/* RxIPv4 Good Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_GOOD_OCTETS_type;
#define GETH_RXIPV4_GOOD_OCTETS	(*( GETH_RXIPV4_GOOD_OCTETS_type *) 0xf001d850u)	/* Good Received IPV4 Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4GDPKT    : 16;	/* RxIPv4 Good Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_GOOD_PACKETS_type;
#define GETH_RXIPV4_GOOD_PACKETS	(*( GETH_RXIPV4_GOOD_PACKETS_type *) 0xf001d810u)	/* Good Received RxIPv4 Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4HDRERROCT: 32;	/* RxIPv4 Header Error Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_HEADER_ERROR_OCTETS_type;
#define GETH_RXIPV4_HEADER_ERROR_OCTETS	(*( GETH_RXIPV4_HEADER_ERROR_OCTETS_type *) 0xf001d854u)	/* Received IPV4 Header Error Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4HDRERRPKT: 16;	/* RxIPv4 Header Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_HEADER_ERROR_PACKETS_type;
#define GETH_RXIPV4_HEADER_ERROR_PACKETS	(*( GETH_RXIPV4_HEADER_ERROR_PACKETS_type *) 0xf001d814u)	/* Received IPv4 Header Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4NOPAYOCT : 32;	/* RxIPv4 Payload Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_NO_PAYLOAD_OCTETS_type;
#define GETH_RXIPV4_NO_PAYLOAD_OCTETS	(*( GETH_RXIPV4_NO_PAYLOAD_OCTETS_type *) 0xf001d858u)	/* Received IPV4 No Payload Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4NOPAYPKT : 16;	/* RxIPv4 Payload Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_NO_PAYLOAD_PACKETS_type;
#define GETH_RXIPV4_NO_PAYLOAD_PACKETS	(*( GETH_RXIPV4_NO_PAYLOAD_PACKETS_type *) 0xf001d818u)	/* Received IPv4 No Payload Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4UDSBLPKT : 16;	/* RxIPv4 UDP Checksum Disabled Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS_type;
#define GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS	(*( GETH_RXIPV4_UDP_CHECKSUM_DISABLED_PACKETS_type *) 0xf001d820u)	/* Received IPv4 UPD Checksum Disabled Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV4UDSBLOCT : 32;	/* RxIPv4 UDP Checksum Disable Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_type;
#define GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS	(*( GETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_type *) 0xf001d860u)	/* Received IPV4 UPD Checksum Disabled Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6GDOCT    : 32;	/* RxIPv6 Good Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV6_GOOD_OCTETS_type;
#define GETH_RXIPV6_GOOD_OCTETS	(*( GETH_RXIPV6_GOOD_OCTETS_type *) 0xf001d864u)	/* Good Received IPV6 Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6GDPKT    : 16;	/* RxIPv6 Good Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV6_GOOD_PACKETS_type;
#define GETH_RXIPV6_GOOD_PACKETS	(*( GETH_RXIPV6_GOOD_PACKETS_type *) 0xf001d824u)	/* Good Received RxIPv6 Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6HDRERROCT: 32;	/* RxIPv6 Header Error Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV6_HEADER_ERROR_OCTETS_type;
#define GETH_RXIPV6_HEADER_ERROR_OCTETS	(*( GETH_RXIPV6_HEADER_ERROR_OCTETS_type *) 0xf001d868u)	/* Received IPV6 Header Error Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6HDRERRPKT: 16;	/* RxIPv6 Header Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV6_HEADER_ERROR_PACKETS_type;
#define GETH_RXIPV6_HEADER_ERROR_PACKETS	(*( GETH_RXIPV6_HEADER_ERROR_PACKETS_type *) 0xf001d828u)	/* Received IPv6 Header Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6NOPAYOCT : 32;	/* RxIPv6 Payload Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV6_NO_PAYLOAD_OCTETS_type;
#define GETH_RXIPV6_NO_PAYLOAD_OCTETS	(*( GETH_RXIPV6_NO_PAYLOAD_OCTETS_type *) 0xf001d86cu)	/* Received IPV6 No Payload Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXIPV6NOPAYPKT : 16;	/* RxIPv6 Payload Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXIPV6_NO_PAYLOAD_PACKETS_type;
#define GETH_RXIPV6_NO_PAYLOAD_PACKETS	(*( GETH_RXIPV6_NO_PAYLOAD_PACKETS_type *) 0xf001d82cu)	/* Received IPv6 No Payload Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXTCPERROCT    : 32;	/* RxTCP Error Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXTCP_ERROR_OCTETS_type;
#define GETH_RXTCP_ERROR_OCTETS	(*( GETH_RXTCP_ERROR_OCTETS_type *) 0xf001d87cu)	/* Received TCP Error Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXTCPERRPKT    : 16;	/* RxTCP Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXTCP_ERROR_PACKETS_type;
#define GETH_RXTCP_ERROR_PACKETS	(*( GETH_RXTCP_ERROR_PACKETS_type *) 0xf001d83cu)	/* Received TCP Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXTCPGDOCT     : 32;	/* RxTCP Good Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXTCP_GOOD_OCTETS_type;
#define GETH_RXTCP_GOOD_OCTETS	(*( GETH_RXTCP_GOOD_OCTETS_type *) 0xf001d878u)	/* Good Received TCP Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXTCPGDPKT     : 16;	/* RxTCP Good Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXTCP_GOOD_PACKETS_type;
#define GETH_RXTCP_GOOD_PACKETS	(*( GETH_RXTCP_GOOD_PACKETS_type *) 0xf001d838u)	/* Good Received TCP Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUDPERROCT    : 32;	/* RxUDP Error Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXUDP_ERROR_OCTETS_type;
#define GETH_RXUDP_ERROR_OCTETS	(*( GETH_RXUDP_ERROR_OCTETS_type *) 0xf001d874u)	/* Received UDP Error Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUDPERRPKT    : 16;	/* RxUDP Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXUDP_ERROR_PACKETS_type;
#define GETH_RXUDP_ERROR_PACKETS	(*( GETH_RXUDP_ERROR_PACKETS_type *) 0xf001d834u)	/* Received UDP Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUDPGDOCT     : 32;	/* RxUDP Good Octets */
	} B;
	int I;
	unsigned int U;

} GETH_RXUDP_GOOD_OCTETS_type;
#define GETH_RXUDP_GOOD_OCTETS	(*( GETH_RXUDP_GOOD_OCTETS_type *) 0xf001d870u)	/* Good Received UDP Octets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUDPGDPKT     : 16;	/* RxUDP Good Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RXUDP_GOOD_PACKETS_type;
#define GETH_RXUDP_GOOD_PACKETS	(*( GETH_RXUDP_GOOD_PACKETS_type *) 0xf001d830u)	/* Good Received UDP Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX1024_MAXOCTGB: 16;	/* Rx 1024-Max Octets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_type;
#define GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD	(*( GETH_RX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_type *) 0xf001d7c0u)	/* Good And Bad 1024toMax Octets Packets Received Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX128_255OCTGB : 16;	/* Rx 128-255 Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD	(*( GETH_RX_128TO255OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d7b4u)	/* Good And Bad 128to255 Octets Packets Received Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX256_511OCTGB : 16;	/* Rx 256-511 Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD	(*( GETH_RX_256TO511OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d7b8u)	/* Good And Bad 256to511 Octets Packets Received Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX512_1023OCTGB: 16;	/* RX 512-1023 Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD	(*( GETH_RX_512TO1023OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d7bcu)	/* Good And Bad 512to1023 Octets Packets Received Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX64OCTGB      : 16;	/* Rx 64 Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_64OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_RX_64OCTETS_PACKETS_GOOD_BAD	(*( GETH_RX_64OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d7acu)	/* Good And Bad 64 Octets Packets Received Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RX65_127OCTGB  : 16;	/* Rx 65-127 Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD	(*( GETH_RX_65TO127OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d7b0u)	/* Good And Bad 65to127 Octets Packets Received Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXALGNERR      : 16;	/* Rx Alignment Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_ALIGNMENT_ERROR_PACKETS_type;
#define GETH_RX_ALIGNMENT_ERROR_PACKETS	(*( GETH_RX_ALIGNMENT_ERROR_PACKETS_type *) 0xf001d798u)	/* Received Alignment Error Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXBCASTG       : 16;	/* Rx Broadcast Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_BROADCAST_PACKETS_GOOD_type;
#define GETH_RX_BROADCAST_PACKETS_GOOD	(*( GETH_RX_BROADCAST_PACKETS_GOOD_type *) 0xf001d78cu)	/* Good Received Broadcast Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXCTRLG        : 16;	/* Rx Control Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_CONTROL_PACKETS_GOOD_type;
#define GETH_RX_CONTROL_PACKETS_GOOD	(*( GETH_RX_CONTROL_PACKETS_GOOD_type *) 0xf001d7e4u)	/* Good Received Control Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXCRCERR       : 16;	/* Rx CRC Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_CRC_ERROR_PACKETS_type;
#define GETH_RX_CRC_ERROR_PACKETS	(*( GETH_RX_CRC_ERROR_PACKETS_type *) 0xf001d794u)	/* Received CRC Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXFIFOOVFL     : 16;	/* Rx FIFO Overflow Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_FIFO_OVERFLOW_PACKETS_type;
#define GETH_RX_FIFO_OVERFLOW_PACKETS	(*( GETH_RX_FIFO_OVERFLOW_PACKETS_type *) 0xf001d7d4u)	/* Received FIFO Overflow Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXJABERR       : 16;	/* Rx Jabber Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_JABBER_ERROR_PACKETS_type;
#define GETH_RX_JABBER_ERROR_PACKETS	(*( GETH_RX_JABBER_ERROR_PACKETS_type *) 0xf001d7a0u)	/* Received Jabber Error Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXLENERR       : 16;	/* Rx Length Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_LENGTH_ERROR_PACKETS_type;
#define GETH_RX_LENGTH_ERROR_PACKETS	(*( GETH_RX_LENGTH_ERROR_PACKETS_type *) 0xf001d7c8u)	/* Received Length Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXLPITRC       : 16;	/* Rx LPI Transition counter */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_LPI_TRAN_CNTR_type;
#define GETH_RX_LPI_TRAN_CNTR	(*( GETH_RX_LPI_TRAN_CNTR_type *) 0xf001d7f8u)	/* Received LPI Transition Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXLPIUSC       : 16;	/* Rx LPI Microseconds Counter */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_LPI_USEC_CNTR_type;
#define GETH_RX_LPI_USEC_CNTR	(*( GETH_RX_LPI_USEC_CNTR_type *) 0xf001d7f4u)	/* Received Microseconds LPI Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXMCASTG       : 16;	/* Rx Multicast Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_MULTICAST_PACKETS_GOOD_type;
#define GETH_RX_MULTICAST_PACKETS_GOOD	(*( GETH_RX_MULTICAST_PACKETS_GOOD_type *) 0xf001d790u)	/* Good Received Multicast Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXOCTG         : 32;	/* Rx Octet Count Good */
	} B;
	int I;
	unsigned int U;

} GETH_RX_OCTET_COUNT_GOOD_type;
#define GETH_RX_OCTET_COUNT_GOOD	(*( GETH_RX_OCTET_COUNT_GOOD_type *) 0xf001d788u)	/* Good Received Octet Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXOCTGB        : 32;	/* Rx Octet Count Good Bad */
	} B;
	int I;
	unsigned int U;

} GETH_RX_OCTET_COUNT_GOOD_BAD_type;
#define GETH_RX_OCTET_COUNT_GOOD_BAD	(*( GETH_RX_OCTET_COUNT_GOOD_BAD_type *) 0xf001d784u)	/* Good And Bad Received Octet Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXOUTOFRNG     : 16;	/* Rx Out of Range Type Packet */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_OUT_OF_RANGE_TYPE_PACKETS_type;
#define GETH_RX_OUT_OF_RANGE_TYPE_PACKETS	(*( GETH_RX_OUT_OF_RANGE_TYPE_PACKETS_type *) 0xf001d7ccu)	/* Received Out Of Range Type Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXOVERSZG      : 16;	/* Rx Oversize Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_OVERSIZE_PACKETS_GOOD_type;
#define GETH_RX_OVERSIZE_PACKETS_GOOD	(*( GETH_RX_OVERSIZE_PACKETS_GOOD_type *) 0xf001d7a8u)	/* Good Received Oversized Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXPKTGB        : 16;	/* Rx Packets Count Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_PACKETS_COUNT_GOOD_BAD_type;
#define GETH_RX_PACKETS_COUNT_GOOD_BAD	(*( GETH_RX_PACKETS_COUNT_GOOD_BAD_type *) 0xf001d780u)	/* Good And Bad Received Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXPAUSEPKT     : 16;	/* Rx Pause Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_PAUSE_PACKETS_type;
#define GETH_RX_PAUSE_PACKETS	(*( GETH_RX_PAUSE_PACKETS_type *) 0xf001d7d0u)	/* Received Pause Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXRCVERR       : 16;	/* Rx Receive Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_RECEIVE_ERROR_PACKETS_type;
#define GETH_RX_RECEIVE_ERROR_PACKETS	(*( GETH_RX_RECEIVE_ERROR_PACKETS_type *) 0xf001d7e0u)	/* Received Receive Error Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXRUNTERR      : 16;	/* Rx Runt Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_RUNT_ERROR_PACKETS_type;
#define GETH_RX_RUNT_ERROR_PACKETS	(*( GETH_RX_RUNT_ERROR_PACKETS_type *) 0xf001d79cu)	/* Received Runtime Error Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUNDERSZG     : 16;	/* Rx Undersize Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_UNDERSIZE_PACKETS_GOOD_type;
#define GETH_RX_UNDERSIZE_PACKETS_GOOD	(*( GETH_RX_UNDERSIZE_PACKETS_GOOD_type *) 0xf001d7a4u)	/* Good Received Undersized Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXUCASTG       : 16;	/* Rx Unicast Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_UNICAST_PACKETS_GOOD_type;
#define GETH_RX_UNICAST_PACKETS_GOOD	(*( GETH_RX_UNICAST_PACKETS_GOOD_type *) 0xf001d7c4u)	/* Good Received Unicat Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXVLANPKTGB    : 16;	/* Rx VLAN Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_VLAN_PACKETS_GOOD_BAD_type;
#define GETH_RX_VLAN_PACKETS_GOOD_BAD	(*( GETH_RX_VLAN_PACKETS_GOOD_BAD_type *) 0xf001d7d8u)	/* Good And Bad Received VLAN Packets Count Registerv */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXWDGERR       : 16;	/* Rx Watchdog Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_RX_WATCHDOG_ERROR_PACKETS_type;
#define GETH_RX_WATCHDOG_ERROR_PACKETS	(*( GETH_RX_WATCHDOG_ERROR_PACKETS_type *) 0xf001d7dcu)	/* Received Watchdog Error Count Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXCFG          : 4;	/* TX Clock delay control for RGMMI Mode */
		unsigned int                : 4;
		unsigned int RXCFG          : 4;	/* RX Clock delay control for RGMMI Mode */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} GETH_SKEWCTL_type;
#define GETH_SKEWCTL	(*( GETH_SKEWCTL_type *) 0xf001f040u)	/* Skew Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX1024_MAXOCTGB: 16;	/* Tx 1024ToMaxOctets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_type;
#define GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD	(*( GETH_TX_1024TOMAXOCTETS_PACKETS_GOOD_BAD_type *) 0xf001d738u)	/* Good And Bad 1024toMax Octets Packets Transmitted Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX128_255OCTGB : 16;	/* Tx 128To255Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD	(*( GETH_TX_128TO255OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d72cu)	/* Good And Bad 128to255 Octets Packets Transmitted Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX256_511OCTGB : 16;	/* Tx 256To511Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD	(*( GETH_TX_256TO511OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d730u)	/* Good And Bad 256to511 Octets Packets Transmitted Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX512_1023OCTGB: 16;	/* Tx 512To1023Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD	(*( GETH_TX_512TO1023OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d734u)	/* Good And Bad 512to1023 Octets Packets Transmitted Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX64OCTGB      : 16;	/* Tx 64Octets Packets Good_Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_64OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_TX_64OCTETS_PACKETS_GOOD_BAD	(*( GETH_TX_64OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d724u)	/* Good And Bad 64 Octets Packets Transmitted Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TX65_127OCTGB  : 16;	/* Tx 65To127Octets Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD_type;
#define GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD	(*( GETH_TX_65TO127OCTETS_PACKETS_GOOD_BAD_type *) 0xf001d728u)	/* Good And Bad 65to127 Octets Packets Transmitted Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXBCASTG       : 16;	/* Tx Broadcast Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_BROADCAST_PACKETS_GOOD_type;
#define GETH_TX_BROADCAST_PACKETS_GOOD	(*( GETH_TX_BROADCAST_PACKETS_GOOD_type *) 0xf001d71cu)	/* Good Transmitted Broadcast Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXBCASTGB      : 16;	/* Tx Broadcast Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_BROADCAST_PACKETS_GOOD_BAD_type;
#define GETH_TX_BROADCAST_PACKETS_GOOD_BAD	(*( GETH_TX_BROADCAST_PACKETS_GOOD_BAD_type *) 0xf001d744u)	/* Good And Bad Transmitted Broadcast Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXCARR         : 16;	/* Tx Carrier Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_CARRIER_ERROR_PACKETS_type;
#define GETH_TX_CARRIER_ERROR_PACKETS	(*( GETH_TX_CARRIER_ERROR_PACKETS_type *) 0xf001d760u)	/* Transmitted Carrier Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXDEFRD        : 16;	/* Tx Deferred Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_DEFERRED_PACKETS_type;
#define GETH_TX_DEFERRED_PACKETS	(*( GETH_TX_DEFERRED_PACKETS_type *) 0xf001d754u)	/* Transmitted Deferred Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXEXSCOL       : 16;	/* Tx Excessive Collision Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_EXCESSIVE_COLLISION_PACKETS_type;
#define GETH_TX_EXCESSIVE_COLLISION_PACKETS	(*( GETH_TX_EXCESSIVE_COLLISION_PACKETS_type *) 0xf001d75cu)	/* Transmitted Excessive Collision Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXEXSDEF       : 16;	/* Tx Excessive Deferral Error */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_EXCESSIVE_DEFERRAL_ERROR_type;
#define GETH_TX_EXCESSIVE_DEFERRAL_ERROR	(*( GETH_TX_EXCESSIVE_DEFERRAL_ERROR_type *) 0xf001d76cu)	/* Transmitted Excessive Deferral Error Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXLATECOL      : 16;	/* Tx Late Collision Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_LATE_COLLISION_PACKETS_type;
#define GETH_TX_LATE_COLLISION_PACKETS	(*( GETH_TX_LATE_COLLISION_PACKETS_type *) 0xf001d758u)	/* Transmitted Late Collision Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXLPITRC       : 16;	/* Tx LPI Transition counter */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_LPI_TRAN_CNTR_type;
#define GETH_TX_LPI_TRAN_CNTR	(*( GETH_TX_LPI_TRAN_CNTR_type *) 0xf001d7f0u)	/* Transmitted LPI Transition Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXLPIUSC       : 16;	/* Tx LPI Microseconds Counter */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_LPI_USEC_CNTR_type;
#define GETH_TX_LPI_USEC_CNTR	(*( GETH_TX_LPI_USEC_CNTR_type *) 0xf001d7ecu)	/* Transmitted LPI Microseconds Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXMCASTG       : 16;	/* Tx Multicast Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_MULTICAST_PACKETS_GOOD_type;
#define GETH_TX_MULTICAST_PACKETS_GOOD	(*( GETH_TX_MULTICAST_PACKETS_GOOD_type *) 0xf001d720u)	/* Good Transmitted Multicast Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXMCASTGB      : 16;	/* Tx Multicast Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_MULTICAST_PACKETS_GOOD_BAD_type;
#define GETH_TX_MULTICAST_PACKETS_GOOD_BAD	(*( GETH_TX_MULTICAST_PACKETS_GOOD_BAD_type *) 0xf001d740u)	/* Good And Bad Transmitted Multicast Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXMULTCOLG     : 16;	/* Tx Multiple Collision Good Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS_type;
#define GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS	(*( GETH_TX_MULTIPLE_COLLISION_GOOD_PACKETS_type *) 0xf001d750u)	/* Transmitted Multiple Collision Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXOCTG         : 32;	/* Tx Octet Count Good */
	} B;
	int I;
	unsigned int U;

} GETH_TX_OCTET_COUNT_GOOD_type;
#define GETH_TX_OCTET_COUNT_GOOD	(*( GETH_TX_OCTET_COUNT_GOOD_type *) 0xf001d764u)	/* Good Transmitted Octet Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXOCTGB        : 32;	/* Tx Octet Count Good Bad */
	} B;
	int I;
	unsigned int U;

} GETH_TX_OCTET_COUNT_GOOD_BAD_type;
#define GETH_TX_OCTET_COUNT_GOOD_BAD	(*( GETH_TX_OCTET_COUNT_GOOD_BAD_type *) 0xf001d714u)	/* Good And Bad Transmitted Octet Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXOSIZG        : 16;	/* Tx OSize Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_OSIZE_PACKETS_GOOD_type;
#define GETH_TX_OSIZE_PACKETS_GOOD	(*( GETH_TX_OSIZE_PACKETS_GOOD_type *) 0xf001d778u)	/* Good Transmitted Osize Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXPKTG         : 16;	/* Tx Packet Count Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_PACKET_COUNT_GOOD_type;
#define GETH_TX_PACKET_COUNT_GOOD	(*( GETH_TX_PACKET_COUNT_GOOD_type *) 0xf001d768u)	/* Good Transmitted Packet Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXPKTGB        : 16;	/* Tx Packet Count Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_PACKET_COUNT_GOOD_BAD_type;
#define GETH_TX_PACKET_COUNT_GOOD_BAD	(*( GETH_TX_PACKET_COUNT_GOOD_BAD_type *) 0xf001d718u)	/* Good And Bad Transmitted Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXPAUSE        : 16;	/* Tx Pause Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_PAUSE_PACKETS_type;
#define GETH_TX_PAUSE_PACKETS	(*( GETH_TX_PAUSE_PACKETS_type *) 0xf001d770u)	/* Transmitted Pause Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXSNGLCOLG     : 16;	/* Tx Single Collision Good Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_SINGLE_COLLISION_GOOD_PACKETS_type;
#define GETH_TX_SINGLE_COLLISION_GOOD_PACKETS	(*( GETH_TX_SINGLE_COLLISION_GOOD_PACKETS_type *) 0xf001d74cu)	/* Good Transmitted Single Collision Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXUNDRFLW      : 16;	/* Tx Underflow Error Packets */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_UNDERFLOW_ERROR_PACKETS_type;
#define GETH_TX_UNDERFLOW_ERROR_PACKETS	(*( GETH_TX_UNDERFLOW_ERROR_PACKETS_type *) 0xf001d748u)	/* Transmitted Underflow Error Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXUCASTGB      : 16;	/* Tx Unicast Packets Good Bad */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_UNICAST_PACKETS_GOOD_BAD_type;
#define GETH_TX_UNICAST_PACKETS_GOOD_BAD	(*( GETH_TX_UNICAST_PACKETS_GOOD_BAD_type *) 0xf001d73cu)	/* Good Transmitted Unicat Packets Count Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TXVLANG        : 16;	/* Tx VLAN Packets Good */
		/* const */ unsigned int RES_31_16      : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} GETH_TX_VLAN_PACKETS_GOOD_type;
#define GETH_TX_VLAN_PACKETS_GOOD	(*( GETH_TX_VLAN_PACKETS_GOOD_type *) 0xf001d774u)	/* Good Transmitted VLAN Packets Count Register */


/* GPT */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} GPT120_ACCEN0_type;
#define GPT120_ACCEN0	(*( GPT120_ACCEN0_type *) 0xf00018fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int CAPREL         : 16;	/* Current reload value or Captured value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_CAPREL_type;
#define GPT120_CAPREL	(*( GPT120_CAPREL_type *) 0xf0001830u)	/* Capture and Reload Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} GPT120_CLC_type;
#define GPT120_CLC	(*( GPT120_CLC_type *) 0xf0001800u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} GPT120_ID_type;
#define GPT120_ID	(*( GPT120_ID_type *) 0xf0001808u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} GPT120_KRST0_type;
#define GPT120_KRST0	(*( GPT120_KRST0_type *) 0xf00018f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} GPT120_KRST1_type;
#define GPT120_KRST1	(*( GPT120_KRST1_type *) 0xf00018f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} GPT120_KRSTCLR_type;
#define GPT120_KRSTCLR	(*( GPT120_KRSTCLR_type *) 0xf00018ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} GPT120_OCS_type;
#define GPT120_OCS	(*( GPT120_OCS_type *) 0xf00018e8u)	/* OCDS Control and Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IST2IN         : 1;	/* Input Select for T2IN */
		unsigned int IST2EUD        : 1;	/* Input Select for T2EUD */
		unsigned int IST3IN         : 2;	/* Input Select for T3IN */
		unsigned int IST3EUD        : 2;	/* Input Select for T3EUD */
		unsigned int IST4IN         : 2;	/* Input Select for T4IN */
		unsigned int IST4EUD        : 2;	/* Input Select for T4EUD */
		unsigned int IST5IN         : 1;	/* Input Select for T5IN */
		unsigned int IST5EUD        : 1;	/* Input Select for T5EUD */
		unsigned int IST6IN         : 1;	/* Input Select for T6IN */
		unsigned int IST6EUD        : 1;	/* Input Select for T6EUD */
		unsigned int ISCAPIN        : 2;	/* Input Select for CAPIN */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_PISEL_type;
#define GPT120_PISEL	(*( GPT120_PISEL_type *) 0xf0001804u)	/* Port Input Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2             : 16;	/* Timer T2 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T2_type;
#define GPT120_T2	(*( GPT120_T2_type *) 0xf0001834u)	/* Timer T2 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T2I            : 3;	/* Timer T2 Input Parameter Selection */
		unsigned int T2M            : 3;	/* Timer T2 Mode Control (Basic Operating Mode) */
		unsigned int T2R            : 1;	/* Timer T2 Run Bit */
		unsigned int T2UD           : 1;	/* Timer T2 Up/Down Control */
		unsigned int T2UDE          : 1;	/* Timer T2 External Up/Down Enable */
		unsigned int T2RC           : 1;	/* Timer T2 Remote Control */
		unsigned int                : 2;
		unsigned int T2IRDIS        : 1;	/* Timer T2 Interrupt Disable */
		unsigned int T2EDGE         : 1;	/* Timer T2 Edge Detection */
		unsigned int T2CHDIR        : 1;	/* Timer T2 Count Direction Change */
		/* const */ unsigned int T2RDIR         : 1;	/* Timer T2 Rotation Direction */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T2CON_type;
#define GPT120_T2CON	(*( GPT120_T2CON_type *) 0xf0001810u)	/* Timer T2 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T3             : 16;	/* Timer T3 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T3_type;
#define GPT120_T3	(*( GPT120_T3_type *) 0xf0001838u)	/* Timer T3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T3I            : 3;	/* Timer T3 Input Parameter Selection */
		unsigned int T3M            : 3;	/* Timer T3 Mode Control */
		unsigned int T3R            : 1;	/* Timer T3 Run Bit */
		unsigned int T3UD           : 1;	/* Timer T3 Up/Down Control */
		unsigned int T3UDE          : 1;	/* Timer T3 External Up/Down Enable */
		unsigned int T3OE           : 1;	/* Overflow/Underflow Output Enable */
		unsigned int T3OTL          : 1;	/* Timer T3 Overflow Toggle Latch */
		unsigned int BPS1           : 2;	/* GPT1 Block Prescaler Control */
		unsigned int T3EDGE         : 1;	/* Timer T3 Edge Detection Flag */
		unsigned int T3CHDIR        : 1;	/* Timer T3 Count Direction Change Flag */
		/* const */ unsigned int T3RDIR         : 1;	/* Timer T3 Rotation Direction Flag */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T3CON_type;
#define GPT120_T3CON	(*( GPT120_T3CON_type *) 0xf0001814u)	/* Timer T3 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T4             : 16;	/* Timer T4 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T4_type;
#define GPT120_T4	(*( GPT120_T4_type *) 0xf000183cu)	/* Timer T4 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T4I            : 3;	/* Timer T4 Input Parameter Selection */
		unsigned int T4M            : 3;	/* Timer T4 Mode Control (Basic Operating Mode) */
		unsigned int T4R            : 1;	/* Timer T4 Run Bit */
		unsigned int T4UD           : 1;	/* Timer T4 Up/Down Control */
		unsigned int T4UDE          : 1;	/* Timer T4 External Up/Down Enable */
		unsigned int T4RC           : 1;	/* Timer T4 Remote Control */
		unsigned int CLRT2EN        : 1;	/* Clear Timer T2 Enable */
		unsigned int CLRT3EN        : 1;	/* Clear Timer T3 Enable */
		unsigned int T4IRDIS        : 1;	/* Timer T4 Interrupt Disable */
		unsigned int T4EDGE         : 1;	/* Timer T4 Edge Detection */
		unsigned int T4CHDIR        : 1;	/* Timer T4 Count Direction Change */
		/* const */ unsigned int T4RDIR         : 1;	/* Timer T4 Rotation Direction */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T4CON_type;
#define GPT120_T4CON	(*( GPT120_T4CON_type *) 0xf0001818u)	/* Timer T4 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T5             : 16;	/* Timer T5 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T5_type;
#define GPT120_T5	(*( GPT120_T5_type *) 0xf0001840u)	/* Timer T5 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T5I            : 3;	/* Timer T5 Input Parameter Selection */
		unsigned int T5M            : 3;	/* Timer T5 Mode Control (Basic Operating Mode) */
		unsigned int T5R            : 1;	/* Timer T5 Run Bit */
		unsigned int T5UD           : 1;	/* Timer T5 Up/Down Control */
		unsigned int T5UDE          : 1;	/* Timer T5 External Up/Down Enable */
		unsigned int T5RC           : 1;	/* Timer T5 Remote Control */
		unsigned int CT3            : 1;	/* Timer T3 Capture Trigger Enable */
		unsigned int                : 1;
		unsigned int CI             : 2;	/* Register CAPREL Capture Trigger Selection */
		unsigned int T5CLR          : 1;	/* Timer T5 Clear Enable Bit */
		unsigned int T5SC           : 1;	/* Timer T5 Capture Mode Enable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T5CON_type;
#define GPT120_T5CON	(*( GPT120_T5CON_type *) 0xf000181cu)	/* Timer T5 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T6             : 16;	/* Timer T6 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T6_type;
#define GPT120_T6	(*( GPT120_T6_type *) 0xf0001844u)	/* Timer T6 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int T6I            : 3;	/* Timer T6 Input Parameter Selection */
		unsigned int T6M            : 3;	/* Timer T6 Mode Control (Basic Operating Mode) */
		unsigned int T6R            : 1;	/* Timer T6 Run Bit */
		unsigned int T6UD           : 1;	/* Timer T6 Up/Down Control */
		unsigned int T6UDE          : 1;	/* Timer T6 External Up/Down Enable */
		unsigned int T6OE           : 1;	/* Overflow/Underflow Output Enable */
		unsigned int T6OTL          : 1;	/* Timer T6 Overflow Toggle Latch */
		unsigned int BPS2           : 2;	/* GPT2 Block Prescaler Control */
		unsigned int                : 1;
		unsigned int T6CLR          : 1;	/* Timer T6 Clear Enable Bit */
		unsigned int T6SR           : 1;	/* Timer T6 Reload Mode Enable */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} GPT120_T6CON_type;
#define GPT120_T6CON	(*( GPT120_T6CON_type *) 0xf0001820u)	/* Timer T6 Control Register */


/* HSPDM */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} HSPDM_ACCEN0_type;
#define HSPDM_ACCEN0	(*( HSPDM_ACCEN0_type *) 0xf02820fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} HSPDM_ACCEN1_type;
#define HSPDM_ACCEN1	(*( HSPDM_ACCEN1_type *) 0xf02820f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int OFFSET         : 16;	/* Offset Delay from the Start of the Ramp */
		unsigned int PERIOD         : 16;	/* PERIOD of the ADC Trigger Signal */
	} B;
	int I;
	unsigned int U;

} HSPDM_ADCTG_type;
#define HSPDM_ADCTG	(*( HSPDM_ADCTG_type *) 0xf0282030u)	/* ADC Trigger Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TGCNT          : 16;	/* Number of Trigger Signals in a Single Ramp */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} HSPDM_ADCTGCNT_type;
#define HSPDM_ADCTGCNT	(*( HSPDM_ADCTGCNT_type *) 0xf0282034u)	/* ADC Trigger Count Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STARTA         : 13;	/* Start Address of Buffer A */
		unsigned int                : 3;
		unsigned int ENDA           : 13;	/* End Address of Buffer A */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} HSPDM_BUFA0_type;
#define HSPDM_BUFA0	(*( HSPDM_BUFA0_type *) 0xf0282010u)	/* RAM Buffer A Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int STARTB         : 13;	/* Start Address of Buffer B */
		unsigned int                : 3;
		unsigned int ENDB           : 13;	/* End Address of Buffer B */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} HSPDM_BUFB0_type;
#define HSPDM_BUFB0	(*( HSPDM_BUFB0_type *) 0xf0282018u)	/* RAM Buffer B Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} HSPDM_CLC_type;
#define HSPDM_CLC	(*( HSPDM_CLC_type *) 0xf0282000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Enable Bit Streaming Block BSB 0 */
		unsigned int EN1            : 1;	/* Enable Bit Streaming Block BSB 1 */
		unsigned int SM             : 2;	/* Streaming Mode: Direct Shifting or Sigma-Delta Mode */
		unsigned int PAC            : 1;	/* PAC enable or disable */
		unsigned int ITMDIV         : 2;	/* ITM divider value */
		unsigned int MM             : 1;	/* Memory Mode */
		/* const */ unsigned int RUN            : 1;	/* Run bit */
		unsigned int MPOL           : 1;	/* Mute Polarity */
		unsigned int ADCTGEN        : 1;	/* ADC Trigger Block enable or disable */
		unsigned int DITH           : 3;	/* Dither levels */
		unsigned int                : 2;
		unsigned int RUNC           : 1;	/* Run Bit Clear */
		unsigned int RUNS           : 1;	/* Run Bit Set */
		unsigned int HREN           : 1;	/* Hardware Run Signal Enable */
		unsigned int HRAE           : 1;	/* Hardware Run Active Edge Selection */
		unsigned int HRSEL          : 1;	/* Hardware Run Input Selection */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} HSPDM_CON_type;
#define HSPDM_CON	(*( HSPDM_CON_type *) 0xf0282038u)	/* Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CURRAD         : 13;	/* Current Address in RAM */
		/* const */ unsigned int                : 19;
	} B;
	int I;
	unsigned int U;

} HSPDM_CURRAD_type;
#define HSPDM_CURRAD	(*( HSPDM_CURRAD_type *) 0xf028201cu)	/* Current Address Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BAS            : 1;	/* Buffer A Start Flag */
		/* const */ unsigned int BAE            : 1;	/* Buffer A End Flag */
		/* const */ unsigned int BBS            : 1;	/* Buffer B Start Flag */
		/* const */ unsigned int BBE            : 1;	/* Buffer B End Flag */
		/* const */ unsigned int M0S            : 1;	/* Mute 0 start flag */
		/* const */ unsigned int M0E            : 1;	/* Mute 0 end Flag */
		/* const */ unsigned int M1S            : 1;	/* Mute 1 start flag */
		/* const */ unsigned int M1E            : 1;	/* Mute 1 end flag */
		/* const */ unsigned int ER             : 1;	/* Error RAM Overflow */
		/* const */ unsigned int MUTE           : 1;	/* Mute signal status */
		/* const */ unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} HSPDM_FLAGS_type;
#define HSPDM_FLAGS	(*( HSPDM_FLAGS_type *) 0xf0282044u)	/* Flags Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BAS            : 1;	/* Buffer A Start Flag, Clear Bit */
		unsigned int BAE            : 1;	/* Buffer A End Flag, Clear Bit */
		unsigned int BBS            : 1;	/* Buffer B Start Flag, Clear Bit */
		unsigned int BBE            : 1;	/* Buffer B End Flag, Clear Bit */
		unsigned int M0S            : 1;	/* Mute 0 Start Flag, Clear Bit */
		unsigned int M0E            : 1;	/* Mute 0 End Flag, Clear Bit */
		unsigned int M1S            : 1;	/* Mute 1 Start Flag, Clear Bit */
		unsigned int M1E            : 1;	/* Mute 1 End Flag, Clear Bit */
		unsigned int ER             : 1;	/* Error RAM Overflow, Clear Bit */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} HSPDM_FLAGSCLEAR_type;
#define HSPDM_FLAGSCLEAR	(*( HSPDM_FLAGSCLEAR_type *) 0xf028204cu)	/* Flags Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BAS            : 1;	/* Buffer A Start, Enable Bit */
		unsigned int BAE            : 1;	/* Buffer A End, Enable Bit */
		unsigned int BBS            : 1;	/* Buffer B Start, Enable Bit */
		unsigned int BBE            : 1;	/* Buffer B End, Enable Bit */
		unsigned int M0S            : 1;	/* Mute 0 Start, Enable Bit */
		unsigned int M0E            : 1;	/* Mute 0 End, Enable Bit */
		unsigned int M1S            : 1;	/* Mute 1 Start, Enable Bit */
		unsigned int M1E            : 1;	/* Mute 1 End, Enable Bit */
		unsigned int ER             : 1;	/* Error RAM Overflow, Enable Bit */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} HSPDM_FLAGSEN_type;
#define HSPDM_FLAGSEN	(*( HSPDM_FLAGSEN_type *) 0xf0282050u)	/* Flags Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int BAS            : 1;	/* Buffer A Start Flag, Set Bit */
		unsigned int BAE            : 1;	/* Buffer A End Flag, Set Bit */
		unsigned int BBS            : 1;	/* Buffer B Start Flag, Set Bit */
		unsigned int BBE            : 1;	/* Buffer B End Flag, Set Bit */
		unsigned int M0S            : 1;	/* Mute 0 Start Flag, Set Bit */
		unsigned int M0E            : 1;	/* Mute 0 End Flag, Set Bit */
		unsigned int M1S            : 1;	/* Mute 1 Start Flag, Set Bit */
		unsigned int M1E            : 1;	/* Mute 1 End Flag, Set Bit */
		unsigned int ER             : 1;	/* Error RAM Overflow, Set Bit */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} HSPDM_FLAGSSET_type;
#define HSPDM_FLAGSSET	(*( HSPDM_FLAGSSET_type *) 0xf0282048u)	/* Flags Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} HSPDM_ID_type;
#define HSPDM_ID	(*( HSPDM_ID_type *) 0xf0282008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} HSPDM_KRST0_type;
#define HSPDM_KRST0	(*( HSPDM_KRST0_type *) 0xf02820f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} HSPDM_KRST1_type;
#define HSPDM_KRST1	(*( HSPDM_KRST1_type *) 0xf02820f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} HSPDM_KRSTCLR_type;
#define HSPDM_KRSTCLR	(*( HSPDM_KRSTCLR_type *) 0xf02820ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int START0         : 13;	/* Start Address 0 */
		unsigned int                : 3;
		unsigned int END0           : 13;	/* End Address 1 */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} HSPDM_MUTE0_type;
#define HSPDM_MUTE0	(*( HSPDM_MUTE0_type *) 0xf0282020u)	/* MUTE0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int START1         : 13;	/* Start Address 1 */
		unsigned int                : 3;
		unsigned int END1           : 13;	/* End Address1 */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} HSPDM_MUTE1_type;
#define HSPDM_MUTE1	(*( HSPDM_MUTE1_type *) 0xf0282024u)	/* MUTE1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} HSPDM_OCS_type;
#define HSPDM_OCS	(*( HSPDM_OCS_type *) 0xf02820e8u)	/* OCDS Control and Status Register */


/* I2C */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} I2C0_ACCEN0_type;
#define I2C0_ACCEN0	(*( I2C0_ACCEN0_type *) 0xf00d000cu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} I2C0_ACCEN1_type;
#define I2C0_ACCEN1	(*( I2C0_ACCEN1_type *) 0xf00d0010u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int ADR            : 10;	/* I2C-bus Device Address */
		unsigned int                : 6;
		unsigned int TBAM           : 1;	/* Ten Bit Address Mode */
		unsigned int GCE            : 1;	/* General Call Enable */
		unsigned int MCE            : 1;	/* Master Code Enable */
		unsigned int MnS            : 1;	/* Master / not Slave */
		unsigned int SONA           : 1;	/* Stop on Not-acknowledge */
		unsigned int SOPE           : 1;	/* Stop on Packet End */
		unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} I2C0_ADDRCFG_type;
#define I2C0_ADDRCFG	(*( I2C0_ADDRCFG_type *) 0xf00c0020u)	/* Address Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BS             : 2;	/* Bus Status */
		/* const */ unsigned int RnW            : 1;	/* Read/not Write */
		/* const */ unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} I2C0_BUSSTAT_type;
#define I2C0_BUSSTAT	(*( I2C0_BUSSTAT_type *) 0xf00c0024u)	/* Bus Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} I2C0_CLC_type;
#define I2C0_CLC	(*( I2C0_CLC_type *) 0xf00d0000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int SPEN           : 1;	/* Module Suspend Enable Bit for OCDS */
		unsigned int EDIS           : 1;	/* External Request Disable */
		unsigned int SBWE           : 1;	/* Module Suspend Bit Write Enable for OCDS */
		unsigned int FSOE           : 1;	/* Fast Switch Off Enable */
		unsigned int                : 2;
		unsigned int RMC            : 8;	/* Clock Divider for Standard Run Mode */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} I2C0_CLC1_type;
#define I2C0_CLC1	(*( I2C0_CLC1_type *) 0xf00c0000u)	/* Clock Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SETRSC         : 1;	/* Set Restart Condition */
		unsigned int SETEND         : 1;	/* Set End of Transmission */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} I2C0_ENDDCTRL_type;
#define I2C0_ENDDCTRL	(*( I2C0_ENDDCTRL_type *) 0xf00c0014u)	/* End Data Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXF_UFL        : 1;	/* RX FIFO Underflow */
		unsigned int RXF_OFL        : 1;	/* RX FIFO Overflow */
		unsigned int TXF_UFL        : 1;	/* TX FIFO Underflow */
		unsigned int TXF_OFL        : 1;	/* TX FIFO Overflow */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} I2C0_ERRIRQSC_type;
#define I2C0_ERRIRQSC	(*( I2C0_ERRIRQSC_type *) 0xf00c0068u)	/* Error Interrupt Request Source Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXF_UFL        : 1;	/* RX FIFO Underflow */
		unsigned int RXF_OFL        : 1;	/* RX FIFO Overflow */
		unsigned int TXF_UFL        : 1;	/* TX FIFO Underflow */
		unsigned int TXF_OFL        : 1;	/* TX FIFO Overflow */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} I2C0_ERRIRQSM_type;
#define I2C0_ERRIRQSM	(*( I2C0_ERRIRQSM_type *) 0xf00c0060u)	/* Error Interrupt Request Source Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXF_UFL        : 1;	/* RX FIFO Underflow */
		/* const */ unsigned int RXF_OFL        : 1;	/* RX FIFO Overflow */
		/* const */ unsigned int TXF_UFL        : 1;	/* TX FIFO Underflow */
		/* const */ unsigned int TXF_OFL        : 1;	/* TX FIFO Overflow */
		/* const */ unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} I2C0_ERRIRQSS_type;
#define I2C0_ERRIRQSS	(*( I2C0_ERRIRQSS_type *) 0xf00c0064u)	/* Error Interrupt Request Source Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DEC            : 11;	/* Decrement Value of Fractional Divider */
		unsigned int                : 5;
		unsigned int INC            : 8;	/* Increment Value of Fractional Divider */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} I2C0_FDIVCFG_type;
#define I2C0_FDIVCFG	(*( I2C0_FDIVCFG_type *) 0xf00c0018u)	/* Fractional Divider Configuration Register */
#define I2C0_FDIVHIGHCFG	(*( I2C0_FDIVCFG_type *) 0xf00c001cu)	/* Fractional Divider High-speed Mode Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FFS            : 6;	/* Filled FIFO Stages */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} I2C0_FFSSTAT_type;
#define I2C0_FFSSTAT	(*( I2C0_FFSSTAT_type *) 0xf00c0038u)	/* Filled FIFO Stages Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RXBS           : 2;	/* RX Burst Size */
		unsigned int                : 2;
		unsigned int TXBS           : 2;	/* TX Burst Size */
		unsigned int                : 2;
		unsigned int RXFA           : 2;	/* RX FIFO Alignment */
		unsigned int                : 2;
		unsigned int TXFA           : 2;	/* TX FIFO Alignment */
		unsigned int                : 2;
		unsigned int RXFC           : 1;	/* RX FIFO Flow Control */
		unsigned int TXFC           : 1;	/* TX FIFO Flow Control */
		unsigned int CRBC           : 1;	/* Clear Request Behavior Configuration */
		unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} I2C0_FIFOCFG_type;
#define I2C0_FIFOCFG	(*( I2C0_FIFOCFG_type *) 0xf00c0028u)	/* FIFO Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PISEL          : 3;	/* Port Input Select */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} I2C0_GPCTL_type;
#define I2C0_GPCTL	(*( I2C0_GPCTL_type *) 0xf00d0008u)	/* General Purpose Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LSREQ_INT      : 1;	/* Last Single Request Interrupt */
		unsigned int SREQ_INT       : 1;	/* Single Request Interrupt */
		unsigned int LBREQ_INT      : 1;	/* Last Burst Request Interrupt */
		unsigned int BREQ_INT       : 1;	/* Burst Request Interrupt */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} I2C0_ICR_type;
#define I2C0_ICR	(*( I2C0_ICR_type *) 0xf00c008cu)	/* Interrupt Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_NUMBER     : 8;	/* Module Number */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} I2C0_ID_type;
#define I2C0_ID	(*( I2C0_ID_type *) 0xf00c0008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LSREQ_INT      : 1;	/* Last Single Request Interrupt */
		unsigned int SREQ_INT       : 1;	/* Single Request Interrupt */
		unsigned int LBREQ_INT      : 1;	/* Last Burst Request Interrupt */
		unsigned int BREQ_INT       : 1;	/* Burst Request Interrupt */
		unsigned int I2C_ERR_INT    : 1;	/* I2C Error Interrupt */
		unsigned int I2C_P_INT      : 1;	/* I2C Protocol Interrupt */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} I2C0_IMSC_type;
#define I2C0_IMSC	(*( I2C0_IMSC_type *) 0xf00c0084u)	/* Interrupt Mask Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LSREQ_INT      : 1;	/* Last Single Request Interrupt */
		unsigned int SREQ_INT       : 1;	/* Single Request Interrupt */
		unsigned int LBREQ_INT      : 1;	/* Last Burst Request Interrupt */
		unsigned int BREQ_INT       : 1;	/* Burst Request Interrupt */
		unsigned int I2C_ERR_INT    : 1;	/* I2C Error Interrupt */
		unsigned int I2C_P_INT      : 1;	/* I2C Protocol Interrupt */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} I2C0_ISR_type;
#define I2C0_ISR	(*( I2C0_ISR_type *) 0xf00c0090u)	/* Interrupt Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} I2C0_KRST0_type;
#define I2C0_KRST0	(*( I2C0_KRST0_type *) 0xf00d0014u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} I2C0_KRST1_type;
#define I2C0_KRST1	(*( I2C0_KRST1_type *) 0xf00d0018u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} I2C0_KRSTCLR_type;
#define I2C0_KRSTCLR	(*( I2C0_KRSTCLR_type *) 0xf00d001cu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LSREQ_INT      : 1;	/* Last Single Request Interrupt */
		/* const */ unsigned int SREQ_INT       : 1;	/* Single Request Interrupt */
		/* const */ unsigned int LBREQ_INT      : 1;	/* Last Burst Request Interrupt */
		/* const */ unsigned int BREQ_INT       : 1;	/* Burst Request Interrupt */
		/* const */ unsigned int I2C_ERR_INT    : 1;	/* I2C Error Interrupt */
		/* const */ unsigned int I2C_P_INT      : 1;	/* I2C Protocol Interrupt */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} I2C0_MIS_type;
#define I2C0_MIS	(*( I2C0_MIS_type *) 0xf00c0088u)	/* Masked Interrupt Status Register */
#define I2C0_RIS	(*( I2C0_MIS_type *) 0xf00c0080u)	/* Raw Interrupt Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} I2C0_MODID_type;
#define I2C0_MODID	(*( I2C0_MODID_type *) 0xf00d0004u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MRPS           : 14;	/* Maximum Received Packet Size */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} I2C0_MRPSCTRL_type;
#define I2C0_MRPSCTRL	(*( I2C0_MRPSCTRL_type *) 0xf00c002cu)	/* Maximum Received Packet Size Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AM             : 1;	/* Address Match */
		unsigned int GC             : 1;	/* General Call */
		unsigned int MC             : 1;	/* Master Code */
		unsigned int AL             : 1;	/* Arbitration Lost */
		unsigned int NACK           : 1;	/* Not-acknowledge Received */
		unsigned int TX_END         : 1;	/* Transmission End */
		unsigned int RX             : 1;	/* Receive Mode */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} I2C0_PIRQSC_type;
#define I2C0_PIRQSC	(*( I2C0_PIRQSC_type *) 0xf00c0078u)	/* Protocol Interrupt Request Source Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AM             : 1;	/* Address Match */
		unsigned int GC             : 1;	/* General Call */
		unsigned int MC             : 1;	/* Master Code */
		unsigned int AL             : 1;	/* Arbitration Lost */
		unsigned int NACK           : 1;	/* Not-acknowledge Received */
		unsigned int TX_END         : 1;	/* Transmission End */
		unsigned int RX             : 1;	/* Receive Mode */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} I2C0_PIRQSM_type;
#define I2C0_PIRQSM	(*( I2C0_PIRQSM_type *) 0xf00c0070u)	/* Protocol Interrupt Request Source Mask Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AM             : 1;	/* Address Match */
		/* const */ unsigned int GC             : 1;	/* General Call */
		/* const */ unsigned int MC             : 1;	/* Master Code */
		/* const */ unsigned int AL             : 1;	/* Arbitration Lost */
		/* const */ unsigned int NACK           : 1;	/* Not-acknowledge Received */
		/* const */ unsigned int TX_END         : 1;	/* Transmission End */
		/* const */ unsigned int RX             : 1;	/* Receive Mode */
		/* const */ unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} I2C0_PIRQSS_type;
#define I2C0_PIRQSS	(*( I2C0_PIRQSS_type *) 0xf00c0074u)	/* Protocol Interrupt Request Source Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RPS            : 14;	/* Received Packet Size */
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} I2C0_RPSSTAT_type;
#define I2C0_RPSSTAT	(*( I2C0_RPSSTAT_type *) 0xf00c0030u)	/* Received Packet Size Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RUN            : 1;	/* Enable I2C-bus Interface */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} I2C0_RUNCTRL_type;
#define I2C0_RUNCTRL	(*( I2C0_RUNCTRL_type *) 0xf00c0010u)	/* RUN Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RXD            : 32;	/* Reception Data */
	} B;
	int I;
	unsigned int U;

} I2C0_RXD_type;
#define I2C0_RXD	(*( I2C0_RXD_type *) 0xf00cc000u)	/* Reception Data Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SDA_DEL_HD_DAT : 6;	/* SDA Delay Stages for Data Hold Time in Standard and Fast modes */
		unsigned int HS_SDA_DEL_HD_DAT: 3;	/* SDA Delay Stages for Data Hold Time in High-speed Mode */
		unsigned int SCL_DEL_HD_STA : 3;	/* SCL Delay Stages for Hold Time Start (Restart) Bit */
		unsigned int                : 2;
		unsigned int EN_SCL_LOW_LEN : 1;	/* Enable Direct Configuration of SCL Low Period Length in Fast Mode */
		unsigned int FS_SCL_LOW     : 1;	/* Set Fast Mode SCL Low Period Timing */
		unsigned int HS_SDA_DEL     : 5;	/* SDA Delay Stages for Start/Stop bit in High-speed Mode */
		unsigned int                : 3;
		unsigned int SCL_LOW_LEN    : 8;	/* SCL Low Length in Fast Mode */
	} B;
	int I;
	unsigned int U;

} I2C0_TIMCFG_type;
#define I2C0_TIMCFG	(*( I2C0_TIMCFG_type *) 0xf00c0040u)	/* Timing Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TPS            : 14;	/* Transmit Packet Size */
		unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} I2C0_TPSCTRL_type;
#define I2C0_TPSCTRL	(*( I2C0_TPSCTRL_type *) 0xf00c0034u)	/* Transmit Packet Size Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TXD            : 32;	/* Transmission Data */
	} B;
	int I;
	unsigned int U;

} I2C0_TXD_type;
#define I2C0_TXD	(*( I2C0_TXD_type *) 0xf00c8000u)	/* Transmission Data Register */


/* INT */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_CONFIG0_type;
#define INT_ACCEN_CONFIG0	(*( INT_ACCEN_CONFIG0_type *) 0xf00370f0u)	/* Access Enable covering all INT_ECRx and all SRCy[15:0], Register 0 */
#define INT_ACCEN_SRB00	(*( INT_ACCEN_CONFIG0_type *) 0xf0037100u)	/* Access Enable covering SRB0, Register 0 */
#define INT_ACCEN_SRB10	(*( INT_ACCEN_CONFIG0_type *) 0xf0037108u)	/* Access Enable covering SRB1, Register 0 */
#define INT_ACCEN_SRB20	(*( INT_ACCEN_CONFIG0_type *) 0xf0037110u)	/* Access Enable covering SRB2, Register 0 */
#define INT_ACCEN_SRC_TOS00	(*( INT_ACCEN_CONFIG0_type *) 0xf0037180u)	/* Access Enable covering all SRC0[31:16] mapped to ICUx, Register 0 */
#define INT_ACCEN_SRC_TOS10	(*( INT_ACCEN_CONFIG0_type *) 0xf0037188u)	/* Access Enable covering all SRC1[31:16] mapped to ICUx, Register 0 */
#define INT_ACCEN_SRC_TOS20	(*( INT_ACCEN_CONFIG0_type *) 0xf0037190u)	/* Access Enable covering all SRC2[31:16] mapped to ICUx, Register 0 */
#define INT_ACCEN_SRC_TOS30	(*( INT_ACCEN_CONFIG0_type *) 0xf0037198u)	/* Access Enable covering all SRC3[31:16] mapped to ICUx, Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_CONFIG1_type;
#define INT_ACCEN_CONFIG1	(*( INT_ACCEN_CONFIG1_type *) 0xf00370f4u)	/* Access Enable covering all INT_ECRx and all SRCy[15:0], Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_SRB01_type;
#define INT_ACCEN_SRB01	(*( INT_ACCEN_SRB01_type *) 0xf0037104u)	/* Access Enable covering SRB0, Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_SRB11_type;
#define INT_ACCEN_SRB11	(*( INT_ACCEN_SRB11_type *) 0xf003710cu)	/* Access Enable covering SRB1, Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_SRB21_type;
#define INT_ACCEN_SRB21	(*( INT_ACCEN_SRB21_type *) 0xf0037114u)	/* Access Enable covering SRB2, Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_SRC_TOS01_type;
#define INT_ACCEN_SRC_TOS01	(*( INT_ACCEN_SRC_TOS01_type *) 0xf0037184u)	/* Access Enable covering all SRC0[31:16] mapped to ICUx, Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_SRC_TOS11_type;
#define INT_ACCEN_SRC_TOS11	(*( INT_ACCEN_SRC_TOS11_type *) 0xf003718cu)	/* Access Enable covering all SRC1[31:16] mapped to ICUx, Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_SRC_TOS21_type;
#define INT_ACCEN_SRC_TOS21	(*( INT_ACCEN_SRC_TOS21_type *) 0xf0037194u)	/* Access Enable covering all SRC2[31:16] mapped to ICUx, Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} INT_ACCEN_SRC_TOS31_type;
#define INT_ACCEN_SRC_TOS31	(*( INT_ACCEN_SRC_TOS31_type *) 0xf003719cu)	/* Access Enable covering all SRC3[31:16] mapped to ICUx, Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int PN             : 8;	/* Service Request Priority Number */
		unsigned int                : 2;
		unsigned int ECC            : 5;	/* Service Request ECC */
		unsigned int                : 1;
		unsigned int ID             : 10;	/* Service Request Node ID */
		unsigned int                : 2;
		unsigned int EOVCLR         : 1;	/* Error Overflow Bit */
		unsigned int STATCLR        : 1;	/* Error Status Bit */
		/* const */ unsigned int EOV            : 1;	/* Error Overflow Bit */
		/* const */ unsigned int STAT           : 1;	/* Error Status Bit */
	} B;
	int I;
	unsigned int U;

} INT_ECR0_type;
#define INT_ECR0	(*( INT_ECR0_type *) 0xf0037208u)	/* Error Capture Register x, related to ICU0 */
#define INT_ECR1	(*( INT_ECR0_type *) 0xf0037218u)	/* Error Capture Register x, related to ICU1 */
#define INT_ECR2	(*( INT_ECR0_type *) 0xf0037228u)	/* Error Capture Register x, related to ICU2 */
#define INT_ECR3	(*( INT_ECR0_type *) 0xf0037238u)	/* Error Capture Register x, related to ICU3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} INT_ID_type;
#define INT_ID	(*( INT_ID_type *) 0xf0037008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PN             : 8;	/* Last Acknowledged Service Request Priority Number */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int ECC            : 5;	/* Last Acknowledged Interrupt ECC */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int ID             : 10;	/* Last Acknowledged Interrupt SRN ID */
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} INT_LASR0_type;
#define INT_LASR0	(*( INT_LASR0_type *) 0xf0037204u)	/* Last Acknowledged Service Request Register x, related to ICU0 */
#define INT_LASR1	(*( INT_LASR0_type *) 0xf0037214u)	/* Last Acknowledged Service Request Register x, related to ICU1 */
#define INT_LASR2	(*( INT_LASR0_type *) 0xf0037224u)	/* Last Acknowledged Service Request Register x, related to ICU2 */
#define INT_LASR3	(*( INT_LASR0_type *) 0xf0037234u)	/* Last Acknowledged Service Request Register x, related to ICU3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PN             : 8;	/* Latest Winner Priority Number */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int ECC            : 5;	/* Latest Winner ECC */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int ID             : 10;	/* Latest Winner Index Number */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int STAT           : 1;	/* LWSR Register Status */
	} B;
	int I;
	unsigned int U;

} INT_LWSR0_type;
#define INT_LWSR0	(*( INT_LWSR0_type *) 0xf0037200u)	/* Latest Winning Service Request Register x, related to ICU0 */
#define INT_LWSR1	(*( INT_LWSR0_type *) 0xf0037210u)	/* Latest Winning Service Request Register x, related to ICU1 */
#define INT_LWSR2	(*( INT_LWSR0_type *) 0xf0037220u)	/* Latest Winning Service Request Register x, related to ICU2 */
#define INT_LWSR3	(*( INT_LWSR0_type *) 0xf0037230u)	/* Latest Winning Service Request Register x, related to ICU3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TOS0           : 3;	/* Type of Service for Observation on OTGB0 */
		unsigned int                : 4;
		unsigned int OE0            : 1;	/* Output Enable for OTGB0 */
		unsigned int TOS1           : 3;	/* Type of Service for Observation on OTGB1 */
		unsigned int                : 4;
		unsigned int OE1            : 1;	/* Output Enable for OTGB1 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} INT_OIT_type;
#define INT_OIT	(*( INT_OIT_type *) 0xf00370a0u)	/* OTGM IRQ Trace */

typedef volatile union
{
	struct
	{ 
		unsigned int MIRQ           : 10;	/* SRN Index for Missed Interrupt Trigger */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} INT_OIXMS_type;
#define INT_OIXMS	(*( INT_OIXMS_type *) 0xf003708cu)	/* OTGM IRQ MUX Missed IRQ Select */

typedef volatile union
{
	struct
	{ 
		unsigned int IRQ0           : 10;	/* SRN Index for Interrupt Trigger 0 */
		unsigned int                : 6;
		unsigned int IRQ1           : 10;	/* SRN Index for Interrupt Trigger 1 */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} INT_OIXS0_type;
#define INT_OIXS0	(*( INT_OIXS0_type *) 0xf0037090u)	/* OTGM IRQ MUX Select 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int IRQ2           : 10;	/* SRN Index for Interrupt Trigger 2 */
		unsigned int                : 6;
		unsigned int IRQ3           : 10;	/* SRN Index for Interrupt Trigger 3 */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} INT_OIXS1_type;
#define INT_OIXS1	(*( INT_OIXS1_type *) 0xf0037094u)	/* OTGM IRQ MUX Select 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set Select for OTGB0/1 Overlay */
		unsigned int                : 6;
		unsigned int OBS            : 2;	/* Overlay Byte Select */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} INT_OIXTS_type;
#define INT_OIXTS	(*( INT_OIXTS_type *) 0xf0037088u)	/* OTGM IRQ MUX Trigger Set Select */

typedef volatile union
{
	struct
	{ 
		unsigned int OTGB0          : 16;	/* Bitwise Negedge Sensitivity for OTGB0 */
		unsigned int OTGB1          : 16;	/* Bitwise Negedge Sensitivity for OTGB1 */
	} B;
	int I;
	unsigned int U;

} INT_OMISN_type;
#define INT_OMISN	(*( INT_OMISN_type *) 0xf00370a8u)	/* OTGM MCDS I/F Sensitivity Negedge */

typedef volatile union
{
	struct
	{ 
		unsigned int OTGB0          : 16;	/* Bitwise Posedge Sensitivity for OTGB0 */
		unsigned int OTGB1          : 16;	/* Bitwise Posedge Sensitivity for OTGB1 */
	} B;
	int I;
	unsigned int U;

} INT_OMISP_type;
#define INT_OMISP	(*( INT_OMISP_type *) 0xf00370a4u)	/* OTGM MCDS I/F Sensitivity Posedge */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OTGB0          : 16;	/* Status of OTGB0 */
		/* const */ unsigned int OTGB1          : 16;	/* Status of OTGB1 */
	} B;
	int I;
	unsigned int U;

} INT_OOBS_type;
#define INT_OOBS	(*( INT_OOBS_type *) 0xf0037080u)	/* OTGM OTGB0/1 Status */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned int TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} INT_OSSIC_type;
#define INT_OSSIC	(*( INT_OSSIC_type *) 0xf0037084u)	/* OTGM SSI Control */

typedef volatile union
{
	struct
	{ 
		unsigned int TRIG0          : 1;	/* General Purpose Service Request Trigger 0 */
		unsigned int TRIG1          : 1;	/* General Purpose Service Request Trigger 1 */
		unsigned int TRIG2          : 1;	/* General Purpose Service Request Trigger 2 */
		unsigned int TRIG3          : 1;	/* General Purpose Service Request Trigger 3 */
		unsigned int TRIG4          : 1;	/* General Purpose Service Request Trigger 4 */
		unsigned int TRIG5          : 1;	/* General Purpose Service Request Trigger 5 */
		unsigned int TRIG6          : 1;	/* General Purpose Service Request Trigger 6 */
		unsigned int TRIG7          : 1;	/* General Purpose Service Request Trigger 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} INT_SRB0_type;
#define INT_SRB0	(*( INT_SRB0_type *) 0xf0037010u)	/* Service Request Broadcast Register 0 */
#define INT_SRB1	(*( INT_SRB0_type *) 0xf0037014u)	/* Service Request Broadcast Register 1 */
#define INT_SRB2	(*( INT_SRB0_type *) 0xf0037018u)	/* Service Request Broadcast Register 2 */


/* SRC */
typedef volatile union
{
	struct
	{ 
		unsigned int SRPN           : 8;	/* Service Request Priority Number */
		unsigned int                : 2;
		unsigned int SRE            : 1;	/* Service Request Enable */
		unsigned int TOS            : 3;	/* Type of Service Control */
		unsigned int                : 2;
		unsigned int ECC            : 5;	/* Error Correction Code */
		unsigned int                : 3;
		/* const */ unsigned int SRR            : 1;	/* Service Request Flag */
		unsigned int CLRR           : 1;	/* Request Clear Bit */
		unsigned int SETR           : 1;	/* Request Set Bit */
		/* const */ unsigned int IOV            : 1;	/* Interrupt Trigger Overflow Bit */
		unsigned int IOVCLR         : 1;	/* Interrupt Trigger Overflow Clear Bit */
		/* const */ unsigned int SWS            : 1;	/* SW Sticky Bit */
		unsigned int SWSCLR         : 1;	/* SW Sticky Clear Bit */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SRC_AGBT_type;
#define SRC_AGBT	(*( SRC_AGBT_type *) 0xf003802cu)	/* AGBT Service Request [on ED devices only) */
#define SRC_ASCLIN0ERR	(*( SRC_AGBT_type *) 0xf0038058u)	/* ASCLIN0 Error Service Request */
#define SRC_ASCLIN0RX	(*( SRC_AGBT_type *) 0xf0038054u)	/* ASCLIN0 Receive Service Request */
#define SRC_ASCLIN0TX	(*( SRC_AGBT_type *) 0xf0038050u)	/* ASCLIN0 Transmit Service Request */
#define SRC_ASCLIN1ERR	(*( SRC_AGBT_type *) 0xf0038064u)	/* ASCLIN1 Error Service Request */
#define SRC_ASCLIN1RX	(*( SRC_AGBT_type *) 0xf0038060u)	/* ASCLIN1 Receive Service Request */
#define SRC_ASCLIN1TX	(*( SRC_AGBT_type *) 0xf003805cu)	/* ASCLIN1 Transmit Service Request */
#define SRC_ASCLIN2ERR	(*( SRC_AGBT_type *) 0xf0038070u)	/* ASCLIN2 Error Service Request */
#define SRC_ASCLIN2RX	(*( SRC_AGBT_type *) 0xf003806cu)	/* ASCLIN2 Receive Service Request */
#define SRC_ASCLIN2TX	(*( SRC_AGBT_type *) 0xf0038068u)	/* ASCLIN2 Transmit Service Request */
#define SRC_ASCLIN3ERR	(*( SRC_AGBT_type *) 0xf003807cu)	/* ASCLIN3 Error Service Request */
#define SRC_ASCLIN3RX	(*( SRC_AGBT_type *) 0xf0038078u)	/* ASCLIN3 Receive Service Request */
#define SRC_ASCLIN3TX	(*( SRC_AGBT_type *) 0xf0038074u)	/* ASCLIN3 Transmit Service Request */
#define SRC_BCUBBB	(*( SRC_AGBT_type *) 0xf0038024u)	/* EBCU Service Request [BBB Bus Control Unit, on ED and ADAS devices only) */
#define SRC_BCUSPB	(*( SRC_AGBT_type *) 0xf0038020u)	/* SBCU Service Request [SPB Bus Control Unit) */
#define SRC_CAN0INT0	(*( SRC_AGBT_type *) 0xf00385b0u)	/* CAN0 Service Request 0 */
#define SRC_CAN0INT1	(*( SRC_AGBT_type *) 0xf00385b4u)	/* CAN0 Service Request 1 */
#define SRC_CAN0INT10	(*( SRC_AGBT_type *) 0xf00385d8u)	/* CAN0 Service Request 10 */
#define SRC_CAN0INT11	(*( SRC_AGBT_type *) 0xf00385dcu)	/* CAN0 Service Request 11 */
#define SRC_CAN0INT12	(*( SRC_AGBT_type *) 0xf00385e0u)	/* CAN0 Service Request 12 */
#define SRC_CAN0INT13	(*( SRC_AGBT_type *) 0xf00385e4u)	/* CAN0 Service Request 13 */
#define SRC_CAN0INT14	(*( SRC_AGBT_type *) 0xf00385e8u)	/* CAN0 Service Request 14 */
#define SRC_CAN0INT15	(*( SRC_AGBT_type *) 0xf00385ecu)	/* CAN0 Service Request 15 */
#define SRC_CAN0INT2	(*( SRC_AGBT_type *) 0xf00385b8u)	/* CAN0 Service Request 2 */
#define SRC_CAN0INT3	(*( SRC_AGBT_type *) 0xf00385bcu)	/* CAN0 Service Request 3 */
#define SRC_CAN0INT4	(*( SRC_AGBT_type *) 0xf00385c0u)	/* CAN0 Service Request 4 */
#define SRC_CAN0INT5	(*( SRC_AGBT_type *) 0xf00385c4u)	/* CAN0 Service Request 5 */
#define SRC_CAN0INT6	(*( SRC_AGBT_type *) 0xf00385c8u)	/* CAN0 Service Request 6 */
#define SRC_CAN0INT7	(*( SRC_AGBT_type *) 0xf00385ccu)	/* CAN0 Service Request 7 */
#define SRC_CAN0INT8	(*( SRC_AGBT_type *) 0xf00385d0u)	/* CAN0 Service Request 8 */
#define SRC_CAN0INT9	(*( SRC_AGBT_type *) 0xf00385d4u)	/* CAN0 Service Request 9 */
#define SRC_CAN1INT0	(*( SRC_AGBT_type *) 0xf00385f0u)	/* CAN1 Service Request 0 */
#define SRC_CAN1INT1	(*( SRC_AGBT_type *) 0xf00385f4u)	/* CAN1 Service Request 1 */
#define SRC_CAN1INT10	(*( SRC_AGBT_type *) 0xf0038618u)	/* CAN1 Service Request 10 */
#define SRC_CAN1INT11	(*( SRC_AGBT_type *) 0xf003861cu)	/* CAN1 Service Request 11 */
#define SRC_CAN1INT12	(*( SRC_AGBT_type *) 0xf0038620u)	/* CAN1 Service Request 12 */
#define SRC_CAN1INT13	(*( SRC_AGBT_type *) 0xf0038624u)	/* CAN1 Service Request 13 */
#define SRC_CAN1INT14	(*( SRC_AGBT_type *) 0xf0038628u)	/* CAN1 Service Request 14 */
#define SRC_CAN1INT15	(*( SRC_AGBT_type *) 0xf003862cu)	/* CAN1 Service Request 15 */
#define SRC_CAN1INT2	(*( SRC_AGBT_type *) 0xf00385f8u)	/* CAN1 Service Request 2 */
#define SRC_CAN1INT3	(*( SRC_AGBT_type *) 0xf00385fcu)	/* CAN1 Service Request 3 */
#define SRC_CAN1INT4	(*( SRC_AGBT_type *) 0xf0038600u)	/* CAN1 Service Request 4 */
#define SRC_CAN1INT5	(*( SRC_AGBT_type *) 0xf0038604u)	/* CAN1 Service Request 5 */
#define SRC_CAN1INT6	(*( SRC_AGBT_type *) 0xf0038608u)	/* CAN1 Service Request 6 */
#define SRC_CAN1INT7	(*( SRC_AGBT_type *) 0xf003860cu)	/* CAN1 Service Request 7 */
#define SRC_CAN1INT8	(*( SRC_AGBT_type *) 0xf0038610u)	/* CAN1 Service Request 8 */
#define SRC_CAN1INT9	(*( SRC_AGBT_type *) 0xf0038614u)	/* CAN1 Service Request 9 */
#define SRC_CCU60SR0	(*( SRC_AGBT_type *) 0xf00382c0u)	/* CCU0 Service Request 0 */
#define SRC_CCU60SR1	(*( SRC_AGBT_type *) 0xf00382c4u)	/* CCU0 Service Request 1 */
#define SRC_CCU60SR2	(*( SRC_AGBT_type *) 0xf00382c8u)	/* CCU0 Service Request 2 */
#define SRC_CCU60SR3	(*( SRC_AGBT_type *) 0xf00382ccu)	/* CCU0 Service Request 3 */
#define SRC_CCU61SR0	(*( SRC_AGBT_type *) 0xf00382d0u)	/* CCU1 Service Request 0 */
#define SRC_CCU61SR1	(*( SRC_AGBT_type *) 0xf00382d4u)	/* CCU1 Service Request 1 */
#define SRC_CCU61SR2	(*( SRC_AGBT_type *) 0xf00382d8u)	/* CCU1 Service Request 2 */
#define SRC_CCU61SR3	(*( SRC_AGBT_type *) 0xf00382dcu)	/* CCU1 Service Request 3 */
#define SRC_CERBERUS0	(*( SRC_AGBT_type *) 0xf0038040u)	/* Cerberus Service Request 0 */
#define SRC_CERBERUS1	(*( SRC_AGBT_type *) 0xf0038044u)	/* Cerberus Service Request 1 */
#define SRC_CPU0SB	(*( SRC_AGBT_type *) 0xf0038000u)	/* CPU0 Software Breakpoint Service Request */
#define SRC_CPU1SB	(*( SRC_AGBT_type *) 0xf0038004u)	/* CPU1 Software Breakpoint Service Request */
#define SRC_CPU2SB	(*( SRC_AGBT_type *) 0xf0038008u)	/* CPU2 Software Breakpoint Service Request */
#define SRC_DMACH0	(*( SRC_AGBT_type *) 0xf0038370u)	/* DMA Channel 0 Service Request */
#define SRC_DMACH1	(*( SRC_AGBT_type *) 0xf0038374u)	/* DMA Channel 1 Service Request */
#define SRC_DMACH10	(*( SRC_AGBT_type *) 0xf0038398u)	/* DMA Channel 10 Service Request */
#define SRC_DMACH11	(*( SRC_AGBT_type *) 0xf003839cu)	/* DMA Channel 11 Service Request */
#define SRC_DMACH12	(*( SRC_AGBT_type *) 0xf00383a0u)	/* DMA Channel 12 Service Request */
#define SRC_DMACH13	(*( SRC_AGBT_type *) 0xf00383a4u)	/* DMA Channel 13 Service Request */
#define SRC_DMACH14	(*( SRC_AGBT_type *) 0xf00383a8u)	/* DMA Channel 14 Service Request */
#define SRC_DMACH15	(*( SRC_AGBT_type *) 0xf00383acu)	/* DMA Channel 15 Service Request */
#define SRC_DMACH16	(*( SRC_AGBT_type *) 0xf00383b0u)	/* DMA Channel 16 Service Request */
#define SRC_DMACH17	(*( SRC_AGBT_type *) 0xf00383b4u)	/* DMA Channel 17 Service Request */
#define SRC_DMACH18	(*( SRC_AGBT_type *) 0xf00383b8u)	/* DMA Channel 18 Service Request */
#define SRC_DMACH19	(*( SRC_AGBT_type *) 0xf00383bcu)	/* DMA Channel 19 Service Request */
#define SRC_DMACH2	(*( SRC_AGBT_type *) 0xf0038378u)	/* DMA Channel 2 Service Request */
#define SRC_DMACH20	(*( SRC_AGBT_type *) 0xf00383c0u)	/* DMA Channel 20 Service Request */
#define SRC_DMACH21	(*( SRC_AGBT_type *) 0xf00383c4u)	/* DMA Channel 21 Service Request */
#define SRC_DMACH22	(*( SRC_AGBT_type *) 0xf00383c8u)	/* DMA Channel 22 Service Request */
#define SRC_DMACH23	(*( SRC_AGBT_type *) 0xf00383ccu)	/* DMA Channel 23 Service Request */
#define SRC_DMACH24	(*( SRC_AGBT_type *) 0xf00383d0u)	/* DMA Channel 24 Service Request */
#define SRC_DMACH25	(*( SRC_AGBT_type *) 0xf00383d4u)	/* DMA Channel 25 Service Request */
#define SRC_DMACH26	(*( SRC_AGBT_type *) 0xf00383d8u)	/* DMA Channel 26 Service Request */
#define SRC_DMACH27	(*( SRC_AGBT_type *) 0xf00383dcu)	/* DMA Channel 27 Service Request */
#define SRC_DMACH28	(*( SRC_AGBT_type *) 0xf00383e0u)	/* DMA Channel 28 Service Request */
#define SRC_DMACH29	(*( SRC_AGBT_type *) 0xf00383e4u)	/* DMA Channel 29 Service Request */
#define SRC_DMACH3	(*( SRC_AGBT_type *) 0xf003837cu)	/* DMA Channel 3 Service Request */
#define SRC_DMACH30	(*( SRC_AGBT_type *) 0xf00383e8u)	/* DMA Channel 30 Service Request */
#define SRC_DMACH31	(*( SRC_AGBT_type *) 0xf00383ecu)	/* DMA Channel 31 Service Request */
#define SRC_DMACH32	(*( SRC_AGBT_type *) 0xf00383f0u)	/* DMA Channel 32 Service Request */
#define SRC_DMACH33	(*( SRC_AGBT_type *) 0xf00383f4u)	/* DMA Channel 33 Service Request */
#define SRC_DMACH34	(*( SRC_AGBT_type *) 0xf00383f8u)	/* DMA Channel 34 Service Request */
#define SRC_DMACH35	(*( SRC_AGBT_type *) 0xf00383fcu)	/* DMA Channel 35 Service Request */
#define SRC_DMACH36	(*( SRC_AGBT_type *) 0xf0038400u)	/* DMA Channel 36 Service Request */
#define SRC_DMACH37	(*( SRC_AGBT_type *) 0xf0038404u)	/* DMA Channel 37 Service Request */
#define SRC_DMACH38	(*( SRC_AGBT_type *) 0xf0038408u)	/* DMA Channel 38 Service Request */
#define SRC_DMACH39	(*( SRC_AGBT_type *) 0xf003840cu)	/* DMA Channel 39 Service Request */
#define SRC_DMACH4	(*( SRC_AGBT_type *) 0xf0038380u)	/* DMA Channel 4 Service Request */
#define SRC_DMACH40	(*( SRC_AGBT_type *) 0xf0038410u)	/* DMA Channel 40 Service Request */
#define SRC_DMACH41	(*( SRC_AGBT_type *) 0xf0038414u)	/* DMA Channel 41 Service Request */
#define SRC_DMACH42	(*( SRC_AGBT_type *) 0xf0038418u)	/* DMA Channel 42 Service Request */
#define SRC_DMACH43	(*( SRC_AGBT_type *) 0xf003841cu)	/* DMA Channel 43 Service Request */
#define SRC_DMACH44	(*( SRC_AGBT_type *) 0xf0038420u)	/* DMA Channel 44 Service Request */
#define SRC_DMACH45	(*( SRC_AGBT_type *) 0xf0038424u)	/* DMA Channel 45 Service Request */
#define SRC_DMACH46	(*( SRC_AGBT_type *) 0xf0038428u)	/* DMA Channel 46 Service Request */
#define SRC_DMACH47	(*( SRC_AGBT_type *) 0xf003842cu)	/* DMA Channel 47 Service Request */
#define SRC_DMACH48	(*( SRC_AGBT_type *) 0xf0038430u)	/* DMA Channel 48 Service Request */
#define SRC_DMACH49	(*( SRC_AGBT_type *) 0xf0038434u)	/* DMA Channel 49 Service Request */
#define SRC_DMACH5	(*( SRC_AGBT_type *) 0xf0038384u)	/* DMA Channel 5 Service Request */
#define SRC_DMACH50	(*( SRC_AGBT_type *) 0xf0038438u)	/* DMA Channel 50 Service Request */
#define SRC_DMACH51	(*( SRC_AGBT_type *) 0xf003843cu)	/* DMA Channel 51 Service Request */
#define SRC_DMACH52	(*( SRC_AGBT_type *) 0xf0038440u)	/* DMA Channel 52 Service Request */
#define SRC_DMACH53	(*( SRC_AGBT_type *) 0xf0038444u)	/* DMA Channel 53 Service Request */
#define SRC_DMACH54	(*( SRC_AGBT_type *) 0xf0038448u)	/* DMA Channel 54 Service Request */
#define SRC_DMACH55	(*( SRC_AGBT_type *) 0xf003844cu)	/* DMA Channel 55 Service Request */
#define SRC_DMACH56	(*( SRC_AGBT_type *) 0xf0038450u)	/* DMA Channel 56 Service Request */
#define SRC_DMACH57	(*( SRC_AGBT_type *) 0xf0038454u)	/* DMA Channel 57 Service Request */
#define SRC_DMACH58	(*( SRC_AGBT_type *) 0xf0038458u)	/* DMA Channel 58 Service Request */
#define SRC_DMACH59	(*( SRC_AGBT_type *) 0xf003845cu)	/* DMA Channel 59 Service Request */
#define SRC_DMACH6	(*( SRC_AGBT_type *) 0xf0038388u)	/* DMA Channel 6 Service Request */
#define SRC_DMACH60	(*( SRC_AGBT_type *) 0xf0038460u)	/* DMA Channel 60 Service Request */
#define SRC_DMACH61	(*( SRC_AGBT_type *) 0xf0038464u)	/* DMA Channel 61 Service Request */
#define SRC_DMACH62	(*( SRC_AGBT_type *) 0xf0038468u)	/* DMA Channel 62 Service Request */
#define SRC_DMACH63	(*( SRC_AGBT_type *) 0xf003846cu)	/* DMA Channel 63 Service Request */
#define SRC_DMACH7	(*( SRC_AGBT_type *) 0xf003838cu)	/* DMA Channel 7 Service Request */
#define SRC_DMACH8	(*( SRC_AGBT_type *) 0xf0038390u)	/* DMA Channel 8 Service Request */
#define SRC_DMACH9	(*( SRC_AGBT_type *) 0xf0038394u)	/* DMA Channel 9 Service Request */
#define SRC_DMAERR0	(*( SRC_AGBT_type *) 0xf0038340u)	/* DMA Error Service Request 0 */
#define SRC_DMAERR1	(*( SRC_AGBT_type *) 0xf0038344u)	/* DMA Error Service Request 1 */
#define SRC_DMAERR2	(*( SRC_AGBT_type *) 0xf0038348u)	/* DMA Error Service Request 2 */
#define SRC_DMAERR3	(*( SRC_AGBT_type *) 0xf003834cu)	/* DMA Error Service Request 3 */
#define SRC_DMUFSI	(*( SRC_AGBT_type *) 0xf0038864u)	/* DMU FSI Service Request */
#define SRC_DMUHOST	(*( SRC_AGBT_type *) 0xf0038860u)	/* DMU Host Service Request */
#define SRC_ERAY0IBUSY	(*( SRC_AGBT_type *) 0xf0038824u)	/* E-RAY 0 Input Buffer Busy */
#define SRC_ERAY0INT0	(*( SRC_AGBT_type *) 0xf0038800u)	/* E-RAY 0 Service Request 0 */
#define SRC_ERAY0INT1	(*( SRC_AGBT_type *) 0xf0038804u)	/* E-RAY 0 Service Request 1 */
#define SRC_ERAY0MBSC0	(*( SRC_AGBT_type *) 0xf0038818u)	/* E-RAY 0 Message Buffer Status Changed 0 Service Request */
#define SRC_ERAY0MBSC1	(*( SRC_AGBT_type *) 0xf003881cu)	/* E-RAY 0 Message Buffer Status Changed 1 Service Request */
#define SRC_ERAY0NDAT0	(*( SRC_AGBT_type *) 0xf0038810u)	/* E-RAY 0 New Data 0 Service Request */
#define SRC_ERAY0NDAT1	(*( SRC_AGBT_type *) 0xf0038814u)	/* E-RAY 0 New Data 1 Service Request */
#define SRC_ERAY0OBUSY	(*( SRC_AGBT_type *) 0xf0038820u)	/* E-RAY 0 Output Buffer Busy */
#define SRC_ERAY0TINT0	(*( SRC_AGBT_type *) 0xf0038808u)	/* E-RAY 0 Timer Interrupt 0 Service Request */
#define SRC_ERAY0TINT1	(*( SRC_AGBT_type *) 0xf003880cu)	/* E-RAY 0 Timer Interrupt 1 Service Request */
#define SRC_FCE0	(*( SRC_AGBT_type *) 0xf0038330u)	/* FCE0 Error Service Request */
#define SRC_GETH0	(*( SRC_AGBT_type *) 0xf0038580u)	/* GETH Service Request 0 */
#define SRC_GETH1	(*( SRC_AGBT_type *) 0xf0038584u)	/* GETH Service Request 1 */
#define SRC_GETH2	(*( SRC_AGBT_type *) 0xf0038588u)	/* GETH Service Request 2 */
#define SRC_GETH3	(*( SRC_AGBT_type *) 0xf003858cu)	/* GETH Service Request 3 */
#define SRC_GETH4	(*( SRC_AGBT_type *) 0xf0038590u)	/* GETH Service Request 4 */
#define SRC_GETH5	(*( SRC_AGBT_type *) 0xf0038594u)	/* GETH Service Request 5 */
#define SRC_GETH6	(*( SRC_AGBT_type *) 0xf0038598u)	/* GETH Service Request 6 */
#define SRC_GETH7	(*( SRC_AGBT_type *) 0xf003859cu)	/* GETH Service Request 7 */
#define SRC_GETH8	(*( SRC_AGBT_type *) 0xf00385a0u)	/* GETH Service Request 8 */
#define SRC_GETH9	(*( SRC_AGBT_type *) 0xf00385a4u)	/* GETH Service Request 9 */
#define SRC_GPSR00	(*( SRC_AGBT_type *) 0xf0038990u)	/* General Purpose Group 0 Service Request 0 */
#define SRC_GPSR01	(*( SRC_AGBT_type *) 0xf0038994u)	/* General Purpose Group 0 Service Request 1 */
#define SRC_GPSR02	(*( SRC_AGBT_type *) 0xf0038998u)	/* General Purpose Group 0 Service Request 2 */
#define SRC_GPSR03	(*( SRC_AGBT_type *) 0xf003899cu)	/* General Purpose Group 0 Service Request 3 */
#define SRC_GPSR04	(*( SRC_AGBT_type *) 0xf00389a0u)	/* General Purpose Group 0 Service Request 4 */
#define SRC_GPSR05	(*( SRC_AGBT_type *) 0xf00389a4u)	/* General Purpose Group 0 Service Request 5 */
#define SRC_GPSR06	(*( SRC_AGBT_type *) 0xf00389a8u)	/* General Purpose Group 0 Service Request 6 */
#define SRC_GPSR07	(*( SRC_AGBT_type *) 0xf00389acu)	/* General Purpose Group 0 Service Request 7 */
#define SRC_GPSR10	(*( SRC_AGBT_type *) 0xf00389b0u)	/* General Purpose Group 1 Service Request 0 */
#define SRC_GPSR11	(*( SRC_AGBT_type *) 0xf00389b4u)	/* General Purpose Group 1 Service Request 1 */
#define SRC_GPSR12	(*( SRC_AGBT_type *) 0xf00389b8u)	/* General Purpose Group 1 Service Request 2 */
#define SRC_GPSR13	(*( SRC_AGBT_type *) 0xf00389bcu)	/* General Purpose Group 1 Service Request 3 */
#define SRC_GPSR14	(*( SRC_AGBT_type *) 0xf00389c0u)	/* General Purpose Group 1 Service Request 4 */
#define SRC_GPSR15	(*( SRC_AGBT_type *) 0xf00389c4u)	/* General Purpose Group 1 Service Request 5 */
#define SRC_GPSR16	(*( SRC_AGBT_type *) 0xf00389c8u)	/* General Purpose Group 1 Service Request 6 */
#define SRC_GPSR17	(*( SRC_AGBT_type *) 0xf00389ccu)	/* General Purpose Group 1 Service Request 7 */
#define SRC_GPSR20	(*( SRC_AGBT_type *) 0xf00389d0u)	/* General Purpose Group 2 Service Request 0 */
#define SRC_GPSR21	(*( SRC_AGBT_type *) 0xf00389d4u)	/* General Purpose Group 2 Service Request 1 */
#define SRC_GPSR22	(*( SRC_AGBT_type *) 0xf00389d8u)	/* General Purpose Group 2 Service Request 2 */
#define SRC_GPSR23	(*( SRC_AGBT_type *) 0xf00389dcu)	/* General Purpose Group 2 Service Request 3 */
#define SRC_GPSR24	(*( SRC_AGBT_type *) 0xf00389e0u)	/* General Purpose Group 2 Service Request 4 */
#define SRC_GPSR25	(*( SRC_AGBT_type *) 0xf00389e4u)	/* General Purpose Group 2 Service Request 5 */
#define SRC_GPSR26	(*( SRC_AGBT_type *) 0xf00389e8u)	/* General Purpose Group 2 Service Request 6 */
#define SRC_GPSR27	(*( SRC_AGBT_type *) 0xf00389ecu)	/* General Purpose Group 2 Service Request 7 */
#define SRC_GPT120CIRQ	(*( SRC_AGBT_type *) 0xf00382e0u)	/* GPT120 CAPREL Service Request */
#define SRC_GPT120T2	(*( SRC_AGBT_type *) 0xf00382e4u)	/* GPT120 Timer 2 Service Request */
#define SRC_GPT120T3	(*( SRC_AGBT_type *) 0xf00382e8u)	/* GPT120 Timer 3 Service Request */
#define SRC_GPT120T4	(*( SRC_AGBT_type *) 0xf00382ecu)	/* GPT120 Timer 4 Service Request */
#define SRC_GPT120T5	(*( SRC_AGBT_type *) 0xf00382f0u)	/* GPT120 Timer 5 Service Request */
#define SRC_GPT120T6	(*( SRC_AGBT_type *) 0xf00382f4u)	/* GPT120 Timer 6 Service Request */
#define SRC_HSM0	(*( SRC_AGBT_type *) 0xf0038870u)	/* HSM Service Request 0 */
#define SRC_HSM1	(*( SRC_AGBT_type *) 0xf0038874u)	/* HSM Service Request 1 */
#define SRC_HSPDM0BFR	(*( SRC_AGBT_type *) 0xf0038900u)	/* HSPDM0 Buffer Service Request */
#define SRC_HSPDM0ERR	(*( SRC_AGBT_type *) 0xf0038908u)	/* HSPDM0 Error / RAM Overflow Service Request */
#define SRC_HSPDM0RAMP	(*( SRC_AGBT_type *) 0xf0038904u)	/* HSPDM0 RAMP Events Service Request */
#define SRC_I2C0DTR	(*( SRC_AGBT_type *) 0xf0038220u)	/* I2C0 Data Transfer Request */
#define SRC_I2C0ERR	(*( SRC_AGBT_type *) 0xf0038224u)	/* I2C0 Error Service Request */
#define SRC_I2C0P	(*( SRC_AGBT_type *) 0xf0038228u)	/* I2C0 Protocol Service Request */
#define SRC_MTUDONE	(*( SRC_AGBT_type *) 0xf00380ecu)	/* MTU Done Service Request */
#define SRC_PMS0	(*( SRC_AGBT_type *) 0xf00388b0u)	/* Power Management System Service Request 0 */
#define SRC_PMS1	(*( SRC_AGBT_type *) 0xf00388b4u)	/* Power Management System Service Request 1 */
#define SRC_PMS2	(*( SRC_AGBT_type *) 0xf00388b8u)	/* Power Management System Service Request 2 */
#define SRC_PMS3	(*( SRC_AGBT_type *) 0xf00388bcu)	/* Power Management System Service Request 3 */
#define SRC_PMSDTS	(*( SRC_AGBT_type *) 0xf00388acu)	/* PMS DTS Service Request */
#define SRC_QSPI0ERR	(*( SRC_AGBT_type *) 0xf00380f8u)	/* QSPI0 Error Service Request */
#define SRC_QSPI0PT	(*( SRC_AGBT_type *) 0xf00380fcu)	/* QSPI0 Phase Transition Service Request */
#define SRC_QSPI0RX	(*( SRC_AGBT_type *) 0xf00380f4u)	/* QSPI0 Receive Service Request */
#define SRC_QSPI0TX	(*( SRC_AGBT_type *) 0xf00380f0u)	/* QSPI0 Transmit Service Request */
#define SRC_QSPI0U	(*( SRC_AGBT_type *) 0xf0038100u)	/* QSPI0 User Defined Service Request */
#define SRC_QSPI1ERR	(*( SRC_AGBT_type *) 0xf003810cu)	/* QSPI1 Error Service Request */
#define SRC_QSPI1PT	(*( SRC_AGBT_type *) 0xf0038110u)	/* QSPI1 Phase Transition Service Request */
#define SRC_QSPI1RX	(*( SRC_AGBT_type *) 0xf0038108u)	/* QSPI1 Receive Service Request */
#define SRC_QSPI1TX	(*( SRC_AGBT_type *) 0xf0038104u)	/* QSPI1 Transmit Service Request */
#define SRC_QSPI1U	(*( SRC_AGBT_type *) 0xf0038114u)	/* QSPI1 User Defined Service Request */
#define SRC_QSPI2ERR	(*( SRC_AGBT_type *) 0xf0038120u)	/* QSPI2 Error Service Request */
#define SRC_QSPI2HC	(*( SRC_AGBT_type *) 0xf0038178u)	/* QSPI2 High Speed Capture Service Request */
#define SRC_QSPI2PT	(*( SRC_AGBT_type *) 0xf0038124u)	/* QSPI2 Phase Transition Service Request */
#define SRC_QSPI2RX	(*( SRC_AGBT_type *) 0xf003811cu)	/* QSPI2 Receive Service Request */
#define SRC_QSPI2TX	(*( SRC_AGBT_type *) 0xf0038118u)	/* QSPI2 Transmit Service Request */
#define SRC_QSPI2U	(*( SRC_AGBT_type *) 0xf0038128u)	/* QSPI2 User Defined Service Request */
#define SRC_QSPI3ERR	(*( SRC_AGBT_type *) 0xf0038134u)	/* QSPI3 Error Service Request */
#define SRC_QSPI3HC	(*( SRC_AGBT_type *) 0xf003817cu)	/* QSPI3 High Speed Capture Service Request */
#define SRC_QSPI3PT	(*( SRC_AGBT_type *) 0xf0038138u)	/* QSPI3 Phase Transition Service Request */
#define SRC_QSPI3RX	(*( SRC_AGBT_type *) 0xf0038130u)	/* QSPI3 Receive Service Request */
#define SRC_QSPI3TX	(*( SRC_AGBT_type *) 0xf003812cu)	/* QSPI3 Transmit Service Request */
#define SRC_QSPI3U	(*( SRC_AGBT_type *) 0xf003813cu)	/* QSPI3 User Defined Service Request */
#define SRC_RIF0ERR	(*( SRC_AGBT_type *) 0xf0038970u)	/* Radar Interface 0 Error Service Request */
#define SRC_RIF0INT	(*( SRC_AGBT_type *) 0xf0038974u)	/* Radar Interface 0 Service Request */
#define SRC_RIF1ERR	(*( SRC_AGBT_type *) 0xf0038978u)	/* Radar Interface 1 Error Service Request */
#define SRC_RIF1INT	(*( SRC_AGBT_type *) 0xf003897cu)	/* Radar Interface 1 Service Request */
#define SRC_SCR	(*( SRC_AGBT_type *) 0xf00388c0u)	/* Stand By Controller Service Request */
#define SRC_SCUERU0	(*( SRC_AGBT_type *) 0xf0038880u)	/* SCU ERU Service Request 0 */
#define SRC_SCUERU1	(*( SRC_AGBT_type *) 0xf0038884u)	/* SCU ERU Service Request 1 */
#define SRC_SCUERU2	(*( SRC_AGBT_type *) 0xf0038888u)	/* SCU ERU Service Request 2 */
#define SRC_SCUERU3	(*( SRC_AGBT_type *) 0xf003888cu)	/* SCU ERU Service Request 3 */
#define SRC_SMU0	(*( SRC_AGBT_type *) 0xf00388d0u)	/* SMU Service Request 0 */
#define SRC_SMU1	(*( SRC_AGBT_type *) 0xf00388d4u)	/* SMU Service Request 1 */
#define SRC_SMU2	(*( SRC_AGBT_type *) 0xf00388d8u)	/* SMU Service Request 2 */
#define SRC_SPU0ERR	(*( SRC_AGBT_type *) 0xf0038984u)	/* SPU 0 Error Service Request */
#define SRC_SPU0INT	(*( SRC_AGBT_type *) 0xf0038980u)	/* SPU 0 Service Request */
#define SRC_SPU1ERR	(*( SRC_AGBT_type *) 0xf003898cu)	/* SPU 1 Error Service Request */
#define SRC_SPU1INT	(*( SRC_AGBT_type *) 0xf0038988u)	/* SPU 1 Service Request */
#define SRC_STM0SR0	(*( SRC_AGBT_type *) 0xf0038300u)	/* System Timer 0 Service Request 0 */
#define SRC_STM0SR1	(*( SRC_AGBT_type *) 0xf0038304u)	/* System Timer 0 Service Request 1 */
#define SRC_STM1SR0	(*( SRC_AGBT_type *) 0xf0038308u)	/* System Timer 1 Service Request 0 */
#define SRC_STM1SR1	(*( SRC_AGBT_type *) 0xf003830cu)	/* System Timer 1 Service Request 1 */
#define SRC_STM2SR0	(*( SRC_AGBT_type *) 0xf0038310u)	/* System Timer 2 Service Request 0 */
#define SRC_STM2SR1	(*( SRC_AGBT_type *) 0xf0038314u)	/* System Timer 2 Service Request 1 */
#define SRC_VADCCG0SR0	(*( SRC_AGBT_type *) 0xf0038750u)	/* EVADC Common Group 0 Service Request 0 */
#define SRC_VADCCG0SR1	(*( SRC_AGBT_type *) 0xf0038754u)	/* EVADC Common Group 0 Service Request 1 */
#define SRC_VADCCG0SR2	(*( SRC_AGBT_type *) 0xf0038758u)	/* EVADC Common Group 0 Service Request 2 */
#define SRC_VADCCG0SR3	(*( SRC_AGBT_type *) 0xf003875cu)	/* EVADC Common Group 0 Service Request 3 */
#define SRC_VADCCG1SR0	(*( SRC_AGBT_type *) 0xf0038760u)	/* EVADC Common Group 1 Service Request 0 */
#define SRC_VADCCG1SR1	(*( SRC_AGBT_type *) 0xf0038764u)	/* EVADC Common Group 1 Service Request 1 */
#define SRC_VADCCG1SR2	(*( SRC_AGBT_type *) 0xf0038768u)	/* EVADC Common Group 1 Service Request 2 */
#define SRC_VADCCG1SR3	(*( SRC_AGBT_type *) 0xf003876cu)	/* EVADC Common Group 1 Service Request 3 */
#define SRC_VADCG0SR0	(*( SRC_AGBT_type *) 0xf0038670u)	/* EVADC Group 0 Service Request 0 */
#define SRC_VADCG0SR1	(*( SRC_AGBT_type *) 0xf0038674u)	/* EVADC Group 0 Service Request 1 */
#define SRC_VADCG0SR2	(*( SRC_AGBT_type *) 0xf0038678u)	/* EVADC Group 0 Service Request 2 */
#define SRC_VADCG0SR3	(*( SRC_AGBT_type *) 0xf003867cu)	/* EVADC Group 0 Service Request 3 */
#define SRC_VADCG1SR0	(*( SRC_AGBT_type *) 0xf0038680u)	/* EVADC Group 1 Service Request 0 */
#define SRC_VADCG1SR1	(*( SRC_AGBT_type *) 0xf0038684u)	/* EVADC Group 1 Service Request 1 */
#define SRC_VADCG1SR2	(*( SRC_AGBT_type *) 0xf0038688u)	/* EVADC Group 1 Service Request 2 */
#define SRC_VADCG1SR3	(*( SRC_AGBT_type *) 0xf003868cu)	/* EVADC Group 1 Service Request 3 */
#define SRC_XBAR0	(*( SRC_AGBT_type *) 0xf0038030u)	/* SRI Domain 0 Service Request */


/* LMU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} LMU0_ACCEN0_type;
#define LMU0_ACCEN0	(*( LMU0_ACCEN0_type *) 0xf8100010u)	/* LMU Access Enable Register 0 */
#define LMU1_ACCEN0	(*( LMU0_ACCEN0_type *) 0xf8110010u)	/* LMU Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN32           : 1;	/* Access Enable for Master TAG ID 32 */
		unsigned int EN33           : 1;	/* Access Enable for Master TAG ID 33 */
		unsigned int EN34           : 1;	/* Access Enable for Master TAG ID 34 */
		unsigned int EN35           : 1;	/* Access Enable for Master TAG ID 35 */
		unsigned int EN36           : 1;	/* Access Enable for Master TAG ID 36 */
		unsigned int EN37           : 1;	/* Access Enable for Master TAG ID 37 */
		unsigned int EN38           : 1;	/* Access Enable for Master TAG ID 38 */
		unsigned int EN39           : 1;	/* Access Enable for Master TAG ID 39 */
		unsigned int EN40           : 1;	/* Access Enable for Master TAG ID 40 */
		unsigned int EN41           : 1;	/* Access Enable for Master TAG ID 41 */
		unsigned int EN42           : 1;	/* Access Enable for Master TAG ID 42 */
		unsigned int EN43           : 1;	/* Access Enable for Master TAG ID 43 */
		unsigned int EN44           : 1;	/* Access Enable for Master TAG ID 44 */
		unsigned int EN45           : 1;	/* Access Enable for Master TAG ID 45 */
		unsigned int EN46           : 1;	/* Access Enable for Master TAG ID 46 */
		unsigned int EN47           : 1;	/* Access Enable for Master TAG ID 47 */
		unsigned int EN48           : 1;	/* Access Enable for Master TAG ID 48 */
		unsigned int EN49           : 1;	/* Access Enable for Master TAG ID 49 */
		unsigned int EN50           : 1;	/* Access Enable for Master TAG ID 50 */
		unsigned int EN51           : 1;	/* Access Enable for Master TAG ID 51 */
		unsigned int EN52           : 1;	/* Access Enable for Master TAG ID 52 */
		unsigned int EN53           : 1;	/* Access Enable for Master TAG ID 53 */
		unsigned int EN54           : 1;	/* Access Enable for Master TAG ID 54 */
		unsigned int EN55           : 1;	/* Access Enable for Master TAG ID 55 */
		unsigned int EN56           : 1;	/* Access Enable for Master TAG ID 56 */
		unsigned int EN57           : 1;	/* Access Enable for Master TAG ID 57 */
		unsigned int EN58           : 1;	/* Access Enable for Master TAG ID 58 */
		unsigned int EN59           : 1;	/* Access Enable for Master TAG ID 59 */
		unsigned int EN60           : 1;	/* Access Enable for Master TAG ID 60 */
		unsigned int EN61           : 1;	/* Access Enable for Master TAG ID 61 */
		unsigned int EN62           : 1;	/* Access Enable for Master TAG ID 62 */
		unsigned int EN63           : 1;	/* Access Enable for Master TAG ID 63 */
	} B;
	int I;
	unsigned int U;

} LMU0_ACCEN1_type;
#define LMU0_ACCEN1	(*( LMU0_ACCEN1_type *) 0xf8100014u)	/* LMU Access Enable Register 1 */
#define LMU1_ACCEN1	(*( LMU0_ACCEN1_type *) 0xf8110014u)	/* LMU Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* LMU_instance_nameDisable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* LMU_instance_nameDisable Status Bit */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} LMU0_CLC_type;
#define LMU0_CLC	(*( LMU0_CLC_type *) 0xf8100000u)	/* LMU Clock Control Register */
#define LMU1_CLC	(*( LMU0_CLC_type *) 0xf8110000u)	/* LMU Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int INTERR         : 1;	/* Internal ECC Error */
		unsigned int                : 1;
		unsigned int RMWERR         : 1;	/* Internal Read Modify Write Error */
		unsigned int                : 1;
		unsigned int DATAERR        : 1;	/* SRI Data Phase ECC Error */
		unsigned int ADDERR         : 1;	/* SRI Address Phase ECC Error */
		unsigned int PMIC           : 1;	/* Protection Bit for Memory Integrity Control Bit */
		unsigned int ERRDIS         : 1;	/* ECC Error Disable */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} LMU0_MEMCON_type;
#define LMU0_MEMCON	(*( LMU0_MEMCON_type *) 0xf8100020u)	/* LMU Memory Control Register */
#define LMU1_MEMCON	(*( LMU0_MEMCON_type *) 0xf8110020u)	/* LMU Memory Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ID_VALUE       : 32;	/* Module Identification Value */
	} B;
	int I;
	unsigned int U;

} LMU0_MODID_type;
#define LMU0_MODID	(*( LMU0_MODID_type *) 0xf8100008u)	/* LMU Module ID Register */
#define LMU1_MODID	(*( LMU0_MODID_type *) 0xf8110008u)	/* LMU Module ID Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} LMU0_RGNACCENRA0_type;
#define LMU0_RGNACCENRA0	(*( LMU0_RGNACCENRA0_type *) 0xf8100158u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA1	(*( LMU0_RGNACCENRA0_type *) 0xf8100168u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA10	(*( LMU0_RGNACCENRA0_type *) 0xf81001f8u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA11	(*( LMU0_RGNACCENRA0_type *) 0xf8100208u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA12	(*( LMU0_RGNACCENRA0_type *) 0xf8100218u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA13	(*( LMU0_RGNACCENRA0_type *) 0xf8100228u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA14	(*( LMU0_RGNACCENRA0_type *) 0xf8100238u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA15	(*( LMU0_RGNACCENRA0_type *) 0xf8100248u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA2	(*( LMU0_RGNACCENRA0_type *) 0xf8100178u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA3	(*( LMU0_RGNACCENRA0_type *) 0xf8100188u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA4	(*( LMU0_RGNACCENRA0_type *) 0xf8100198u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA5	(*( LMU0_RGNACCENRA0_type *) 0xf81001a8u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA6	(*( LMU0_RGNACCENRA0_type *) 0xf81001b8u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA7	(*( LMU0_RGNACCENRA0_type *) 0xf81001c8u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA8	(*( LMU0_RGNACCENRA0_type *) 0xf81001d8u)	/* LMU Region Read Access Enable Register A */
#define LMU0_RGNACCENRA9	(*( LMU0_RGNACCENRA0_type *) 0xf81001e8u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA0	(*( LMU0_RGNACCENRA0_type *) 0xf8110158u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA1	(*( LMU0_RGNACCENRA0_type *) 0xf8110168u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA10	(*( LMU0_RGNACCENRA0_type *) 0xf81101f8u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA11	(*( LMU0_RGNACCENRA0_type *) 0xf8110208u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA12	(*( LMU0_RGNACCENRA0_type *) 0xf8110218u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA13	(*( LMU0_RGNACCENRA0_type *) 0xf8110228u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA14	(*( LMU0_RGNACCENRA0_type *) 0xf8110238u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA15	(*( LMU0_RGNACCENRA0_type *) 0xf8110248u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA2	(*( LMU0_RGNACCENRA0_type *) 0xf8110178u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA3	(*( LMU0_RGNACCENRA0_type *) 0xf8110188u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA4	(*( LMU0_RGNACCENRA0_type *) 0xf8110198u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA5	(*( LMU0_RGNACCENRA0_type *) 0xf81101a8u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA6	(*( LMU0_RGNACCENRA0_type *) 0xf81101b8u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA7	(*( LMU0_RGNACCENRA0_type *) 0xf81101c8u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA8	(*( LMU0_RGNACCENRA0_type *) 0xf81101d8u)	/* LMU Region Read Access Enable Register A */
#define LMU1_RGNACCENRA9	(*( LMU0_RGNACCENRA0_type *) 0xf81101e8u)	/* LMU Region Read Access Enable Register A */

typedef volatile union
{
	struct
	{ 
		unsigned int EN32           : 1;	/* Access Enable for Master TAG ID 32 */
		unsigned int EN33           : 1;	/* Access Enable for Master TAG ID 33 */
		unsigned int EN34           : 1;	/* Access Enable for Master TAG ID 34 */
		unsigned int EN35           : 1;	/* Access Enable for Master TAG ID 35 */
		unsigned int EN36           : 1;	/* Access Enable for Master TAG ID 36 */
		unsigned int EN37           : 1;	/* Access Enable for Master TAG ID 37 */
		unsigned int EN38           : 1;	/* Access Enable for Master TAG ID 38 */
		unsigned int EN39           : 1;	/* Access Enable for Master TAG ID 39 */
		unsigned int EN40           : 1;	/* Access Enable for Master TAG ID 40 */
		unsigned int EN41           : 1;	/* Access Enable for Master TAG ID 41 */
		unsigned int EN42           : 1;	/* Access Enable for Master TAG ID 42 */
		unsigned int EN43           : 1;	/* Access Enable for Master TAG ID 43 */
		unsigned int EN44           : 1;	/* Access Enable for Master TAG ID 44 */
		unsigned int EN45           : 1;	/* Access Enable for Master TAG ID 45 */
		unsigned int EN46           : 1;	/* Access Enable for Master TAG ID 46 */
		unsigned int EN47           : 1;	/* Access Enable for Master TAG ID 47 */
		unsigned int EN48           : 1;	/* Access Enable for Master TAG ID 48 */
		unsigned int EN49           : 1;	/* Access Enable for Master TAG ID 49 */
		unsigned int EN50           : 1;	/* Access Enable for Master TAG ID 50 */
		unsigned int EN51           : 1;	/* Access Enable for Master TAG ID 51 */
		unsigned int EN52           : 1;	/* Access Enable for Master TAG ID 52 */
		unsigned int EN53           : 1;	/* Access Enable for Master TAG ID 53 */
		unsigned int EN54           : 1;	/* Access Enable for Master TAG ID 54 */
		unsigned int EN55           : 1;	/* Access Enable for Master TAG ID 55 */
		unsigned int EN56           : 1;	/* Access Enable for Master TAG ID 56 */
		unsigned int EN57           : 1;	/* Access Enable for Master TAG ID 57 */
		unsigned int EN58           : 1;	/* Access Enable for Master TAG ID 58 */
		unsigned int EN59           : 1;	/* Access Enable for Master TAG ID 59 */
		unsigned int EN60           : 1;	/* Access Enable for Master TAG ID 60 */
		unsigned int EN61           : 1;	/* Access Enable for Master TAG ID 61 */
		unsigned int EN62           : 1;	/* Access Enable for Master TAG ID 62 */
		unsigned int EN63           : 1;	/* Access Enable for Master TAG ID 63 */
	} B;
	int I;
	unsigned int U;

} LMU0_RGNACCENRB0_type;
#define LMU0_RGNACCENRB0	(*( LMU0_RGNACCENRB0_type *) 0xf810015cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB1	(*( LMU0_RGNACCENRB0_type *) 0xf810016cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB10	(*( LMU0_RGNACCENRB0_type *) 0xf81001fcu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB11	(*( LMU0_RGNACCENRB0_type *) 0xf810020cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB12	(*( LMU0_RGNACCENRB0_type *) 0xf810021cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB13	(*( LMU0_RGNACCENRB0_type *) 0xf810022cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB14	(*( LMU0_RGNACCENRB0_type *) 0xf810023cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB15	(*( LMU0_RGNACCENRB0_type *) 0xf810024cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB2	(*( LMU0_RGNACCENRB0_type *) 0xf810017cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB3	(*( LMU0_RGNACCENRB0_type *) 0xf810018cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB4	(*( LMU0_RGNACCENRB0_type *) 0xf810019cu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB5	(*( LMU0_RGNACCENRB0_type *) 0xf81001acu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB6	(*( LMU0_RGNACCENRB0_type *) 0xf81001bcu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB7	(*( LMU0_RGNACCENRB0_type *) 0xf81001ccu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB8	(*( LMU0_RGNACCENRB0_type *) 0xf81001dcu)	/* LMU Region Read Access Enable Register B */
#define LMU0_RGNACCENRB9	(*( LMU0_RGNACCENRB0_type *) 0xf81001ecu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB0	(*( LMU0_RGNACCENRB0_type *) 0xf811015cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB1	(*( LMU0_RGNACCENRB0_type *) 0xf811016cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB10	(*( LMU0_RGNACCENRB0_type *) 0xf81101fcu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB11	(*( LMU0_RGNACCENRB0_type *) 0xf811020cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB12	(*( LMU0_RGNACCENRB0_type *) 0xf811021cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB13	(*( LMU0_RGNACCENRB0_type *) 0xf811022cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB14	(*( LMU0_RGNACCENRB0_type *) 0xf811023cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB15	(*( LMU0_RGNACCENRB0_type *) 0xf811024cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB2	(*( LMU0_RGNACCENRB0_type *) 0xf811017cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB3	(*( LMU0_RGNACCENRB0_type *) 0xf811018cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB4	(*( LMU0_RGNACCENRB0_type *) 0xf811019cu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB5	(*( LMU0_RGNACCENRB0_type *) 0xf81101acu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB6	(*( LMU0_RGNACCENRB0_type *) 0xf81101bcu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB7	(*( LMU0_RGNACCENRB0_type *) 0xf81101ccu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB8	(*( LMU0_RGNACCENRB0_type *) 0xf81101dcu)	/* LMU Region Read Access Enable Register B */
#define LMU1_RGNACCENRB9	(*( LMU0_RGNACCENRB0_type *) 0xf81101ecu)	/* LMU Region Read Access Enable Register B */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} LMU0_RGNACCENWA0_type;
#define LMU0_RGNACCENWA0	(*( LMU0_RGNACCENWA0_type *) 0xf8100058u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA1	(*( LMU0_RGNACCENWA0_type *) 0xf8100068u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA10	(*( LMU0_RGNACCENWA0_type *) 0xf81000f8u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA11	(*( LMU0_RGNACCENWA0_type *) 0xf8100108u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA12	(*( LMU0_RGNACCENWA0_type *) 0xf8100118u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA13	(*( LMU0_RGNACCENWA0_type *) 0xf8100128u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA14	(*( LMU0_RGNACCENWA0_type *) 0xf8100138u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA15	(*( LMU0_RGNACCENWA0_type *) 0xf8100148u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA2	(*( LMU0_RGNACCENWA0_type *) 0xf8100078u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA3	(*( LMU0_RGNACCENWA0_type *) 0xf8100088u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA4	(*( LMU0_RGNACCENWA0_type *) 0xf8100098u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA5	(*( LMU0_RGNACCENWA0_type *) 0xf81000a8u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA6	(*( LMU0_RGNACCENWA0_type *) 0xf81000b8u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA7	(*( LMU0_RGNACCENWA0_type *) 0xf81000c8u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA8	(*( LMU0_RGNACCENWA0_type *) 0xf81000d8u)	/* LMU Region Write Access Enable Register A */
#define LMU0_RGNACCENWA9	(*( LMU0_RGNACCENWA0_type *) 0xf81000e8u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA0	(*( LMU0_RGNACCENWA0_type *) 0xf8110058u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA1	(*( LMU0_RGNACCENWA0_type *) 0xf8110068u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA10	(*( LMU0_RGNACCENWA0_type *) 0xf81100f8u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA11	(*( LMU0_RGNACCENWA0_type *) 0xf8110108u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA12	(*( LMU0_RGNACCENWA0_type *) 0xf8110118u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA13	(*( LMU0_RGNACCENWA0_type *) 0xf8110128u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA14	(*( LMU0_RGNACCENWA0_type *) 0xf8110138u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA15	(*( LMU0_RGNACCENWA0_type *) 0xf8110148u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA2	(*( LMU0_RGNACCENWA0_type *) 0xf8110078u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA3	(*( LMU0_RGNACCENWA0_type *) 0xf8110088u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA4	(*( LMU0_RGNACCENWA0_type *) 0xf8110098u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA5	(*( LMU0_RGNACCENWA0_type *) 0xf81100a8u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA6	(*( LMU0_RGNACCENWA0_type *) 0xf81100b8u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA7	(*( LMU0_RGNACCENWA0_type *) 0xf81100c8u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA8	(*( LMU0_RGNACCENWA0_type *) 0xf81100d8u)	/* LMU Region Write Access Enable Register A */
#define LMU1_RGNACCENWA9	(*( LMU0_RGNACCENWA0_type *) 0xf81100e8u)	/* LMU Region Write Access Enable Register A */

typedef volatile union
{
	struct
	{ 
		unsigned int EN32           : 1;	/* Access Enable for Master TAG ID 32 */
		unsigned int EN33           : 1;	/* Access Enable for Master TAG ID 33 */
		unsigned int EN34           : 1;	/* Access Enable for Master TAG ID 34 */
		unsigned int EN35           : 1;	/* Access Enable for Master TAG ID 35 */
		unsigned int EN36           : 1;	/* Access Enable for Master TAG ID 36 */
		unsigned int EN37           : 1;	/* Access Enable for Master TAG ID 37 */
		unsigned int EN38           : 1;	/* Access Enable for Master TAG ID 38 */
		unsigned int EN39           : 1;	/* Access Enable for Master TAG ID 39 */
		unsigned int EN40           : 1;	/* Access Enable for Master TAG ID 40 */
		unsigned int EN41           : 1;	/* Access Enable for Master TAG ID 41 */
		unsigned int EN42           : 1;	/* Access Enable for Master TAG ID 42 */
		unsigned int EN43           : 1;	/* Access Enable for Master TAG ID 43 */
		unsigned int EN44           : 1;	/* Access Enable for Master TAG ID 44 */
		unsigned int EN45           : 1;	/* Access Enable for Master TAG ID 45 */
		unsigned int EN46           : 1;	/* Access Enable for Master TAG ID 46 */
		unsigned int EN47           : 1;	/* Access Enable for Master TAG ID 47 */
		unsigned int EN48           : 1;	/* Access Enable for Master TAG ID 48 */
		unsigned int EN49           : 1;	/* Access Enable for Master TAG ID 49 */
		unsigned int EN50           : 1;	/* Access Enable for Master TAG ID 50 */
		unsigned int EN51           : 1;	/* Access Enable for Master TAG ID 51 */
		unsigned int EN52           : 1;	/* Access Enable for Master TAG ID 52 */
		unsigned int EN53           : 1;	/* Access Enable for Master TAG ID 53 */
		unsigned int EN54           : 1;	/* Access Enable for Master TAG ID 54 */
		unsigned int EN55           : 1;	/* Access Enable for Master TAG ID 55 */
		unsigned int EN56           : 1;	/* Access Enable for Master TAG ID 56 */
		unsigned int EN57           : 1;	/* Access Enable for Master TAG ID 57 */
		unsigned int EN58           : 1;	/* Access Enable for Master TAG ID 58 */
		unsigned int EN59           : 1;	/* Access Enable for Master TAG ID 59 */
		unsigned int EN60           : 1;	/* Access Enable for Master TAG ID 60 */
		unsigned int EN61           : 1;	/* Access Enable for Master TAG ID 61 */
		unsigned int EN62           : 1;	/* Access Enable for Master TAG ID 62 */
		unsigned int EN63           : 1;	/* Access Enable for Master TAG ID 63 */
	} B;
	int I;
	unsigned int U;

} LMU0_RGNACCENWB0_type;
#define LMU0_RGNACCENWB0	(*( LMU0_RGNACCENWB0_type *) 0xf810005cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB1	(*( LMU0_RGNACCENWB0_type *) 0xf810006cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB10	(*( LMU0_RGNACCENWB0_type *) 0xf81000fcu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB11	(*( LMU0_RGNACCENWB0_type *) 0xf810010cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB12	(*( LMU0_RGNACCENWB0_type *) 0xf810011cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB13	(*( LMU0_RGNACCENWB0_type *) 0xf810012cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB14	(*( LMU0_RGNACCENWB0_type *) 0xf810013cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB15	(*( LMU0_RGNACCENWB0_type *) 0xf810014cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB2	(*( LMU0_RGNACCENWB0_type *) 0xf810007cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB3	(*( LMU0_RGNACCENWB0_type *) 0xf810008cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB4	(*( LMU0_RGNACCENWB0_type *) 0xf810009cu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB5	(*( LMU0_RGNACCENWB0_type *) 0xf81000acu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB6	(*( LMU0_RGNACCENWB0_type *) 0xf81000bcu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB7	(*( LMU0_RGNACCENWB0_type *) 0xf81000ccu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB8	(*( LMU0_RGNACCENWB0_type *) 0xf81000dcu)	/* LMU Region Write Access Enable Register B */
#define LMU0_RGNACCENWB9	(*( LMU0_RGNACCENWB0_type *) 0xf81000ecu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB0	(*( LMU0_RGNACCENWB0_type *) 0xf811005cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB1	(*( LMU0_RGNACCENWB0_type *) 0xf811006cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB10	(*( LMU0_RGNACCENWB0_type *) 0xf81100fcu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB11	(*( LMU0_RGNACCENWB0_type *) 0xf811010cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB12	(*( LMU0_RGNACCENWB0_type *) 0xf811011cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB13	(*( LMU0_RGNACCENWB0_type *) 0xf811012cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB14	(*( LMU0_RGNACCENWB0_type *) 0xf811013cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB15	(*( LMU0_RGNACCENWB0_type *) 0xf811014cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB2	(*( LMU0_RGNACCENWB0_type *) 0xf811007cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB3	(*( LMU0_RGNACCENWB0_type *) 0xf811008cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB4	(*( LMU0_RGNACCENWB0_type *) 0xf811009cu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB5	(*( LMU0_RGNACCENWB0_type *) 0xf81100acu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB6	(*( LMU0_RGNACCENWB0_type *) 0xf81100bcu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB7	(*( LMU0_RGNACCENWB0_type *) 0xf81100ccu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB8	(*( LMU0_RGNACCENWB0_type *) 0xf81100dcu)	/* LMU Region Write Access Enable Register B */
#define LMU1_RGNACCENWB9	(*( LMU0_RGNACCENWB0_type *) 0xf81100ecu)	/* LMU Region Write Access Enable Register B */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 5;
		unsigned int ADDR           : 27;	/* Region Lower Address */
	} B;
	int I;
	unsigned int U;

} LMU0_RGNLA0_type;
#define LMU0_RGNLA0	(*( LMU0_RGNLA0_type *) 0xf8100050u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA1	(*( LMU0_RGNLA0_type *) 0xf8100060u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA10	(*( LMU0_RGNLA0_type *) 0xf81000f0u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA11	(*( LMU0_RGNLA0_type *) 0xf8100100u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA12	(*( LMU0_RGNLA0_type *) 0xf8100110u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA13	(*( LMU0_RGNLA0_type *) 0xf8100120u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA14	(*( LMU0_RGNLA0_type *) 0xf8100130u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA15	(*( LMU0_RGNLA0_type *) 0xf8100140u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA2	(*( LMU0_RGNLA0_type *) 0xf8100070u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA3	(*( LMU0_RGNLA0_type *) 0xf8100080u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA4	(*( LMU0_RGNLA0_type *) 0xf8100090u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA5	(*( LMU0_RGNLA0_type *) 0xf81000a0u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA6	(*( LMU0_RGNLA0_type *) 0xf81000b0u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA7	(*( LMU0_RGNLA0_type *) 0xf81000c0u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA8	(*( LMU0_RGNLA0_type *) 0xf81000d0u)	/* LMU Region Lower Address Register */
#define LMU0_RGNLA9	(*( LMU0_RGNLA0_type *) 0xf81000e0u)	/* LMU Region Lower Address Register */
#define LMU0_RGNUA0	(*( LMU0_RGNLA0_type *) 0xf8100054u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA1	(*( LMU0_RGNLA0_type *) 0xf8100064u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA10	(*( LMU0_RGNLA0_type *) 0xf81000f4u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA11	(*( LMU0_RGNLA0_type *) 0xf8100104u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA12	(*( LMU0_RGNLA0_type *) 0xf8100114u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA13	(*( LMU0_RGNLA0_type *) 0xf8100124u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA14	(*( LMU0_RGNLA0_type *) 0xf8100134u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA15	(*( LMU0_RGNLA0_type *) 0xf8100144u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA2	(*( LMU0_RGNLA0_type *) 0xf8100074u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA3	(*( LMU0_RGNLA0_type *) 0xf8100084u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA4	(*( LMU0_RGNLA0_type *) 0xf8100094u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA5	(*( LMU0_RGNLA0_type *) 0xf81000a4u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA6	(*( LMU0_RGNLA0_type *) 0xf81000b4u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA7	(*( LMU0_RGNLA0_type *) 0xf81000c4u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA8	(*( LMU0_RGNLA0_type *) 0xf81000d4u)	/* LMU Region Upper Address Register */
#define LMU0_RGNUA9	(*( LMU0_RGNLA0_type *) 0xf81000e4u)	/* LMU Region Upper Address Register */
#define LMU1_RGNLA0	(*( LMU0_RGNLA0_type *) 0xf8110050u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA1	(*( LMU0_RGNLA0_type *) 0xf8110060u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA10	(*( LMU0_RGNLA0_type *) 0xf81100f0u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA11	(*( LMU0_RGNLA0_type *) 0xf8110100u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA12	(*( LMU0_RGNLA0_type *) 0xf8110110u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA13	(*( LMU0_RGNLA0_type *) 0xf8110120u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA14	(*( LMU0_RGNLA0_type *) 0xf8110130u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA15	(*( LMU0_RGNLA0_type *) 0xf8110140u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA2	(*( LMU0_RGNLA0_type *) 0xf8110070u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA3	(*( LMU0_RGNLA0_type *) 0xf8110080u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA4	(*( LMU0_RGNLA0_type *) 0xf8110090u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA5	(*( LMU0_RGNLA0_type *) 0xf81100a0u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA6	(*( LMU0_RGNLA0_type *) 0xf81100b0u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA7	(*( LMU0_RGNLA0_type *) 0xf81100c0u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA8	(*( LMU0_RGNLA0_type *) 0xf81100d0u)	/* LMU Region Lower Address Register */
#define LMU1_RGNLA9	(*( LMU0_RGNLA0_type *) 0xf81100e0u)	/* LMU Region Lower Address Register */
#define LMU1_RGNUA0	(*( LMU0_RGNLA0_type *) 0xf8110054u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA1	(*( LMU0_RGNLA0_type *) 0xf8110064u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA10	(*( LMU0_RGNLA0_type *) 0xf81100f4u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA11	(*( LMU0_RGNLA0_type *) 0xf8110104u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA12	(*( LMU0_RGNLA0_type *) 0xf8110114u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA13	(*( LMU0_RGNLA0_type *) 0xf8110124u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA14	(*( LMU0_RGNLA0_type *) 0xf8110134u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA15	(*( LMU0_RGNLA0_type *) 0xf8110144u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA2	(*( LMU0_RGNLA0_type *) 0xf8110074u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA3	(*( LMU0_RGNLA0_type *) 0xf8110084u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA4	(*( LMU0_RGNLA0_type *) 0xf8110094u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA5	(*( LMU0_RGNLA0_type *) 0xf81100a4u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA6	(*( LMU0_RGNLA0_type *) 0xf81100b4u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA7	(*( LMU0_RGNLA0_type *) 0xf81100c4u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA8	(*( LMU0_RGNLA0_type *) 0xf81100d4u)	/* LMU Region Upper Address Register */
#define LMU1_RGNUA9	(*( LMU0_RGNLA0_type *) 0xf81100e4u)	/* LMU Region Upper Address Register */

typedef volatile union
{
	struct
	{ 
		unsigned int GED            : 1;	/* Generate Error in ECC for Data Protection */
		unsigned int GEC            : 1;	/* Generate Error in ECC for Error Correction */
		unsigned int                : 6;
		unsigned int LSEN           : 2;	/* Lockstep Enable */
		unsigned int LSTST          : 2;	/* Lockstep Test */
		unsigned int                : 4;
		/* const */ unsigned int LSSTAT         : 2;	/* Lockstep Status */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} LMU0_SCTRL_type;
#define LMU0_SCTRL	(*( LMU0_SCTRL_type *) 0xf8100024u)	/* LMU Safety Control Register */
#define LMU1_SCTRL	(*( LMU0_SCTRL_type *) 0xf8110024u)	/* LMU Safety Control Register */


/* CAN */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} CAN0_ACCEN0_type;
#define CAN0_ACCEN0	(*( CAN0_ACCEN0_type *) 0xf02080fcu)	/* Access Enable Register 0 */
#define CAN0_ACCENCTR0	(*( CAN0_ACCEN0_type *) 0xf02080dcu)	/* Access Enable Register Control 0 */
#define CAN0_ACCENNODE00	(*( CAN0_ACCEN0_type *) 0xf0208100u)	/* Access Enable Register CAN Node 0 0 */
#define CAN0_ACCENNODE10	(*( CAN0_ACCEN0_type *) 0xf0208500u)	/* Access Enable Register CAN Node 1 0 */
#define CAN0_ACCENNODE20	(*( CAN0_ACCEN0_type *) 0xf0208900u)	/* Access Enable Register CAN Node 2 0 */
#define CAN0_ACCENNODE30	(*( CAN0_ACCEN0_type *) 0xf0208d00u)	/* Access Enable Register CAN Node 3 0 */
#define CAN1_ACCEN0	(*( CAN0_ACCEN0_type *) 0xf02180fcu)	/* Access Enable Register 0 */
#define CAN1_ACCENCTR0	(*( CAN0_ACCEN0_type *) 0xf02180dcu)	/* Access Enable Register Control 0 */
#define CAN1_ACCENNODE00	(*( CAN0_ACCEN0_type *) 0xf0218100u)	/* Access Enable Register CAN Node 0 0 */
#define CAN1_ACCENNODE10	(*( CAN0_ACCEN0_type *) 0xf0218500u)	/* Access Enable Register CAN Node 1 0 */
#define CAN1_ACCENNODE20	(*( CAN0_ACCEN0_type *) 0xf0218900u)	/* Access Enable Register CAN Node 2 0 */
#define CAN1_ACCENNODE30	(*( CAN0_ACCEN0_type *) 0xf0218d00u)	/* Access Enable Register CAN Node 3 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int TXBUF          : 14;	/* Transmit Buffer start address */
		unsigned int                : 2;
		unsigned int RXBUF          : 14;	/* Receive Buffer start address */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} CAN0_BUFADR_type;
#define CAN0_BUFADR	(*( CAN0_BUFADR_type *) 0xf0208034u)	/* Buffer receive address and transmit address */

typedef volatile union
{
	struct
	{ 
		unsigned int INIT           : 1;	/* Initialization */
		unsigned int CCE            : 1;	/* Configuration Change Enable */
		unsigned int ASM            : 1;	/* Restricted Operation Mode */
		/* const */ unsigned int CSA            : 1;	/* Clock Stop Acknowledge */
		unsigned int CSR            : 1;	/* Clock Stop Request */
		unsigned int MON            : 1;	/* Bus Monitoring Mode */
		unsigned int DAR            : 1;	/* Disable Automatic Retransmission */
		unsigned int TEST           : 1;	/* Test Mode Enable */
		unsigned int FDOE           : 1;	/* FD Operation Enable */
		unsigned int BRSE           : 1;	/* Bit Rate Switch Enable */
		unsigned int                : 2;
		unsigned int PXHD           : 1;	/* Protocol Exception Handling Disable */
		unsigned int EFBI           : 1;	/* Edge Filtering during Bus Integration */
		unsigned int TXP            : 1;	/* Transmit Pause */
		unsigned int NISO           : 1;	/* Non ISO Operation */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_CCCR0_type;
#define CAN0_CCCR0	(*( CAN0_CCCR0_type *) 0xf0208218u)	/* CC Control Register 0 */
#define CAN0_CCCR1	(*( CAN0_CCCR0_type *) 0xf0208618u)	/* CC Control Register 1 */
#define CAN0_CCCR2	(*( CAN0_CCCR0_type *) 0xf0208a18u)	/* CC Control Register 2 */
#define CAN0_CCCR3	(*( CAN0_CCCR0_type *) 0xf0208e18u)	/* CC Control Register 3 */
#define CAN1_CCCR0	(*( CAN0_CCCR0_type *) 0xf0218218u)	/* CC Control Register 0 */
#define CAN1_CCCR1	(*( CAN0_CCCR0_type *) 0xf0218618u)	/* CC Control Register 1 */
#define CAN1_CCCR2	(*( CAN0_CCCR0_type *) 0xf0218a18u)	/* CC Control Register 2 */
#define CAN1_CCCR3	(*( CAN0_CCCR0_type *) 0xf0218e18u)	/* CC Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Disable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} CAN0_CLC_type;
#define CAN0_CLC	(*( CAN0_CLC_type *) 0xf0208000u)	/* CAN Clock Control Register */
#define CAN1_CLC	(*( CAN0_CLC_type *) 0xf0218000u)	/* CAN Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DAY            : 8;	/* Time Stamp Day */
		/* const */ unsigned int MON            : 8;	/* Time Stamp Month */
		/* const */ unsigned int YEAR           : 4;	/* Time Stamp Year */
		/* const */ unsigned int SUBSTEP        : 4;	/* Sub-step of Core Release */
		/* const */ unsigned int STEP           : 4;	/* Step of Core Release */
		/* const */ unsigned int REL            : 4;	/* Core Release */
	} B;
	int I;
	unsigned int U;

} CAN0_CREL0_type;
#define CAN0_CREL0	(*( CAN0_CREL0_type *) 0xf0208200u)	/* Core Release Register 0 */
#define CAN0_CREL1	(*( CAN0_CREL0_type *) 0xf0208600u)	/* Core Release Register 1 */
#define CAN0_CREL2	(*( CAN0_CREL0_type *) 0xf0208a00u)	/* Core Release Register 2 */
#define CAN0_CREL3	(*( CAN0_CREL0_type *) 0xf0208e00u)	/* Core Release Register 3 */
#define CAN1_CREL0	(*( CAN0_CREL0_type *) 0xf0218200u)	/* Core Release Register 0 */
#define CAN1_CREL1	(*( CAN0_CREL0_type *) 0xf0218600u)	/* Core Release Register 1 */
#define CAN1_CREL2	(*( CAN0_CREL0_type *) 0xf0218a00u)	/* Core Release Register 2 */
#define CAN1_CREL3	(*( CAN0_CREL0_type *) 0xf0218e00u)	/* Core Release Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int DSJW           : 4;	/* Data (Re) Synchronization Jump Width */
		unsigned int DTSEG2         : 4;	/* Data time segment after sample point */
		unsigned int DTSEG1         : 5;	/* Data time segment before sample point */
		unsigned int                : 3;
		unsigned int DBRP           : 5;	/* Data Baud Rate Prescaler */
		unsigned int                : 2;
		unsigned int TDC            : 1;	/* Transmitter Delay Compensation */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN0_DBTP0_type;
#define CAN0_DBTP0	(*( CAN0_DBTP0_type *) 0xf020820cu)	/* Data Bit Timing 'and' Prescaler Register 0 */
#define CAN0_DBTP1	(*( CAN0_DBTP0_type *) 0xf020860cu)	/* Data Bit Timing 'and' Prescaler Register 1 */
#define CAN0_DBTP2	(*( CAN0_DBTP0_type *) 0xf0208a0cu)	/* Data Bit Timing 'and' Prescaler Register 2 */
#define CAN0_DBTP3	(*( CAN0_DBTP0_type *) 0xf0208e0cu)	/* Data Bit Timing 'and' Prescaler Register 3 */
#define CAN1_DBTP0	(*( CAN0_DBTP0_type *) 0xf021820cu)	/* Data Bit Timing 'and' Prescaler Register 0 */
#define CAN1_DBTP1	(*( CAN0_DBTP0_type *) 0xf021860cu)	/* Data Bit Timing 'and' Prescaler Register 1 */
#define CAN1_DBTP2	(*( CAN0_DBTP0_type *) 0xf0218a0cu)	/* Data Bit Timing 'and' Prescaler Register 2 */
#define CAN1_DBTP3	(*( CAN0_DBTP0_type *) 0xf0218e0cu)	/* Data Bit Timing 'and' Prescaler Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TEC            : 8;	/* Transmit Error Counter */
		/* const */ unsigned int REC            : 7;	/* Receive Error Counter */
		/* const */ unsigned int RP             : 1;	/* Receive Error Passive */
		/* const */ unsigned int CEL            : 8;	/* CAN Error Logging */
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN0_ECR0_type;
#define CAN0_ECR0	(*( CAN0_ECR0_type *) 0xf0208240u)	/* Error Counter Register 0 */
#define CAN0_ECR1	(*( CAN0_ECR0_type *) 0xf0208640u)	/* Error Counter Register 1 */
#define CAN0_ECR2	(*( CAN0_ECR0_type *) 0xf0208a40u)	/* Error Counter Register 2 */
#define CAN0_ECR3	(*( CAN0_ECR0_type *) 0xf0208e40u)	/* Error Counter Register 3 */
#define CAN1_ECR0	(*( CAN0_ECR0_type *) 0xf0218240u)	/* Error Counter Register 0 */
#define CAN1_ECR1	(*( CAN0_ECR0_type *) 0xf0218640u)	/* Error Counter Register 1 */
#define CAN1_ECR2	(*( CAN0_ECR0_type *) 0xf0218a40u)	/* Error Counter Register 2 */
#define CAN1_ECR3	(*( CAN0_ECR0_type *) 0xf0218e40u)	/* Error Counter Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int END            : 14;	/* Message RAM end */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_ENDADR0_type;
#define CAN0_ENDADR0	(*( CAN0_ENDADR0_type *) 0xf020810cu)	/* End Address Node 0 */
#define CAN0_ENDADR1	(*( CAN0_ENDADR0_type *) 0xf020850cu)	/* End Address Node 1 */
#define CAN0_ENDADR2	(*( CAN0_ENDADR0_type *) 0xf020890cu)	/* End Address Node 2 */
#define CAN0_ENDADR3	(*( CAN0_ENDADR0_type *) 0xf0208d0cu)	/* End Address Node 3 */
#define CAN1_ENDADR0	(*( CAN0_ENDADR0_type *) 0xf021810cu)	/* End Address Node 0 */
#define CAN1_ENDADR1	(*( CAN0_ENDADR0_type *) 0xf021850cu)	/* End Address Node 1 */
#define CAN1_ENDADR2	(*( CAN0_ENDADR0_type *) 0xf021890cu)	/* End Address Node 2 */
#define CAN1_ENDADR3	(*( CAN0_ENDADR0_type *) 0xf0218d0cu)	/* End Address Node 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ETV            : 32;	/* Endianness Test Value */
	} B;
	int I;
	unsigned int U;

} CAN0_ENDN0_type;
#define CAN0_ENDN0	(*( CAN0_ENDN0_type *) 0xf0208204u)	/* Endian Register 0 */
#define CAN0_ENDN1	(*( CAN0_ENDN0_type *) 0xf0208604u)	/* Endian Register 1 */
#define CAN0_ENDN2	(*( CAN0_ENDN0_type *) 0xf0208a04u)	/* Endian Register 2 */
#define CAN0_ENDN3	(*( CAN0_ENDN0_type *) 0xf0208e04u)	/* Endian Register 3 */
#define CAN1_ENDN0	(*( CAN0_ENDN0_type *) 0xf0218204u)	/* Endian Register 0 */
#define CAN1_ENDN1	(*( CAN0_ENDN0_type *) 0xf0218604u)	/* Endian Register 1 */
#define CAN1_ENDN2	(*( CAN0_ENDN0_type *) 0xf0218a04u)	/* Endian Register 2 */
#define CAN1_ENDN3	(*( CAN0_ENDN0_type *) 0xf0218e04u)	/* Endian Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int RRFE           : 1;	/* Reject Remote Frames Extended */
		unsigned int RRFS           : 1;	/* Reject Remote Frames Standard */
		unsigned int ANFE           : 2;	/* Accept Non-matching Frames Extended */
		unsigned int ANFS           : 2;	/* Accept Non-matching Frames Standard */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN0_GFC0_type;
#define CAN0_GFC0	(*( CAN0_GFC0_type *) 0xf0208280u)	/* Global Filter Configuration 0 */
#define CAN0_GFC1	(*( CAN0_GFC0_type *) 0xf0208680u)	/* Global Filter Configuration 1 */
#define CAN0_GFC2	(*( CAN0_GFC0_type *) 0xf0208a80u)	/* Global Filter Configuration 2 */
#define CAN0_GFC3	(*( CAN0_GFC0_type *) 0xf0208e80u)	/* Global Filter Configuration 3 */
#define CAN1_GFC0	(*( CAN0_GFC0_type *) 0xf0218280u)	/* Global Filter Configuration 0 */
#define CAN1_GFC1	(*( CAN0_GFC0_type *) 0xf0218680u)	/* Global Filter Configuration 1 */
#define CAN1_GFC2	(*( CAN0_GFC0_type *) 0xf0218a80u)	/* Global Filter Configuration 2 */
#define CAN1_GFC3	(*( CAN0_GFC0_type *) 0xf0218e80u)	/* Global Filter Configuration 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TEFIFO         : 4;	/* Transmit Event FIFO Incidents */
		unsigned int HPE            : 4;	/* High Priority Events */
		unsigned int WATI           : 4;	/* Watermark interrupts */
		unsigned int ALRT           : 4;	/* ALERTS */
		unsigned int MOER           : 4;	/* Module errors */
		unsigned int SAFE           : 4;	/* Safety counter overflow */
		unsigned int BOFF           : 4;	/* Bus Off has been reached */
		unsigned int LOI            : 4;	/* Last Error Interrupts */
	} B;
	int I;
	unsigned int U;

} CAN0_GRINT10_type;
#define CAN0_GRINT10	(*( CAN0_GRINT10_type *) 0xf0208114u)	/* Interrupt routing for Groups 1 0 */
#define CAN0_GRINT11	(*( CAN0_GRINT10_type *) 0xf0208514u)	/* Interrupt routing for Groups 1 1 */
#define CAN0_GRINT12	(*( CAN0_GRINT10_type *) 0xf0208914u)	/* Interrupt routing for Groups 1 2 */
#define CAN0_GRINT13	(*( CAN0_GRINT10_type *) 0xf0208d14u)	/* Interrupt routing for Groups 1 3 */
#define CAN1_GRINT10	(*( CAN0_GRINT10_type *) 0xf0218114u)	/* Interrupt routing for Groups 1 0 */
#define CAN1_GRINT11	(*( CAN0_GRINT10_type *) 0xf0218514u)	/* Interrupt routing for Groups 1 1 */
#define CAN1_GRINT12	(*( CAN0_GRINT10_type *) 0xf0218914u)	/* Interrupt routing for Groups 1 2 */
#define CAN1_GRINT13	(*( CAN0_GRINT10_type *) 0xf0218d14u)	/* Interrupt routing for Groups 1 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int REINT          : 4;	/* Message stored in dedicated receive buffer interrupt (IR.DRX) */
		unsigned int RxF1F          : 4;	/* IR.RF1F */
		unsigned int RxF0F          : 4;	/* IR.RF0F */
		unsigned int RxF1N          : 4;	/* IR.RF1N */
		unsigned int RxF0N          : 4;	/* IR.RF0N */
		unsigned int RETI           : 4;	/* Receive Timeouts */
		unsigned int TRAQ           : 4;	/* Transmission Queue Events */
		unsigned int TRACO          : 4;	/* Interrupts of the transmission control */
	} B;
	int I;
	unsigned int U;

} CAN0_GRINT20_type;
#define CAN0_GRINT20	(*( CAN0_GRINT20_type *) 0xf0208118u)	/* Interrupt routing for Groups 2 0 */
#define CAN0_GRINT21	(*( CAN0_GRINT20_type *) 0xf0208518u)	/* Interrupt routing for Groups 2 1 */
#define CAN0_GRINT22	(*( CAN0_GRINT20_type *) 0xf0208918u)	/* Interrupt routing for Groups 2 2 */
#define CAN0_GRINT23	(*( CAN0_GRINT20_type *) 0xf0208d18u)	/* Interrupt routing for Groups 2 3 */
#define CAN1_GRINT20	(*( CAN0_GRINT20_type *) 0xf0218118u)	/* Interrupt routing for Groups 2 0 */
#define CAN1_GRINT21	(*( CAN0_GRINT20_type *) 0xf0218518u)	/* Interrupt routing for Groups 2 1 */
#define CAN1_GRINT22	(*( CAN0_GRINT20_type *) 0xf0218918u)	/* Interrupt routing for Groups 2 2 */
#define CAN1_GRINT23	(*( CAN0_GRINT20_type *) 0xf0218d18u)	/* Interrupt routing for Groups 2 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BIDX           : 6;	/* Buffer Index */
		/* const */ unsigned int MSI            : 2;	/* Message Storage Indicator */
		/* const */ unsigned int FIDX           : 7;	/* Filter Index */
		/* const */ unsigned int FLST           : 1;	/* Filter List */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_HPMS0_type;
#define CAN0_HPMS0	(*( CAN0_HPMS0_type *) 0xf0208294u)	/* High Priority Message Status 0 */
#define CAN0_HPMS1	(*( CAN0_HPMS0_type *) 0xf0208694u)	/* High Priority Message Status 1 */
#define CAN0_HPMS2	(*( CAN0_HPMS0_type *) 0xf0208a94u)	/* High Priority Message Status 2 */
#define CAN0_HPMS3	(*( CAN0_HPMS0_type *) 0xf0208e94u)	/* High Priority Message Status 3 */
#define CAN1_HPMS0	(*( CAN0_HPMS0_type *) 0xf0218294u)	/* High Priority Message Status 0 */
#define CAN1_HPMS1	(*( CAN0_HPMS0_type *) 0xf0218694u)	/* High Priority Message Status 1 */
#define CAN1_HPMS2	(*( CAN0_HPMS0_type *) 0xf0218a94u)	/* High Priority Message Status 2 */
#define CAN1_HPMS3	(*( CAN0_HPMS0_type *) 0xf0218e94u)	/* High Priority Message Status 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} CAN0_ID_type;
#define CAN0_ID	(*( CAN0_ID_type *) 0xf0208008u)	/* Module Identification Register */
#define CAN1_ID	(*( CAN0_ID_type *) 0xf0218008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RF0NE          : 1;	/* Rx FIFO 0 New Message Interrupt Enable */
		unsigned int RF0WE          : 1;	/* Rx FIFO 0 Watermark Reached Interrupt Enable */
		unsigned int RF0FE          : 1;	/* Rx FIFO 0 Full Interrupt Enable */
		unsigned int RF0LE          : 1;	/* Rx FIFO 0 Message Lost Interrupt Enable */
		unsigned int RF1NE          : 1;	/* Rx FIFO 1 New Message Interrupt Enable */
		unsigned int RF1WE          : 1;	/* Rx FIFO 1 Watermark Reached Interrupt Enable */
		unsigned int RF1FE          : 1;	/* Rx FIFO 1 Full Interrupt Enable */
		unsigned int RF1LE          : 1;	/* Rx FIFO 1 Message Lost Interrupt Enable */
		unsigned int HPME           : 1;	/* High Priority Message Interrupt Enable */
		unsigned int TCE            : 1;	/* Transmission Completed Interrupt Enable */
		unsigned int TCFE           : 1;	/* Transmission Cancellation Finished Interrupt Enable */
		unsigned int TFEE           : 1;	/* Tx FIFO Empty Interrupt Enable */
		unsigned int TEFNE          : 1;	/* Tx Event FIFO New Entry Interrupt Enable */
		unsigned int TEFWE          : 1;	/* Tx Event FIFO Watermark Reached Interrupt Enable */
		unsigned int TEFFE          : 1;	/* Tx Event FIFO Full Interrupt Enable */
		unsigned int TEFLE          : 1;	/* Tx Event FIFO Element Lost Interrupt Enable */
		unsigned int TSWE           : 1;	/* Timestamp Wraparound Interrupt Enable */
		unsigned int MRAFE          : 1;	/* Message RAM Access Failure Interrupt Enable */
		unsigned int TOOE           : 1;	/* Timeout Occurred Interrupt Enable */
		unsigned int DRXE           : 1;	/* Message stored to Dedicated Rx Buffer Interrupt Enable */
		unsigned int                : 2;
		unsigned int ELOE           : 1;	/* Error Logging Overflow Interrupt Enable */
		unsigned int EPE            : 1;	/* Error Passive Interrupt Enable */
		unsigned int EWE            : 1;	/* Warning Status Interrupt Enable */
		unsigned int BOE            : 1;	/* Bus_Off Status Interrupt Enable */
		unsigned int WDIE           : 1;	/* Watchdog Interrupt Enable */
		unsigned int PEAE           : 1;	/* Protocol Error in Arbitration Phase Enable */
		unsigned int PEDE           : 1;	/* Protocol Error in Data Phase Enable */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} CAN0_IE0_type;
#define CAN0_IE0	(*( CAN0_IE0_type *) 0xf0208254u)	/* Interrupt Enable 0 */
#define CAN0_IE1	(*( CAN0_IE0_type *) 0xf0208654u)	/* Interrupt Enable 1 */
#define CAN0_IE2	(*( CAN0_IE0_type *) 0xf0208a54u)	/* Interrupt Enable 2 */
#define CAN0_IE3	(*( CAN0_IE0_type *) 0xf0208e54u)	/* Interrupt Enable 3 */
#define CAN1_IE0	(*( CAN0_IE0_type *) 0xf0218254u)	/* Interrupt Enable 0 */
#define CAN1_IE1	(*( CAN0_IE0_type *) 0xf0218654u)	/* Interrupt Enable 1 */
#define CAN1_IE2	(*( CAN0_IE0_type *) 0xf0218a54u)	/* Interrupt Enable 2 */
#define CAN1_IE3	(*( CAN0_IE0_type *) 0xf0218e54u)	/* Interrupt Enable 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int RF0N           : 1;	/* Rx FIFO 0 New Message */
		unsigned int RF0W           : 1;	/* Rx FIFO 0 Watermark Reached */
		unsigned int RF0F           : 1;	/* Rx FIFO 0 Full */
		unsigned int RF0L           : 1;	/* Rx FIFO 0 Message Lost */
		unsigned int RF1N           : 1;	/* Rx FIFO 1 New Message */
		unsigned int RF1W           : 1;	/* Rx FIFO 1 Watermark Reached */
		unsigned int RF1F           : 1;	/* Rx FIFO 1 Full */
		unsigned int RF1L           : 1;	/* Rx FIFO 1 Message Lost */
		unsigned int HPM            : 1;	/* High Priority Message */
		unsigned int TC             : 1;	/* Transmission Completed */
		unsigned int TCF            : 1;	/* Transmission Cancellation Finished */
		unsigned int TFE            : 1;	/* Tx FIFO Empty */
		unsigned int TEFN           : 1;	/* Tx Event FIFO New Entry */
		unsigned int TEFW           : 1;	/* Tx Event FIFO Watermark Reached */
		unsigned int TEFF           : 1;	/* Tx Event FIFO Full */
		unsigned int TEFL           : 1;	/* Tx Event FIFO Element Lost */
		unsigned int TSW            : 1;	/* Timestamp Wraparound */
		unsigned int MRAF           : 1;	/* Message RAM Access Failure */
		unsigned int TOO            : 1;	/* Timeout Occurred */
		unsigned int DRX            : 1;	/* Message stored to Dedicated Rx Buffer */
		unsigned int                : 2;
		unsigned int ELO            : 1;	/* Error Logging Overflow */
		unsigned int EP             : 1;	/* Error Passive */
		unsigned int EW             : 1;	/* Warning Status */
		unsigned int BO             : 1;	/* Bus_Off Status */
		unsigned int WDI            : 1;	/* Watchdog Interrupt */
		unsigned int PEA            : 1;	/* Protocol Error in Arbitration Phase */
		unsigned int PED            : 1;	/* Protocol Error in Data Phase */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} CAN0_IR0_type;
#define CAN0_IR0	(*( CAN0_IR0_type *) 0xf0208250u)	/* Interrupt Register 0 */
#define CAN0_IR1	(*( CAN0_IR0_type *) 0xf0208650u)	/* Interrupt Register 1 */
#define CAN0_IR2	(*( CAN0_IR0_type *) 0xf0208a50u)	/* Interrupt Register 2 */
#define CAN0_IR3	(*( CAN0_IR0_type *) 0xf0208e50u)	/* Interrupt Register 3 */
#define CAN1_IR0	(*( CAN0_IR0_type *) 0xf0218250u)	/* Interrupt Register 0 */
#define CAN1_IR1	(*( CAN0_IR0_type *) 0xf0218650u)	/* Interrupt Register 1 */
#define CAN1_IR2	(*( CAN0_IR0_type *) 0xf0218a50u)	/* Interrupt Register 2 */
#define CAN1_IR3	(*( CAN0_IR0_type *) 0xf0218e50u)	/* Interrupt Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REINT          : 1;	/* A message stored in a receive buffer interrupt */
		/* const */ unsigned int RxF1F          : 1;	/* Receive FIFO1 is full interrupt */
		/* const */ unsigned int RxF0F          : 1;	/* Receive FIFO0 is full interrupt */
		/* const */ unsigned int RxF1N          : 1;	/* Receive FIFO1 got a new message interrupt */
		/* const */ unsigned int RxF0N          : 1;	/* Receive FIFO0 got a new message interrupt */
		/* const */ unsigned int RETI           : 1;	/* A receive timeout event interrupt */
		/* const */ unsigned int TRAQ           : 1;	/* A transmission queue event interrupt */
		/* const */ unsigned int TRACO          : 1;	/* A transmission control event interrupt */
		/* const */ unsigned int TEFIFO         : 1;	/* A Transmit Event FIFO Incident interrupt */
		/* const */ unsigned int HPE            : 1;	/* A high priority event interrupt */
		/* const */ unsigned int WATI           : 1;	/* A watermark interrupt has been reached */
		/* const */ unsigned int ALRT           : 1;	/* An alert interrupt */
		/* const */ unsigned int MOER           : 1;	/* Module error interrupt */
		/* const */ unsigned int SAFE           : 1;	/* The safety counter interrupt ELO */
		/* const */ unsigned int BOFF           : 1;	/* Bus Off Interrupt */
		/* const */ unsigned int LOI            : 1;	/* Last Error Interrupt */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_ISREG0_type;
#define CAN0_ISREG0	(*( CAN0_ISREG0_type *) 0xf0208110u)	/* Interrupt Signalling Register 0 */
#define CAN0_ISREG1	(*( CAN0_ISREG0_type *) 0xf0208510u)	/* Interrupt Signalling Register 1 */
#define CAN0_ISREG2	(*( CAN0_ISREG0_type *) 0xf0208910u)	/* Interrupt Signalling Register 2 */
#define CAN0_ISREG3	(*( CAN0_ISREG0_type *) 0xf0208d10u)	/* Interrupt Signalling Register 3 */
#define CAN1_ISREG0	(*( CAN0_ISREG0_type *) 0xf0218110u)	/* Interrupt Signalling Register 0 */
#define CAN1_ISREG1	(*( CAN0_ISREG0_type *) 0xf0218510u)	/* Interrupt Signalling Register 1 */
#define CAN1_ISREG2	(*( CAN0_ISREG0_type *) 0xf0218910u)	/* Interrupt Signalling Register 2 */
#define CAN1_ISREG3	(*( CAN0_ISREG0_type *) 0xf0218d10u)	/* Interrupt Signalling Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} CAN0_KRST0_type;
#define CAN0_KRST0	(*( CAN0_KRST0_type *) 0xf02080f4u)	/* Kernel Reset Register 0 */
#define CAN1_KRST0	(*( CAN0_KRST0_type *) 0xf02180f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CAN0_KRST1_type;
#define CAN0_KRST1	(*( CAN0_KRST1_type *) 0xf02080f0u)	/* Kernel Reset Register 1 */
#define CAN1_KRST1	(*( CAN0_KRST1_type *) 0xf02180f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} CAN0_KRSTCLR_type;
#define CAN0_KRSTCLR	(*( CAN0_KRSTCLR_type *) 0xf02080ecu)	/* Kernel Reset Status Clear Register */
#define CAN1_KRSTCLR	(*( CAN0_KRSTCLR_type *) 0xf02180ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLKSEL0        : 2;	/* Clock Select 0 */
		unsigned int CLKSEL1        : 2;	/* Clock Select 1 */
		unsigned int CLKSEL2        : 2;	/* Clock Select 2 */
		unsigned int CLKSEL3        : 2;	/* Clock Select 3 */
		unsigned int                : 16;
		unsigned int NODE           : 3;	/* Node */
		unsigned int DXCM           : 1;	/* Debug Over CAN Messages Enable */
		/* const */ unsigned int RBUSY          : 1;	/* RAM BUSY */
		unsigned int RINIT          : 1;	/* RAM Init */
		unsigned int CI             : 1;	/* Change Init */
		unsigned int CCCE           : 1;	/* Clock and RAM Change Enable */
	} B;
	int I;
	unsigned int U;

} CAN0_MCR_type;
#define CAN0_MCR	(*( CAN0_MCR_type *) 0xf0208030u)	/* Module Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TH             : 16;	/* Threshold */
		unsigned int INP            : 4;	/* Interrupt Node Pointer */
		unsigned int NODE           : 3;	/* Node */
		unsigned int                : 1;
		unsigned int ANYED          : 1;	/* Any Edge */
		unsigned int CAPEIE         : 1;	/* Capture Event Interrupt Enable */
		unsigned int                : 1;
		unsigned int DEPTH          : 3;	/* Digital Glitch Filter Depth */
		unsigned int SOF            : 1;	/* Start Of Frame */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} CAN0_MECR_type;
#define CAN0_MECR	(*( CAN0_MECR_type *) 0xf0208040u)	/* Measure Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CAPT           : 16;	/* Captured Timer */
		/* const */ unsigned int CAPRED         : 1;	/* Captured Rising Edge */
		unsigned int CAPE           : 1;	/* Capture Event */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} CAN0_MESTAT_type;
#define CAN0_MESTAT	(*( CAN0_MESTAT_type *) 0xf0208044u)	/* Measure Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int NTSEG2         : 7;	/* Nominal Time segment after sample point */
		unsigned int                : 1;
		unsigned int NTSEG1         : 8;	/* Nominal Time segment before sample point */
		unsigned int NBRP           : 9;	/* Baud Rate Prescaler */
		unsigned int NSJW           : 7;	/* (Re) Synchronization Jump Width */
	} B;
	int I;
	unsigned int U;

} CAN0_NBTP0_type;
#define CAN0_NBTP0	(*( CAN0_NBTP0_type *) 0xf020821cu)	/* Nominal Bit Timing 'and' Prescaler Register 0 */
#define CAN0_NBTP1	(*( CAN0_NBTP0_type *) 0xf020861cu)	/* Nominal Bit Timing 'and' Prescaler Register 1 */
#define CAN0_NBTP2	(*( CAN0_NBTP0_type *) 0xf0208a1cu)	/* Nominal Bit Timing 'and' Prescaler Register 2 */
#define CAN0_NBTP3	(*( CAN0_NBTP0_type *) 0xf0208e1cu)	/* Nominal Bit Timing 'and' Prescaler Register 3 */
#define CAN1_NBTP0	(*( CAN0_NBTP0_type *) 0xf021821cu)	/* Nominal Bit Timing 'and' Prescaler Register 0 */
#define CAN1_NBTP1	(*( CAN0_NBTP0_type *) 0xf021861cu)	/* Nominal Bit Timing 'and' Prescaler Register 1 */
#define CAN1_NBTP2	(*( CAN0_NBTP0_type *) 0xf0218a1cu)	/* Nominal Bit Timing 'and' Prescaler Register 2 */
#define CAN1_NBTP3	(*( CAN0_NBTP0_type *) 0xf0218e1cu)	/* Nominal Bit Timing 'and' Prescaler Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int ND0            : 1;	/* New Data in Rx Buffer 0 - ND */
		unsigned int ND1            : 1;	/* New Data in Rx Buffer 1 - ND */
		unsigned int ND2            : 1;	/* New Data in Rx Buffer 2 - ND */
		unsigned int ND3            : 1;	/* New Data in Rx Buffer 3 - ND */
		unsigned int ND4            : 1;	/* New Data in Rx Buffer 4 - ND */
		unsigned int ND5            : 1;	/* New Data in Rx Buffer 5 - ND */
		unsigned int ND6            : 1;	/* New Data in Rx Buffer 6 - ND */
		unsigned int ND7            : 1;	/* New Data in Rx Buffer 7 - ND */
		unsigned int ND8            : 1;	/* New Data in Rx Buffer 8 - ND */
		unsigned int ND9            : 1;	/* New Data in Rx Buffer 9 - ND */
		unsigned int ND10           : 1;	/* New Data in Rx Buffer 10 - ND */
		unsigned int ND11           : 1;	/* New Data in Rx Buffer 11 - ND */
		unsigned int ND12           : 1;	/* New Data in Rx Buffer 12 - ND */
		unsigned int ND13           : 1;	/* New Data in Rx Buffer 13 - ND */
		unsigned int ND14           : 1;	/* New Data in Rx Buffer 14 - ND */
		unsigned int ND15           : 1;	/* New Data in Rx Buffer 15 - ND */
		unsigned int ND16           : 1;	/* New Data in Rx Buffer 16 - ND */
		unsigned int ND17           : 1;	/* New Data in Rx Buffer 17 - ND */
		unsigned int ND18           : 1;	/* New Data in Rx Buffer 18 - ND */
		unsigned int ND19           : 1;	/* New Data in Rx Buffer 19 - ND */
		unsigned int ND20           : 1;	/* New Data in Rx Buffer 20 - ND */
		unsigned int ND21           : 1;	/* New Data in Rx Buffer 21 - ND */
		unsigned int ND22           : 1;	/* New Data in Rx Buffer 22 - ND */
		unsigned int ND23           : 1;	/* New Data in Rx Buffer 23 - ND */
		unsigned int ND24           : 1;	/* New Data in Rx Buffer 24 - ND */
		unsigned int ND25           : 1;	/* New Data in Rx Buffer 25 - ND */
		unsigned int ND26           : 1;	/* New Data in Rx Buffer 26 - ND */
		unsigned int ND27           : 1;	/* New Data in Rx Buffer 27 - ND */
		unsigned int ND28           : 1;	/* New Data in Rx Buffer 28 - ND */
		unsigned int ND29           : 1;	/* New Data in Rx Buffer 29 - ND */
		unsigned int ND30           : 1;	/* New Data in Rx Buffer 30 - ND */
		unsigned int ND31           : 1;	/* New Data in Rx Buffer 31 - ND */
	} B;
	int I;
	unsigned int U;

} CAN0_NDAT10_type;
#define CAN0_NDAT10	(*( CAN0_NDAT10_type *) 0xf0208298u)	/* New Data 1 0 */
#define CAN0_NDAT11	(*( CAN0_NDAT10_type *) 0xf0208698u)	/* New Data 1 1 */
#define CAN0_NDAT12	(*( CAN0_NDAT10_type *) 0xf0208a98u)	/* New Data 1 2 */
#define CAN0_NDAT13	(*( CAN0_NDAT10_type *) 0xf0208e98u)	/* New Data 1 3 */
#define CAN1_NDAT10	(*( CAN0_NDAT10_type *) 0xf0218298u)	/* New Data 1 0 */
#define CAN1_NDAT11	(*( CAN0_NDAT10_type *) 0xf0218698u)	/* New Data 1 1 */
#define CAN1_NDAT12	(*( CAN0_NDAT10_type *) 0xf0218a98u)	/* New Data 1 2 */
#define CAN1_NDAT13	(*( CAN0_NDAT10_type *) 0xf0218e98u)	/* New Data 1 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int ND32           : 1;	/* New Data in Rx Buffer 32 - ND */
		unsigned int ND33           : 1;	/* New Data in Rx Buffer 33 - ND */
		unsigned int ND34           : 1;	/* New Data in Rx Buffer 34 - ND */
		unsigned int ND35           : 1;	/* New Data in Rx Buffer 35 - ND */
		unsigned int ND36           : 1;	/* New Data in Rx Buffer 36 - ND */
		unsigned int ND37           : 1;	/* New Data in Rx Buffer 37 - ND */
		unsigned int ND38           : 1;	/* New Data in Rx Buffer 38 - ND */
		unsigned int ND39           : 1;	/* New Data in Rx Buffer 39 - ND */
		unsigned int ND40           : 1;	/* New Data in Rx Buffer 40 - ND */
		unsigned int ND41           : 1;	/* New Data in Rx Buffer 41 - ND */
		unsigned int ND42           : 1;	/* New Data in Rx Buffer 42 - ND */
		unsigned int ND43           : 1;	/* New Data in Rx Buffer 43 - ND */
		unsigned int ND44           : 1;	/* New Data in Rx Buffer 44 - ND */
		unsigned int ND45           : 1;	/* New Data in Rx Buffer 45 - ND */
		unsigned int ND46           : 1;	/* New Data in Rx Buffer 46 - ND */
		unsigned int ND47           : 1;	/* New Data in Rx Buffer 47 - ND */
		unsigned int ND48           : 1;	/* New Data in Rx Buffer 48 - ND */
		unsigned int ND49           : 1;	/* New Data in Rx Buffer 49 - ND */
		unsigned int ND50           : 1;	/* New Data in Rx Buffer 50 - ND */
		unsigned int ND51           : 1;	/* New Data in Rx Buffer 51 - ND */
		unsigned int ND52           : 1;	/* New Data in Rx Buffer 52 - ND */
		unsigned int ND53           : 1;	/* New Data in Rx Buffer 53 - ND */
		unsigned int ND54           : 1;	/* New Data in Rx Buffer 54 - ND */
		unsigned int ND55           : 1;	/* New Data in Rx Buffer 55 - ND */
		unsigned int ND56           : 1;	/* New Data in Rx Buffer 56 - ND */
		unsigned int ND57           : 1;	/* New Data in Rx Buffer 57 - ND */
		unsigned int ND58           : 1;	/* New Data in Rx Buffer 58 - ND */
		unsigned int ND59           : 1;	/* New Data in Rx Buffer 59 - ND */
		unsigned int ND60           : 1;	/* New Data in Rx Buffer 60 - ND */
		unsigned int ND61           : 1;	/* New Data in Rx Buffer 61 - ND */
		unsigned int ND62           : 1;	/* New Data in Rx Buffer 62 - ND */
		unsigned int ND63           : 1;	/* New Data in Rx Buffer 63 - ND */
	} B;
	int I;
	unsigned int U;

} CAN0_NDAT20_type;
#define CAN0_NDAT20	(*( CAN0_NDAT20_type *) 0xf020829cu)	/* New Data 2 0 */
#define CAN0_NDAT21	(*( CAN0_NDAT20_type *) 0xf020869cu)	/* New Data 2 1 */
#define CAN0_NDAT22	(*( CAN0_NDAT20_type *) 0xf0208a9cu)	/* New Data 2 2 */
#define CAN0_NDAT23	(*( CAN0_NDAT20_type *) 0xf0208e9cu)	/* New Data 2 3 */
#define CAN1_NDAT20	(*( CAN0_NDAT20_type *) 0xf021829cu)	/* New Data 2 0 */
#define CAN1_NDAT21	(*( CAN0_NDAT20_type *) 0xf021869cu)	/* New Data 2 1 */
#define CAN1_NDAT22	(*( CAN0_NDAT20_type *) 0xf0218a9cu)	/* New Data 2 2 */
#define CAN1_NDAT23	(*( CAN0_NDAT20_type *) 0xf0218e9cu)	/* New Data 2 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int RXSEL          : 3;	/* Receive Select */
		unsigned int                : 5;
		unsigned int LBM            : 1;	/* Loop-Back Mode */
		unsigned int LOUT           : 1;	/* Loop Back Mode Out */
		unsigned int DELE           : 1;	/* Enable destructive read on ECRi.CEL */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} CAN0_NPCR0_type;
#define CAN0_NPCR0	(*( CAN0_NPCR0_type *) 0xf0208140u)	/* Node 0 Port Control Register */
#define CAN0_NPCR1	(*( CAN0_NPCR0_type *) 0xf0208540u)	/* Node 1 Port Control Register */
#define CAN0_NPCR2	(*( CAN0_NPCR0_type *) 0xf0208940u)	/* Node 2 Port Control Register */
#define CAN0_NPCR3	(*( CAN0_NPCR0_type *) 0xf0208d40u)	/* Node 3 Port Control Register */
#define CAN1_NPCR0	(*( CAN0_NPCR0_type *) 0xf0218140u)	/* Node 0 Port Control Register */
#define CAN1_NPCR1	(*( CAN0_NPCR0_type *) 0xf0218540u)	/* Node 1 Port Control Register */
#define CAN1_NPCR2	(*( CAN0_NPCR0_type *) 0xf0218940u)	/* Node 2 Port Control Register */
#define CAN1_NPCR3	(*( CAN0_NPCR0_type *) 0xf0218d40u)	/* Node 3 Port Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RELOAD         : 16;	/* Reload Value */
		/* const */ unsigned int TXMO           : 8;	/* Transmit Message Object */
		unsigned int STRT           : 1;	/* Timer Start */
		unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} CAN0_NTATTR0_type;
#define CAN0_NTATTR0	(*( CAN0_NTATTR0_type *) 0xf0208124u)	/* Node 0 Timer A Transmit Trigger Register */
#define CAN0_NTATTR1	(*( CAN0_NTATTR0_type *) 0xf0208524u)	/* Node 1 Timer A Transmit Trigger Register */
#define CAN0_NTATTR2	(*( CAN0_NTATTR0_type *) 0xf0208924u)	/* Node 2 Timer A Transmit Trigger Register */
#define CAN0_NTATTR3	(*( CAN0_NTATTR0_type *) 0xf0208d24u)	/* Node 3 Timer A Transmit Trigger Register */
#define CAN0_NTBTTR0	(*( CAN0_NTATTR0_type *) 0xf0208128u)	/* Node 0 Timer B Transmit Trigger Register */
#define CAN0_NTBTTR1	(*( CAN0_NTATTR0_type *) 0xf0208528u)	/* Node 1 Timer B Transmit Trigger Register */
#define CAN0_NTBTTR2	(*( CAN0_NTATTR0_type *) 0xf0208928u)	/* Node 2 Timer B Transmit Trigger Register */
#define CAN0_NTBTTR3	(*( CAN0_NTATTR0_type *) 0xf0208d28u)	/* Node 3 Timer B Transmit Trigger Register */
#define CAN0_NTCTTR0	(*( CAN0_NTATTR0_type *) 0xf020812cu)	/* Node 0 Timer C Transmit Trigger Register */
#define CAN0_NTCTTR1	(*( CAN0_NTATTR0_type *) 0xf020852cu)	/* Node 1 Timer C Transmit Trigger Register */
#define CAN0_NTCTTR2	(*( CAN0_NTATTR0_type *) 0xf020892cu)	/* Node 2 Timer C Transmit Trigger Register */
#define CAN0_NTCTTR3	(*( CAN0_NTATTR0_type *) 0xf0208d2cu)	/* Node 3 Timer C Transmit Trigger Register */
#define CAN1_NTATTR0	(*( CAN0_NTATTR0_type *) 0xf0218124u)	/* Node 0 Timer A Transmit Trigger Register */
#define CAN1_NTATTR1	(*( CAN0_NTATTR0_type *) 0xf0218524u)	/* Node 1 Timer A Transmit Trigger Register */
#define CAN1_NTATTR2	(*( CAN0_NTATTR0_type *) 0xf0218924u)	/* Node 2 Timer A Transmit Trigger Register */
#define CAN1_NTATTR3	(*( CAN0_NTATTR0_type *) 0xf0218d24u)	/* Node 3 Timer A Transmit Trigger Register */
#define CAN1_NTBTTR0	(*( CAN0_NTATTR0_type *) 0xf0218128u)	/* Node 0 Timer B Transmit Trigger Register */
#define CAN1_NTBTTR1	(*( CAN0_NTATTR0_type *) 0xf0218528u)	/* Node 1 Timer B Transmit Trigger Register */
#define CAN1_NTBTTR2	(*( CAN0_NTATTR0_type *) 0xf0218928u)	/* Node 2 Timer B Transmit Trigger Register */
#define CAN1_NTBTTR3	(*( CAN0_NTATTR0_type *) 0xf0218d28u)	/* Node 3 Timer B Transmit Trigger Register */
#define CAN1_NTCTTR0	(*( CAN0_NTATTR0_type *) 0xf021812cu)	/* Node 0 Timer C Transmit Trigger Register */
#define CAN1_NTCTTR1	(*( CAN0_NTATTR0_type *) 0xf021852cu)	/* Node 1 Timer C Transmit Trigger Register */
#define CAN1_NTCTTR2	(*( CAN0_NTATTR0_type *) 0xf021892cu)	/* Node 2 Timer C Transmit Trigger Register */
#define CAN1_NTCTTR3	(*( CAN0_NTATTR0_type *) 0xf0218d2cu)	/* Node 3 Timer C Transmit Trigger Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int TPSC           : 4;	/* Timer Prescaler */
		unsigned int                : 2;
		unsigned int STRESET        : 1;	/* Stamping Reset */
		unsigned int STSTART        : 1;	/* Stamping Start */
		unsigned int                : 2;
		unsigned int TRIGSRC        : 3;	/* Trigger Source */
		unsigned int                : 11;
	} B;
	int I;
	unsigned int U;

} CAN0_NTCCR0_type;
#define CAN0_NTCCR0	(*( CAN0_NTCCR0_type *) 0xf0208120u)	/* Node 0 Timer Clock Control Register */
#define CAN0_NTCCR1	(*( CAN0_NTCCR0_type *) 0xf0208520u)	/* Node 1 Timer Clock Control Register */
#define CAN0_NTCCR2	(*( CAN0_NTCCR0_type *) 0xf0208920u)	/* Node 2 Timer Clock Control Register */
#define CAN0_NTCCR3	(*( CAN0_NTCCR0_type *) 0xf0208d20u)	/* Node 3 Timer Clock Control Register */
#define CAN1_NTCCR0	(*( CAN0_NTCCR0_type *) 0xf0218120u)	/* Node 0 Timer Clock Control Register */
#define CAN1_NTCCR1	(*( CAN0_NTCCR0_type *) 0xf0218520u)	/* Node 1 Timer Clock Control Register */
#define CAN1_NTCCR2	(*( CAN0_NTCCR0_type *) 0xf0218920u)	/* Node 2 Timer Clock Control Register */
#define CAN1_NTCCR3	(*( CAN0_NTCCR0_type *) 0xf0218d20u)	/* Node 3 Timer Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RELOAD         : 16;	/* Reload Value */
		unsigned int                : 6;
		unsigned int TEIE           : 1;	/* Timer Event Interrupt Enable */
		unsigned int TE             : 1;	/* Timer Event */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN0_NTRTR0_type;
#define CAN0_NTRTR0	(*( CAN0_NTRTR0_type *) 0xf0208130u)	/* Node 0 Timer Receive Timeout Register */
#define CAN0_NTRTR1	(*( CAN0_NTRTR0_type *) 0xf0208530u)	/* Node 1 Timer Receive Timeout Register */
#define CAN0_NTRTR2	(*( CAN0_NTRTR0_type *) 0xf0208930u)	/* Node 2 Timer Receive Timeout Register */
#define CAN0_NTRTR3	(*( CAN0_NTRTR0_type *) 0xf0208d30u)	/* Node 3 Timer Receive Timeout Register */
#define CAN1_NTRTR0	(*( CAN0_NTRTR0_type *) 0xf0218130u)	/* Node 0 Timer Receive Timeout Register */
#define CAN1_NTRTR1	(*( CAN0_NTRTR0_type *) 0xf0218530u)	/* Node 1 Timer Receive Timeout Register */
#define CAN1_NTRTR2	(*( CAN0_NTRTR0_type *) 0xf0218930u)	/* Node 2 Timer Receive Timeout Register */
#define CAN1_NTRTR3	(*( CAN0_NTRTR0_type *) 0xf0218d30u)	/* Node 3 Timer Receive Timeout Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned int TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned int TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned int                : 20;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} CAN0_OCS_type;
#define CAN0_OCS	(*( CAN0_OCS_type *) 0xf02080e8u)	/* OCDS Control and Status */
#define CAN1_OCS	(*( CAN0_OCS_type *) 0xf02180e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LEC            : 3;	/* Last Error Code */
		/* const */ unsigned int ACT            : 2;	/* Activity */
		/* const */ unsigned int EP             : 1;	/* Error Passive */
		/* const */ unsigned int EW             : 1;	/* Warning Status */
		/* const */ unsigned int BO             : 1;	/* Bus_Off Status */
		/* const */ unsigned int DLEC           : 3;	/* Data Phase Last Error Code */
		/* const */ unsigned int RESI           : 1;	/* ESI flag of last received CAN FD Message */
		/* const */ unsigned int RBRS           : 1;	/* BRS flag of last received CAN FD Message */
		/* const */ unsigned int RFDF           : 1;	/* Received a CAN FD Message */
		/* const */ unsigned int PXE            : 1;	/* Protocol Exception Event */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TDCV           : 7;	/* Transmitter Delay Compensation Value */
		/* const */ unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} CAN0_PSR0_type;
#define CAN0_PSR0	(*( CAN0_PSR0_type *) 0xf0208244u)	/* Protocol Status Register 0 */
#define CAN0_PSR1	(*( CAN0_PSR0_type *) 0xf0208644u)	/* Protocol Status Register 1 */
#define CAN0_PSR2	(*( CAN0_PSR0_type *) 0xf0208a44u)	/* Protocol Status Register 2 */
#define CAN0_PSR3	(*( CAN0_PSR0_type *) 0xf0208e44u)	/* Protocol Status Register 3 */
#define CAN1_PSR0	(*( CAN0_PSR0_type *) 0xf0218244u)	/* Protocol Status Register 0 */
#define CAN1_PSR1	(*( CAN0_PSR0_type *) 0xf0218644u)	/* Protocol Status Register 1 */
#define CAN1_PSR2	(*( CAN0_PSR0_type *) 0xf0218a44u)	/* Protocol Status Register 2 */
#define CAN1_PSR3	(*( CAN0_PSR0_type *) 0xf0218e44u)	/* Protocol Status Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int WDC            : 8;	/* Watchdog Configuration */
		/* const */ unsigned int WDV            : 8;	/* Watchdog Value */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_RWD0_type;
#define CAN0_RWD0	(*( CAN0_RWD0_type *) 0xf0208214u)	/* RAM Watchdog 0 */
#define CAN0_RWD1	(*( CAN0_RWD0_type *) 0xf0208614u)	/* RAM Watchdog 1 */
#define CAN0_RWD2	(*( CAN0_RWD0_type *) 0xf0208a14u)	/* RAM Watchdog 2 */
#define CAN0_RWD3	(*( CAN0_RWD0_type *) 0xf0208e14u)	/* RAM Watchdog 3 */
#define CAN1_RWD0	(*( CAN0_RWD0_type *) 0xf0218214u)	/* RAM Watchdog 0 */
#define CAN1_RWD1	(*( CAN0_RWD0_type *) 0xf0218614u)	/* RAM Watchdog 1 */
#define CAN1_RWD2	(*( CAN0_RWD0_type *) 0xf0218a14u)	/* RAM Watchdog 2 */
#define CAN1_RWD3	(*( CAN0_RWD0_type *) 0xf0218e14u)	/* RAM Watchdog 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int RBSA           : 14;	/* Rx Buffer Start Address */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_RXBC0_type;
#define CAN0_RXBC0	(*( CAN0_RXBC0_type *) 0xf02082acu)	/* Rx Buffer Configuration 0 */
#define CAN0_RXBC1	(*( CAN0_RXBC0_type *) 0xf02086acu)	/* Rx Buffer Configuration 1 */
#define CAN0_RXBC2	(*( CAN0_RXBC0_type *) 0xf0208aacu)	/* Rx Buffer Configuration 2 */
#define CAN0_RXBC3	(*( CAN0_RXBC0_type *) 0xf0208eacu)	/* Rx Buffer Configuration 3 */
#define CAN1_RXBC0	(*( CAN0_RXBC0_type *) 0xf02182acu)	/* Rx Buffer Configuration 0 */
#define CAN1_RXBC1	(*( CAN0_RXBC0_type *) 0xf02186acu)	/* Rx Buffer Configuration 1 */
#define CAN1_RXBC2	(*( CAN0_RXBC0_type *) 0xf0218aacu)	/* Rx Buffer Configuration 2 */
#define CAN1_RXBC3	(*( CAN0_RXBC0_type *) 0xf0218eacu)	/* Rx Buffer Configuration 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int F0DS           : 3;	/* Rx FIFO 0 Data Field Size */
		unsigned int                : 1;
		unsigned int F1DS           : 3;	/* Rx FIFO 1 Data Field Size */
		unsigned int                : 1;
		unsigned int RBDS           : 3;	/* Rx Buffer Data Field Size */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} CAN0_RXESC0_type;
#define CAN0_RXESC0	(*( CAN0_RXESC0_type *) 0xf02082bcu)	/* Rx Buffer/FIFO Element Size Configuration 0 */
#define CAN0_RXESC1	(*( CAN0_RXESC0_type *) 0xf02086bcu)	/* Rx Buffer/FIFO Element Size Configuration 1 */
#define CAN0_RXESC2	(*( CAN0_RXESC0_type *) 0xf0208abcu)	/* Rx Buffer/FIFO Element Size Configuration 2 */
#define CAN0_RXESC3	(*( CAN0_RXESC0_type *) 0xf0208ebcu)	/* Rx Buffer/FIFO Element Size Configuration 3 */
#define CAN1_RXESC0	(*( CAN0_RXESC0_type *) 0xf02182bcu)	/* Rx Buffer/FIFO Element Size Configuration 0 */
#define CAN1_RXESC1	(*( CAN0_RXESC0_type *) 0xf02186bcu)	/* Rx Buffer/FIFO Element Size Configuration 1 */
#define CAN1_RXESC2	(*( CAN0_RXESC0_type *) 0xf0218abcu)	/* Rx Buffer/FIFO Element Size Configuration 2 */
#define CAN1_RXESC3	(*( CAN0_RXESC0_type *) 0xf0218ebcu)	/* Rx Buffer/FIFO Element Size Configuration 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int F0AI           : 6;	/* Rx FIFO 0 Acknowledge Index */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN0_RXF0A0_type;
#define CAN0_RXF0A0	(*( CAN0_RXF0A0_type *) 0xf02082a8u)	/* Rx FIFO 0 Acknowledge 0 */
#define CAN0_RXF0A1	(*( CAN0_RXF0A0_type *) 0xf02086a8u)	/* Rx FIFO 0 Acknowledge 1 */
#define CAN0_RXF0A2	(*( CAN0_RXF0A0_type *) 0xf0208aa8u)	/* Rx FIFO 0 Acknowledge 2 */
#define CAN0_RXF0A3	(*( CAN0_RXF0A0_type *) 0xf0208ea8u)	/* Rx FIFO 0 Acknowledge 3 */
#define CAN1_RXF0A0	(*( CAN0_RXF0A0_type *) 0xf02182a8u)	/* Rx FIFO 0 Acknowledge 0 */
#define CAN1_RXF0A1	(*( CAN0_RXF0A0_type *) 0xf02186a8u)	/* Rx FIFO 0 Acknowledge 1 */
#define CAN1_RXF0A2	(*( CAN0_RXF0A0_type *) 0xf0218aa8u)	/* Rx FIFO 0 Acknowledge 2 */
#define CAN1_RXF0A3	(*( CAN0_RXF0A0_type *) 0xf0218ea8u)	/* Rx FIFO 0 Acknowledge 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int F0SA           : 14;	/* Rx FIFO 0 Start Address */
		unsigned int F0S            : 7;	/* Rx FIFO 0 Size */
		unsigned int                : 1;
		unsigned int F0WM           : 7;	/* Rx FIFO 0 Watermark */
		unsigned int F0OM           : 1;	/* FIFO 0 Operation Mode */
	} B;
	int I;
	unsigned int U;

} CAN0_RXF0C0_type;
#define CAN0_RXF0C0	(*( CAN0_RXF0C0_type *) 0xf02082a0u)	/* Rx FIFO 0 Configuration 0 */
#define CAN0_RXF0C1	(*( CAN0_RXF0C0_type *) 0xf02086a0u)	/* Rx FIFO 0 Configuration 1 */
#define CAN0_RXF0C2	(*( CAN0_RXF0C0_type *) 0xf0208aa0u)	/* Rx FIFO 0 Configuration 2 */
#define CAN0_RXF0C3	(*( CAN0_RXF0C0_type *) 0xf0208ea0u)	/* Rx FIFO 0 Configuration 3 */
#define CAN1_RXF0C0	(*( CAN0_RXF0C0_type *) 0xf02182a0u)	/* Rx FIFO 0 Configuration 0 */
#define CAN1_RXF0C1	(*( CAN0_RXF0C0_type *) 0xf02186a0u)	/* Rx FIFO 0 Configuration 1 */
#define CAN1_RXF0C2	(*( CAN0_RXF0C0_type *) 0xf0218aa0u)	/* Rx FIFO 0 Configuration 2 */
#define CAN1_RXF0C3	(*( CAN0_RXF0C0_type *) 0xf0218ea0u)	/* Rx FIFO 0 Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int F0FL           : 7;	/* Rx FIFO 0 Fill Level */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int F0GI           : 6;	/* Rx FIFO 0 Get Index */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int F0PI           : 6;	/* Rx FIFO 0 Put Index */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int F0F            : 1;	/* Rx FIFO 0 Full */
		/* const */ unsigned int RF0L           : 1;	/* Rx FIFO 0 Message Lost */
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CAN0_RXF0S0_type;
#define CAN0_RXF0S0	(*( CAN0_RXF0S0_type *) 0xf02082a4u)	/* Rx FIFO 0 Status 0 */
#define CAN0_RXF0S1	(*( CAN0_RXF0S0_type *) 0xf02086a4u)	/* Rx FIFO 0 Status 1 */
#define CAN0_RXF0S2	(*( CAN0_RXF0S0_type *) 0xf0208aa4u)	/* Rx FIFO 0 Status 2 */
#define CAN0_RXF0S3	(*( CAN0_RXF0S0_type *) 0xf0208ea4u)	/* Rx FIFO 0 Status 3 */
#define CAN1_RXF0S0	(*( CAN0_RXF0S0_type *) 0xf02182a4u)	/* Rx FIFO 0 Status 0 */
#define CAN1_RXF0S1	(*( CAN0_RXF0S0_type *) 0xf02186a4u)	/* Rx FIFO 0 Status 1 */
#define CAN1_RXF0S2	(*( CAN0_RXF0S0_type *) 0xf0218aa4u)	/* Rx FIFO 0 Status 2 */
#define CAN1_RXF0S3	(*( CAN0_RXF0S0_type *) 0xf0218ea4u)	/* Rx FIFO 0 Status 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int F1AI           : 6;	/* Rx FIFO 1 Acknowledge Index */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} CAN0_RXF1A0_type;
#define CAN0_RXF1A0	(*( CAN0_RXF1A0_type *) 0xf02082b8u)	/* Rx FIFO 1 Acknowledge 0 */
#define CAN0_RXF1A1	(*( CAN0_RXF1A0_type *) 0xf02086b8u)	/* Rx FIFO 1 Acknowledge 1 */
#define CAN0_RXF1A2	(*( CAN0_RXF1A0_type *) 0xf0208ab8u)	/* Rx FIFO 1 Acknowledge 2 */
#define CAN0_RXF1A3	(*( CAN0_RXF1A0_type *) 0xf0208eb8u)	/* Rx FIFO 1 Acknowledge 3 */
#define CAN1_RXF1A0	(*( CAN0_RXF1A0_type *) 0xf02182b8u)	/* Rx FIFO 1 Acknowledge 0 */
#define CAN1_RXF1A1	(*( CAN0_RXF1A0_type *) 0xf02186b8u)	/* Rx FIFO 1 Acknowledge 1 */
#define CAN1_RXF1A2	(*( CAN0_RXF1A0_type *) 0xf0218ab8u)	/* Rx FIFO 1 Acknowledge 2 */
#define CAN1_RXF1A3	(*( CAN0_RXF1A0_type *) 0xf0218eb8u)	/* Rx FIFO 1 Acknowledge 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int F1SA           : 14;	/* Rx FIFO 1 Start Address */
		unsigned int F1S            : 7;	/* Rx FIFO 1 Size */
		unsigned int                : 1;
		unsigned int F1WM           : 7;	/* Rx FIFO 1 Watermark */
		unsigned int F1OM           : 1;	/* FIFO 1 Operation Mode */
	} B;
	int I;
	unsigned int U;

} CAN0_RXF1C0_type;
#define CAN0_RXF1C0	(*( CAN0_RXF1C0_type *) 0xf02082b0u)	/* Rx FIFO 1 Configuration 0 */
#define CAN0_RXF1C1	(*( CAN0_RXF1C0_type *) 0xf02086b0u)	/* Rx FIFO 1 Configuration 1 */
#define CAN0_RXF1C2	(*( CAN0_RXF1C0_type *) 0xf0208ab0u)	/* Rx FIFO 1 Configuration 2 */
#define CAN0_RXF1C3	(*( CAN0_RXF1C0_type *) 0xf0208eb0u)	/* Rx FIFO 1 Configuration 3 */
#define CAN1_RXF1C0	(*( CAN0_RXF1C0_type *) 0xf02182b0u)	/* Rx FIFO 1 Configuration 0 */
#define CAN1_RXF1C1	(*( CAN0_RXF1C0_type *) 0xf02186b0u)	/* Rx FIFO 1 Configuration 1 */
#define CAN1_RXF1C2	(*( CAN0_RXF1C0_type *) 0xf0218ab0u)	/* Rx FIFO 1 Configuration 2 */
#define CAN1_RXF1C3	(*( CAN0_RXF1C0_type *) 0xf0218eb0u)	/* Rx FIFO 1 Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int F1FL           : 7;	/* Rx FIFO 1 Fill Level */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int F1GI           : 6;	/* Rx FIFO 1 Get Index */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int F1PI           : 6;	/* Rx FIFO 1 Put Index */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int F1F            : 1;	/* Rx FIFO 1 Full */
		/* const */ unsigned int RF1L           : 1;	/* Rx FIFO 1 Message Lost */
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CAN0_RXF1S0_type;
#define CAN0_RXF1S0	(*( CAN0_RXF1S0_type *) 0xf02082b4u)	/* Rx FIFO 1 Status 0 */
#define CAN0_RXF1S1	(*( CAN0_RXF1S0_type *) 0xf02086b4u)	/* Rx FIFO 1 Status 1 */
#define CAN0_RXF1S2	(*( CAN0_RXF1S0_type *) 0xf0208ab4u)	/* Rx FIFO 1 Status 2 */
#define CAN0_RXF1S3	(*( CAN0_RXF1S0_type *) 0xf0208eb4u)	/* Rx FIFO 1 Status 3 */
#define CAN1_RXF1S0	(*( CAN0_RXF1S0_type *) 0xf02182b4u)	/* Rx FIFO 1 Status 0 */
#define CAN1_RXF1S1	(*( CAN0_RXF1S0_type *) 0xf02186b4u)	/* Rx FIFO 1 Status 1 */
#define CAN1_RXF1S2	(*( CAN0_RXF1S0_type *) 0xf0218ab4u)	/* Rx FIFO 1 Status 2 */
#define CAN1_RXF1S3	(*( CAN0_RXF1S0_type *) 0xf0218eb4u)	/* Rx FIFO 1 Status 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int FLSSA          : 14;	/* Filter List Standard Start Address */
		unsigned int LSS            : 8;	/* List Size Standard */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} CAN0_SIDFC0_type;
#define CAN0_SIDFC0	(*( CAN0_SIDFC0_type *) 0xf0208284u)	/* Standard ID Filter Configuration 0 */
#define CAN0_SIDFC1	(*( CAN0_SIDFC0_type *) 0xf0208684u)	/* Standard ID Filter Configuration 1 */
#define CAN0_SIDFC2	(*( CAN0_SIDFC0_type *) 0xf0208a84u)	/* Standard ID Filter Configuration 2 */
#define CAN0_SIDFC3	(*( CAN0_SIDFC0_type *) 0xf0208e84u)	/* Standard ID Filter Configuration 3 */
#define CAN1_SIDFC0	(*( CAN0_SIDFC0_type *) 0xf0218284u)	/* Standard ID Filter Configuration 0 */
#define CAN1_SIDFC1	(*( CAN0_SIDFC0_type *) 0xf0218684u)	/* Standard ID Filter Configuration 1 */
#define CAN1_SIDFC2	(*( CAN0_SIDFC0_type *) 0xf0218a84u)	/* Standard ID Filter Configuration 2 */
#define CAN1_SIDFC3	(*( CAN0_SIDFC0_type *) 0xf0218e84u)	/* Standard ID Filter Configuration 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int START          : 14;	/* Message RAM start */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_STARTADR0_type;
#define CAN0_STARTADR0	(*( CAN0_STARTADR0_type *) 0xf0208108u)	/* Start Address Node 0 */
#define CAN0_STARTADR1	(*( CAN0_STARTADR0_type *) 0xf0208508u)	/* Start Address Node 1 */
#define CAN0_STARTADR2	(*( CAN0_STARTADR0_type *) 0xf0208908u)	/* Start Address Node 2 */
#define CAN0_STARTADR3	(*( CAN0_STARTADR0_type *) 0xf0208d08u)	/* Start Address Node 3 */
#define CAN1_STARTADR0	(*( CAN0_STARTADR0_type *) 0xf0218108u)	/* Start Address Node 0 */
#define CAN1_STARTADR1	(*( CAN0_STARTADR0_type *) 0xf0218508u)	/* Start Address Node 1 */
#define CAN1_STARTADR2	(*( CAN0_STARTADR0_type *) 0xf0218908u)	/* Start Address Node 2 */
#define CAN1_STARTADR3	(*( CAN0_STARTADR0_type *) 0xf0218d08u)	/* Start Address Node 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TDCF           : 7;	/* Transmitter Delay Compensation Filter Window Length */
		unsigned int                : 1;
		unsigned int TDCO           : 7;	/* Transmitter Delay Compensation Offset */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} CAN0_TDCR0_type;
#define CAN0_TDCR0	(*( CAN0_TDCR0_type *) 0xf0208248u)	/* Transmitter Delay Compensation Register 0 */
#define CAN0_TDCR1	(*( CAN0_TDCR0_type *) 0xf0208648u)	/* Transmitter Delay Compensation Register 1 */
#define CAN0_TDCR2	(*( CAN0_TDCR0_type *) 0xf0208a48u)	/* Transmitter Delay Compensation Register 2 */
#define CAN0_TDCR3	(*( CAN0_TDCR0_type *) 0xf0208e48u)	/* Transmitter Delay Compensation Register 3 */
#define CAN1_TDCR0	(*( CAN0_TDCR0_type *) 0xf0218248u)	/* Transmitter Delay Compensation Register 0 */
#define CAN1_TDCR1	(*( CAN0_TDCR0_type *) 0xf0218648u)	/* Transmitter Delay Compensation Register 1 */
#define CAN1_TDCR2	(*( CAN0_TDCR0_type *) 0xf0218a48u)	/* Transmitter Delay Compensation Register 2 */
#define CAN1_TDCR3	(*( CAN0_TDCR0_type *) 0xf0218e48u)	/* Transmitter Delay Compensation Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int LBCK           : 1;	/* Loop Back Mode */
		unsigned int TX             : 2;	/* Control of Transmit Pin */
		/* const */ unsigned int RX             : 1;	/* Receive Pin */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} CAN0_TEST0_type;
#define CAN0_TEST0	(*( CAN0_TEST0_type *) 0xf0208210u)	/* Test Register 0 */
#define CAN0_TEST1	(*( CAN0_TEST0_type *) 0xf0208610u)	/* Test Register 1 */
#define CAN0_TEST2	(*( CAN0_TEST0_type *) 0xf0208a10u)	/* Test Register 2 */
#define CAN0_TEST3	(*( CAN0_TEST0_type *) 0xf0208e10u)	/* Test Register 3 */
#define CAN1_TEST0	(*( CAN0_TEST0_type *) 0xf0218210u)	/* Test Register 0 */
#define CAN1_TEST1	(*( CAN0_TEST0_type *) 0xf0218610u)	/* Test Register 1 */
#define CAN1_TEST2	(*( CAN0_TEST0_type *) 0xf0218a10u)	/* Test Register 2 */
#define CAN1_TEST3	(*( CAN0_TEST0_type *) 0xf0218e10u)	/* Test Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int ETOC           : 1;	/* Enable Timeout Counter */
		unsigned int TOS            : 2;	/* Timeout Select */
		unsigned int                : 13;
		unsigned int TOP            : 16;	/* Timeout Period */
	} B;
	int I;
	unsigned int U;

} CAN0_TOCC0_type;
#define CAN0_TOCC0	(*( CAN0_TOCC0_type *) 0xf0208228u)	/* Timeout Counter Configuration 0 */
#define CAN0_TOCC1	(*( CAN0_TOCC0_type *) 0xf0208628u)	/* Timeout Counter Configuration 1 */
#define CAN0_TOCC2	(*( CAN0_TOCC0_type *) 0xf0208a28u)	/* Timeout Counter Configuration 2 */
#define CAN0_TOCC3	(*( CAN0_TOCC0_type *) 0xf0208e28u)	/* Timeout Counter Configuration 3 */
#define CAN1_TOCC0	(*( CAN0_TOCC0_type *) 0xf0218228u)	/* Timeout Counter Configuration 0 */
#define CAN1_TOCC1	(*( CAN0_TOCC0_type *) 0xf0218628u)	/* Timeout Counter Configuration 1 */
#define CAN1_TOCC2	(*( CAN0_TOCC0_type *) 0xf0218a28u)	/* Timeout Counter Configuration 2 */
#define CAN1_TOCC3	(*( CAN0_TOCC0_type *) 0xf0218e28u)	/* Timeout Counter Configuration 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TOC            : 16;	/* Timeout Counter */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_TOCV0_type;
#define CAN0_TOCV0	(*( CAN0_TOCV0_type *) 0xf020822cu)	/* Timeout Counter Value 0 */
#define CAN0_TOCV1	(*( CAN0_TOCV0_type *) 0xf020862cu)	/* Timeout Counter Value 1 */
#define CAN0_TOCV2	(*( CAN0_TOCV0_type *) 0xf0208a2cu)	/* Timeout Counter Value 2 */
#define CAN0_TOCV3	(*( CAN0_TOCV0_type *) 0xf0208e2cu)	/* Timeout Counter Value 3 */
#define CAN1_TOCV0	(*( CAN0_TOCV0_type *) 0xf021822cu)	/* Timeout Counter Value 0 */
#define CAN1_TOCV1	(*( CAN0_TOCV0_type *) 0xf021862cu)	/* Timeout Counter Value 1 */
#define CAN1_TOCV2	(*( CAN0_TOCV0_type *) 0xf0218a2cu)	/* Timeout Counter Value 2 */
#define CAN1_TOCV3	(*( CAN0_TOCV0_type *) 0xf0218e2cu)	/* Timeout Counter Value 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TSS            : 2;	/* Time segment before sample point */
		unsigned int                : 14;
		unsigned int TCP            : 4;	/* Timestamp Counter Prescaler */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} CAN0_TSCC0_type;
#define CAN0_TSCC0	(*( CAN0_TSCC0_type *) 0xf0208220u)	/* Timestamp Counter Configuration 0 */
#define CAN0_TSCC1	(*( CAN0_TSCC0_type *) 0xf0208620u)	/* Timestamp Counter Configuration 1 */
#define CAN0_TSCC2	(*( CAN0_TSCC0_type *) 0xf0208a20u)	/* Timestamp Counter Configuration 2 */
#define CAN0_TSCC3	(*( CAN0_TSCC0_type *) 0xf0208e20u)	/* Timestamp Counter Configuration 3 */
#define CAN1_TSCC0	(*( CAN0_TSCC0_type *) 0xf0218220u)	/* Timestamp Counter Configuration 0 */
#define CAN1_TSCC1	(*( CAN0_TSCC0_type *) 0xf0218620u)	/* Timestamp Counter Configuration 1 */
#define CAN1_TSCC2	(*( CAN0_TSCC0_type *) 0xf0218a20u)	/* Timestamp Counter Configuration 2 */
#define CAN1_TSCC3	(*( CAN0_TSCC0_type *) 0xf0218e20u)	/* Timestamp Counter Configuration 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TSC            : 16;	/* Timestamp Counter */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} CAN0_TSCV0_type;
#define CAN0_TSCV0	(*( CAN0_TSCV0_type *) 0xf0208224u)	/* Timestamp Counter Value 0 */
#define CAN0_TSCV1	(*( CAN0_TSCV0_type *) 0xf0208624u)	/* Timestamp Counter Value 1 */
#define CAN0_TSCV2	(*( CAN0_TSCV0_type *) 0xf0208a24u)	/* Timestamp Counter Value 2 */
#define CAN0_TSCV3	(*( CAN0_TSCV0_type *) 0xf0208e24u)	/* Timestamp Counter Value 3 */
#define CAN1_TSCV0	(*( CAN0_TSCV0_type *) 0xf0218224u)	/* Timestamp Counter Value 0 */
#define CAN1_TSCV1	(*( CAN0_TSCV0_type *) 0xf0218624u)	/* Timestamp Counter Value 1 */
#define CAN1_TSCV2	(*( CAN0_TSCV0_type *) 0xf0218a24u)	/* Timestamp Counter Value 2 */
#define CAN1_TSCV3	(*( CAN0_TSCV0_type *) 0xf0218e24u)	/* Timestamp Counter Value 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int AR0            : 1;	/* Add Request Tx Buffer 0 - AR */
		unsigned int AR1            : 1;	/* Add Request Tx Buffer 1 - AR */
		unsigned int AR2            : 1;	/* Add Request Tx Buffer 2 - AR */
		unsigned int AR3            : 1;	/* Add Request Tx Buffer 3 - AR */
		unsigned int AR4            : 1;	/* Add Request Tx Buffer 4 - AR */
		unsigned int AR5            : 1;	/* Add Request Tx Buffer 5 - AR */
		unsigned int AR6            : 1;	/* Add Request Tx Buffer 6 - AR */
		unsigned int AR7            : 1;	/* Add Request Tx Buffer 7 - AR */
		unsigned int AR8            : 1;	/* Add Request Tx Buffer 8 - AR */
		unsigned int AR9            : 1;	/* Add Request Tx Buffer 9 - AR */
		unsigned int AR10           : 1;	/* Add Request Tx Buffer 10 - AR */
		unsigned int AR11           : 1;	/* Add Request Tx Buffer 11 - AR */
		unsigned int AR12           : 1;	/* Add Request Tx Buffer 12 - AR */
		unsigned int AR13           : 1;	/* Add Request Tx Buffer 13 - AR */
		unsigned int AR14           : 1;	/* Add Request Tx Buffer 14 - AR */
		unsigned int AR15           : 1;	/* Add Request Tx Buffer 15 - AR */
		unsigned int AR16           : 1;	/* Add Request Tx Buffer 16 - AR */
		unsigned int AR17           : 1;	/* Add Request Tx Buffer 17 - AR */
		unsigned int AR18           : 1;	/* Add Request Tx Buffer 18 - AR */
		unsigned int AR19           : 1;	/* Add Request Tx Buffer 19 - AR */
		unsigned int AR20           : 1;	/* Add Request Tx Buffer 20 - AR */
		unsigned int AR21           : 1;	/* Add Request Tx Buffer 21 - AR */
		unsigned int AR22           : 1;	/* Add Request Tx Buffer 22 - AR */
		unsigned int AR23           : 1;	/* Add Request Tx Buffer 23 - AR */
		unsigned int AR24           : 1;	/* Add Request Tx Buffer 24 - AR */
		unsigned int AR25           : 1;	/* Add Request Tx Buffer 25 - AR */
		unsigned int AR26           : 1;	/* Add Request Tx Buffer 26 - AR */
		unsigned int AR27           : 1;	/* Add Request Tx Buffer 27 - AR */
		unsigned int AR28           : 1;	/* Add Request Tx Buffer 28 - AR */
		unsigned int AR29           : 1;	/* Add Request Tx Buffer 29 - AR */
		unsigned int AR30           : 1;	/* Add Request Tx Buffer 30 - AR */
		unsigned int AR31           : 1;	/* Add Request Tx Buffer 31 - AR */
	} B;
	int I;
	unsigned int U;

} CAN0_TXBAR0_type;
#define CAN0_TXBAR0	(*( CAN0_TXBAR0_type *) 0xf02082d0u)	/* Tx Buffer Add Request 0 */
#define CAN0_TXBAR1	(*( CAN0_TXBAR0_type *) 0xf02086d0u)	/* Tx Buffer Add Request 1 */
#define CAN0_TXBAR2	(*( CAN0_TXBAR0_type *) 0xf0208ad0u)	/* Tx Buffer Add Request 2 */
#define CAN0_TXBAR3	(*( CAN0_TXBAR0_type *) 0xf0208ed0u)	/* Tx Buffer Add Request 3 */
#define CAN1_TXBAR0	(*( CAN0_TXBAR0_type *) 0xf02182d0u)	/* Tx Buffer Add Request 0 */
#define CAN1_TXBAR1	(*( CAN0_TXBAR0_type *) 0xf02186d0u)	/* Tx Buffer Add Request 1 */
#define CAN1_TXBAR2	(*( CAN0_TXBAR0_type *) 0xf0218ad0u)	/* Tx Buffer Add Request 2 */
#define CAN1_TXBAR3	(*( CAN0_TXBAR0_type *) 0xf0218ed0u)	/* Tx Buffer Add Request 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int TBSA           : 14;	/* Tx Buffers Start Address */
		unsigned int NDTB           : 6;	/* Number of Dedicated Transmit Buffers */
		unsigned int                : 2;
		unsigned int TFQS           : 6;	/* Transmit FIFO/Queue Size */
		unsigned int TFQM           : 1;	/* Tx FIFO/Queue Mode */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} CAN0_TXBC0_type;
#define CAN0_TXBC0	(*( CAN0_TXBC0_type *) 0xf02082c0u)	/* Tx Buffer Configuration 0 */
#define CAN0_TXBC1	(*( CAN0_TXBC0_type *) 0xf02086c0u)	/* Tx Buffer Configuration 1 */
#define CAN0_TXBC2	(*( CAN0_TXBC0_type *) 0xf0208ac0u)	/* Tx Buffer Configuration 2 */
#define CAN0_TXBC3	(*( CAN0_TXBC0_type *) 0xf0208ec0u)	/* Tx Buffer Configuration 3 */
#define CAN1_TXBC0	(*( CAN0_TXBC0_type *) 0xf02182c0u)	/* Tx Buffer Configuration 0 */
#define CAN1_TXBC1	(*( CAN0_TXBC0_type *) 0xf02186c0u)	/* Tx Buffer Configuration 1 */
#define CAN1_TXBC2	(*( CAN0_TXBC0_type *) 0xf0218ac0u)	/* Tx Buffer Configuration 2 */
#define CAN1_TXBC3	(*( CAN0_TXBC0_type *) 0xf0218ec0u)	/* Tx Buffer Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CF0            : 1;	/* Cancellation Finished Tx Buffer 0 - CF */
		/* const */ unsigned int CF1            : 1;	/* Cancellation Finished Tx Buffer 1 - CF */
		/* const */ unsigned int CF2            : 1;	/* Cancellation Finished Tx Buffer 2 - CF */
		/* const */ unsigned int CF3            : 1;	/* Cancellation Finished Tx Buffer 3 - CF */
		/* const */ unsigned int CF4            : 1;	/* Cancellation Finished Tx Buffer 4 - CF */
		/* const */ unsigned int CF5            : 1;	/* Cancellation Finished Tx Buffer 5 - CF */
		/* const */ unsigned int CF6            : 1;	/* Cancellation Finished Tx Buffer 6 - CF */
		/* const */ unsigned int CF7            : 1;	/* Cancellation Finished Tx Buffer 7 - CF */
		/* const */ unsigned int CF8            : 1;	/* Cancellation Finished Tx Buffer 8 - CF */
		/* const */ unsigned int CF9            : 1;	/* Cancellation Finished Tx Buffer 9 - CF */
		/* const */ unsigned int CF10           : 1;	/* Cancellation Finished Tx Buffer 10 - CF */
		/* const */ unsigned int CF11           : 1;	/* Cancellation Finished Tx Buffer 11 - CF */
		/* const */ unsigned int CF12           : 1;	/* Cancellation Finished Tx Buffer 12 - CF */
		/* const */ unsigned int CF13           : 1;	/* Cancellation Finished Tx Buffer 13 - CF */
		/* const */ unsigned int CF14           : 1;	/* Cancellation Finished Tx Buffer 14 - CF */
		/* const */ unsigned int CF15           : 1;	/* Cancellation Finished Tx Buffer 15 - CF */
		/* const */ unsigned int CF16           : 1;	/* Cancellation Finished Tx Buffer 16 - CF */
		/* const */ unsigned int CF17           : 1;	/* Cancellation Finished Tx Buffer 17 - CF */
		/* const */ unsigned int CF18           : 1;	/* Cancellation Finished Tx Buffer 18 - CF */
		/* const */ unsigned int CF19           : 1;	/* Cancellation Finished Tx Buffer 19 - CF */
		/* const */ unsigned int CF20           : 1;	/* Cancellation Finished Tx Buffer 20 - CF */
		/* const */ unsigned int CF21           : 1;	/* Cancellation Finished Tx Buffer 21 - CF */
		/* const */ unsigned int CF22           : 1;	/* Cancellation Finished Tx Buffer 22 - CF */
		/* const */ unsigned int CF23           : 1;	/* Cancellation Finished Tx Buffer 23 - CF */
		/* const */ unsigned int CF24           : 1;	/* Cancellation Finished Tx Buffer 24 - CF */
		/* const */ unsigned int CF25           : 1;	/* Cancellation Finished Tx Buffer 25 - CF */
		/* const */ unsigned int CF26           : 1;	/* Cancellation Finished Tx Buffer 26 - CF */
		/* const */ unsigned int CF27           : 1;	/* Cancellation Finished Tx Buffer 27 - CF */
		/* const */ unsigned int CF28           : 1;	/* Cancellation Finished Tx Buffer 28 - CF */
		/* const */ unsigned int CF29           : 1;	/* Cancellation Finished Tx Buffer 29 - CF */
		/* const */ unsigned int CF30           : 1;	/* Cancellation Finished Tx Buffer 30 - CF */
		/* const */ unsigned int CF31           : 1;	/* Cancellation Finished Tx Buffer 31 - CF */
	} B;
	int I;
	unsigned int U;

} CAN0_TXBCF0_type;
#define CAN0_TXBCF0	(*( CAN0_TXBCF0_type *) 0xf02082dcu)	/* Tx Buffer Cancellation Finished 0 */
#define CAN0_TXBCF1	(*( CAN0_TXBCF0_type *) 0xf02086dcu)	/* Tx Buffer Cancellation Finished 1 */
#define CAN0_TXBCF2	(*( CAN0_TXBCF0_type *) 0xf0208adcu)	/* Tx Buffer Cancellation Finished 2 */
#define CAN0_TXBCF3	(*( CAN0_TXBCF0_type *) 0xf0208edcu)	/* Tx Buffer Cancellation Finished 3 */
#define CAN1_TXBCF0	(*( CAN0_TXBCF0_type *) 0xf02182dcu)	/* Tx Buffer Cancellation Finished 0 */
#define CAN1_TXBCF1	(*( CAN0_TXBCF0_type *) 0xf02186dcu)	/* Tx Buffer Cancellation Finished 1 */
#define CAN1_TXBCF2	(*( CAN0_TXBCF0_type *) 0xf0218adcu)	/* Tx Buffer Cancellation Finished 2 */
#define CAN1_TXBCF3	(*( CAN0_TXBCF0_type *) 0xf0218edcu)	/* Tx Buffer Cancellation Finished 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int CFIE0          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 0 - CFIE */
		unsigned int CFIE1          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 1 - CFIE */
		unsigned int CFIE2          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 2 - CFIE */
		unsigned int CFIE3          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 3 - CFIE */
		unsigned int CFIE4          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 4 - CFIE */
		unsigned int CFIE5          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 5 - CFIE */
		unsigned int CFIE6          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 6 - CFIE */
		unsigned int CFIE7          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 7 - CFIE */
		unsigned int CFIE8          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 8 - CFIE */
		unsigned int CFIE9          : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 9 - CFIE */
		unsigned int CFIE10         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 10 - CFIE */
		unsigned int CFIE11         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 11 - CFIE */
		unsigned int CFIE12         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 12 - CFIE */
		unsigned int CFIE13         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 13 - CFIE */
		unsigned int CFIE14         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 14 - CFIE */
		unsigned int CFIE15         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 15 - CFIE */
		unsigned int CFIE16         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 16 - CFIE */
		unsigned int CFIE17         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 17 - CFIE */
		unsigned int CFIE18         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 18 - CFIE */
		unsigned int CFIE19         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 19 - CFIE */
		unsigned int CFIE20         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 20 - CFIE */
		unsigned int CFIE21         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 21 - CFIE */
		unsigned int CFIE22         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 22 - CFIE */
		unsigned int CFIE23         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 23 - CFIE */
		unsigned int CFIE24         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 24 - CFIE */
		unsigned int CFIE25         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 25 - CFIE */
		unsigned int CFIE26         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 26 - CFIE */
		unsigned int CFIE27         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 27 - CFIE */
		unsigned int CFIE28         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 28 - CFIE */
		unsigned int CFIE29         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 29 - CFIE */
		unsigned int CFIE30         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 30 - CFIE */
		unsigned int CFIE31         : 1;	/* Cancellation Finished Interrupt Enable Tx Buffer 31 - CFIE */
	} B;
	int I;
	unsigned int U;

} CAN0_TXBCIE0_type;
#define CAN0_TXBCIE0	(*( CAN0_TXBCIE0_type *) 0xf02082e4u)	/* Tx Buffer Cancellation Finished Interrupt Enable 0 */
#define CAN0_TXBCIE1	(*( CAN0_TXBCIE0_type *) 0xf02086e4u)	/* Tx Buffer Cancellation Finished Interrupt Enable 1 */
#define CAN0_TXBCIE2	(*( CAN0_TXBCIE0_type *) 0xf0208ae4u)	/* Tx Buffer Cancellation Finished Interrupt Enable 2 */
#define CAN0_TXBCIE3	(*( CAN0_TXBCIE0_type *) 0xf0208ee4u)	/* Tx Buffer Cancellation Finished Interrupt Enable 3 */
#define CAN1_TXBCIE0	(*( CAN0_TXBCIE0_type *) 0xf02182e4u)	/* Tx Buffer Cancellation Finished Interrupt Enable 0 */
#define CAN1_TXBCIE1	(*( CAN0_TXBCIE0_type *) 0xf02186e4u)	/* Tx Buffer Cancellation Finished Interrupt Enable 1 */
#define CAN1_TXBCIE2	(*( CAN0_TXBCIE0_type *) 0xf0218ae4u)	/* Tx Buffer Cancellation Finished Interrupt Enable 2 */
#define CAN1_TXBCIE3	(*( CAN0_TXBCIE0_type *) 0xf0218ee4u)	/* Tx Buffer Cancellation Finished Interrupt Enable 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int CR0            : 1;	/* Cancellation Request Tx Buffer 0 - CR */
		unsigned int CR1            : 1;	/* Cancellation Request Tx Buffer 1 - CR */
		unsigned int CR2            : 1;	/* Cancellation Request Tx Buffer 2 - CR */
		unsigned int CR3            : 1;	/* Cancellation Request Tx Buffer 3 - CR */
		unsigned int CR4            : 1;	/* Cancellation Request Tx Buffer 4 - CR */
		unsigned int CR5            : 1;	/* Cancellation Request Tx Buffer 5 - CR */
		unsigned int CR6            : 1;	/* Cancellation Request Tx Buffer 6 - CR */
		unsigned int CR7            : 1;	/* Cancellation Request Tx Buffer 7 - CR */
		unsigned int CR8            : 1;	/* Cancellation Request Tx Buffer 8 - CR */
		unsigned int CR9            : 1;	/* Cancellation Request Tx Buffer 9 - CR */
		unsigned int CR10           : 1;	/* Cancellation Request Tx Buffer 10 - CR */
		unsigned int CR11           : 1;	/* Cancellation Request Tx Buffer 11 - CR */
		unsigned int CR12           : 1;	/* Cancellation Request Tx Buffer 12 - CR */
		unsigned int CR13           : 1;	/* Cancellation Request Tx Buffer 13 - CR */
		unsigned int CR14           : 1;	/* Cancellation Request Tx Buffer 14 - CR */
		unsigned int CR15           : 1;	/* Cancellation Request Tx Buffer 15 - CR */
		unsigned int CR16           : 1;	/* Cancellation Request Tx Buffer 16 - CR */
		unsigned int CR17           : 1;	/* Cancellation Request Tx Buffer 17 - CR */
		unsigned int CR18           : 1;	/* Cancellation Request Tx Buffer 18 - CR */
		unsigned int CR19           : 1;	/* Cancellation Request Tx Buffer 19 - CR */
		unsigned int CR20           : 1;	/* Cancellation Request Tx Buffer 20 - CR */
		unsigned int CR21           : 1;	/* Cancellation Request Tx Buffer 21 - CR */
		unsigned int CR22           : 1;	/* Cancellation Request Tx Buffer 22 - CR */
		unsigned int CR23           : 1;	/* Cancellation Request Tx Buffer 23 - CR */
		unsigned int CR24           : 1;	/* Cancellation Request Tx Buffer 24 - CR */
		unsigned int CR25           : 1;	/* Cancellation Request Tx Buffer 25 - CR */
		unsigned int CR26           : 1;	/* Cancellation Request Tx Buffer 26 - CR */
		unsigned int CR27           : 1;	/* Cancellation Request Tx Buffer 27 - CR */
		unsigned int CR28           : 1;	/* Cancellation Request Tx Buffer 28 - CR */
		unsigned int CR29           : 1;	/* Cancellation Request Tx Buffer 29 - CR */
		unsigned int CR30           : 1;	/* Cancellation Request Tx Buffer 30 - CR */
		unsigned int CR31           : 1;	/* Cancellation Request Tx Buffer 31 - CR */
	} B;
	int I;
	unsigned int U;

} CAN0_TXBCR0_type;
#define CAN0_TXBCR0	(*( CAN0_TXBCR0_type *) 0xf02082d4u)	/* Tx Buffer Cancellation Request 0 */
#define CAN0_TXBCR1	(*( CAN0_TXBCR0_type *) 0xf02086d4u)	/* Tx Buffer Cancellation Request 1 */
#define CAN0_TXBCR2	(*( CAN0_TXBCR0_type *) 0xf0208ad4u)	/* Tx Buffer Cancellation Request 2 */
#define CAN0_TXBCR3	(*( CAN0_TXBCR0_type *) 0xf0208ed4u)	/* Tx Buffer Cancellation Request 3 */
#define CAN1_TXBCR0	(*( CAN0_TXBCR0_type *) 0xf02182d4u)	/* Tx Buffer Cancellation Request 0 */
#define CAN1_TXBCR1	(*( CAN0_TXBCR0_type *) 0xf02186d4u)	/* Tx Buffer Cancellation Request 1 */
#define CAN1_TXBCR2	(*( CAN0_TXBCR0_type *) 0xf0218ad4u)	/* Tx Buffer Cancellation Request 2 */
#define CAN1_TXBCR3	(*( CAN0_TXBCR0_type *) 0xf0218ed4u)	/* Tx Buffer Cancellation Request 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TRP0           : 1;	/* Transmission Request Pending Tx Buffer 0 - TRP */
		/* const */ unsigned int TRP1           : 1;	/* Transmission Request Pending Tx Buffer 1 - TRP */
		/* const */ unsigned int TRP2           : 1;	/* Transmission Request Pending Tx Buffer 2 - TRP */
		/* const */ unsigned int TRP3           : 1;	/* Transmission Request Pending Tx Buffer 3 - TRP */
		/* const */ unsigned int TRP4           : 1;	/* Transmission Request Pending Tx Buffer 4 - TRP */
		/* const */ unsigned int TRP5           : 1;	/* Transmission Request Pending Tx Buffer 5 - TRP */
		/* const */ unsigned int TRP6           : 1;	/* Transmission Request Pending Tx Buffer 6 - TRP */
		/* const */ unsigned int TRP7           : 1;	/* Transmission Request Pending Tx Buffer 7 - TRP */
		/* const */ unsigned int TRP8           : 1;	/* Transmission Request Pending Tx Buffer 8 - TRP */
		/* const */ unsigned int TRP9           : 1;	/* Transmission Request Pending Tx Buffer 9 - TRP */
		/* const */ unsigned int TRP10          : 1;	/* Transmission Request Pending Tx Buffer 10 - TRP */
		/* const */ unsigned int TRP11          : 1;	/* Transmission Request Pending Tx Buffer 11 - TRP */
		/* const */ unsigned int TRP12          : 1;	/* Transmission Request Pending Tx Buffer 12 - TRP */
		/* const */ unsigned int TRP13          : 1;	/* Transmission Request Pending Tx Buffer 13 - TRP */
		/* const */ unsigned int TRP14          : 1;	/* Transmission Request Pending Tx Buffer 14 - TRP */
		/* const */ unsigned int TRP15          : 1;	/* Transmission Request Pending Tx Buffer 15 - TRP */
		/* const */ unsigned int TRP16          : 1;	/* Transmission Request Pending Tx Buffer 16 - TRP */
		/* const */ unsigned int TRP17          : 1;	/* Transmission Request Pending Tx Buffer 17 - TRP */
		/* const */ unsigned int TRP18          : 1;	/* Transmission Request Pending Tx Buffer 18 - TRP */
		/* const */ unsigned int TRP19          : 1;	/* Transmission Request Pending Tx Buffer 19 - TRP */
		/* const */ unsigned int TRP20          : 1;	/* Transmission Request Pending Tx Buffer 20 - TRP */
		/* const */ unsigned int TRP21          : 1;	/* Transmission Request Pending Tx Buffer 21 - TRP */
		/* const */ unsigned int TRP22          : 1;	/* Transmission Request Pending Tx Buffer 22 - TRP */
		/* const */ unsigned int TRP23          : 1;	/* Transmission Request Pending Tx Buffer 23 - TRP */
		/* const */ unsigned int TRP24          : 1;	/* Transmission Request Pending Tx Buffer 24 - TRP */
		/* const */ unsigned int TRP25          : 1;	/* Transmission Request Pending Tx Buffer 25 - TRP */
		/* const */ unsigned int TRP26          : 1;	/* Transmission Request Pending Tx Buffer 26 - TRP */
		/* const */ unsigned int TRP27          : 1;	/* Transmission Request Pending Tx Buffer 27 - TRP */
		/* const */ unsigned int TRP28          : 1;	/* Transmission Request Pending Tx Buffer 28 - TRP */
		/* const */ unsigned int TRP29          : 1;	/* Transmission Request Pending Tx Buffer 29 - TRP */
		/* const */ unsigned int TRP30          : 1;	/* Transmission Request Pending Tx Buffer 30 - TRP */
		/* const */ unsigned int TRP31          : 1;	/* Transmission Request Pending Tx Buffer 31 - TRP */
	} B;
	int I;
	unsigned int U;

} CAN0_TXBRP0_type;
#define CAN0_TXBRP0	(*( CAN0_TXBRP0_type *) 0xf02082ccu)	/* Tx Buffer Request Pending 0 */
#define CAN0_TXBRP1	(*( CAN0_TXBRP0_type *) 0xf02086ccu)	/* Tx Buffer Request Pending 1 */
#define CAN0_TXBRP2	(*( CAN0_TXBRP0_type *) 0xf0208accu)	/* Tx Buffer Request Pending 2 */
#define CAN0_TXBRP3	(*( CAN0_TXBRP0_type *) 0xf0208eccu)	/* Tx Buffer Request Pending 3 */
#define CAN1_TXBRP0	(*( CAN0_TXBRP0_type *) 0xf02182ccu)	/* Tx Buffer Request Pending 0 */
#define CAN1_TXBRP1	(*( CAN0_TXBRP0_type *) 0xf02186ccu)	/* Tx Buffer Request Pending 1 */
#define CAN1_TXBRP2	(*( CAN0_TXBRP0_type *) 0xf0218accu)	/* Tx Buffer Request Pending 2 */
#define CAN1_TXBRP3	(*( CAN0_TXBRP0_type *) 0xf0218eccu)	/* Tx Buffer Request Pending 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TIE0           : 1;	/* Transmission Interrupt Enable Tx Buffer 0 - TIE */
		unsigned int TIE1           : 1;	/* Transmission Interrupt Enable Tx Buffer 1 - TIE */
		unsigned int TIE2           : 1;	/* Transmission Interrupt Enable Tx Buffer 2 - TIE */
		unsigned int TIE3           : 1;	/* Transmission Interrupt Enable Tx Buffer 3 - TIE */
		unsigned int TIE4           : 1;	/* Transmission Interrupt Enable Tx Buffer 4 - TIE */
		unsigned int TIE5           : 1;	/* Transmission Interrupt Enable Tx Buffer 5 - TIE */
		unsigned int TIE6           : 1;	/* Transmission Interrupt Enable Tx Buffer 6 - TIE */
		unsigned int TIE7           : 1;	/* Transmission Interrupt Enable Tx Buffer 7 - TIE */
		unsigned int TIE8           : 1;	/* Transmission Interrupt Enable Tx Buffer 8 - TIE */
		unsigned int TIE9           : 1;	/* Transmission Interrupt Enable Tx Buffer 9 - TIE */
		unsigned int TIE10          : 1;	/* Transmission Interrupt Enable Tx Buffer 10 - TIE */
		unsigned int TIE11          : 1;	/* Transmission Interrupt Enable Tx Buffer 11 - TIE */
		unsigned int TIE12          : 1;	/* Transmission Interrupt Enable Tx Buffer 12 - TIE */
		unsigned int TIE13          : 1;	/* Transmission Interrupt Enable Tx Buffer 13 - TIE */
		unsigned int TIE14          : 1;	/* Transmission Interrupt Enable Tx Buffer 14 - TIE */
		unsigned int TIE15          : 1;	/* Transmission Interrupt Enable Tx Buffer 15 - TIE */
		unsigned int TIE16          : 1;	/* Transmission Interrupt Enable Tx Buffer 16 - TIE */
		unsigned int TIE17          : 1;	/* Transmission Interrupt Enable Tx Buffer 17 - TIE */
		unsigned int TIE18          : 1;	/* Transmission Interrupt Enable Tx Buffer 18 - TIE */
		unsigned int TIE19          : 1;	/* Transmission Interrupt Enable Tx Buffer 19 - TIE */
		unsigned int TIE20          : 1;	/* Transmission Interrupt Enable Tx Buffer 20 - TIE */
		unsigned int TIE21          : 1;	/* Transmission Interrupt Enable Tx Buffer 21 - TIE */
		unsigned int TIE22          : 1;	/* Transmission Interrupt Enable Tx Buffer 22 - TIE */
		unsigned int TIE23          : 1;	/* Transmission Interrupt Enable Tx Buffer 23 - TIE */
		unsigned int TIE24          : 1;	/* Transmission Interrupt Enable Tx Buffer 24 - TIE */
		unsigned int TIE25          : 1;	/* Transmission Interrupt Enable Tx Buffer 25 - TIE */
		unsigned int TIE26          : 1;	/* Transmission Interrupt Enable Tx Buffer 26 - TIE */
		unsigned int TIE27          : 1;	/* Transmission Interrupt Enable Tx Buffer 27 - TIE */
		unsigned int TIE28          : 1;	/* Transmission Interrupt Enable Tx Buffer 28 - TIE */
		unsigned int TIE29          : 1;	/* Transmission Interrupt Enable Tx Buffer 29 - TIE */
		unsigned int TIE30          : 1;	/* Transmission Interrupt Enable Tx Buffer 30 - TIE */
		unsigned int TIE31          : 1;	/* Transmission Interrupt Enable Tx Buffer 31 - TIE */
	} B;
	int I;
	unsigned int U;

} CAN0_TXBTIE0_type;
#define CAN0_TXBTIE0	(*( CAN0_TXBTIE0_type *) 0xf02082e0u)	/* Tx Buffer Transmission Interrupt Enable 0 */
#define CAN0_TXBTIE1	(*( CAN0_TXBTIE0_type *) 0xf02086e0u)	/* Tx Buffer Transmission Interrupt Enable 1 */
#define CAN0_TXBTIE2	(*( CAN0_TXBTIE0_type *) 0xf0208ae0u)	/* Tx Buffer Transmission Interrupt Enable 2 */
#define CAN0_TXBTIE3	(*( CAN0_TXBTIE0_type *) 0xf0208ee0u)	/* Tx Buffer Transmission Interrupt Enable 3 */
#define CAN1_TXBTIE0	(*( CAN0_TXBTIE0_type *) 0xf02182e0u)	/* Tx Buffer Transmission Interrupt Enable 0 */
#define CAN1_TXBTIE1	(*( CAN0_TXBTIE0_type *) 0xf02186e0u)	/* Tx Buffer Transmission Interrupt Enable 1 */
#define CAN1_TXBTIE2	(*( CAN0_TXBTIE0_type *) 0xf0218ae0u)	/* Tx Buffer Transmission Interrupt Enable 2 */
#define CAN1_TXBTIE3	(*( CAN0_TXBTIE0_type *) 0xf0218ee0u)	/* Tx Buffer Transmission Interrupt Enable 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TO0            : 1;	/* Transmission Occurred Tx Buffer 0 - TO */
		/* const */ unsigned int TO1            : 1;	/* Transmission Occurred Tx Buffer 1 - TO */
		/* const */ unsigned int TO2            : 1;	/* Transmission Occurred Tx Buffer 2 - TO */
		/* const */ unsigned int TO3            : 1;	/* Transmission Occurred Tx Buffer 3 - TO */
		/* const */ unsigned int TO4            : 1;	/* Transmission Occurred Tx Buffer 4 - TO */
		/* const */ unsigned int TO5            : 1;	/* Transmission Occurred Tx Buffer 5 - TO */
		/* const */ unsigned int TO6            : 1;	/* Transmission Occurred Tx Buffer 6 - TO */
		/* const */ unsigned int TO7            : 1;	/* Transmission Occurred Tx Buffer 7 - TO */
		/* const */ unsigned int TO8            : 1;	/* Transmission Occurred Tx Buffer 8 - TO */
		/* const */ unsigned int TO9            : 1;	/* Transmission Occurred Tx Buffer 9 - TO */
		/* const */ unsigned int TO10           : 1;	/* Transmission Occurred Tx Buffer 10 - TO */
		/* const */ unsigned int TO11           : 1;	/* Transmission Occurred Tx Buffer 11 - TO */
		/* const */ unsigned int TO12           : 1;	/* Transmission Occurred Tx Buffer 12 - TO */
		/* const */ unsigned int TO13           : 1;	/* Transmission Occurred Tx Buffer 13 - TO */
		/* const */ unsigned int TO14           : 1;	/* Transmission Occurred Tx Buffer 14 - TO */
		/* const */ unsigned int TO15           : 1;	/* Transmission Occurred Tx Buffer 15 - TO */
		/* const */ unsigned int TO16           : 1;	/* Transmission Occurred Tx Buffer 16 - TO */
		/* const */ unsigned int TO17           : 1;	/* Transmission Occurred Tx Buffer 17 - TO */
		/* const */ unsigned int TO18           : 1;	/* Transmission Occurred Tx Buffer 18 - TO */
		/* const */ unsigned int TO19           : 1;	/* Transmission Occurred Tx Buffer 19 - TO */
		/* const */ unsigned int TO20           : 1;	/* Transmission Occurred Tx Buffer 20 - TO */
		/* const */ unsigned int TO21           : 1;	/* Transmission Occurred Tx Buffer 21 - TO */
		/* const */ unsigned int TO22           : 1;	/* Transmission Occurred Tx Buffer 22 - TO */
		/* const */ unsigned int TO23           : 1;	/* Transmission Occurred Tx Buffer 23 - TO */
		/* const */ unsigned int TO24           : 1;	/* Transmission Occurred Tx Buffer 24 - TO */
		/* const */ unsigned int TO25           : 1;	/* Transmission Occurred Tx Buffer 25 - TO */
		/* const */ unsigned int TO26           : 1;	/* Transmission Occurred Tx Buffer 26 - TO */
		/* const */ unsigned int TO27           : 1;	/* Transmission Occurred Tx Buffer 27 - TO */
		/* const */ unsigned int TO28           : 1;	/* Transmission Occurred Tx Buffer 28 - TO */
		/* const */ unsigned int TO29           : 1;	/* Transmission Occurred Tx Buffer 29 - TO */
		/* const */ unsigned int TO30           : 1;	/* Transmission Occurred Tx Buffer 30 - TO */
		/* const */ unsigned int TO31           : 1;	/* Transmission Occurred Tx Buffer 31 - TO */
	} B;
	int I;
	unsigned int U;

} CAN0_TXBTO0_type;
#define CAN0_TXBTO0	(*( CAN0_TXBTO0_type *) 0xf02082d8u)	/* Tx Buffer Transmission Occurred 0 */
#define CAN0_TXBTO1	(*( CAN0_TXBTO0_type *) 0xf02086d8u)	/* Tx Buffer Transmission Occurred 1 */
#define CAN0_TXBTO2	(*( CAN0_TXBTO0_type *) 0xf0208ad8u)	/* Tx Buffer Transmission Occurred 2 */
#define CAN0_TXBTO3	(*( CAN0_TXBTO0_type *) 0xf0208ed8u)	/* Tx Buffer Transmission Occurred 3 */
#define CAN1_TXBTO0	(*( CAN0_TXBTO0_type *) 0xf02182d8u)	/* Tx Buffer Transmission Occurred 0 */
#define CAN1_TXBTO1	(*( CAN0_TXBTO0_type *) 0xf02186d8u)	/* Tx Buffer Transmission Occurred 1 */
#define CAN1_TXBTO2	(*( CAN0_TXBTO0_type *) 0xf0218ad8u)	/* Tx Buffer Transmission Occurred 2 */
#define CAN1_TXBTO3	(*( CAN0_TXBTO0_type *) 0xf0218ed8u)	/* Tx Buffer Transmission Occurred 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int EFAI           : 5;	/* Event FIFO Acknowledge Index */
		unsigned int                : 27;
	} B;
	int I;
	unsigned int U;

} CAN0_TXEFA0_type;
#define CAN0_TXEFA0	(*( CAN0_TXEFA0_type *) 0xf02082f8u)	/* Tx Event FIFO Acknowledge 0 */
#define CAN0_TXEFA1	(*( CAN0_TXEFA0_type *) 0xf02086f8u)	/* Tx Event FIFO Acknowledge 1 */
#define CAN0_TXEFA2	(*( CAN0_TXEFA0_type *) 0xf0208af8u)	/* Tx Event FIFO Acknowledge 2 */
#define CAN0_TXEFA3	(*( CAN0_TXEFA0_type *) 0xf0208ef8u)	/* Tx Event FIFO Acknowledge 3 */
#define CAN1_TXEFA0	(*( CAN0_TXEFA0_type *) 0xf02182f8u)	/* Tx Event FIFO Acknowledge 0 */
#define CAN1_TXEFA1	(*( CAN0_TXEFA0_type *) 0xf02186f8u)	/* Tx Event FIFO Acknowledge 1 */
#define CAN1_TXEFA2	(*( CAN0_TXEFA0_type *) 0xf0218af8u)	/* Tx Event FIFO Acknowledge 2 */
#define CAN1_TXEFA3	(*( CAN0_TXEFA0_type *) 0xf0218ef8u)	/* Tx Event FIFO Acknowledge 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int EFSA           : 14;	/* Event FIFO Start Address */
		unsigned int EFS            : 6;	/* Event FIFO Size */
		unsigned int                : 2;
		unsigned int EFWM           : 6;	/* Event FIFO Watermark */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} CAN0_TXEFC0_type;
#define CAN0_TXEFC0	(*( CAN0_TXEFC0_type *) 0xf02082f0u)	/* Tx Event FIFO Configuration 0 */
#define CAN0_TXEFC1	(*( CAN0_TXEFC0_type *) 0xf02086f0u)	/* Tx Event FIFO Configuration 1 */
#define CAN0_TXEFC2	(*( CAN0_TXEFC0_type *) 0xf0208af0u)	/* Tx Event FIFO Configuration 2 */
#define CAN0_TXEFC3	(*( CAN0_TXEFC0_type *) 0xf0208ef0u)	/* Tx Event FIFO Configuration 3 */
#define CAN1_TXEFC0	(*( CAN0_TXEFC0_type *) 0xf02182f0u)	/* Tx Event FIFO Configuration 0 */
#define CAN1_TXEFC1	(*( CAN0_TXEFC0_type *) 0xf02186f0u)	/* Tx Event FIFO Configuration 1 */
#define CAN1_TXEFC2	(*( CAN0_TXEFC0_type *) 0xf0218af0u)	/* Tx Event FIFO Configuration 2 */
#define CAN1_TXEFC3	(*( CAN0_TXEFC0_type *) 0xf0218ef0u)	/* Tx Event FIFO Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EFFL           : 6;	/* Event FIFO Fill Level */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int EFGI           : 5;	/* Event FIFO Get Index */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int EFPI           : 5;	/* Event FIFO Put Index */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int EFF            : 1;	/* Event FIFO Full */
		/* const */ unsigned int TEFL           : 1;	/* Tx Event FIFO Element Lost */
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} CAN0_TXEFS0_type;
#define CAN0_TXEFS0	(*( CAN0_TXEFS0_type *) 0xf02082f4u)	/* Tx Event FIFO Status 0 */
#define CAN0_TXEFS1	(*( CAN0_TXEFS0_type *) 0xf02086f4u)	/* Tx Event FIFO Status 1 */
#define CAN0_TXEFS2	(*( CAN0_TXEFS0_type *) 0xf0208af4u)	/* Tx Event FIFO Status 2 */
#define CAN0_TXEFS3	(*( CAN0_TXEFS0_type *) 0xf0208ef4u)	/* Tx Event FIFO Status 3 */
#define CAN1_TXEFS0	(*( CAN0_TXEFS0_type *) 0xf02182f4u)	/* Tx Event FIFO Status 0 */
#define CAN1_TXEFS1	(*( CAN0_TXEFS0_type *) 0xf02186f4u)	/* Tx Event FIFO Status 1 */
#define CAN1_TXEFS2	(*( CAN0_TXEFS0_type *) 0xf0218af4u)	/* Tx Event FIFO Status 2 */
#define CAN1_TXEFS3	(*( CAN0_TXEFS0_type *) 0xf0218ef4u)	/* Tx Event FIFO Status 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int TBDS           : 3;	/* Tx Buffer Data Field Size */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} CAN0_TXESC0_type;
#define CAN0_TXESC0	(*( CAN0_TXESC0_type *) 0xf02082c8u)	/* Tx Buffer Element Size Configuration 0 */
#define CAN0_TXESC1	(*( CAN0_TXESC0_type *) 0xf02086c8u)	/* Tx Buffer Element Size Configuration 1 */
#define CAN0_TXESC2	(*( CAN0_TXESC0_type *) 0xf0208ac8u)	/* Tx Buffer Element Size Configuration 2 */
#define CAN0_TXESC3	(*( CAN0_TXESC0_type *) 0xf0208ec8u)	/* Tx Buffer Element Size Configuration 3 */
#define CAN1_TXESC0	(*( CAN0_TXESC0_type *) 0xf02182c8u)	/* Tx Buffer Element Size Configuration 0 */
#define CAN1_TXESC1	(*( CAN0_TXESC0_type *) 0xf02186c8u)	/* Tx Buffer Element Size Configuration 1 */
#define CAN1_TXESC2	(*( CAN0_TXESC0_type *) 0xf0218ac8u)	/* Tx Buffer Element Size Configuration 2 */
#define CAN1_TXESC3	(*( CAN0_TXESC0_type *) 0xf0218ec8u)	/* Tx Buffer Element Size Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TFFL           : 6;	/* Tx FIFO Free Level */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int TFGI           : 5;	/* Tx FIFO Get Index */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int TFQPI          : 5;	/* Tx FIFO/Queue Put Index */
		/* const */ unsigned int TFQF           : 1;	/* Tx FIFO/Queue Full */
		/* const */ unsigned int                : 10;
	} B;
	int I;
	unsigned int U;

} CAN0_TXFQS0_type;
#define CAN0_TXFQS0	(*( CAN0_TXFQS0_type *) 0xf02082c4u)	/* Tx FIFO/Queue Status 0 */
#define CAN0_TXFQS1	(*( CAN0_TXFQS0_type *) 0xf02086c4u)	/* Tx FIFO/Queue Status 1 */
#define CAN0_TXFQS2	(*( CAN0_TXFQS0_type *) 0xf0208ac4u)	/* Tx FIFO/Queue Status 2 */
#define CAN0_TXFQS3	(*( CAN0_TXFQS0_type *) 0xf0208ec4u)	/* Tx FIFO/Queue Status 3 */
#define CAN1_TXFQS0	(*( CAN0_TXFQS0_type *) 0xf02182c4u)	/* Tx FIFO/Queue Status 0 */
#define CAN1_TXFQS1	(*( CAN0_TXFQS0_type *) 0xf02186c4u)	/* Tx FIFO/Queue Status 1 */
#define CAN1_TXFQS2	(*( CAN0_TXFQS0_type *) 0xf0218ac4u)	/* Tx FIFO/Queue Status 2 */
#define CAN1_TXFQS3	(*( CAN0_TXFQS0_type *) 0xf0218ec4u)	/* Tx FIFO/Queue Status 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int EIDM           : 29;	/* Extended ID Mask */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} CAN0_XIDAM0_type;
#define CAN0_XIDAM0	(*( CAN0_XIDAM0_type *) 0xf0208290u)	/* Extended ID AND Mask 0 */
#define CAN0_XIDAM1	(*( CAN0_XIDAM0_type *) 0xf0208690u)	/* Extended ID AND Mask 1 */
#define CAN0_XIDAM2	(*( CAN0_XIDAM0_type *) 0xf0208a90u)	/* Extended ID AND Mask 2 */
#define CAN0_XIDAM3	(*( CAN0_XIDAM0_type *) 0xf0208e90u)	/* Extended ID AND Mask 3 */
#define CAN1_XIDAM0	(*( CAN0_XIDAM0_type *) 0xf0218290u)	/* Extended ID AND Mask 0 */
#define CAN1_XIDAM1	(*( CAN0_XIDAM0_type *) 0xf0218690u)	/* Extended ID AND Mask 1 */
#define CAN1_XIDAM2	(*( CAN0_XIDAM0_type *) 0xf0218a90u)	/* Extended ID AND Mask 2 */
#define CAN1_XIDAM3	(*( CAN0_XIDAM0_type *) 0xf0218e90u)	/* Extended ID AND Mask 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int FLESA          : 14;	/* Filter List Extended Start Address */
		unsigned int LSE            : 7;	/* List Size Extended */
		unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} CAN0_XIDFC0_type;
#define CAN0_XIDFC0	(*( CAN0_XIDFC0_type *) 0xf0208288u)	/* Extended ID Filter Configuration 0 */
#define CAN0_XIDFC1	(*( CAN0_XIDFC0_type *) 0xf0208688u)	/* Extended ID Filter Configuration 1 */
#define CAN0_XIDFC2	(*( CAN0_XIDFC0_type *) 0xf0208a88u)	/* Extended ID Filter Configuration 2 */
#define CAN0_XIDFC3	(*( CAN0_XIDFC0_type *) 0xf0208e88u)	/* Extended ID Filter Configuration 3 */
#define CAN1_XIDFC0	(*( CAN0_XIDFC0_type *) 0xf0218288u)	/* Extended ID Filter Configuration 0 */
#define CAN1_XIDFC1	(*( CAN0_XIDFC0_type *) 0xf0218688u)	/* Extended ID Filter Configuration 1 */
#define CAN1_XIDFC2	(*( CAN0_XIDFC0_type *) 0xf0218a88u)	/* Extended ID Filter Configuration 2 */
#define CAN1_XIDFC3	(*( CAN0_XIDFC0_type *) 0xf0218e88u)	/* Extended ID Filter Configuration 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLKSEL0        : 2;	/* Clock Select 0 */
		unsigned int CLKSEL1        : 2;	/* Clock Select 1 */
		unsigned int CLKSEL2        : 2;	/* Clock Select 2 */
		unsigned int CLKSEL3        : 2;	/* Clock Select 3 */
		unsigned int                : 20;
		/* const */ unsigned int RBUSY          : 1;	/* RAM BUSY */
		unsigned int RINIT          : 1;	/* RAM Init */
		unsigned int CI             : 1;	/* Change Init */
		unsigned int CCCE           : 1;	/* Clock and RAM Change Enable */
	} B;
	int I;
	unsigned int U;

} CAN1_MCR_type;
#define CAN1_MCR	(*( CAN1_MCR_type *) 0xf0218030u)	/* Module Control Register */


/* DMU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} DMU_HF_ACCEN0_type;
#define DMU_HF_ACCEN0	(*( DMU_HF_ACCEN0_type *) 0xf80400fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_ACCEN1_type;
#define DMU_HF_ACCEN1	(*( DMU_HF_ACCEN1_type *) 0xf80400f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CRANKING       : 2;	/* Cranking Mode Control */
		/* const */ unsigned int RES            : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_CCONTROL_type;
#define DMU_HF_CCONTROL	(*( DMU_HF_CCONTROL_type *) 0xf8040050u)	/* Cranking Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 1;	/* Reserved */
		unsigned int CSQER          : 1;	/* Clear Command Sequence Error */
		unsigned int CPROER         : 1;	/* Clear Protection Error */
		unsigned int CPVER          : 1;	/* Clear Program Verify Error */
		unsigned int CEVER          : 1;	/* Clear Erase Verify Error */
		unsigned int CADER          : 1;	/* Clear SRI Bus Address ECC Error */
		/* const */ unsigned int RES_7          : 26;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_CLRE_type;
#define DMU_HF_CLRE	(*( DMU_HF_CLRE_type *) 0xf8040038u)	/* Clear Error Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PROINBMHD0O    : 2;	/* UCB_BMHD0_ORIG Confirmation */
		/* const */ unsigned int PROINBMHD1O    : 2;	/* UCB_BMHD1_ORIG Confirmation */
		/* const */ unsigned int PROINBMHD2O    : 2;	/* UCB_BMHD2_ORIG Confirmation */
		/* const */ unsigned int PROINBMHD3O    : 2;	/* UCB_BMHD3_ORIG Confirmation */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		/* const */ unsigned int PROINUSER      : 2;	/* UCB_USER Confirmation */
		/* const */ unsigned int PROINTEST      : 2;	/* UCB_TEST Confirmation */
		/* const */ unsigned int PROINHSMCFG    : 2;	/* UCB_HSMCFG Confirmation */
		/* const */ unsigned int PROINBMHD0C    : 2;	/* UCB_BMHD0_COPY Confirmation */
		/* const */ unsigned int PROINBMHD1C    : 2;	/* UCB_BMHD1_COPY Confirmation */
		/* const */ unsigned int PROINBMHD2C    : 2;	/* UCB_BMHD2_COPY Confirmation */
		/* const */ unsigned int PROINBMHD3C    : 2;	/* UCB_BMHD3_COPY Confirmation */
		/* const */ unsigned int PROINREDSEC    : 2;	/* UCB_REDSEC Confirmation */
		/* const */ unsigned int RES_14         : 4;	/* Reserved */
		/* const */ unsigned int PROINSRT       : 2;	/* UCB_RETEST Confirmation */
	} B;
	int I;
	unsigned int U;

} DMU_HF_CONFIRM0_type;
#define DMU_HF_CONFIRM0	(*( DMU_HF_CONFIRM0_type *) 0xf8040020u)	/* Flash Confirm Status Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PROINPO        : 2;	/* UCB_PFLASH_ORIG Confirmation */
		/* const */ unsigned int PROINDO        : 2;	/* UCB_DFLASH_ORIG Confirmation */
		/* const */ unsigned int PROINDBGO      : 2;	/* UCB_DBG_ORIG Confirmation */
		/* const */ unsigned int PROINHSMO      : 2;	/* UCB_HSM_ORIG Confirmation */
		/* const */ unsigned int PROINHSMCOTP0O : 2;	/* UCB_HSMCOTP0_ORIG Protection */
		/* const */ unsigned int PROINHSMCOTP1O : 2;	/* UCB_HSMCOTP1_ORIG Protection */
		/* const */ unsigned int PROINECO       : 2;	/* UCB_ECPRIO_ORIG Confirmation */
		/* const */ unsigned int PROINSWAPO     : 2;	/* UCB_SWAP_ORIG Confirmation */
		/* const */ unsigned int PROINPC        : 2;	/* UCB_PFLASH_COPY Confirmation */
		/* const */ unsigned int PROINDC        : 2;	/* UCB_DFLASH_COPY Confirmation */
		/* const */ unsigned int PROINDBGC      : 2;	/* UCB_DBG_COPY Interface Confirmation */
		/* const */ unsigned int PROINHSMC      : 2;	/* UCB_HSM_COPY Confirmation */
		/* const */ unsigned int PROINHSMCOTP0C : 2;	/* UCB_HSMCOTP0_COPY Protection */
		/* const */ unsigned int PROINHSMCOTP1C : 2;	/* UCB_HSMCOTP1_COPY Protection */
		/* const */ unsigned int PROINECC       : 2;	/* UCB_ECPRIO_COPY Confirmation */
		/* const */ unsigned int PROINSWAPC     : 2;	/* UCB_SWAP_COPY Confirmation */
	} B;
	int I;
	unsigned int U;

} DMU_HF_CONFIRM1_type;
#define DMU_HF_CONFIRM1	(*( DMU_HF_CONFIRM1_type *) 0xf8040024u)	/* Flash Confirm Status Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PROINOTP0O     : 2;	/* UCB_OTP0_ORIG Confirmation */
		/* const */ unsigned int PROINOTP1O     : 2;	/* UCB_OTP1_ORIG Confirmation */
		/* const */ unsigned int PROINOTP2O     : 2;	/* UCB_OTP2_ORIG Confirmation */
		/* const */ unsigned int PROINOTP3O     : 2;	/* UCB_OTP3_ORIG Confirmation */
		/* const */ unsigned int PROINOTP4O     : 2;	/* UCB_OTP4_ORIG Confirmation */
		/* const */ unsigned int PROINOTP5O     : 2;	/* UCB_OTP5_ORIG Confirmation */
		/* const */ unsigned int PROINOTP6O     : 2;	/* UCB_OTP6_ORIG Confirmation */
		/* const */ unsigned int PROINOTP7O     : 2;	/* UCB_OTP7_ORIG Confirmation */
		/* const */ unsigned int PROINOTP0C     : 2;	/* UCB_OTP0_COPY Confirmation */
		/* const */ unsigned int PROINOTP1C     : 2;	/* UCB_OTP1_COPY Confirmation */
		/* const */ unsigned int PROINOTP2C     : 2;	/* UCB_OTP2_COPY Confirmation */
		/* const */ unsigned int PROINOTP3C     : 2;	/* UCB_OTP3_COPY Confirmation */
		/* const */ unsigned int PROINOTP4C     : 2;	/* UCB_OTP4_COPY Confirmation */
		/* const */ unsigned int PROINOTP5C     : 2;	/* UCB_OTP5_COPY Confirmation */
		/* const */ unsigned int PROINOTP6C     : 2;	/* UCB_OTP6_COPY Confirmation */
		/* const */ unsigned int PROINOTP7C     : 2;	/* UCB_OTP7_COPY Confirmation */
	} B;
	int I;
	unsigned int U;

} DMU_HF_CONFIRM2_type;
#define DMU_HF_CONFIRM2	(*( DMU_HF_CONFIRM2_type *) 0xf8040028u)	/* Flash Confirm Status Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 3;	/* Reserved */
		unsigned int DUCG           : 1;	/* DFLASH User Command Granularity */
		unsigned int FSIENPE        : 2;	/* Enable Program/Erase */
		/* const */ unsigned int RES_4          : 1;	/* Reserved */
		unsigned int WSERRINJ       : 1;	/* PFlash Wait State ECC error injection */
		unsigned int DDFP           : 1;	/* Disable Read from PFLASH */
		unsigned int DDFD           : 1;	/* Disable Data Fetch from DF0_EEPROM */
		/* const */ unsigned int RES_8          : 6;	/* Reserved */
		unsigned int CPROG          : 1;	/* Clear Programming State */
		unsigned int CERASE         : 1;	/* Clear Erase State */
		/* const */ unsigned int RES_11         : 1;	/* Reserved */
		/* const */ unsigned int RES_12         : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_CONTROL_type;
#define DMU_HF_CONTROL	(*( DMU_HF_CONTROL_type *) 0xf8040014u)	/* Flash Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RFLASH         : 8;	/* Operation Mode */
		/* const */ unsigned int RES            : 8;	/* Reserved */
		unsigned int RECC           : 3;	/* Operation Mode */
		/* const */ unsigned int RES_4          : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_DWAIT_type;
#define DMU_HF_DWAIT	(*( DMU_HF_DWAIT_type *) 0xf804006cu)	/* DFLASH Wait Cycle Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 2;	/* Clear ECC status bits */
		/* const */ unsigned int RES            : 26;	/* Reserved */
		unsigned int ECCCORDIS      : 2;	/* Host Command Interface ECC Correction Disable */
		unsigned int TRAPDIS        : 2;	/* Host Command Interface Uncorrectable ECC Bit Error Trap Disable */
	} B;
	int I;
	unsigned int U;

} DMU_HF_ECCC_type;
#define DMU_HF_ECCC	(*( DMU_HF_ECCC_type *) 0xf8040048u)	/* DF0 ECC Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RCODE          : 22;	/* Error Correction Read Code */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		/* const */ unsigned int RES_3          : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_ECCR_type;
#define DMU_HF_ECCR	(*( DMU_HF_ECCR_type *) 0xf8040040u)	/* DF0 ECC Read Register */
#define DMU_SF_ECCR	(*( DMU_HF_ECCR_type *) 0xf8060040u)	/* HSM DF1 ECC Read Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ERR1           : 1;	/* Read Access Single Bit ECC Error */
		/* const */ unsigned int ERR2           : 1;	/* Read Access Double Bit ECC Error */
		/* const */ unsigned int ERR3           : 1;	/* Read Access Triple Bit ECC Error */
		/* const */ unsigned int ERRM           : 1;	/* Read Access Multi-bit ECC Error */
		/* const */ unsigned int RES            : 3;	/* Reserved */
		/* const */ unsigned int ERRANY         : 1;	/* Any Read Access ECC Error */
		unsigned int RES_7          : 1;	/* Reserved */
		/* const */ unsigned int BLANKA         : 1;	/* Read Access Blank Analog */
		/* const */ unsigned int RES_9          : 6;	/* Reserved */
		/* const */ unsigned int AER1           : 1;	/* Accumulated Single Bit ECC Errors */
		/* const */ unsigned int AER2           : 1;	/* Accumulated Double Bit ECC Errors */
		/* const */ unsigned int AER3           : 1;	/* Accumulated Triple Bit ECC Errors */
		/* const */ unsigned int AERM           : 1;	/* Accumulated Multi-bit ECC Errors */
		/* const */ unsigned int RES_14         : 3;	/* Reserved */
		/* const */ unsigned int AERANY         : 1;	/* Accumulated Any Read Access ECC Error */
		unsigned int RES_16         : 1;	/* Reserved */
		/* const */ unsigned int ABLANKA        : 1;	/* Accumulated Blank Analog */
		/* const */ unsigned int RES_18         : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_ECCS_type;
#define DMU_HF_ECCS	(*( DMU_HF_ECCS_type *) 0xf8040044u)	/* DF0 ECC Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WCODE          : 22;	/* Error Correction Write Code */
		/* const */ unsigned int RES            : 6;	/* Reserved */
		unsigned int PECENCDIS      : 2;	/* PFLASH ECC Encoding Disable */
		unsigned int DECENCDIS      : 2;	/* DFLASH ECC Encoding Disable */
	} B;
	int I;
	unsigned int U;

} DMU_HF_ECCW_type;
#define DMU_HF_ECCW	(*( DMU_HF_ECCW_type *) 0xf804004cu)	/* DF0 ECC Write Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OPERM          : 1;	/* Operation Error Interrupt Mask */
		unsigned int SQERM          : 1;	/* Command Sequence Error Interrupt Mask */
		unsigned int PROERM         : 1;	/* Protection Error Interrupt Mask */
		unsigned int PVERM          : 1;	/* Program Verify Error Interrupt Mask */
		unsigned int EVERM          : 1;	/* Erase Verify Error Interrupt Mask */
		/* const */ unsigned int RES            : 26;	/* Reserved */
		unsigned int EOBM           : 1;	/* End of Busy Interrupt Mask */
	} B;
	int I;
	unsigned int U;

} DMU_HF_EER_type;
#define DMU_HF_EER	(*( DMU_HF_EER_type *) 0xf8040030u)	/* Enable Error Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OPER           : 1;	/* Flash Operation Error */
		/* const */ unsigned int SQER           : 1;	/* Command Sequence Error */
		/* const */ unsigned int PROER          : 1;	/* Protection Error */
		/* const */ unsigned int PVER           : 1;	/* Program Verify Error */
		/* const */ unsigned int EVER           : 1;	/* Erase Verify Error */
		/* const */ unsigned int ADER           : 1;	/* SRI Bus Address ECC Error */
		/* const */ unsigned int ORIER          : 1;	/* Original Error */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int RES_9          : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_ERRSR_type;
#define DMU_HF_ERRSR	(*( DMU_HF_ERRSR_type *) 0xf8040034u)	/* Error Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 8;	/* Module Number Value */
		/* const */ unsigned int FLASH_REV      : 8;	/* Flash Revision */
	} B;
	int I;
	unsigned int U;

} DMU_HF_ID_type;
#define DMU_HF_ID	(*( DMU_HF_ID_type *) 0xf8040008u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SELD0          : 2;	/* DF0 Margin Read Selection */
		/* const */ unsigned int RES            : 6;	/* Reserved */
		unsigned int HMARGIN        : 1;	/* Hard Margin Selection */
		/* const */ unsigned int RES_4          : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_MARGIN_type;
#define DMU_HF_MARGIN	(*( DMU_HF_MARGIN_type *) 0xf80400f4u)	/* Margin Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PROG           : 1;	/* Programming State */
		/* const */ unsigned int ERASE          : 1;	/* Erase State */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int RES_4          : 5;	/* Reserved */
		/* const */ unsigned int RES_5          : 3;	/* Reserved */
		/* const */ unsigned int RES_6          : 21;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_OPERATION_type;
#define DMU_HF_OPERATION	(*( DMU_HF_OPERATION_type *) 0xf8040018u)	/* Flash Operation Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SLEEP          : 2;	/* Sleep Mode Control */
		/* const */ unsigned int RES            : 6;	/* Reserved */
		unsigned int IDLE           : 2;	/* Dynamic Idle Enable */
		unsigned int DEMAND         : 2;	/* Demand Enable */
		/* const */ unsigned int RES_5          : 4;	/* Reserved */
		unsigned int ESLDIS         : 2;	/* External Sleep Mode Request Disable */
		/* const */ unsigned int RES_7          : 12;	/* Reserved */
		unsigned int PR5V           : 2;	/* Programming Supply 5V */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PCONTROL_type;
#define DMU_HF_PCONTROL	(*( DMU_HF_PCONTROL_type *) 0xf8040064u)	/* Power Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OCDSDIS        : 1;	/* OCDS Disabled */
		/* const */ unsigned int DBGIFLCK       : 1;	/* Debug Interface Locked */
		/* const */ unsigned int EDM            : 2;	/* Entered Debug Mode */
		/* const */ unsigned int UCB            : 4;	/* Reserved */
		/* const */ unsigned int TIC            : 4;	/* Tool Interface Control */
		/* const */ unsigned int UCB_6          : 4;	/* Reserved */
		/* const */ unsigned int RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PROCONDBG_type;
#define DMU_HF_PROCONDBG	(*( DMU_HF_PROCONDBG_type *) 0xf8040090u)	/* Debug Interface Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int L              : 1;	/* DF0_EEPROM Locked for Write Protection */
		/* const */ unsigned int UCB            : 2;	/* Reserved */
		/* const */ unsigned int HYSEN          : 1;	/* Hysteresis enable */
		/* const */ unsigned int HYSCTL         : 2;	/* Hysteresis Control */
		/* const */ unsigned int AMPCTL         : 2;	/* Amplitude Control */
		/* const */ unsigned int OSCCFG         : 1;	/* OSC Configuration by SSW */
		/* const */ unsigned int MODE           : 2;	/* OSC Mode */
		/* const */ unsigned int APREN          : 1;	/* OSC Amplitude Regulation Enable */
		/* const */ unsigned int CAP0EN         : 1;	/* OSC Capacitance 0 Enable (x=0-3) */
		/* const */ unsigned int CAP1EN         : 1;	/* OSC Capacitance 1 Enable (x=0-3) */
		/* const */ unsigned int CAP2EN         : 1;	/* OSC Capacitance 2 Enable (x=0-3) */
		/* const */ unsigned int CAP3EN         : 1;	/* OSC Capacitance 3 Enable (x=0-3) */
		/* const */ unsigned int ESR0CNT        : 12;	/* ESR0 Prolongation Counter */
		/* const */ unsigned int UCB_14         : 3;	/* Reserved */
		/* const */ unsigned int RPRO           : 1;	/* Read Protection Configuration */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PROCONDF_type;
#define DMU_HF_PROCONDF	(*( DMU_HF_PROCONDF_type *) 0xf8040088u)	/* DFLASH Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int UCB            : 31;	/* Reserved for UCB */
		/* const */ unsigned int RPRO           : 1;	/* Read Protection Configuration */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PROCONPF_type;
#define DMU_HF_PROCONPF	(*( DMU_HF_PROCONPF_type *) 0xf8040080u)	/* PFLASH Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RAMIN          : 2;	/* RAM Initialization by SSW Control */
		/* const */ unsigned int UCB            : 14;	/* Reserved */
		/* const */ unsigned int RAMINSEL       : 6;	/* RAM Initialization Selection */
		/* const */ unsigned int UCB_4          : 2;	/* Reserved */
		/* const */ unsigned int LMUINSEL       : 7;	/* LMU Initialization Selection */
		/* const */ unsigned int UCB_6          : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PROCONRAM_type;
#define DMU_HF_PROCONRAM	(*( DMU_HF_PROCONRAM_type *) 0xf804008cu)	/* RAM Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TP             : 1;	/* Tuning Protection */
		/* const */ unsigned int UCB            : 7;	/* Reserved for UCB */
		/* const */ unsigned int BML            : 2;	/* Boot Mode Lock */
		/* const */ unsigned int UCB_4          : 6;	/* Reserved for UCB */
		/* const */ unsigned int SWAPEN         : 2;	/* Enable SOTA mode */
		/* const */ unsigned int CPU0DDIS       : 1;	/* Disable direct LPB access */
		/* const */ unsigned int CPU1DDIS       : 1;	/* Disable direct LPB access */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int RES_9          : 1;	/* Reserved */
		/* const */ unsigned int RES_10         : 1;	/* Reserved */
		/* const */ unsigned int RES_11         : 1;	/* Reserved */
		/* const */ unsigned int UCB_12         : 8;	/* Reserved for UCB */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PROCONTP_type;
#define DMU_HF_PROCONTP	(*( DMU_HF_PROCONTP_type *) 0xf8040084u)	/* Tuning Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODE           : 2;	/* DF0 User Mode Control */
		/* const */ unsigned int UCB            : 30;	/* Reserved for UCB */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PROCONUSR_type;
#define DMU_HF_PROCONUSR	(*( DMU_HF_PROCONUSR_type *) 0xf8040074u)	/* DF0 User Mode Control */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PRODISP        : 1;	/* PFLASH Protection Disabled */
		/* const */ unsigned int PRODISD        : 1;	/* DFLASH Protection Disabled */
		/* const */ unsigned int PRODISDBG      : 1;	/* Debug Interface Password Protection Disabled */
		/* const */ unsigned int PRODISEC       : 1;	/* Erase Counter Priority Protection Disabled */
		/* const */ unsigned int PRODISBMHD     : 1;	/* BMHD Protection Disabled */
		/* const */ unsigned int PRODISSWAP     : 1;	/* UCB_SWAP protection Disabled */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		/* const */ unsigned int PRODISP0       : 1;	/* Program Flash Protection Disable PRODISP0 */
		/* const */ unsigned int PRODISP1       : 1;	/* Program Flash Protection Disable PRODISP1 */
		/* const */ unsigned int RES_10         : 1;	/* Reserved */
		/* const */ unsigned int RES_11         : 1;	/* Reserved */
		/* const */ unsigned int RES_12         : 1;	/* Reserved */
		/* const */ unsigned int RES_13         : 1;	/* Reserved */
		/* const */ unsigned int RES_14         : 10;	/* Reserved */
		/* const */ unsigned int SRT            : 1;	/* Secure Retest Password Protection Disabled */
		/* const */ unsigned int RES_16         : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PROTECT_type;
#define DMU_HF_PROTECT	(*( DMU_HF_PROTECT_type *) 0xf804001cu)	/* Flash Protection Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SLEEP          : 1;	/* Sleep Mode */
		/* const */ unsigned int IDLE           : 1;	/* Dynamic Idle */
		/* const */ unsigned int DEMAND         : 1;	/* Demand */
		/* const */ unsigned int RES            : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PSTATUS_type;
#define DMU_HF_PSTATUS	(*( DMU_HF_PSTATUS_type *) 0xf8040060u)	/* Power Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RFLASH         : 6;	/* Operation Mode */
		/* const */ unsigned int RES            : 2;	/* Reserved */
		unsigned int RECC           : 3;	/* Operation Mode */
		/* const */ unsigned int RES_4          : 5;	/* Reserved */
		unsigned int CFLASH         : 6;	/* Cranking Mode */
		/* const */ unsigned int RES_6          : 2;	/* Reserved */
		unsigned int CECC           : 3;	/* Cranking Mode */
		/* const */ unsigned int RES_8          : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_PWAIT_type;
#define DMU_HF_PWAIT	(*( DMU_HF_PWAIT_type *) 0xf8040068u)	/* PFLASH Wait Cycle Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int D0BUSY         : 1;	/* Data Flash Bank 0 Busy */
		/* const */ unsigned int D1BUSY         : 1;	/* Data Flash Bank 1 Busy */
		/* const */ unsigned int P0BUSY         : 1;	/* Program Flash PF0BUSY */
		/* const */ unsigned int P1BUSY         : 1;	/* Program Flash PF1BUSY */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int RES_6          : 1;	/* Reserved */
		/* const */ unsigned int RES_7          : 1;	/* Reserved */
		/* const */ unsigned int RES_8          : 1;	/* Reserved */
		/* const */ unsigned int RES_9          : 8;	/* Reserved */
		/* const */ unsigned int RES_10         : 1;	/* Reserved */
		/* const */ unsigned int RES_11         : 1;	/* Reserved */
		/* const */ unsigned int RES_12         : 1;	/* Reserved */
		/* const */ unsigned int RES_13         : 1;	/* Reserved */
		/* const */ unsigned int DFPAGE         : 1;	/* Data Flash in Page Mode */
		/* const */ unsigned int PFPAGE         : 1;	/* Program Flash in Page Mode */
		/* const */ unsigned int RES_16         : 1;	/* Reserved */
		/* const */ unsigned int RES_17         : 1;	/* Reserved */
		/* const */ unsigned int RES_18         : 2;	/* Reserved */
		/* const */ unsigned int RES_19         : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_STATUS_type;
#define DMU_HF_STATUS	(*( DMU_HF_STATUS_type *) 0xf8040010u)	/* Flash Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REQ            : 1;	/* Suspend Request */
		unsigned int CLR            : 1;	/* Suspend Clear */
		/* const */ unsigned int RES            : 14;	/* Reserved */
		/* const */ unsigned int SPND           : 1;	/* Flash Operation Suspended */
		/* const */ unsigned int ERR            : 1;	/* Suspend Error */
		/* const */ unsigned int RES_6          : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_HF_SUSPEND_type;
#define DMU_HF_SUSPEND	(*( DMU_HF_SUSPEND_type *) 0xf80400f0u)	/* Suspend Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S0L            : 1;	/* PFLASH p Sector 0 Erase Counter priority */
		/* const */ unsigned int S1L            : 1;	/* PFLASH p Sector 1 Erase Counter priority */
		/* const */ unsigned int S2L            : 1;	/* PFLASH p Sector 2 Erase Counter priority */
		/* const */ unsigned int S3L            : 1;	/* PFLASH p Sector 3 Erase Counter priority */
		/* const */ unsigned int S4L            : 1;	/* PFLASH p Sector 4 Erase Counter priority */
		/* const */ unsigned int S5L            : 1;	/* PFLASH p Sector 5 Erase Counter priority */
		/* const */ unsigned int S6L            : 1;	/* PFLASH p Sector 6 Erase Counter priority */
		/* const */ unsigned int S7L            : 1;	/* PFLASH p Sector 7 Erase Counter priority */
		/* const */ unsigned int S8L            : 1;	/* PFLASH p Sector 8 Erase Counter priority */
		/* const */ unsigned int S9L            : 1;	/* PFLASH p Sector 9 Erase Counter priority */
		/* const */ unsigned int S10L           : 1;	/* PFLASH p Sector 10 Erase Counter priority */
		/* const */ unsigned int S11L           : 1;	/* PFLASH p Sector 11 Erase Counter priority */
		/* const */ unsigned int S12L           : 1;	/* PFLASH p Sector 12 Erase Counter priority */
		/* const */ unsigned int S13L           : 1;	/* PFLASH p Sector 13 Erase Counter priority */
		/* const */ unsigned int S14L           : 1;	/* PFLASH p Sector 14 Erase Counter priority */
		/* const */ unsigned int S15L           : 1;	/* PFLASH p Sector 15 Erase Counter priority */
		/* const */ unsigned int S16L           : 1;	/* PFLASH p Sector 16 Erase Counter priority */
		/* const */ unsigned int S17L           : 1;	/* PFLASH p Sector 17 Erase Counter priority */
		/* const */ unsigned int S18L           : 1;	/* PFLASH p Sector 18 Erase Counter priority */
		/* const */ unsigned int S19L           : 1;	/* PFLASH p Sector 19 Erase Counter priority */
		/* const */ unsigned int S20L           : 1;	/* PFLASH p Sector 20 Erase Counter priority */
		/* const */ unsigned int S21L           : 1;	/* PFLASH p Sector 21 Erase Counter priority */
		/* const */ unsigned int S22L           : 1;	/* PFLASH p Sector 22 Erase Counter priority */
		/* const */ unsigned int S23L           : 1;	/* PFLASH p Sector 23 Erase Counter priority */
		/* const */ unsigned int S24L           : 1;	/* PFLASH p Sector 24 Erase Counter priority */
		/* const */ unsigned int S25L           : 1;	/* PFLASH p Sector 25 Erase Counter priority */
		/* const */ unsigned int S26L           : 1;	/* PFLASH p Sector 26 Erase Counter priority */
		/* const */ unsigned int S27L           : 1;	/* PFLASH p Sector 27 Erase Counter priority */
		/* const */ unsigned int S28L           : 1;	/* PFLASH p Sector 28 Erase Counter priority */
		/* const */ unsigned int S29L           : 1;	/* PFLASH p Sector 29 Erase Counter priority */
		/* const */ unsigned int S30L           : 1;	/* PFLASH p Sector 30 Erase Counter priority */
		/* const */ unsigned int S31L           : 1;	/* PFLASH p Sector 31 Erase Counter priority */
	} B;
	int I;
	unsigned int U;

} DMU_HP_ECPRIO00_type;
#define DMU_HP_ECPRIO00	(*( DMU_HP_ECPRIO00_type *) 0xf80500a0u)	/* PFLASH Bank 0 Erase Counter Priority configuration 0 */
#define DMU_HP_ECPRIO10	(*( DMU_HP_ECPRIO00_type *) 0xf80501a0u)	/* PFLASH Bank 1 Erase Counter Priority configuration 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S32L           : 1;	/* PFLASH p Sector 32 Erase Counter priority */
		/* const */ unsigned int S33L           : 1;	/* PFLASH p Sector 33 Erase Counter priority */
		/* const */ unsigned int S34L           : 1;	/* PFLASH p Sector 34 Erase Counter priority */
		/* const */ unsigned int S35L           : 1;	/* PFLASH p Sector 35 Erase Counter priority */
		/* const */ unsigned int S36L           : 1;	/* PFLASH p Sector 36 Erase Counter priority */
		/* const */ unsigned int S37L           : 1;	/* PFLASH p Sector 37 Erase Counter priority */
		/* const */ unsigned int S38L           : 1;	/* PFLASH p Sector 38 Erase Counter priority */
		/* const */ unsigned int S39L           : 1;	/* PFLASH p Sector 39 Erase Counter priority */
		/* const */ unsigned int S40L           : 1;	/* PFLASH p Sector 40 Erase Counter priority */
		/* const */ unsigned int S41L           : 1;	/* PFLASH p Sector 41 Erase Counter priority */
		/* const */ unsigned int S42L           : 1;	/* PFLASH p Sector 42 Erase Counter priority */
		/* const */ unsigned int S43L           : 1;	/* PFLASH p Sector 43 Erase Counter priority */
		/* const */ unsigned int S44L           : 1;	/* PFLASH p Sector 44 Erase Counter priority */
		/* const */ unsigned int S45L           : 1;	/* PFLASH p Sector 45 Erase Counter priority */
		/* const */ unsigned int S46L           : 1;	/* PFLASH p Sector 46 Erase Counter priority */
		/* const */ unsigned int S47L           : 1;	/* PFLASH p Sector 47 Erase Counter priority */
		/* const */ unsigned int S48L           : 1;	/* PFLASH p Sector 48 Erase Counter priority */
		/* const */ unsigned int S49L           : 1;	/* PFLASH p Sector 49 Erase Counter priority */
		/* const */ unsigned int S50L           : 1;	/* PFLASH p Sector 50 Erase Counter priority */
		/* const */ unsigned int S51L           : 1;	/* PFLASH p Sector 51 Erase Counter priority */
		/* const */ unsigned int S52L           : 1;	/* PFLASH p Sector 52 Erase Counter priority */
		/* const */ unsigned int S53L           : 1;	/* PFLASH p Sector 53 Erase Counter priority */
		/* const */ unsigned int S54L           : 1;	/* PFLASH p Sector 54 Erase Counter priority */
		/* const */ unsigned int S55L           : 1;	/* PFLASH p Sector 55 Erase Counter priority */
		/* const */ unsigned int S56L           : 1;	/* PFLASH p Sector 56 Erase Counter priority */
		/* const */ unsigned int S57L           : 1;	/* PFLASH p Sector 57 Erase Counter priority */
		/* const */ unsigned int S58L           : 1;	/* PFLASH p Sector 58 Erase Counter priority */
		/* const */ unsigned int S59L           : 1;	/* PFLASH p Sector 59 Erase Counter priority */
		/* const */ unsigned int S60L           : 1;	/* PFLASH p Sector 60 Erase Counter priority */
		/* const */ unsigned int S61L           : 1;	/* PFLASH p Sector 61 Erase Counter priority */
		/* const */ unsigned int S62L           : 1;	/* PFLASH p Sector 62 Erase Counter priority */
		/* const */ unsigned int S63L           : 1;	/* PFLASH p Sector 63 Erase Counter priority */
	} B;
	int I;
	unsigned int U;

} DMU_HP_ECPRIO01_type;
#define DMU_HP_ECPRIO01	(*( DMU_HP_ECPRIO01_type *) 0xf80500a4u)	/* PFLASH Bank 0 Erase Counter Priority Configuration 1 */
#define DMU_HP_ECPRIO11	(*( DMU_HP_ECPRIO01_type *) 0xf80501a4u)	/* PFLASH Bank 1 Erase Counter Priority Configuration 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S64L           : 1;	/* PFLASH p Sector 64 Erase Counter priority */
		/* const */ unsigned int S65L           : 1;	/* PFLASH p Sector 65 Erase Counter priority */
		/* const */ unsigned int S66L           : 1;	/* PFLASH p Sector 66 Erase Counter priority */
		/* const */ unsigned int S67L           : 1;	/* PFLASH p Sector 67 Erase Counter priority */
		/* const */ unsigned int S68L           : 1;	/* PFLASH p Sector 68 Erase Counter priority */
		/* const */ unsigned int S69L           : 1;	/* PFLASH p Sector 69 Erase Counter priority */
		/* const */ unsigned int S70L           : 1;	/* PFLASH p Sector 70 Erase Counter priority */
		/* const */ unsigned int S71L           : 1;	/* PFLASH p Sector 71 Erase Counter priority */
		/* const */ unsigned int S72L           : 1;	/* PFLASH p Sector 72 Erase Counter priority */
		/* const */ unsigned int S73L           : 1;	/* PFLASH p Sector 73 Erase Counter priority */
		/* const */ unsigned int S74L           : 1;	/* PFLASH p Sector 74 Erase Counter priority */
		/* const */ unsigned int S75L           : 1;	/* PFLASH p Sector 75 Erase Counter priority */
		/* const */ unsigned int S76L           : 1;	/* PFLASH p Sector 76 Erase Counter priority */
		/* const */ unsigned int S77L           : 1;	/* PFLASH p Sector 77 Erase Counter priority */
		/* const */ unsigned int S78L           : 1;	/* PFLASH p Sector 78 Erase Counter priority */
		/* const */ unsigned int S79L           : 1;	/* PFLASH p Sector 79 Erase Counter priority */
		/* const */ unsigned int S80L           : 1;	/* PFLASH p Sector 80 Erase Counter priority */
		/* const */ unsigned int S81L           : 1;	/* PFLASH p Sector 81 Erase Counter priority */
		/* const */ unsigned int S82L           : 1;	/* PFLASH p Sector 82 Erase Counter priority */
		/* const */ unsigned int S83L           : 1;	/* PFLASH p Sector 83 Erase Counter priority */
		/* const */ unsigned int S84L           : 1;	/* PFLASH p Sector 84 Erase Counter priority */
		/* const */ unsigned int S85L           : 1;	/* PFLASH p Sector 85 Erase Counter priority */
		/* const */ unsigned int S86L           : 1;	/* PFLASH p Sector 86 Erase Counter priority */
		/* const */ unsigned int S87L           : 1;	/* PFLASH p Sector 87 Erase Counter priority */
		/* const */ unsigned int S88L           : 1;	/* PFLASH p Sector 88 Erase Counter priority */
		/* const */ unsigned int S89L           : 1;	/* PFLASH p Sector 89 Erase Counter priority */
		/* const */ unsigned int S90L           : 1;	/* PFLASH p Sector 90 Erase Counter priority */
		/* const */ unsigned int S91L           : 1;	/* PFLASH p Sector 91 Erase Counter priority */
		/* const */ unsigned int S92L           : 1;	/* PFLASH p Sector 92 Erase Counter priority */
		/* const */ unsigned int S93L           : 1;	/* PFLASH p Sector 93 Erase Counter priority */
		/* const */ unsigned int S94L           : 1;	/* PFLASH p Sector 94 Erase Counter priority */
		/* const */ unsigned int S95L           : 1;	/* PFLASH p Sector 95 Erase Counter priority */
	} B;
	int I;
	unsigned int U;

} DMU_HP_ECPRIO02_type;
#define DMU_HP_ECPRIO02	(*( DMU_HP_ECPRIO02_type *) 0xf80500a8u)	/* PFLASH Bank 0 Erase Counter Priority Configuration 2 */
#define DMU_HP_ECPRIO12	(*( DMU_HP_ECPRIO02_type *) 0xf80501a8u)	/* PFLASH Bank 1 Erase Counter Priority Configuration 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S96L           : 1;	/* PFLASH p Sector 96 Erase Counter priority */
		/* const */ unsigned int S97L           : 1;	/* PFLASH p Sector 97 Erase Counter priority */
		/* const */ unsigned int S98L           : 1;	/* PFLASH p Sector 98 Erase Counter priority */
		/* const */ unsigned int S99L           : 1;	/* PFLASH p Sector 99 Erase Counter priority */
		/* const */ unsigned int S100L          : 1;	/* PFLASH p Sector 100 Erase Counter priority */
		/* const */ unsigned int S101L          : 1;	/* PFLASH p Sector 101 Erase Counter priority */
		/* const */ unsigned int S102L          : 1;	/* PFLASH p Sector 102 Erase Counter priority */
		/* const */ unsigned int S103L          : 1;	/* PFLASH p Sector 103 Erase Counter priority */
		/* const */ unsigned int S104L          : 1;	/* PFLASH p Sector 104 Erase Counter priority */
		/* const */ unsigned int S105L          : 1;	/* PFLASH p Sector 105 Erase Counter priority */
		/* const */ unsigned int S106L          : 1;	/* PFLASH p Sector 106 Erase Counter priority */
		/* const */ unsigned int S107L          : 1;	/* PFLASH p Sector 107 Erase Counter priority */
		/* const */ unsigned int S108L          : 1;	/* PFLASH p Sector 108 Erase Counter priority */
		/* const */ unsigned int S109L          : 1;	/* PFLASH p Sector 109 Erase Counter priority */
		/* const */ unsigned int S110L          : 1;	/* PFLASH p Sector 110 Erase Counter priority */
		/* const */ unsigned int S111L          : 1;	/* PFLASH p Sector 111 Erase Counter priority */
		/* const */ unsigned int S112L          : 1;	/* PFLASH p Sector 112 Erase Counter priority */
		/* const */ unsigned int S113L          : 1;	/* PFLASH p Sector 113 Erase Counter priority */
		/* const */ unsigned int S114L          : 1;	/* PFLASH p Sector 114 Erase Counter priority */
		/* const */ unsigned int S115L          : 1;	/* PFLASH p Sector 115 Erase Counter priority */
		/* const */ unsigned int S116L          : 1;	/* PFLASH p Sector 116 Erase Counter priority */
		/* const */ unsigned int S117L          : 1;	/* PFLASH p Sector 117 Erase Counter priority */
		/* const */ unsigned int S118L          : 1;	/* PFLASH p Sector 118 Erase Counter priority */
		/* const */ unsigned int S119L          : 1;	/* PFLASH p Sector 119 Erase Counter priority */
		/* const */ unsigned int S120L          : 1;	/* PFLASH p Sector 120 Erase Counter priority */
		/* const */ unsigned int S121L          : 1;	/* PFLASH p Sector 121 Erase Counter priority */
		/* const */ unsigned int S122L          : 1;	/* PFLASH p Sector 122 Erase Counter priority */
		/* const */ unsigned int S123L          : 1;	/* PFLASH p Sector 123 Erase Counter priority */
		/* const */ unsigned int S124L          : 1;	/* PFLASH p Sector 124 Erase Counter priority */
		/* const */ unsigned int S125L          : 1;	/* PFLASH p Sector 125 Erase Counter priority */
		/* const */ unsigned int S126L          : 1;	/* PFLASH p Sector 126 Erase Counter priority */
		/* const */ unsigned int S127L          : 1;	/* PFLASH p Sector 127 Erase Counter priority */
	} B;
	int I;
	unsigned int U;

} DMU_HP_ECPRIO03_type;
#define DMU_HP_ECPRIO03	(*( DMU_HP_ECPRIO03_type *) 0xf80500acu)	/* PFLASH Bank 0 Erase Counter Priority Configuration 3 */
#define DMU_HP_ECPRIO13	(*( DMU_HP_ECPRIO03_type *) 0xf80501acu)	/* PFLASH Bank 1 Erase Counter Priority Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S128L          : 1;	/* PFLASH p Sector 128 Erase Counter priority */
		/* const */ unsigned int S129L          : 1;	/* PFLASH p Sector 129 Erase Counter priority */
		/* const */ unsigned int S130L          : 1;	/* PFLASH p Sector 130 Erase Counter priority */
		/* const */ unsigned int S131L          : 1;	/* PFLASH p Sector 131 Erase Counter priority */
		/* const */ unsigned int S132L          : 1;	/* PFLASH p Sector 132 Erase Counter priority */
		/* const */ unsigned int S133L          : 1;	/* PFLASH p Sector 133 Erase Counter priority */
		/* const */ unsigned int S134L          : 1;	/* PFLASH p Sector 134 Erase Counter priority */
		/* const */ unsigned int S135L          : 1;	/* PFLASH p Sector 135 Erase Counter priority */
		/* const */ unsigned int S136L          : 1;	/* PFLASH p Sector 136 Erase Counter priority */
		/* const */ unsigned int S137L          : 1;	/* PFLASH p Sector 137 Erase Counter priority */
		/* const */ unsigned int S138L          : 1;	/* PFLASH p Sector 138 Erase Counter priority */
		/* const */ unsigned int S139L          : 1;	/* PFLASH p Sector 139 Erase Counter priority */
		/* const */ unsigned int S140L          : 1;	/* PFLASH p Sector 140 Erase Counter priority */
		/* const */ unsigned int S141L          : 1;	/* PFLASH p Sector 141 Erase Counter priority */
		/* const */ unsigned int S142L          : 1;	/* PFLASH p Sector 142 Erase Counter priority */
		/* const */ unsigned int S143L          : 1;	/* PFLASH p Sector 143 Erase Counter priority */
		/* const */ unsigned int S144L          : 1;	/* PFLASH p Sector 144 Erase Counter priority */
		/* const */ unsigned int S145L          : 1;	/* PFLASH p Sector 145 Erase Counter priority */
		/* const */ unsigned int S146L          : 1;	/* PFLASH p Sector 146 Erase Counter priority */
		/* const */ unsigned int S147L          : 1;	/* PFLASH p Sector 147 Erase Counter priority */
		/* const */ unsigned int S148L          : 1;	/* PFLASH p Sector 148 Erase Counter priority */
		/* const */ unsigned int S149L          : 1;	/* PFLASH p Sector 149 Erase Counter priority */
		/* const */ unsigned int S150L          : 1;	/* PFLASH p Sector 150 Erase Counter priority */
		/* const */ unsigned int S151L          : 1;	/* PFLASH p Sector 151 Erase Counter priority */
		/* const */ unsigned int S152L          : 1;	/* PFLASH p Sector 152 Erase Counter priority */
		/* const */ unsigned int S153L          : 1;	/* PFLASH p Sector 153 Erase Counter priority */
		/* const */ unsigned int S154L          : 1;	/* PFLASH p Sector 154 Erase Counter priority */
		/* const */ unsigned int S155L          : 1;	/* PFLASH p Sector 155 Erase Counter priority */
		/* const */ unsigned int S156L          : 1;	/* PFLASH p Sector 156 Erase Counter priority */
		/* const */ unsigned int S157L          : 1;	/* PFLASH p Sector 157 Erase Counter priority */
		/* const */ unsigned int S158L          : 1;	/* PFLASH p Sector 158 Erase Counter priority */
		/* const */ unsigned int S159L          : 1;	/* PFLASH p Sector 159 Erase Counter priority */
	} B;
	int I;
	unsigned int U;

} DMU_HP_ECPRIO04_type;
#define DMU_HP_ECPRIO04	(*( DMU_HP_ECPRIO04_type *) 0xf80500b0u)	/* PFLASH Bank 0 Erase Counter Priority Configuration 4 */
#define DMU_HP_ECPRIO14	(*( DMU_HP_ECPRIO04_type *) 0xf80501b0u)	/* PFLASH Bank 1 Erase Counter Priority Configuration 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S160L          : 1;	/* PFLASH p Sector 160 Erase Counter priority */
		/* const */ unsigned int S161L          : 1;	/* PFLASH p Sector 161 Erase Counter priority */
		/* const */ unsigned int S162L          : 1;	/* PFLASH p Sector 162 Erase Counter priority */
		/* const */ unsigned int S163L          : 1;	/* PFLASH p Sector 163 Erase Counter priority */
		/* const */ unsigned int S164L          : 1;	/* PFLASH p Sector 164 Erase Counter priority */
		/* const */ unsigned int S165L          : 1;	/* PFLASH p Sector 165 Erase Counter priority */
		/* const */ unsigned int S166L          : 1;	/* PFLASH p Sector 166 Erase Counter priority */
		/* const */ unsigned int S167L          : 1;	/* PFLASH p Sector 167 Erase Counter priority */
		/* const */ unsigned int S168L          : 1;	/* PFLASH p Sector 168 Erase Counter priority */
		/* const */ unsigned int S169L          : 1;	/* PFLASH p Sector 169 Erase Counter priority */
		/* const */ unsigned int S170L          : 1;	/* PFLASH p Sector 170 Erase Counter priority */
		/* const */ unsigned int S171L          : 1;	/* PFLASH p Sector 171 Erase Counter priority */
		/* const */ unsigned int S172L          : 1;	/* PFLASH p Sector 172 Erase Counter priority */
		/* const */ unsigned int S173L          : 1;	/* PFLASH p Sector 173 Erase Counter priority */
		/* const */ unsigned int S174L          : 1;	/* PFLASH p Sector 174 Erase Counter priority */
		/* const */ unsigned int S175L          : 1;	/* PFLASH p Sector 175 Erase Counter priority */
		/* const */ unsigned int S176L          : 1;	/* PFLASH p Sector 176 Erase Counter priority */
		/* const */ unsigned int S177L          : 1;	/* PFLASH p Sector 177 Erase Counter priority */
		/* const */ unsigned int S178L          : 1;	/* PFLASH p Sector 178 Erase Counter priority */
		/* const */ unsigned int S179L          : 1;	/* PFLASH p Sector 179 Erase Counter priority */
		/* const */ unsigned int S180L          : 1;	/* PFLASH p Sector 180 Erase Counter priority */
		/* const */ unsigned int S181L          : 1;	/* PFLASH p Sector 181 Erase Counter priority */
		/* const */ unsigned int S182L          : 1;	/* PFLASH p Sector 182 Erase Counter priority */
		/* const */ unsigned int S183L          : 1;	/* PFLASH p Sector 183 Erase Counter priority */
		/* const */ unsigned int S184L          : 1;	/* PFLASH p Sector 184 Erase Counter priority */
		/* const */ unsigned int S185L          : 1;	/* PFLASH p Sector 185 Erase Counter priority */
		/* const */ unsigned int S186L          : 1;	/* PFLASH p Sector 186 Erase Counter priority */
		/* const */ unsigned int S187L          : 1;	/* PFLASH p Sector 187 Erase Counter priority */
		/* const */ unsigned int S188L          : 1;	/* PFLASH p Sector 188 Erase Counter priority */
		/* const */ unsigned int S189L          : 1;	/* PFLASH p Sector 189 Erase Counter priority */
		/* const */ unsigned int S190L          : 1;	/* PFLASH p Sector 190 Erase Counter priority */
		/* const */ unsigned int S191L          : 1;	/* PFLASH p Sector 191 Erase Counter priority */
	} B;
	int I;
	unsigned int U;

} DMU_HP_ECPRIO05_type;
#define DMU_HP_ECPRIO05	(*( DMU_HP_ECPRIO05_type *) 0xf80500b4u)	/* PFLASH Bank 0 Erase Counter Priority Configuration 5 */
#define DMU_HP_ECPRIO15	(*( DMU_HP_ECPRIO05_type *) 0xf80501b4u)	/* PFLASH Bank 1 Erase Counter Priority Configuration 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S0ROM          : 1;	/* PFLASH p Sector 0 Locked for Forever */
		/* const */ unsigned int S1ROM          : 1;	/* PFLASH p Sector 1 Locked for Forever */
		/* const */ unsigned int S2ROM          : 1;	/* PFLASH p Sector 2 Locked for Forever */
		/* const */ unsigned int S3ROM          : 1;	/* PFLASH p Sector 3 Locked for Forever */
		/* const */ unsigned int S4ROM          : 1;	/* PFLASH p Sector 4 Locked for Forever */
		/* const */ unsigned int S5ROM          : 1;	/* PFLASH p Sector 5 Locked for Forever */
		/* const */ unsigned int S6ROM          : 1;	/* PFLASH p Sector 6 Locked for Forever */
		/* const */ unsigned int S7ROM          : 1;	/* PFLASH p Sector 7 Locked for Forever */
		/* const */ unsigned int S8ROM          : 1;	/* PFLASH p Sector 8 Locked for Forever */
		/* const */ unsigned int S9ROM          : 1;	/* PFLASH p Sector 9 Locked for Forever */
		/* const */ unsigned int S10ROM         : 1;	/* PFLASH p Sector 10 Locked for Forever */
		/* const */ unsigned int S11ROM         : 1;	/* PFLASH p Sector 11 Locked for Forever */
		/* const */ unsigned int S12ROM         : 1;	/* PFLASH p Sector 12 Locked for Forever */
		/* const */ unsigned int S13ROM         : 1;	/* PFLASH p Sector 13 Locked for Forever */
		/* const */ unsigned int S14ROM         : 1;	/* PFLASH p Sector 14 Locked for Forever */
		/* const */ unsigned int S15ROM         : 1;	/* PFLASH p Sector 15 Locked for Forever */
		/* const */ unsigned int S16ROM         : 1;	/* PFLASH p Sector 16 Locked for Forever */
		/* const */ unsigned int S17ROM         : 1;	/* PFLASH p Sector 17 Locked for Forever */
		/* const */ unsigned int S18ROM         : 1;	/* PFLASH p Sector 18 Locked for Forever */
		/* const */ unsigned int S19ROM         : 1;	/* PFLASH p Sector 19 Locked for Forever */
		/* const */ unsigned int S20ROM         : 1;	/* PFLASH p Sector 20 Locked for Forever */
		/* const */ unsigned int S21ROM         : 1;	/* PFLASH p Sector 21 Locked for Forever */
		/* const */ unsigned int S22ROM         : 1;	/* PFLASH p Sector 22 Locked for Forever */
		/* const */ unsigned int S23ROM         : 1;	/* PFLASH p Sector 23 Locked for Forever */
		/* const */ unsigned int S24ROM         : 1;	/* PFLASH p Sector 24 Locked for Forever */
		/* const */ unsigned int S25ROM         : 1;	/* PFLASH p Sector 25 Locked for Forever */
		/* const */ unsigned int S26ROM         : 1;	/* PFLASH p Sector 26 Locked for Forever */
		/* const */ unsigned int S27ROM         : 1;	/* PFLASH p Sector 27 Locked for Forever */
		/* const */ unsigned int S28ROM         : 1;	/* PFLASH p Sector 28 Locked for Forever */
		/* const */ unsigned int S29ROM         : 1;	/* PFLASH p Sector 29 Locked for Forever */
		/* const */ unsigned int S30ROM         : 1;	/* PFLASH p Sector 30 Locked for Forever */
		/* const */ unsigned int S31ROM         : 1;	/* PFLASH p Sector 31 Locked for Forever */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONOTP00_type;
#define DMU_HP_PROCONOTP00	(*( DMU_HP_PROCONOTP00_type *) 0xf8050040u)	/* PFLASH Bank 0 OTP Protection Configuration 0 */
#define DMU_HP_PROCONOTP10	(*( DMU_HP_PROCONOTP00_type *) 0xf8050140u)	/* PFLASH Bank 1 OTP Protection Configuration 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S32ROM         : 1;	/* PFLASH p Sector 32 Locked for Forever */
		/* const */ unsigned int S33ROM         : 1;	/* PFLASH p Sector 33 Locked for Forever */
		/* const */ unsigned int S34ROM         : 1;	/* PFLASH p Sector 34 Locked for Forever */
		/* const */ unsigned int S35ROM         : 1;	/* PFLASH p Sector 35 Locked for Forever */
		/* const */ unsigned int S36ROM         : 1;	/* PFLASH p Sector 36 Locked for Forever */
		/* const */ unsigned int S37ROM         : 1;	/* PFLASH p Sector 37 Locked for Forever */
		/* const */ unsigned int S38ROM         : 1;	/* PFLASH p Sector 38 Locked for Forever */
		/* const */ unsigned int S39ROM         : 1;	/* PFLASH p Sector 39 Locked for Forever */
		/* const */ unsigned int S40ROM         : 1;	/* PFLASH p Sector 40 Locked for Forever */
		/* const */ unsigned int S41ROM         : 1;	/* PFLASH p Sector 41 Locked for Forever */
		/* const */ unsigned int S42ROM         : 1;	/* PFLASH p Sector 42 Locked for Forever */
		/* const */ unsigned int S43ROM         : 1;	/* PFLASH p Sector 43 Locked for Forever */
		/* const */ unsigned int S44ROM         : 1;	/* PFLASH p Sector 44 Locked for Forever */
		/* const */ unsigned int S45ROM         : 1;	/* PFLASH p Sector 45 Locked for Forever */
		/* const */ unsigned int S46ROM         : 1;	/* PFLASH p Sector 46 Locked for Forever */
		/* const */ unsigned int S47ROM         : 1;	/* PFLASH p Sector 47 Locked for Forever */
		/* const */ unsigned int S48ROM         : 1;	/* PFLASH p Sector 48 Locked for Forever */
		/* const */ unsigned int S49ROM         : 1;	/* PFLASH p Sector 49 Locked for Forever */
		/* const */ unsigned int S50ROM         : 1;	/* PFLASH p Sector 50 Locked for Forever */
		/* const */ unsigned int S51ROM         : 1;	/* PFLASH p Sector 51 Locked for Forever */
		/* const */ unsigned int S52ROM         : 1;	/* PFLASH p Sector 52 Locked for Forever */
		/* const */ unsigned int S53ROM         : 1;	/* PFLASH p Sector 53 Locked for Forever */
		/* const */ unsigned int S54ROM         : 1;	/* PFLASH p Sector 54 Locked for Forever */
		/* const */ unsigned int S55ROM         : 1;	/* PFLASH p Sector 55 Locked for Forever */
		/* const */ unsigned int S56ROM         : 1;	/* PFLASH p Sector 56 Locked for Forever */
		/* const */ unsigned int S57ROM         : 1;	/* PFLASH p Sector 57 Locked for Forever */
		/* const */ unsigned int S58ROM         : 1;	/* PFLASH p Sector 58 Locked for Forever */
		/* const */ unsigned int S59ROM         : 1;	/* PFLASH p Sector 59 Locked for Forever */
		/* const */ unsigned int S60ROM         : 1;	/* PFLASH p Sector 60 Locked for Forever */
		/* const */ unsigned int S61ROM         : 1;	/* PFLASH p Sector 61 Locked for Forever */
		/* const */ unsigned int S62ROM         : 1;	/* PFLASH p Sector 62 Locked for Forever */
		/* const */ unsigned int S63ROM         : 1;	/* PFLASH p Sector 63 Locked for Forever */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONOTP01_type;
#define DMU_HP_PROCONOTP01	(*( DMU_HP_PROCONOTP01_type *) 0xf8050044u)	/* PFLASH Bank 0 OTP Protection Configuration 1 */
#define DMU_HP_PROCONOTP11	(*( DMU_HP_PROCONOTP01_type *) 0xf8050144u)	/* PFLASH Bank 1 OTP Protection Configuration 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S64ROM         : 1;	/* PFLASH p Sector 64 Locked for Forever */
		/* const */ unsigned int S65ROM         : 1;	/* PFLASH p Sector 65 Locked for Forever */
		/* const */ unsigned int S66ROM         : 1;	/* PFLASH p Sector 66 Locked for Forever */
		/* const */ unsigned int S67ROM         : 1;	/* PFLASH p Sector 67 Locked for Forever */
		/* const */ unsigned int S68ROM         : 1;	/* PFLASH p Sector 68 Locked for Forever */
		/* const */ unsigned int S69ROM         : 1;	/* PFLASH p Sector 69 Locked for Forever */
		/* const */ unsigned int S70ROM         : 1;	/* PFLASH p Sector 70 Locked for Forever */
		/* const */ unsigned int S71ROM         : 1;	/* PFLASH p Sector 71 Locked for Forever */
		/* const */ unsigned int S72ROM         : 1;	/* PFLASH p Sector 72 Locked for Forever */
		/* const */ unsigned int S73ROM         : 1;	/* PFLASH p Sector 73 Locked for Forever */
		/* const */ unsigned int S74ROM         : 1;	/* PFLASH p Sector 74 Locked for Forever */
		/* const */ unsigned int S75ROM         : 1;	/* PFLASH p Sector 75 Locked for Forever */
		/* const */ unsigned int S76ROM         : 1;	/* PFLASH p Sector 76 Locked for Forever */
		/* const */ unsigned int S77ROM         : 1;	/* PFLASH p Sector 77 Locked for Forever */
		/* const */ unsigned int S78ROM         : 1;	/* PFLASH p Sector 78 Locked for Forever */
		/* const */ unsigned int S79ROM         : 1;	/* PFLASH p Sector 79 Locked for Forever */
		/* const */ unsigned int S80ROM         : 1;	/* PFLASH p Sector 80 Locked for Forever */
		/* const */ unsigned int S81ROM         : 1;	/* PFLASH p Sector 81 Locked for Forever */
		/* const */ unsigned int S82ROM         : 1;	/* PFLASH p Sector 82 Locked for Forever */
		/* const */ unsigned int S83ROM         : 1;	/* PFLASH p Sector 83 Locked for Forever */
		/* const */ unsigned int S84ROM         : 1;	/* PFLASH p Sector 84 Locked for Forever */
		/* const */ unsigned int S85ROM         : 1;	/* PFLASH p Sector 85 Locked for Forever */
		/* const */ unsigned int S86ROM         : 1;	/* PFLASH p Sector 86 Locked for Forever */
		/* const */ unsigned int S87ROM         : 1;	/* PFLASH p Sector 87 Locked for Forever */
		/* const */ unsigned int S88ROM         : 1;	/* PFLASH p Sector 88 Locked for Forever */
		/* const */ unsigned int S89ROM         : 1;	/* PFLASH p Sector 89 Locked for Forever */
		/* const */ unsigned int S90ROM         : 1;	/* PFLASH p Sector 90 Locked for Forever */
		/* const */ unsigned int S91ROM         : 1;	/* PFLASH p Sector 91 Locked for Forever */
		/* const */ unsigned int S92ROM         : 1;	/* PFLASH p Sector 92 Locked for Forever */
		/* const */ unsigned int S93ROM         : 1;	/* PFLASH p Sector 93 Locked for Forever */
		/* const */ unsigned int S94ROM         : 1;	/* PFLASH p Sector 94 Locked for Forever */
		/* const */ unsigned int S95ROM         : 1;	/* PFLASH p Sector 95 Locked for Forever */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONOTP02_type;
#define DMU_HP_PROCONOTP02	(*( DMU_HP_PROCONOTP02_type *) 0xf8050048u)	/* PFLASH Bank 0 OTP Protection Configuration 2 */
#define DMU_HP_PROCONOTP12	(*( DMU_HP_PROCONOTP02_type *) 0xf8050148u)	/* PFLASH Bank 1 OTP Protection Configuration 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S96ROM         : 1;	/* PFLASH p Sector 96 Locked for Forever */
		/* const */ unsigned int S97ROM         : 1;	/* PFLASH p Sector 97 Locked for Forever */
		/* const */ unsigned int S98ROM         : 1;	/* PFLASH p Sector 98 Locked for Forever */
		/* const */ unsigned int S99ROM         : 1;	/* PFLASH p Sector 99 Locked for Forever */
		/* const */ unsigned int S100ROM        : 1;	/* PFLASH p Sector 100 Locked for Forever */
		/* const */ unsigned int S101ROM        : 1;	/* PFLASH p Sector 101 Locked for Forever */
		/* const */ unsigned int S102ROM        : 1;	/* PFLASH p Sector 102 Locked for Forever */
		/* const */ unsigned int S103ROM        : 1;	/* PFLASH p Sector 103 Locked for Forever */
		/* const */ unsigned int S104ROM        : 1;	/* PFLASH p Sector 104 Locked for Forever */
		/* const */ unsigned int S105ROM        : 1;	/* PFLASH p Sector 105 Locked for Forever */
		/* const */ unsigned int S106ROM        : 1;	/* PFLASH p Sector 106 Locked for Forever */
		/* const */ unsigned int S107ROM        : 1;	/* PFLASH p Sector 107 Locked for Forever */
		/* const */ unsigned int S108ROM        : 1;	/* PFLASH p Sector 108 Locked for Forever */
		/* const */ unsigned int S109ROM        : 1;	/* PFLASH p Sector 109 Locked for Forever */
		/* const */ unsigned int S110ROM        : 1;	/* PFLASH p Sector 110 Locked for Forever */
		/* const */ unsigned int S111ROM        : 1;	/* PFLASH p Sector 111 Locked for Forever */
		/* const */ unsigned int S112ROM        : 1;	/* PFLASH p Sector 112 Locked for Forever */
		/* const */ unsigned int S113ROM        : 1;	/* PFLASH p Sector 113 Locked for Forever */
		/* const */ unsigned int S114ROM        : 1;	/* PFLASH p Sector 114 Locked for Forever */
		/* const */ unsigned int S115ROM        : 1;	/* PFLASH p Sector 115 Locked for Forever */
		/* const */ unsigned int S116ROM        : 1;	/* PFLASH p Sector 116 Locked for Forever */
		/* const */ unsigned int S117ROM        : 1;	/* PFLASH p Sector 117 Locked for Forever */
		/* const */ unsigned int S118ROM        : 1;	/* PFLASH p Sector 118 Locked for Forever */
		/* const */ unsigned int S119ROM        : 1;	/* PFLASH p Sector 119 Locked for Forever */
		/* const */ unsigned int S120ROM        : 1;	/* PFLASH p Sector 120 Locked for Forever */
		/* const */ unsigned int S121ROM        : 1;	/* PFLASH p Sector 121 Locked for Forever */
		/* const */ unsigned int S122ROM        : 1;	/* PFLASH p Sector 122 Locked for Forever */
		/* const */ unsigned int S123ROM        : 1;	/* PFLASH p Sector 123 Locked for Forever */
		/* const */ unsigned int S124ROM        : 1;	/* PFLASH p Sector 124 Locked for Forever */
		/* const */ unsigned int S125ROM        : 1;	/* PFLASH p Sector 125 Locked for Forever */
		/* const */ unsigned int S126ROM        : 1;	/* PFLASH p Sector 126 Locked for Forever */
		/* const */ unsigned int S127ROM        : 1;	/* PFLASH p Sector 127 Locked for Forever */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONOTP03_type;
#define DMU_HP_PROCONOTP03	(*( DMU_HP_PROCONOTP03_type *) 0xf805004cu)	/* PFLASH Bank 0 OTP Protection Configuration 3 */
#define DMU_HP_PROCONOTP13	(*( DMU_HP_PROCONOTP03_type *) 0xf805014cu)	/* PFLASH Bank 1 OTP Protection Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S128ROM        : 1;	/* PFLASH p Sector 128 Locked for Forever */
		/* const */ unsigned int S129ROM        : 1;	/* PFLASH p Sector 129 Locked for Forever */
		/* const */ unsigned int S130ROM        : 1;	/* PFLASH p Sector 130 Locked for Forever */
		/* const */ unsigned int S131ROM        : 1;	/* PFLASH p Sector 131 Locked for Forever */
		/* const */ unsigned int S132ROM        : 1;	/* PFLASH p Sector 132 Locked for Forever */
		/* const */ unsigned int S133ROM        : 1;	/* PFLASH p Sector 133 Locked for Forever */
		/* const */ unsigned int S134ROM        : 1;	/* PFLASH p Sector 134 Locked for Forever */
		/* const */ unsigned int S135ROM        : 1;	/* PFLASH p Sector 135 Locked for Forever */
		/* const */ unsigned int S136ROM        : 1;	/* PFLASH p Sector 136 Locked for Forever */
		/* const */ unsigned int S137ROM        : 1;	/* PFLASH p Sector 137 Locked for Forever */
		/* const */ unsigned int S138ROM        : 1;	/* PFLASH p Sector 138 Locked for Forever */
		/* const */ unsigned int S139ROM        : 1;	/* PFLASH p Sector 139 Locked for Forever */
		/* const */ unsigned int S140ROM        : 1;	/* PFLASH p Sector 140 Locked for Forever */
		/* const */ unsigned int S141ROM        : 1;	/* PFLASH p Sector 141 Locked for Forever */
		/* const */ unsigned int S142ROM        : 1;	/* PFLASH p Sector 142 Locked for Forever */
		/* const */ unsigned int S143ROM        : 1;	/* PFLASH p Sector 143 Locked for Forever */
		/* const */ unsigned int S144ROM        : 1;	/* PFLASH p Sector 144 Locked for Forever */
		/* const */ unsigned int S145ROM        : 1;	/* PFLASH p Sector 145 Locked for Forever */
		/* const */ unsigned int S146ROM        : 1;	/* PFLASH p Sector 146 Locked for Forever */
		/* const */ unsigned int S147ROM        : 1;	/* PFLASH p Sector 147 Locked for Forever */
		/* const */ unsigned int S148ROM        : 1;	/* PFLASH p Sector 148 Locked for Forever */
		/* const */ unsigned int S149ROM        : 1;	/* PFLASH p Sector 149 Locked for Forever */
		/* const */ unsigned int S150ROM        : 1;	/* PFLASH p Sector 150 Locked for Forever */
		/* const */ unsigned int S151ROM        : 1;	/* PFLASH p Sector 151 Locked for Forever */
		/* const */ unsigned int S152ROM        : 1;	/* PFLASH p Sector 152 Locked for Forever */
		/* const */ unsigned int S153ROM        : 1;	/* PFLASH p Sector 153 Locked for Forever */
		/* const */ unsigned int S154ROM        : 1;	/* PFLASH p Sector 154 Locked for Forever */
		/* const */ unsigned int S155ROM        : 1;	/* PFLASH p Sector 155 Locked for Forever */
		/* const */ unsigned int S156ROM        : 1;	/* PFLASH p Sector 156 Locked for Forever */
		/* const */ unsigned int S157ROM        : 1;	/* PFLASH p Sector 157 Locked for Forever */
		/* const */ unsigned int S158ROM        : 1;	/* PFLASH p Sector 158 Locked for Forever */
		/* const */ unsigned int S159ROM        : 1;	/* PFLASH p Sector 159 Locked for Forever */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONOTP04_type;
#define DMU_HP_PROCONOTP04	(*( DMU_HP_PROCONOTP04_type *) 0xf8050050u)	/* PFLASH Bank 0 OTP Protection Configuration 4 */
#define DMU_HP_PROCONOTP14	(*( DMU_HP_PROCONOTP04_type *) 0xf8050150u)	/* PFLASH Bank 1 OTP Protection Configuration 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S160ROM        : 1;	/* PFLASH p Sector 160 Locked for Forever */
		/* const */ unsigned int S161ROM        : 1;	/* PFLASH p Sector 161 Locked for Forever */
		/* const */ unsigned int S162ROM        : 1;	/* PFLASH p Sector 162 Locked for Forever */
		/* const */ unsigned int S163ROM        : 1;	/* PFLASH p Sector 163 Locked for Forever */
		/* const */ unsigned int S164ROM        : 1;	/* PFLASH p Sector 164 Locked for Forever */
		/* const */ unsigned int S165ROM        : 1;	/* PFLASH p Sector 165 Locked for Forever */
		/* const */ unsigned int S166ROM        : 1;	/* PFLASH p Sector 166 Locked for Forever */
		/* const */ unsigned int S167ROM        : 1;	/* PFLASH p Sector 167 Locked for Forever */
		/* const */ unsigned int S168ROM        : 1;	/* PFLASH p Sector 168 Locked for Forever */
		/* const */ unsigned int S169ROM        : 1;	/* PFLASH p Sector 169 Locked for Forever */
		/* const */ unsigned int S170ROM        : 1;	/* PFLASH p Sector 170 Locked for Forever */
		/* const */ unsigned int S171ROM        : 1;	/* PFLASH p Sector 171 Locked for Forever */
		/* const */ unsigned int S172ROM        : 1;	/* PFLASH p Sector 172 Locked for Forever */
		/* const */ unsigned int S173ROM        : 1;	/* PFLASH p Sector 173 Locked for Forever */
		/* const */ unsigned int S174ROM        : 1;	/* PFLASH p Sector 174 Locked for Forever */
		/* const */ unsigned int S175ROM        : 1;	/* PFLASH p Sector 175 Locked for Forever */
		/* const */ unsigned int S176ROM        : 1;	/* PFLASH p Sector 176 Locked for Forever */
		/* const */ unsigned int S177ROM        : 1;	/* PFLASH p Sector 177 Locked for Forever */
		/* const */ unsigned int S178ROM        : 1;	/* PFLASH p Sector 178 Locked for Forever */
		/* const */ unsigned int S179ROM        : 1;	/* PFLASH p Sector 179 Locked for Forever */
		/* const */ unsigned int S180ROM        : 1;	/* PFLASH p Sector 180 Locked for Forever */
		/* const */ unsigned int S181ROM        : 1;	/* PFLASH p Sector 181 Locked for Forever */
		/* const */ unsigned int S182ROM        : 1;	/* PFLASH p Sector 182 Locked for Forever */
		/* const */ unsigned int S183ROM        : 1;	/* PFLASH p Sector 183 Locked for Forever */
		/* const */ unsigned int S184ROM        : 1;	/* PFLASH p Sector 184 Locked for Forever */
		/* const */ unsigned int S185ROM        : 1;	/* PFLASH p Sector 185 Locked for Forever */
		/* const */ unsigned int S186ROM        : 1;	/* PFLASH p Sector 186 Locked for Forever */
		/* const */ unsigned int S187ROM        : 1;	/* PFLASH p Sector 187 Locked for Forever */
		/* const */ unsigned int S188ROM        : 1;	/* PFLASH p Sector 188 Locked for Forever */
		/* const */ unsigned int S189ROM        : 1;	/* PFLASH p Sector 189 Locked for Forever */
		/* const */ unsigned int S190ROM        : 1;	/* PFLASH p Sector 190 Locked for Forever */
		/* const */ unsigned int S191ROM        : 1;	/* PFLASH p Sector 191 Locked for Forever */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONOTP05_type;
#define DMU_HP_PROCONOTP05	(*( DMU_HP_PROCONOTP05_type *) 0xf8050054u)	/* PFLASH Bank 0 OTP Protection Configuration 5 */
#define DMU_HP_PROCONOTP15	(*( DMU_HP_PROCONOTP05_type *) 0xf8050154u)	/* PFLASH Bank 1 OTP Protection Configuration 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S0L            : 1;	/* PFLASH p Sector 0 Locked for Write Protection */
		/* const */ unsigned int S1L            : 1;	/* PFLASH p Sector 1 Locked for Write Protection */
		/* const */ unsigned int S2L            : 1;	/* PFLASH p Sector 2 Locked for Write Protection */
		/* const */ unsigned int S3L            : 1;	/* PFLASH p Sector 3 Locked for Write Protection */
		/* const */ unsigned int S4L            : 1;	/* PFLASH p Sector 4 Locked for Write Protection */
		/* const */ unsigned int S5L            : 1;	/* PFLASH p Sector 5 Locked for Write Protection */
		/* const */ unsigned int S6L            : 1;	/* PFLASH p Sector 6 Locked for Write Protection */
		/* const */ unsigned int S7L            : 1;	/* PFLASH p Sector 7 Locked for Write Protection */
		/* const */ unsigned int S8L            : 1;	/* PFLASH p Sector 8 Locked for Write Protection */
		/* const */ unsigned int S9L            : 1;	/* PFLASH p Sector 9 Locked for Write Protection */
		/* const */ unsigned int S10L           : 1;	/* PFLASH p Sector 10 Locked for Write Protection */
		/* const */ unsigned int S11L           : 1;	/* PFLASH p Sector 11 Locked for Write Protection */
		/* const */ unsigned int S12L           : 1;	/* PFLASH p Sector 12 Locked for Write Protection */
		/* const */ unsigned int S13L           : 1;	/* PFLASH p Sector 13 Locked for Write Protection */
		/* const */ unsigned int S14L           : 1;	/* PFLASH p Sector 14 Locked for Write Protection */
		/* const */ unsigned int S15L           : 1;	/* PFLASH p Sector 15 Locked for Write Protection */
		/* const */ unsigned int S16L           : 1;	/* PFLASH p Sector 16 Locked for Write Protection */
		/* const */ unsigned int S17L           : 1;	/* PFLASH p Sector 17 Locked for Write Protection */
		/* const */ unsigned int S18L           : 1;	/* PFLASH p Sector 18 Locked for Write Protection */
		/* const */ unsigned int S19L           : 1;	/* PFLASH p Sector 19 Locked for Write Protection */
		/* const */ unsigned int S20L           : 1;	/* PFLASH p Sector 20 Locked for Write Protection */
		/* const */ unsigned int S21L           : 1;	/* PFLASH p Sector 21 Locked for Write Protection */
		/* const */ unsigned int S22L           : 1;	/* PFLASH p Sector 22 Locked for Write Protection */
		/* const */ unsigned int S23L           : 1;	/* PFLASH p Sector 23 Locked for Write Protection */
		/* const */ unsigned int S24L           : 1;	/* PFLASH p Sector 24 Locked for Write Protection */
		/* const */ unsigned int S25L           : 1;	/* PFLASH p Sector 25 Locked for Write Protection */
		/* const */ unsigned int S26L           : 1;	/* PFLASH p Sector 26 Locked for Write Protection */
		/* const */ unsigned int S27L           : 1;	/* PFLASH p Sector 27 Locked for Write Protection */
		/* const */ unsigned int S28L           : 1;	/* PFLASH p Sector 28 Locked for Write Protection */
		/* const */ unsigned int S29L           : 1;	/* PFLASH p Sector 29 Locked for Write Protection */
		/* const */ unsigned int S30L           : 1;	/* PFLASH p Sector 30 Locked for Write Protection */
		/* const */ unsigned int S31L           : 1;	/* PFLASH p Sector 31 Locked for Write Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONP00_type;
#define DMU_HP_PROCONP00	(*( DMU_HP_PROCONP00_type *) 0xf8050000u)	/* PFLASH Bank 0 Protection Configuration 0 */
#define DMU_HP_PROCONP10	(*( DMU_HP_PROCONP00_type *) 0xf8050100u)	/* PFLASH Bank 1 Protection Configuration 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S32L           : 1;	/* PFLASH p Sector 32 Locked for Write Protection */
		/* const */ unsigned int S33L           : 1;	/* PFLASH p Sector 33 Locked for Write Protection */
		/* const */ unsigned int S34L           : 1;	/* PFLASH p Sector 34 Locked for Write Protection */
		/* const */ unsigned int S35L           : 1;	/* PFLASH p Sector 35 Locked for Write Protection */
		/* const */ unsigned int S36L           : 1;	/* PFLASH p Sector 36 Locked for Write Protection */
		/* const */ unsigned int S37L           : 1;	/* PFLASH p Sector 37 Locked for Write Protection */
		/* const */ unsigned int S38L           : 1;	/* PFLASH p Sector 38 Locked for Write Protection */
		/* const */ unsigned int S39L           : 1;	/* PFLASH p Sector 39 Locked for Write Protection */
		/* const */ unsigned int S40L           : 1;	/* PFLASH p Sector 40 Locked for Write Protection */
		/* const */ unsigned int S41L           : 1;	/* PFLASH p Sector 41 Locked for Write Protection */
		/* const */ unsigned int S42L           : 1;	/* PFLASH p Sector 42 Locked for Write Protection */
		/* const */ unsigned int S43L           : 1;	/* PFLASH p Sector 43 Locked for Write Protection */
		/* const */ unsigned int S44L           : 1;	/* PFLASH p Sector 44 Locked for Write Protection */
		/* const */ unsigned int S45L           : 1;	/* PFLASH p Sector 45 Locked for Write Protection */
		/* const */ unsigned int S46L           : 1;	/* PFLASH p Sector 46 Locked for Write Protection */
		/* const */ unsigned int S47L           : 1;	/* PFLASH p Sector 47 Locked for Write Protection */
		/* const */ unsigned int S48L           : 1;	/* PFLASH p Sector 48 Locked for Write Protection */
		/* const */ unsigned int S49L           : 1;	/* PFLASH p Sector 49 Locked for Write Protection */
		/* const */ unsigned int S50L           : 1;	/* PFLASH p Sector 50 Locked for Write Protection */
		/* const */ unsigned int S51L           : 1;	/* PFLASH p Sector 51 Locked for Write Protection */
		/* const */ unsigned int S52L           : 1;	/* PFLASH p Sector 52 Locked for Write Protection */
		/* const */ unsigned int S53L           : 1;	/* PFLASH p Sector 53 Locked for Write Protection */
		/* const */ unsigned int S54L           : 1;	/* PFLASH p Sector 54 Locked for Write Protection */
		/* const */ unsigned int S55L           : 1;	/* PFLASH p Sector 55 Locked for Write Protection */
		/* const */ unsigned int S56L           : 1;	/* PFLASH p Sector 56 Locked for Write Protection */
		/* const */ unsigned int S57L           : 1;	/* PFLASH p Sector 57 Locked for Write Protection */
		/* const */ unsigned int S58L           : 1;	/* PFLASH p Sector 58 Locked for Write Protection */
		/* const */ unsigned int S59L           : 1;	/* PFLASH p Sector 59 Locked for Write Protection */
		/* const */ unsigned int S60L           : 1;	/* PFLASH p Sector 60 Locked for Write Protection */
		/* const */ unsigned int S61L           : 1;	/* PFLASH p Sector 61 Locked for Write Protection */
		/* const */ unsigned int S62L           : 1;	/* PFLASH p Sector 62 Locked for Write Protection */
		/* const */ unsigned int S63L           : 1;	/* PFLASH p Sector 63 Locked for Write Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONP01_type;
#define DMU_HP_PROCONP01	(*( DMU_HP_PROCONP01_type *) 0xf8050004u)	/* PFLASH Bank 0 Protection Configuration 1 */
#define DMU_HP_PROCONP11	(*( DMU_HP_PROCONP01_type *) 0xf8050104u)	/* PFLASH Bank 1 Protection Configuration 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S64L           : 1;	/* PFLASH p Sector 64 Locked for Write Protection */
		/* const */ unsigned int S65L           : 1;	/* PFLASH p Sector 65 Locked for Write Protection */
		/* const */ unsigned int S66L           : 1;	/* PFLASH p Sector 66 Locked for Write Protection */
		/* const */ unsigned int S67L           : 1;	/* PFLASH p Sector 67 Locked for Write Protection */
		/* const */ unsigned int S68L           : 1;	/* PFLASH p Sector 68 Locked for Write Protection */
		/* const */ unsigned int S69L           : 1;	/* PFLASH p Sector 69 Locked for Write Protection */
		/* const */ unsigned int S70L           : 1;	/* PFLASH p Sector 70 Locked for Write Protection */
		/* const */ unsigned int S71L           : 1;	/* PFLASH p Sector 71 Locked for Write Protection */
		/* const */ unsigned int S72L           : 1;	/* PFLASH p Sector 72 Locked for Write Protection */
		/* const */ unsigned int S73L           : 1;	/* PFLASH p Sector 73 Locked for Write Protection */
		/* const */ unsigned int S74L           : 1;	/* PFLASH p Sector 74 Locked for Write Protection */
		/* const */ unsigned int S75L           : 1;	/* PFLASH p Sector 75 Locked for Write Protection */
		/* const */ unsigned int S76L           : 1;	/* PFLASH p Sector 76 Locked for Write Protection */
		/* const */ unsigned int S77L           : 1;	/* PFLASH p Sector 77 Locked for Write Protection */
		/* const */ unsigned int S78L           : 1;	/* PFLASH p Sector 78 Locked for Write Protection */
		/* const */ unsigned int S79L           : 1;	/* PFLASH p Sector 79 Locked for Write Protection */
		/* const */ unsigned int S80L           : 1;	/* PFLASH p Sector 80 Locked for Write Protection */
		/* const */ unsigned int S81L           : 1;	/* PFLASH p Sector 81 Locked for Write Protection */
		/* const */ unsigned int S82L           : 1;	/* PFLASH p Sector 82 Locked for Write Protection */
		/* const */ unsigned int S83L           : 1;	/* PFLASH p Sector 83 Locked for Write Protection */
		/* const */ unsigned int S84L           : 1;	/* PFLASH p Sector 84 Locked for Write Protection */
		/* const */ unsigned int S85L           : 1;	/* PFLASH p Sector 85 Locked for Write Protection */
		/* const */ unsigned int S86L           : 1;	/* PFLASH p Sector 86 Locked for Write Protection */
		/* const */ unsigned int S87L           : 1;	/* PFLASH p Sector 87 Locked for Write Protection */
		/* const */ unsigned int S88L           : 1;	/* PFLASH p Sector 88 Locked for Write Protection */
		/* const */ unsigned int S89L           : 1;	/* PFLASH p Sector 89 Locked for Write Protection */
		/* const */ unsigned int S90L           : 1;	/* PFLASH p Sector 90 Locked for Write Protection */
		/* const */ unsigned int S91L           : 1;	/* PFLASH p Sector 91 Locked for Write Protection */
		/* const */ unsigned int S92L           : 1;	/* PFLASH p Sector 92 Locked for Write Protection */
		/* const */ unsigned int S93L           : 1;	/* PFLASH p Sector 93 Locked for Write Protection */
		/* const */ unsigned int S94L           : 1;	/* PFLASH p Sector 94 Locked for Write Protection */
		/* const */ unsigned int S95L           : 1;	/* PFLASH p Sector 95 Locked for Write Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONP02_type;
#define DMU_HP_PROCONP02	(*( DMU_HP_PROCONP02_type *) 0xf8050008u)	/* PFLASH Bank 0 Protection Configuration 2 */
#define DMU_HP_PROCONP12	(*( DMU_HP_PROCONP02_type *) 0xf8050108u)	/* PFLASH Bank 1 Protection Configuration 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S96L           : 1;	/* PFLASH p Sector 96 Locked for Write Protection */
		/* const */ unsigned int S97L           : 1;	/* PFLASH p Sector 97 Locked for Write Protection */
		/* const */ unsigned int S98L           : 1;	/* PFLASH p Sector 98 Locked for Write Protection */
		/* const */ unsigned int S99L           : 1;	/* PFLASH p Sector 99 Locked for Write Protection */
		/* const */ unsigned int S100L          : 1;	/* PFLASH p Sector 100 Locked for Write Protection */
		/* const */ unsigned int S101L          : 1;	/* PFLASH p Sector 101 Locked for Write Protection */
		/* const */ unsigned int S102L          : 1;	/* PFLASH p Sector 102 Locked for Write Protection */
		/* const */ unsigned int S103L          : 1;	/* PFLASH p Sector 103 Locked for Write Protection */
		/* const */ unsigned int S104L          : 1;	/* PFLASH p Sector 104 Locked for Write Protection */
		/* const */ unsigned int S105L          : 1;	/* PFLASH p Sector 105 Locked for Write Protection */
		/* const */ unsigned int S106L          : 1;	/* PFLASH p Sector 106 Locked for Write Protection */
		/* const */ unsigned int S107L          : 1;	/* PFLASH p Sector 107 Locked for Write Protection */
		/* const */ unsigned int S108L          : 1;	/* PFLASH p Sector 108 Locked for Write Protection */
		/* const */ unsigned int S109L          : 1;	/* PFLASH p Sector 109 Locked for Write Protection */
		/* const */ unsigned int S110L          : 1;	/* PFLASH p Sector 110 Locked for Write Protection */
		/* const */ unsigned int S111L          : 1;	/* PFLASH p Sector 111 Locked for Write Protection */
		/* const */ unsigned int S112L          : 1;	/* PFLASH p Sector 112 Locked for Write Protection */
		/* const */ unsigned int S113L          : 1;	/* PFLASH p Sector 113 Locked for Write Protection */
		/* const */ unsigned int S114L          : 1;	/* PFLASH p Sector 114 Locked for Write Protection */
		/* const */ unsigned int S115L          : 1;	/* PFLASH p Sector 115 Locked for Write Protection */
		/* const */ unsigned int S116L          : 1;	/* PFLASH p Sector 116 Locked for Write Protection */
		/* const */ unsigned int S117L          : 1;	/* PFLASH p Sector 117 Locked for Write Protection */
		/* const */ unsigned int S118L          : 1;	/* PFLASH p Sector 118 Locked for Write Protection */
		/* const */ unsigned int S119L          : 1;	/* PFLASH p Sector 119 Locked for Write Protection */
		/* const */ unsigned int S120L          : 1;	/* PFLASH p Sector 120 Locked for Write Protection */
		/* const */ unsigned int S121L          : 1;	/* PFLASH p Sector 121 Locked for Write Protection */
		/* const */ unsigned int S122L          : 1;	/* PFLASH p Sector 122 Locked for Write Protection */
		/* const */ unsigned int S123L          : 1;	/* PFLASH p Sector 123 Locked for Write Protection */
		/* const */ unsigned int S124L          : 1;	/* PFLASH p Sector 124 Locked for Write Protection */
		/* const */ unsigned int S125L          : 1;	/* PFLASH p Sector 125 Locked for Write Protection */
		/* const */ unsigned int S126L          : 1;	/* PFLASH p Sector 126 Locked for Write Protection */
		/* const */ unsigned int S127L          : 1;	/* PFLASH p Sector 127 Locked for Write Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONP03_type;
#define DMU_HP_PROCONP03	(*( DMU_HP_PROCONP03_type *) 0xf805000cu)	/* PFLASH Bank 0 Protection Configuration 3 */
#define DMU_HP_PROCONP13	(*( DMU_HP_PROCONP03_type *) 0xf805010cu)	/* PFLASH Bank 1 Protection Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S128L          : 1;	/* PFLASH p Sector 128 Locked for Write Protection */
		/* const */ unsigned int S129L          : 1;	/* PFLASH p Sector 129 Locked for Write Protection */
		/* const */ unsigned int S130L          : 1;	/* PFLASH p Sector 130 Locked for Write Protection */
		/* const */ unsigned int S131L          : 1;	/* PFLASH p Sector 131 Locked for Write Protection */
		/* const */ unsigned int S132L          : 1;	/* PFLASH p Sector 132 Locked for Write Protection */
		/* const */ unsigned int S133L          : 1;	/* PFLASH p Sector 133 Locked for Write Protection */
		/* const */ unsigned int S134L          : 1;	/* PFLASH p Sector 134 Locked for Write Protection */
		/* const */ unsigned int S135L          : 1;	/* PFLASH p Sector 135 Locked for Write Protection */
		/* const */ unsigned int S136L          : 1;	/* PFLASH p Sector 136 Locked for Write Protection */
		/* const */ unsigned int S137L          : 1;	/* PFLASH p Sector 137 Locked for Write Protection */
		/* const */ unsigned int S138L          : 1;	/* PFLASH p Sector 138 Locked for Write Protection */
		/* const */ unsigned int S139L          : 1;	/* PFLASH p Sector 139 Locked for Write Protection */
		/* const */ unsigned int S140L          : 1;	/* PFLASH p Sector 140 Locked for Write Protection */
		/* const */ unsigned int S141L          : 1;	/* PFLASH p Sector 141 Locked for Write Protection */
		/* const */ unsigned int S142L          : 1;	/* PFLASH p Sector 142 Locked for Write Protection */
		/* const */ unsigned int S143L          : 1;	/* PFLASH p Sector 143 Locked for Write Protection */
		/* const */ unsigned int S144L          : 1;	/* PFLASH p Sector 144 Locked for Write Protection */
		/* const */ unsigned int S145L          : 1;	/* PFLASH p Sector 145 Locked for Write Protection */
		/* const */ unsigned int S146L          : 1;	/* PFLASH p Sector 146 Locked for Write Protection */
		/* const */ unsigned int S147L          : 1;	/* PFLASH p Sector 147 Locked for Write Protection */
		/* const */ unsigned int S148L          : 1;	/* PFLASH p Sector 148 Locked for Write Protection */
		/* const */ unsigned int S149L          : 1;	/* PFLASH p Sector 149 Locked for Write Protection */
		/* const */ unsigned int S150L          : 1;	/* PFLASH p Sector 150 Locked for Write Protection */
		/* const */ unsigned int S151L          : 1;	/* PFLASH p Sector 151 Locked for Write Protection */
		/* const */ unsigned int S152L          : 1;	/* PFLASH p Sector 152 Locked for Write Protection */
		/* const */ unsigned int S153L          : 1;	/* PFLASH p Sector 153 Locked for Write Protection */
		/* const */ unsigned int S154L          : 1;	/* PFLASH p Sector 154 Locked for Write Protection */
		/* const */ unsigned int S155L          : 1;	/* PFLASH p Sector 155 Locked for Write Protection */
		/* const */ unsigned int S156L          : 1;	/* PFLASH p Sector 156 Locked for Write Protection */
		/* const */ unsigned int S157L          : 1;	/* PFLASH p Sector 157 Locked for Write Protection */
		/* const */ unsigned int S158L          : 1;	/* PFLASH p Sector 158 Locked for Write Protection */
		/* const */ unsigned int S159L          : 1;	/* PFLASH p Sector 159 Locked for Write Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONP04_type;
#define DMU_HP_PROCONP04	(*( DMU_HP_PROCONP04_type *) 0xf8050010u)	/* PFLASH Bank 0 Protection Configuration 4 */
#define DMU_HP_PROCONP14	(*( DMU_HP_PROCONP04_type *) 0xf8050110u)	/* PFLASH Bank 1 Protection Configuration 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S160L          : 1;	/* PFLASH p Sector 160 Locked for Write Protection */
		/* const */ unsigned int S161L          : 1;	/* PFLASH p Sector 161 Locked for Write Protection */
		/* const */ unsigned int S162L          : 1;	/* PFLASH p Sector 162 Locked for Write Protection */
		/* const */ unsigned int S163L          : 1;	/* PFLASH p Sector 163 Locked for Write Protection */
		/* const */ unsigned int S164L          : 1;	/* PFLASH p Sector 164 Locked for Write Protection */
		/* const */ unsigned int S165L          : 1;	/* PFLASH p Sector 165 Locked for Write Protection */
		/* const */ unsigned int S166L          : 1;	/* PFLASH p Sector 166 Locked for Write Protection */
		/* const */ unsigned int S167L          : 1;	/* PFLASH p Sector 167 Locked for Write Protection */
		/* const */ unsigned int S168L          : 1;	/* PFLASH p Sector 168 Locked for Write Protection */
		/* const */ unsigned int S169L          : 1;	/* PFLASH p Sector 169 Locked for Write Protection */
		/* const */ unsigned int S170L          : 1;	/* PFLASH p Sector 170 Locked for Write Protection */
		/* const */ unsigned int S171L          : 1;	/* PFLASH p Sector 171 Locked for Write Protection */
		/* const */ unsigned int S172L          : 1;	/* PFLASH p Sector 172 Locked for Write Protection */
		/* const */ unsigned int S173L          : 1;	/* PFLASH p Sector 173 Locked for Write Protection */
		/* const */ unsigned int S174L          : 1;	/* PFLASH p Sector 174 Locked for Write Protection */
		/* const */ unsigned int S175L          : 1;	/* PFLASH p Sector 175 Locked for Write Protection */
		/* const */ unsigned int S176L          : 1;	/* PFLASH p Sector 176 Locked for Write Protection */
		/* const */ unsigned int S177L          : 1;	/* PFLASH p Sector 177 Locked for Write Protection */
		/* const */ unsigned int S178L          : 1;	/* PFLASH p Sector 178 Locked for Write Protection */
		/* const */ unsigned int S179L          : 1;	/* PFLASH p Sector 179 Locked for Write Protection */
		/* const */ unsigned int S180L          : 1;	/* PFLASH p Sector 180 Locked for Write Protection */
		/* const */ unsigned int S181L          : 1;	/* PFLASH p Sector 181 Locked for Write Protection */
		/* const */ unsigned int S182L          : 1;	/* PFLASH p Sector 182 Locked for Write Protection */
		/* const */ unsigned int S183L          : 1;	/* PFLASH p Sector 183 Locked for Write Protection */
		/* const */ unsigned int S184L          : 1;	/* PFLASH p Sector 184 Locked for Write Protection */
		/* const */ unsigned int S185L          : 1;	/* PFLASH p Sector 185 Locked for Write Protection */
		/* const */ unsigned int S186L          : 1;	/* PFLASH p Sector 186 Locked for Write Protection */
		/* const */ unsigned int S187L          : 1;	/* PFLASH p Sector 187 Locked for Write Protection */
		/* const */ unsigned int S188L          : 1;	/* PFLASH p Sector 188 Locked for Write Protection */
		/* const */ unsigned int S189L          : 1;	/* PFLASH p Sector 189 Locked for Write Protection */
		/* const */ unsigned int S190L          : 1;	/* PFLASH p Sector 190 Locked for Write Protection */
		/* const */ unsigned int S191L          : 1;	/* PFLASH p Sector 191 Locked for Write Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONP05_type;
#define DMU_HP_PROCONP05	(*( DMU_HP_PROCONP05_type *) 0xf8050014u)	/* PFLASH Bank 0 Protection Configuration 5 */
#define DMU_HP_PROCONP15	(*( DMU_HP_PROCONP05_type *) 0xf8050114u)	/* PFLASH Bank 1 Protection Configuration 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S0WOP          : 1;	/* PFLASH p Sector 0 Configured for Write-Once Protection */
		/* const */ unsigned int S1WOP          : 1;	/* PFLASH p Sector 1 Configured for Write-Once Protection */
		/* const */ unsigned int S2WOP          : 1;	/* PFLASH p Sector 2 Configured for Write-Once Protection */
		/* const */ unsigned int S3WOP          : 1;	/* PFLASH p Sector 3 Configured for Write-Once Protection */
		/* const */ unsigned int S4WOP          : 1;	/* PFLASH p Sector 4 Configured for Write-Once Protection */
		/* const */ unsigned int S5WOP          : 1;	/* PFLASH p Sector 5 Configured for Write-Once Protection */
		/* const */ unsigned int S6WOP          : 1;	/* PFLASH p Sector 6 Configured for Write-Once Protection */
		/* const */ unsigned int S7WOP          : 1;	/* PFLASH p Sector 7 Configured for Write-Once Protection */
		/* const */ unsigned int S8WOP          : 1;	/* PFLASH p Sector 8 Configured for Write-Once Protection */
		/* const */ unsigned int S9WOP          : 1;	/* PFLASH p Sector 9 Configured for Write-Once Protection */
		/* const */ unsigned int S10WOP         : 1;	/* PFLASH p Sector 10 Configured for Write-Once Protection */
		/* const */ unsigned int S11WOP         : 1;	/* PFLASH p Sector 11 Configured for Write-Once Protection */
		/* const */ unsigned int S12WOP         : 1;	/* PFLASH p Sector 12 Configured for Write-Once Protection */
		/* const */ unsigned int S13WOP         : 1;	/* PFLASH p Sector 13 Configured for Write-Once Protection */
		/* const */ unsigned int S14WOP         : 1;	/* PFLASH p Sector 14 Configured for Write-Once Protection */
		/* const */ unsigned int S15WOP         : 1;	/* PFLASH p Sector 15 Configured for Write-Once Protection */
		/* const */ unsigned int S16WOP         : 1;	/* PFLASH p Sector 16 Configured for Write-Once Protection */
		/* const */ unsigned int S17WOP         : 1;	/* PFLASH p Sector 17 Configured for Write-Once Protection */
		/* const */ unsigned int S18WOP         : 1;	/* PFLASH p Sector 18 Configured for Write-Once Protection */
		/* const */ unsigned int S19WOP         : 1;	/* PFLASH p Sector 19 Configured for Write-Once Protection */
		/* const */ unsigned int S20WOP         : 1;	/* PFLASH p Sector 20 Configured for Write-Once Protection */
		/* const */ unsigned int S21WOP         : 1;	/* PFLASH p Sector 21 Configured for Write-Once Protection */
		/* const */ unsigned int S22WOP         : 1;	/* PFLASH p Sector 22 Configured for Write-Once Protection */
		/* const */ unsigned int S23WOP         : 1;	/* PFLASH p Sector 23 Configured for Write-Once Protection */
		/* const */ unsigned int S24WOP         : 1;	/* PFLASH p Sector 24 Configured for Write-Once Protection */
		/* const */ unsigned int S25WOP         : 1;	/* PFLASH p Sector 25 Configured for Write-Once Protection */
		/* const */ unsigned int S26WOP         : 1;	/* PFLASH p Sector 26 Configured for Write-Once Protection */
		/* const */ unsigned int S27WOP         : 1;	/* PFLASH p Sector 27 Configured for Write-Once Protection */
		/* const */ unsigned int S28WOP         : 1;	/* PFLASH p Sector 28 Configured for Write-Once Protection */
		/* const */ unsigned int S29WOP         : 1;	/* PFLASH p Sector 29 Configured for Write-Once Protection */
		/* const */ unsigned int S30WOP         : 1;	/* PFLASH p Sector 30 Configured for Write-Once Protection */
		/* const */ unsigned int S31WOP         : 1;	/* PFLASH p Sector 31 Configured for Write-Once Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONWOP00_type;
#define DMU_HP_PROCONWOP00	(*( DMU_HP_PROCONWOP00_type *) 0xf8050080u)	/* PFLASH Bank 0 WOP Configuration 0 */
#define DMU_HP_PROCONWOP10	(*( DMU_HP_PROCONWOP00_type *) 0xf8050180u)	/* PFLASH Bank 1 WOP Configuration 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S32WOP         : 1;	/* PFLASH p Sector 32 Configured for Write-Once Protection */
		/* const */ unsigned int S33WOP         : 1;	/* PFLASH p Sector 33 Configured for Write-Once Protection */
		/* const */ unsigned int S34WOP         : 1;	/* PFLASH p Sector 34 Configured for Write-Once Protection */
		/* const */ unsigned int S35WOP         : 1;	/* PFLASH p Sector 35 Configured for Write-Once Protection */
		/* const */ unsigned int S36WOP         : 1;	/* PFLASH p Sector 36 Configured for Write-Once Protection */
		/* const */ unsigned int S37WOP         : 1;	/* PFLASH p Sector 37 Configured for Write-Once Protection */
		/* const */ unsigned int S38WOP         : 1;	/* PFLASH p Sector 38 Configured for Write-Once Protection */
		/* const */ unsigned int S39WOP         : 1;	/* PFLASH p Sector 39 Configured for Write-Once Protection */
		/* const */ unsigned int S40WOP         : 1;	/* PFLASH p Sector 40 Configured for Write-Once Protection */
		/* const */ unsigned int S41WOP         : 1;	/* PFLASH p Sector 41 Configured for Write-Once Protection */
		/* const */ unsigned int S42WOP         : 1;	/* PFLASH p Sector 42 Configured for Write-Once Protection */
		/* const */ unsigned int S43WOP         : 1;	/* PFLASH p Sector 43 Configured for Write-Once Protection */
		/* const */ unsigned int S44WOP         : 1;	/* PFLASH p Sector 44 Configured for Write-Once Protection */
		/* const */ unsigned int S45WOP         : 1;	/* PFLASH p Sector 45 Configured for Write-Once Protection */
		/* const */ unsigned int S46WOP         : 1;	/* PFLASH p Sector 46 Configured for Write-Once Protection */
		/* const */ unsigned int S47WOP         : 1;	/* PFLASH p Sector 47 Configured for Write-Once Protection */
		/* const */ unsigned int S48WOP         : 1;	/* PFLASH p Sector 48 Configured for Write-Once Protection */
		/* const */ unsigned int S49WOP         : 1;	/* PFLASH p Sector 49 Configured for Write-Once Protection */
		/* const */ unsigned int S50WOP         : 1;	/* PFLASH p Sector 50 Configured for Write-Once Protection */
		/* const */ unsigned int S51WOP         : 1;	/* PFLASH p Sector 51 Configured for Write-Once Protection */
		/* const */ unsigned int S52WOP         : 1;	/* PFLASH p Sector 52 Configured for Write-Once Protection */
		/* const */ unsigned int S53WOP         : 1;	/* PFLASH p Sector 53 Configured for Write-Once Protection */
		/* const */ unsigned int S54WOP         : 1;	/* PFLASH p Sector 54 Configured for Write-Once Protection */
		/* const */ unsigned int S55WOP         : 1;	/* PFLASH p Sector 55 Configured for Write-Once Protection */
		/* const */ unsigned int S56WOP         : 1;	/* PFLASH p Sector 56 Configured for Write-Once Protection */
		/* const */ unsigned int S57WOP         : 1;	/* PFLASH p Sector 57 Configured for Write-Once Protection */
		/* const */ unsigned int S58WOP         : 1;	/* PFLASH p Sector 58 Configured for Write-Once Protection */
		/* const */ unsigned int S59WOP         : 1;	/* PFLASH p Sector 59 Configured for Write-Once Protection */
		/* const */ unsigned int S60WOP         : 1;	/* PFLASH p Sector 60 Configured for Write-Once Protection */
		/* const */ unsigned int S61WOP         : 1;	/* PFLASH p Sector 61 Configured for Write-Once Protection */
		/* const */ unsigned int S62WOP         : 1;	/* PFLASH p Sector 62 Configured for Write-Once Protection */
		/* const */ unsigned int S63WOP         : 1;	/* PFLASH p Sector 63 Configured for Write-Once Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONWOP01_type;
#define DMU_HP_PROCONWOP01	(*( DMU_HP_PROCONWOP01_type *) 0xf8050084u)	/* PFLASH Bank 0 WOP Configuration 1 */
#define DMU_HP_PROCONWOP11	(*( DMU_HP_PROCONWOP01_type *) 0xf8050184u)	/* PFLASH Bank 1 WOP Configuration 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S64WOP         : 1;	/* PFLASH p Sector 64 Configured for Write-Once Protection */
		/* const */ unsigned int S65WOP         : 1;	/* PFLASH p Sector 65 Configured for Write-Once Protection */
		/* const */ unsigned int S66WOP         : 1;	/* PFLASH p Sector 66 Configured for Write-Once Protection */
		/* const */ unsigned int S67WOP         : 1;	/* PFLASH p Sector 67 Configured for Write-Once Protection */
		/* const */ unsigned int S68WOP         : 1;	/* PFLASH p Sector 68 Configured for Write-Once Protection */
		/* const */ unsigned int S69WOP         : 1;	/* PFLASH p Sector 69 Configured for Write-Once Protection */
		/* const */ unsigned int S70WOP         : 1;	/* PFLASH p Sector 70 Configured for Write-Once Protection */
		/* const */ unsigned int S71WOP         : 1;	/* PFLASH p Sector 71 Configured for Write-Once Protection */
		/* const */ unsigned int S72WOP         : 1;	/* PFLASH p Sector 72 Configured for Write-Once Protection */
		/* const */ unsigned int S73WOP         : 1;	/* PFLASH p Sector 73 Configured for Write-Once Protection */
		/* const */ unsigned int S74WOP         : 1;	/* PFLASH p Sector 74 Configured for Write-Once Protection */
		/* const */ unsigned int S75WOP         : 1;	/* PFLASH p Sector 75 Configured for Write-Once Protection */
		/* const */ unsigned int S76WOP         : 1;	/* PFLASH p Sector 76 Configured for Write-Once Protection */
		/* const */ unsigned int S77WOP         : 1;	/* PFLASH p Sector 77 Configured for Write-Once Protection */
		/* const */ unsigned int S78WOP         : 1;	/* PFLASH p Sector 78 Configured for Write-Once Protection */
		/* const */ unsigned int S79WOP         : 1;	/* PFLASH p Sector 79 Configured for Write-Once Protection */
		/* const */ unsigned int S80WOP         : 1;	/* PFLASH p Sector 80 Configured for Write-Once Protection */
		/* const */ unsigned int S81WOP         : 1;	/* PFLASH p Sector 81 Configured for Write-Once Protection */
		/* const */ unsigned int S82WOP         : 1;	/* PFLASH p Sector 82 Configured for Write-Once Protection */
		/* const */ unsigned int S83WOP         : 1;	/* PFLASH p Sector 83 Configured for Write-Once Protection */
		/* const */ unsigned int S84WOP         : 1;	/* PFLASH p Sector 84 Configured for Write-Once Protection */
		/* const */ unsigned int S85WOP         : 1;	/* PFLASH p Sector 85 Configured for Write-Once Protection */
		/* const */ unsigned int S86WOP         : 1;	/* PFLASH p Sector 86 Configured for Write-Once Protection */
		/* const */ unsigned int S87WOP         : 1;	/* PFLASH p Sector 87 Configured for Write-Once Protection */
		/* const */ unsigned int S88WOP         : 1;	/* PFLASH p Sector 88 Configured for Write-Once Protection */
		/* const */ unsigned int S89WOP         : 1;	/* PFLASH p Sector 89 Configured for Write-Once Protection */
		/* const */ unsigned int S90WOP         : 1;	/* PFLASH p Sector 90 Configured for Write-Once Protection */
		/* const */ unsigned int S91WOP         : 1;	/* PFLASH p Sector 91 Configured for Write-Once Protection */
		/* const */ unsigned int S92WOP         : 1;	/* PFLASH p Sector 92 Configured for Write-Once Protection */
		/* const */ unsigned int S93WOP         : 1;	/* PFLASH p Sector 93 Configured for Write-Once Protection */
		/* const */ unsigned int S94WOP         : 1;	/* PFLASH p Sector 94 Configured for Write-Once Protection */
		/* const */ unsigned int S95WOP         : 1;	/* PFLASH p Sector 95 Configured for Write-Once Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONWOP02_type;
#define DMU_HP_PROCONWOP02	(*( DMU_HP_PROCONWOP02_type *) 0xf8050088u)	/* PFLASH Bank 0 WOP Configuration 2 */
#define DMU_HP_PROCONWOP12	(*( DMU_HP_PROCONWOP02_type *) 0xf8050188u)	/* PFLASH Bank 1 WOP Configuration 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S96WOP         : 1;	/* PFLASH p Sector 96 Configured for Write-Once Protection */
		/* const */ unsigned int S97WOP         : 1;	/* PFLASH p Sector 97 Configured for Write-Once Protection */
		/* const */ unsigned int S98WOP         : 1;	/* PFLASH p Sector 98 Configured for Write-Once Protection */
		/* const */ unsigned int S99WOP         : 1;	/* PFLASH p Sector 99 Configured for Write-Once Protection */
		/* const */ unsigned int S100WOP        : 1;	/* PFLASH p Sector 100 Configured for Write-Once Protection */
		/* const */ unsigned int S101WOP        : 1;	/* PFLASH p Sector 101 Configured for Write-Once Protection */
		/* const */ unsigned int S102WOP        : 1;	/* PFLASH p Sector 102 Configured for Write-Once Protection */
		/* const */ unsigned int S103WOP        : 1;	/* PFLASH p Sector 103 Configured for Write-Once Protection */
		/* const */ unsigned int S104WOP        : 1;	/* PFLASH p Sector 104 Configured for Write-Once Protection */
		/* const */ unsigned int S105WOP        : 1;	/* PFLASH p Sector 105 Configured for Write-Once Protection */
		/* const */ unsigned int S106WOP        : 1;	/* PFLASH p Sector 106 Configured for Write-Once Protection */
		/* const */ unsigned int S107WOP        : 1;	/* PFLASH p Sector 107 Configured for Write-Once Protection */
		/* const */ unsigned int S108WOP        : 1;	/* PFLASH p Sector 108 Configured for Write-Once Protection */
		/* const */ unsigned int S109WOP        : 1;	/* PFLASH p Sector 109 Configured for Write-Once Protection */
		/* const */ unsigned int S110WOP        : 1;	/* PFLASH p Sector 110 Configured for Write-Once Protection */
		/* const */ unsigned int S111WOP        : 1;	/* PFLASH p Sector 111 Configured for Write-Once Protection */
		/* const */ unsigned int S112WOP        : 1;	/* PFLASH p Sector 112 Configured for Write-Once Protection */
		/* const */ unsigned int S113WOP        : 1;	/* PFLASH p Sector 113 Configured for Write-Once Protection */
		/* const */ unsigned int S114WOP        : 1;	/* PFLASH p Sector 114 Configured for Write-Once Protection */
		/* const */ unsigned int S115WOP        : 1;	/* PFLASH p Sector 115 Configured for Write-Once Protection */
		/* const */ unsigned int S116WOP        : 1;	/* PFLASH p Sector 116 Configured for Write-Once Protection */
		/* const */ unsigned int S117WOP        : 1;	/* PFLASH p Sector 117 Configured for Write-Once Protection */
		/* const */ unsigned int S118WOP        : 1;	/* PFLASH p Sector 118 Configured for Write-Once Protection */
		/* const */ unsigned int S119WOP        : 1;	/* PFLASH p Sector 119 Configured for Write-Once Protection */
		/* const */ unsigned int S120WOP        : 1;	/* PFLASH p Sector 120 Configured for Write-Once Protection */
		/* const */ unsigned int S121WOP        : 1;	/* PFLASH p Sector 121 Configured for Write-Once Protection */
		/* const */ unsigned int S122WOP        : 1;	/* PFLASH p Sector 122 Configured for Write-Once Protection */
		/* const */ unsigned int S123WOP        : 1;	/* PFLASH p Sector 123 Configured for Write-Once Protection */
		/* const */ unsigned int S124WOP        : 1;	/* PFLASH p Sector 124 Configured for Write-Once Protection */
		/* const */ unsigned int S125WOP        : 1;	/* PFLASH p Sector 125 Configured for Write-Once Protection */
		/* const */ unsigned int S126WOP        : 1;	/* PFLASH p Sector 126 Configured for Write-Once Protection */
		/* const */ unsigned int S127WOP        : 1;	/* PFLASH p Sector 127 Configured for Write-Once Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONWOP03_type;
#define DMU_HP_PROCONWOP03	(*( DMU_HP_PROCONWOP03_type *) 0xf805008cu)	/* PFLASH Bank 0 WOP Configuration 3 */
#define DMU_HP_PROCONWOP13	(*( DMU_HP_PROCONWOP03_type *) 0xf805018cu)	/* PFLASH Bank 1 WOP Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S128WOP        : 1;	/* PFLASH p Sector 128 Configured for Write-Once Protection */
		/* const */ unsigned int S129WOP        : 1;	/* PFLASH p Sector 129 Configured for Write-Once Protection */
		/* const */ unsigned int S130WOP        : 1;	/* PFLASH p Sector 130 Configured for Write-Once Protection */
		/* const */ unsigned int S131WOP        : 1;	/* PFLASH p Sector 131 Configured for Write-Once Protection */
		/* const */ unsigned int S132WOP        : 1;	/* PFLASH p Sector 132 Configured for Write-Once Protection */
		/* const */ unsigned int S133WOP        : 1;	/* PFLASH p Sector 133 Configured for Write-Once Protection */
		/* const */ unsigned int S134WOP        : 1;	/* PFLASH p Sector 134 Configured for Write-Once Protection */
		/* const */ unsigned int S135WOP        : 1;	/* PFLASH p Sector 135 Configured for Write-Once Protection */
		/* const */ unsigned int S136WOP        : 1;	/* PFLASH p Sector 136 Configured for Write-Once Protection */
		/* const */ unsigned int S137WOP        : 1;	/* PFLASH p Sector 137 Configured for Write-Once Protection */
		/* const */ unsigned int S138WOP        : 1;	/* PFLASH p Sector 138 Configured for Write-Once Protection */
		/* const */ unsigned int S139WOP        : 1;	/* PFLASH p Sector 139 Configured for Write-Once Protection */
		/* const */ unsigned int S140WOP        : 1;	/* PFLASH p Sector 140 Configured for Write-Once Protection */
		/* const */ unsigned int S141WOP        : 1;	/* PFLASH p Sector 141 Configured for Write-Once Protection */
		/* const */ unsigned int S142WOP        : 1;	/* PFLASH p Sector 142 Configured for Write-Once Protection */
		/* const */ unsigned int S143WOP        : 1;	/* PFLASH p Sector 143 Configured for Write-Once Protection */
		/* const */ unsigned int S144WOP        : 1;	/* PFLASH p Sector 144 Configured for Write-Once Protection */
		/* const */ unsigned int S145WOP        : 1;	/* PFLASH p Sector 145 Configured for Write-Once Protection */
		/* const */ unsigned int S146WOP        : 1;	/* PFLASH p Sector 146 Configured for Write-Once Protection */
		/* const */ unsigned int S147WOP        : 1;	/* PFLASH p Sector 147 Configured for Write-Once Protection */
		/* const */ unsigned int S148WOP        : 1;	/* PFLASH p Sector 148 Configured for Write-Once Protection */
		/* const */ unsigned int S149WOP        : 1;	/* PFLASH p Sector 149 Configured for Write-Once Protection */
		/* const */ unsigned int S150WOP        : 1;	/* PFLASH p Sector 150 Configured for Write-Once Protection */
		/* const */ unsigned int S151WOP        : 1;	/* PFLASH p Sector 151 Configured for Write-Once Protection */
		/* const */ unsigned int S152WOP        : 1;	/* PFLASH p Sector 152 Configured for Write-Once Protection */
		/* const */ unsigned int S153WOP        : 1;	/* PFLASH p Sector 153 Configured for Write-Once Protection */
		/* const */ unsigned int S154WOP        : 1;	/* PFLASH p Sector 154 Configured for Write-Once Protection */
		/* const */ unsigned int S155WOP        : 1;	/* PFLASH p Sector 155 Configured for Write-Once Protection */
		/* const */ unsigned int S156WOP        : 1;	/* PFLASH p Sector 156 Configured for Write-Once Protection */
		/* const */ unsigned int S157WOP        : 1;	/* PFLASH p Sector 157 Configured for Write-Once Protection */
		/* const */ unsigned int S158WOP        : 1;	/* PFLASH p Sector 158 Configured for Write-Once Protection */
		/* const */ unsigned int S159WOP        : 1;	/* PFLASH p Sector 159 Configured for Write-Once Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONWOP04_type;
#define DMU_HP_PROCONWOP04	(*( DMU_HP_PROCONWOP04_type *) 0xf8050090u)	/* PFLASH Bank 0 WOP Configuration 4 */
#define DMU_HP_PROCONWOP14	(*( DMU_HP_PROCONWOP04_type *) 0xf8050190u)	/* PFLASH Bank 1 WOP Configuration 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int S160WOP        : 1;	/* PFLASH p Sector 160 Configured for Write-Once Protection */
		/* const */ unsigned int S161WOP        : 1;	/* PFLASH p Sector 161 Configured for Write-Once Protection */
		/* const */ unsigned int S162WOP        : 1;	/* PFLASH p Sector 162 Configured for Write-Once Protection */
		/* const */ unsigned int S163WOP        : 1;	/* PFLASH p Sector 163 Configured for Write-Once Protection */
		/* const */ unsigned int S164WOP        : 1;	/* PFLASH p Sector 164 Configured for Write-Once Protection */
		/* const */ unsigned int S165WOP        : 1;	/* PFLASH p Sector 165 Configured for Write-Once Protection */
		/* const */ unsigned int S166WOP        : 1;	/* PFLASH p Sector 166 Configured for Write-Once Protection */
		/* const */ unsigned int S167WOP        : 1;	/* PFLASH p Sector 167 Configured for Write-Once Protection */
		/* const */ unsigned int S168WOP        : 1;	/* PFLASH p Sector 168 Configured for Write-Once Protection */
		/* const */ unsigned int S169WOP        : 1;	/* PFLASH p Sector 169 Configured for Write-Once Protection */
		/* const */ unsigned int S170WOP        : 1;	/* PFLASH p Sector 170 Configured for Write-Once Protection */
		/* const */ unsigned int S171WOP        : 1;	/* PFLASH p Sector 171 Configured for Write-Once Protection */
		/* const */ unsigned int S172WOP        : 1;	/* PFLASH p Sector 172 Configured for Write-Once Protection */
		/* const */ unsigned int S173WOP        : 1;	/* PFLASH p Sector 173 Configured for Write-Once Protection */
		/* const */ unsigned int S174WOP        : 1;	/* PFLASH p Sector 174 Configured for Write-Once Protection */
		/* const */ unsigned int S175WOP        : 1;	/* PFLASH p Sector 175 Configured for Write-Once Protection */
		/* const */ unsigned int S176WOP        : 1;	/* PFLASH p Sector 176 Configured for Write-Once Protection */
		/* const */ unsigned int S177WOP        : 1;	/* PFLASH p Sector 177 Configured for Write-Once Protection */
		/* const */ unsigned int S178WOP        : 1;	/* PFLASH p Sector 178 Configured for Write-Once Protection */
		/* const */ unsigned int S179WOP        : 1;	/* PFLASH p Sector 179 Configured for Write-Once Protection */
		/* const */ unsigned int S180WOP        : 1;	/* PFLASH p Sector 180 Configured for Write-Once Protection */
		/* const */ unsigned int S181WOP        : 1;	/* PFLASH p Sector 181 Configured for Write-Once Protection */
		/* const */ unsigned int S182WOP        : 1;	/* PFLASH p Sector 182 Configured for Write-Once Protection */
		/* const */ unsigned int S183WOP        : 1;	/* PFLASH p Sector 183 Configured for Write-Once Protection */
		/* const */ unsigned int S184WOP        : 1;	/* PFLASH p Sector 184 Configured for Write-Once Protection */
		/* const */ unsigned int S185WOP        : 1;	/* PFLASH p Sector 185 Configured for Write-Once Protection */
		/* const */ unsigned int S186WOP        : 1;	/* PFLASH p Sector 186 Configured for Write-Once Protection */
		/* const */ unsigned int S187WOP        : 1;	/* PFLASH p Sector 187 Configured for Write-Once Protection */
		/* const */ unsigned int S188WOP        : 1;	/* PFLASH p Sector 188 Configured for Write-Once Protection */
		/* const */ unsigned int S189WOP        : 1;	/* PFLASH p Sector 189 Configured for Write-Once Protection */
		/* const */ unsigned int S190WOP        : 1;	/* PFLASH p Sector 190 Configured for Write-Once Protection */
		/* const */ unsigned int S191WOP        : 1;	/* PFLASH p Sector 191 Configured for Write-Once Protection */
	} B;
	int I;
	unsigned int U;

} DMU_HP_PROCONWOP05_type;
#define DMU_HP_PROCONWOP05	(*( DMU_HP_PROCONWOP05_type *) 0xf8050094u)	/* PFLASH Bank 0 WOP Configuration 5 */
#define DMU_HP_PROCONWOP15	(*( DMU_HP_PROCONWOP05_type *) 0xf8050194u)	/* PFLASH Bank 1 WOP Configuration 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 1;	/* Reserved */
		unsigned int CSQER          : 1;	/* Clear Command Sequence Error */
		/* const */ unsigned int RES_3          : 1;	/* Reserved */
		unsigned int CPVER          : 1;	/* Clear Program Verify Error */
		unsigned int CEVER          : 1;	/* Clear Erase Verify Error */
		/* const */ unsigned int RES_6          : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SF_CLRE_type;
#define DMU_SF_CLRE	(*( DMU_SF_CLRE_type *) 0xf8060038u)	/* HSM Clear Error Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LCKHSMUCB      : 2;	/* Lock Access to UCB_HSMCFG */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		unsigned int DUCG           : 1;	/* DFLASH User Command Granularity */
		/* const */ unsigned int RES_4          : 12;	/* Reserved */
		unsigned int CPROG          : 1;	/* Clear Programming State */
		unsigned int CERASE         : 1;	/* Clear Erase State */
		/* const */ unsigned int RES_7          : 1;	/* Reserved */
		/* const */ unsigned int RES_8          : 13;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SF_CONTROL_type;
#define DMU_SF_CONTROL	(*( DMU_SF_CONTROL_type *) 0xf8060014u)	/* HSM Flash Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 2;	/* Clear ECC status bits */
		/* const */ unsigned int RES            : 26;	/* Reserved */
		unsigned int ECCCORDIS      : 2;	/* HSM Command Interface ECC Correction Disable */
		unsigned int TRAPDIS        : 2;	/* HSM Command Interface Uncorrectable ECC Bit Error Trap Disable */
	} B;
	int I;
	unsigned int U;

} DMU_SF_ECCC_type;
#define DMU_SF_ECCC	(*( DMU_SF_ECCC_type *) 0xf8060048u)	/* HSM DF1 ECC Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ERR1           : 1;	/* Read Access Single Bit ECC Error */
		/* const */ unsigned int ERR2           : 1;	/* Read Access Double Bit ECC Error */
		/* const */ unsigned int ERR3           : 1;	/* Read Access Triple Bit ECC Error */
		/* const */ unsigned int ERRM           : 1;	/* Read Access Multi-bit ECC Error */
		/* const */ unsigned int RES            : 3;	/* Reserved */
		/* const */ unsigned int ERRANY         : 1;	/* Any Read Access ECC Error */
		unsigned int R8             : 1;	/* Reserved - RES */
		/* const */ unsigned int BLANKA         : 1;	/* Read Access Blank Analog */
		/* const */ unsigned int RES_9          : 6;	/* Reserved */
		/* const */ unsigned int AER1           : 1;	/* Accumulated Single Bit ECC Errors */
		/* const */ unsigned int AER2           : 1;	/* Accumulated Double Bit ECC Errors */
		/* const */ unsigned int AER3           : 1;	/* Accumulated Triple Bit ECC Errors */
		/* const */ unsigned int AERM           : 1;	/* Accumulated Multi-bit ECC Errors */
		/* const */ unsigned int RES_14         : 3;	/* Reserved */
		/* const */ unsigned int AERANY         : 1;	/* Accumulated Any Read Access ECC Error */
		unsigned int R24            : 1;	/* Reserved - RES */
		/* const */ unsigned int ABLANKA        : 1;	/* Accumulated Blank Analog */
		/* const */ unsigned int RES_18         : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SF_ECCS_type;
#define DMU_SF_ECCS	(*( DMU_SF_ECCS_type *) 0xf8060044u)	/* HSM DF1 ECC Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int WCODE          : 22;	/* Error Correction Write Code */
		/* const */ unsigned int RES            : 8;	/* Reserved */
		unsigned int ECCENCDIS      : 2;	/* ECC Encoding Disable */
	} B;
	int I;
	unsigned int U;

} DMU_SF_ECCW_type;
#define DMU_SF_ECCW	(*( DMU_SF_ECCW_type *) 0xf806004cu)	/* HSM DF1 ECC Write Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OPERM          : 1;	/* Operation Error Interrupt Mask */
		unsigned int SQERM          : 1;	/* Command Sequence Error Interrupt Mask */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		unsigned int PVERM          : 1;	/* Program Verify Error Interrupt Mask */
		unsigned int EVERM          : 1;	/* Erase Verify Error Interrupt Mask */
		/* const */ unsigned int RES_6          : 26;	/* Reserved */
		unsigned int EOBM           : 1;	/* End of Busy Interrupt Mask */
	} B;
	int I;
	unsigned int U;

} DMU_SF_EER_type;
#define DMU_SF_EER	(*( DMU_SF_EER_type *) 0xf8060030u)	/* HSM Enable Error Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int OPER           : 1;	/* Flash Operation Error */
		/* const */ unsigned int SQER           : 1;	/* Command Sequence Error */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int PVER           : 1;	/* Program Verify Error */
		/* const */ unsigned int EVER           : 1;	/* Erase Verify Error */
		/* const */ unsigned int RES_6          : 27;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SF_ERRSR_type;
#define DMU_SF_ERRSR	(*( DMU_SF_ERRSR_type *) 0xf8060034u)	/* HSM Error Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SELD1          : 2;	/* DF1 Margin Read Selection */
		/* const */ unsigned int RES            : 6;	/* Reserved */
		unsigned int HMARGIN        : 1;	/* Hard Margin Selection */
		/* const */ unsigned int RES_4          : 23;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SF_MARGIN_type;
#define DMU_SF_MARGIN	(*( DMU_SF_MARGIN_type *) 0xf80600ecu)	/* HSM DF1 Margin Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PROG           : 1;	/* Programming State */
		/* const */ unsigned int ERASE          : 1;	/* Erase State */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int RES_4          : 29;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SF_OPERATION_type;
#define DMU_SF_OPERATION	(*( DMU_SF_OPERATION_type *) 0xf8060018u)	/* HSM Flash Operation Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODE           : 2;	/* DF1 User Mode Control */
		/* const */ unsigned int UCB            : 30;	/* Reserved for UCB */
	} B;
	int I;
	unsigned int U;

} DMU_SF_PROCONUSR_type;
#define DMU_SF_PROCONUSR	(*( DMU_SF_PROCONUSR_type *) 0xf8060074u)	/* HSM DF1 User Mode Control */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int D1BUSY         : 1;	/* Data Flash Bank 1 Busy */
		/* const */ unsigned int RES_3          : 18;	/* Reserved */
		/* const */ unsigned int DFPAGE         : 1;	/* Data Flash in Page Mode */
		/* const */ unsigned int RES_5          : 11;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SF_STATUS_type;
#define DMU_SF_STATUS	(*( DMU_SF_STATUS_type *) 0xf8060010u)	/* HSM Flash Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REQ            : 1;	/* Suspend Request */
		unsigned int CLR            : 1;	/* Suspend Clear */
		/* const */ unsigned int RES            : 14;	/* Reserved */
		/* const */ unsigned int SPND           : 1;	/* Flash Operation Suspended */
		/* const */ unsigned int ERR            : 1;	/* Suspend Error */
		/* const */ unsigned int RES_6          : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SF_SUSPEND_type;
#define DMU_SF_SUSPEND	(*( DMU_SF_SUSPEND_type *) 0xf80600e8u)	/* HSM Suspend Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HSMDBGDIS      : 1;	/* HSM Debug Disable */
		/* const */ unsigned int DBGIFLCK       : 1;	/* Debug Interface Locked */
		/* const */ unsigned int TSTIFLCK       : 1;	/* Test Interface Locked */
		/* const */ unsigned int HSMTSTDIS      : 1;	/* HSM Test Disable */
		/* const */ unsigned int HSMTRDIS       : 2;	/* HSM Trace Disable */
		/* const */ unsigned int HSMTRTYPE      : 1;	/* HSM Type of Trace */
		/* const */ unsigned int UCB            : 9;	/* Reserved for UCB */
		/* const */ unsigned int RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SP_PROCONHSM_type;
#define DMU_SP_PROCONHSM	(*( DMU_SP_PROCONHSM_type *) 0xf8070040u)	/* HSM Interface Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BOOTSEL0       : 6;	/* Boot Sector Selection */
		/* const */ unsigned int UCB            : 2;	/* Reserved for UCB */
		/* const */ unsigned int BOOTSEL1       : 6;	/* Boot Sector Selection */
		/* const */ unsigned int UCB_4          : 2;	/* Reserved for UCB */
		/* const */ unsigned int BOOTSEL2       : 6;	/* Boot Sector Selection */
		/* const */ unsigned int UCB_6          : 2;	/* Reserved for UCB */
		/* const */ unsigned int BOOTSEL3       : 6;	/* Boot Sector Selection */
		/* const */ unsigned int UCB_8          : 2;	/* Reserved for UCB */
	} B;
	int I;
	unsigned int U;

} DMU_SP_PROCONHSMCBS_type;
#define DMU_SP_PROCONHSMCBS	(*( DMU_SP_PROCONHSMCBS_type *) 0xf8070004u)	/* HSM Code Boot Sector */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HSMBOOTEN      : 1;	/* HSM Boot Enable */
		/* const */ unsigned int SSWWAIT        : 1;	/* SSW Wait */
		/* const */ unsigned int HSMDX          : 1;	/* HSM Data Sectors Exclusive */
		/* const */ unsigned int UCB            : 1;	/* Reserved for UCB */
		/* const */ unsigned int HSMRAMKEEP     : 2;	/* HSM RAM Clear */
		/* const */ unsigned int UCB_6          : 1;	/* Reserved for UCB */
		/* const */ unsigned int HSMENPINS      : 2;	/* Enable HSM Forcing of Pins HSM1/2 */
		/* const */ unsigned int HSMENRES       : 2;	/* Enable HSM Triggering Resets */
		/* const */ unsigned int DESTDBG        : 2;	/* Destructive Debug Entry */
		/* const */ unsigned int BLKFLAN        : 1;	/* Block Flash Analysis */
		/* const */ unsigned int UCB_11         : 2;	/* Reserved for UCB */
		/* const */ unsigned int RES            : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DMU_SP_PROCONHSMCFG_type;
#define DMU_SP_PROCONHSMCFG	(*( DMU_SP_PROCONHSMCFG_type *) 0xf8070000u)	/* HSM Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HSM0ROM        : 1;	/* PFLASH Sector 0 HSM Code Locked Forever */
		/* const */ unsigned int HSM1ROM        : 1;	/* PFLASH Sector 1 HSM Code Locked Forever */
		/* const */ unsigned int HSM2ROM        : 1;	/* PFLASH Sector 2 HSM Code Locked Forever */
		/* const */ unsigned int HSM3ROM        : 1;	/* PFLASH Sector 3 HSM Code Locked Forever */
		/* const */ unsigned int HSM4ROM        : 1;	/* PFLASH Sector 4 HSM Code Locked Forever */
		/* const */ unsigned int HSM5ROM        : 1;	/* PFLASH Sector 5 HSM Code Locked Forever */
		/* const */ unsigned int HSM6ROM        : 1;	/* PFLASH Sector 6 HSM Code Locked Forever */
		/* const */ unsigned int HSM7ROM        : 1;	/* PFLASH Sector 7 HSM Code Locked Forever */
		/* const */ unsigned int HSM8ROM        : 1;	/* PFLASH Sector 8 HSM Code Locked Forever */
		/* const */ unsigned int HSM9ROM        : 1;	/* PFLASH Sector 9 HSM Code Locked Forever */
		/* const */ unsigned int HSM10ROM       : 1;	/* PFLASH Sector 10 HSM Code Locked Forever */
		/* const */ unsigned int HSM11ROM       : 1;	/* PFLASH Sector 11 HSM Code Locked Forever */
		/* const */ unsigned int HSM12ROM       : 1;	/* PFLASH Sector 12 HSM Code Locked Forever */
		/* const */ unsigned int HSM13ROM       : 1;	/* PFLASH Sector 13 HSM Code Locked Forever */
		/* const */ unsigned int HSM14ROM       : 1;	/* PFLASH Sector 14 HSM Code Locked Forever */
		/* const */ unsigned int HSM15ROM       : 1;	/* PFLASH Sector 15 HSM Code Locked Forever */
		/* const */ unsigned int HSM16ROM       : 1;	/* PFLASH Sector 16 HSM Code Locked Forever */
		/* const */ unsigned int HSM17ROM       : 1;	/* PFLASH Sector 17 HSM Code Locked Forever */
		/* const */ unsigned int HSM18ROM       : 1;	/* PFLASH Sector 18 HSM Code Locked Forever */
		/* const */ unsigned int HSM19ROM       : 1;	/* PFLASH Sector 19 HSM Code Locked Forever */
		/* const */ unsigned int HSM20ROM       : 1;	/* PFLASH Sector 20 HSM Code Locked Forever */
		/* const */ unsigned int HSM21ROM       : 1;	/* PFLASH Sector 21 HSM Code Locked Forever */
		/* const */ unsigned int HSM22ROM       : 1;	/* PFLASH Sector 22 HSM Code Locked Forever */
		/* const */ unsigned int HSM23ROM       : 1;	/* PFLASH Sector 23 HSM Code Locked Forever */
		/* const */ unsigned int HSM24ROM       : 1;	/* PFLASH Sector 24 HSM Code Locked Forever */
		/* const */ unsigned int HSM25ROM       : 1;	/* PFLASH Sector 25 HSM Code Locked Forever */
		/* const */ unsigned int HSM26ROM       : 1;	/* PFLASH Sector 26 HSM Code Locked Forever */
		/* const */ unsigned int HSM27ROM       : 1;	/* PFLASH Sector 27 HSM Code Locked Forever */
		/* const */ unsigned int HSM28ROM       : 1;	/* PFLASH Sector 28 HSM Code Locked Forever */
		/* const */ unsigned int HSM29ROM       : 1;	/* PFLASH Sector 29 HSM Code Locked Forever */
		/* const */ unsigned int HSM30ROM       : 1;	/* PFLASH Sector 30 HSM Code Locked Forever */
		/* const */ unsigned int HSM31ROM       : 1;	/* PFLASH Sector 31 HSM Code Locked Forever */
	} B;
	int I;
	unsigned int U;

} DMU_SP_PROCONHSMCOTP0_type;
#define DMU_SP_PROCONHSMCOTP0	(*( DMU_SP_PROCONHSMCOTP0_type *) 0xf8070010u)	/* HSM Code OTP Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HSM32ROM       : 1;	/* PFLASH Sector 32 HSM Code Locked Forever */
		/* const */ unsigned int HSM33ROM       : 1;	/* PFLASH Sector 33 HSM Code Locked Forever */
		/* const */ unsigned int HSM34ROM       : 1;	/* PFLASH Sector 34 HSM Code Locked Forever */
		/* const */ unsigned int HSM35ROM       : 1;	/* PFLASH Sector 35 HSM Code Locked Forever */
		/* const */ unsigned int HSM36ROM       : 1;	/* PFLASH Sector 36 HSM Code Locked Forever */
		/* const */ unsigned int HSM37ROM       : 1;	/* PFLASH Sector 37 HSM Code Locked Forever */
		/* const */ unsigned int HSM38ROM       : 1;	/* PFLASH Sector 38 HSM Code Locked Forever */
		/* const */ unsigned int HSM39ROM       : 1;	/* PFLASH Sector 39 HSM Code Locked Forever */
		/* const */ unsigned int UCB            : 24;	/* Reserved for UCB */
	} B;
	int I;
	unsigned int U;

} DMU_SP_PROCONHSMCOTP1_type;
#define DMU_SP_PROCONHSMCOTP1	(*( DMU_SP_PROCONHSMCOTP1_type *) 0xf8070014u)	/* HSM Code OTP Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HSM0X          : 1;	/* PFLASH Sector 0 HSM Code Exclusive */
		/* const */ unsigned int HSM1X          : 1;	/* PFLASH Sector 1 HSM Code Exclusive */
		/* const */ unsigned int HSM2X          : 1;	/* PFLASH Sector 2 HSM Code Exclusive */
		/* const */ unsigned int HSM3X          : 1;	/* PFLASH Sector 3 HSM Code Exclusive */
		/* const */ unsigned int HSM4X          : 1;	/* PFLASH Sector 4 HSM Code Exclusive */
		/* const */ unsigned int HSM5X          : 1;	/* PFLASH Sector 5 HSM Code Exclusive */
		/* const */ unsigned int HSM6X          : 1;	/* PFLASH Sector 6 HSM Code Exclusive */
		/* const */ unsigned int HSM7X          : 1;	/* PFLASH Sector 7 HSM Code Exclusive */
		/* const */ unsigned int HSM8X          : 1;	/* PFLASH Sector 8 HSM Code Exclusive */
		/* const */ unsigned int HSM9X          : 1;	/* PFLASH Sector 9 HSM Code Exclusive */
		/* const */ unsigned int HSM10X         : 1;	/* PFLASH Sector 10 HSM Code Exclusive */
		/* const */ unsigned int HSM11X         : 1;	/* PFLASH Sector 11 HSM Code Exclusive */
		/* const */ unsigned int HSM12X         : 1;	/* PFLASH Sector 12 HSM Code Exclusive */
		/* const */ unsigned int HSM13X         : 1;	/* PFLASH Sector 13 HSM Code Exclusive */
		/* const */ unsigned int HSM14X         : 1;	/* PFLASH Sector 14 HSM Code Exclusive */
		/* const */ unsigned int HSM15X         : 1;	/* PFLASH Sector 15 HSM Code Exclusive */
		/* const */ unsigned int HSM16X         : 1;	/* PFLASH Sector 16 HSM Code Exclusive */
		/* const */ unsigned int HSM17X         : 1;	/* PFLASH Sector 17 HSM Code Exclusive */
		/* const */ unsigned int HSM18X         : 1;	/* PFLASH Sector 18 HSM Code Exclusive */
		/* const */ unsigned int HSM19X         : 1;	/* PFLASH Sector 19 HSM Code Exclusive */
		/* const */ unsigned int HSM20X         : 1;	/* PFLASH Sector 20 HSM Code Exclusive */
		/* const */ unsigned int HSM21X         : 1;	/* PFLASH Sector 21 HSM Code Exclusive */
		/* const */ unsigned int HSM22X         : 1;	/* PFLASH Sector 22 HSM Code Exclusive */
		/* const */ unsigned int HSM23X         : 1;	/* PFLASH Sector 23 HSM Code Exclusive */
		/* const */ unsigned int HSM24X         : 1;	/* PFLASH Sector 24 HSM Code Exclusive */
		/* const */ unsigned int HSM25X         : 1;	/* PFLASH Sector 25 HSM Code Exclusive */
		/* const */ unsigned int HSM26X         : 1;	/* PFLASH Sector 26 HSM Code Exclusive */
		/* const */ unsigned int HSM27X         : 1;	/* PFLASH Sector 27 HSM Code Exclusive */
		/* const */ unsigned int HSM28X         : 1;	/* PFLASH Sector 28 HSM Code Exclusive */
		/* const */ unsigned int HSM29X         : 1;	/* PFLASH Sector 29 HSM Code Exclusive */
		/* const */ unsigned int HSM30X         : 1;	/* PFLASH Sector 30 HSM Code Exclusive */
		/* const */ unsigned int HSM31X         : 1;	/* PFLASH Sector 31 HSM Code Exclusive */
	} B;
	int I;
	unsigned int U;

} DMU_SP_PROCONHSMCX0_type;
#define DMU_SP_PROCONHSMCX0	(*( DMU_SP_PROCONHSMCX0_type *) 0xf8070008u)	/* HSM Code Exclusive Protection Configuration */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HSM32X         : 1;	/* PFLASH Sector 32 HSM Code Exclusive */
		/* const */ unsigned int HSM33X         : 1;	/* PFLASH Sector 33 HSM Code Exclusive */
		/* const */ unsigned int HSM34X         : 1;	/* PFLASH Sector 34 HSM Code Exclusive */
		/* const */ unsigned int HSM35X         : 1;	/* PFLASH Sector 35 HSM Code Exclusive */
		/* const */ unsigned int HSM36X         : 1;	/* PFLASH Sector 36 HSM Code Exclusive */
		/* const */ unsigned int HSM37X         : 1;	/* PFLASH Sector 37 HSM Code Exclusive */
		/* const */ unsigned int HSM38X         : 1;	/* PFLASH Sector 38 HSM Code Exclusive */
		/* const */ unsigned int HSM39X         : 1;	/* PFLASH Sector 39 HSM Code Exclusive */
		/* const */ unsigned int UCB            : 24;	/* Reserved for UCB */
	} B;
	int I;
	unsigned int U;

} DMU_SP_PROCONHSMCX1_type;
#define DMU_SP_PROCONHSMCX1	(*( DMU_SP_PROCONHSMCX1_type *) 0xf807000cu)	/* HSM Code Exclusive Protection Configuration */


/* PMU */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} PMU_ID_type;
#define PMU_ID	(*( PMU_ID_type *) 0xf8038508u)	/* Module Identification Register */


/* FSI */
typedef volatile union
{
	struct
	{ 
		unsigned int COMM1          : 8;	/* FSI Communication 1 */
	} B;
	char C;
	unsigned char UC;

} FSI_COMM_1_type;
#define FSI_COMM_1	(*( FSI_COMM_1_type *) 0xf8030004u)	/* Communication Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int COMM2          : 8;	/* FSI Communication 2 */
	} B;
	char C;
	unsigned char UC;

} FSI_COMM_2_type;
#define FSI_COMM_2	(*( FSI_COMM_2_type *) 0xf8030005u)	/* Communication Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int HSMCOMM1       : 8;	/* HSM FSI Communication 1 */
	} B;
	char C;
	unsigned char UC;

} FSI_HSMCOMM_1_type;
#define FSI_HSMCOMM_1	(*( FSI_HSMCOMM_1_type *) 0xf8030006u)	/* HSM Communication Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int HSMCOMM2       : 8;	/* HSM FSI Communication 2 */
	} B;
	char C;
	unsigned char UC;

} FSI_HSMCOMM_2_type;
#define FSI_HSMCOMM_2	(*( FSI_HSMCOMM_2_type *) 0xf8030007u)	/* HSM Communication Register 2 */


/* PFI */
typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RES            : 5;	/* Reserved */
		/* const */ unsigned int ADDR           : 19;	/* Address */
		/* const */ unsigned int RES_3          : 7;	/* Reserved */
		/* const */ unsigned int VLD            : 1;	/* Valid */
	} B;
	int I;
	unsigned int U;

} PFI0_DBABRECORD0_type;
#define PFI0_DBABRECORD0	(*( PFI0_DBABRECORD0_type *) 0xa8084000u)	/* DBAB Record 0 */
#define PFI0_DBABRECORD1	(*( PFI0_DBABRECORD0_type *) 0xa8084020u)	/* DBAB Record 1 */
#define PFI0_MBABRECORD0	(*( PFI0_DBABRECORD0_type *) 0xa8088000u)	/* MBAB Record 0 */
#define PFI0_SBABRECORD0	(*( PFI0_DBABRECORD0_type *) 0xa8082000u)	/* SBAB Record 0 */
#define PFI0_SBABRECORD1	(*( PFI0_DBABRECORD0_type *) 0xa8082020u)	/* SBAB Record 1 */
#define PFI0_SBABRECORD10	(*( PFI0_DBABRECORD0_type *) 0xa8082140u)	/* SBAB Record 10 */
#define PFI0_SBABRECORD11	(*( PFI0_DBABRECORD0_type *) 0xa8082160u)	/* SBAB Record 11 */
#define PFI0_SBABRECORD12	(*( PFI0_DBABRECORD0_type *) 0xa8082180u)	/* SBAB Record 12 */
#define PFI0_SBABRECORD13	(*( PFI0_DBABRECORD0_type *) 0xa80821a0u)	/* SBAB Record 13 */
#define PFI0_SBABRECORD14	(*( PFI0_DBABRECORD0_type *) 0xa80821c0u)	/* SBAB Record 14 */
#define PFI0_SBABRECORD15	(*( PFI0_DBABRECORD0_type *) 0xa80821e0u)	/* SBAB Record 15 */
#define PFI0_SBABRECORD16	(*( PFI0_DBABRECORD0_type *) 0xa8082200u)	/* SBAB Record 16 */
#define PFI0_SBABRECORD2	(*( PFI0_DBABRECORD0_type *) 0xa8082040u)	/* SBAB Record 2 */
#define PFI0_SBABRECORD3	(*( PFI0_DBABRECORD0_type *) 0xa8082060u)	/* SBAB Record 3 */
#define PFI0_SBABRECORD4	(*( PFI0_DBABRECORD0_type *) 0xa8082080u)	/* SBAB Record 4 */
#define PFI0_SBABRECORD5	(*( PFI0_DBABRECORD0_type *) 0xa80820a0u)	/* SBAB Record 5 */
#define PFI0_SBABRECORD6	(*( PFI0_DBABRECORD0_type *) 0xa80820c0u)	/* SBAB Record 6 */
#define PFI0_SBABRECORD7	(*( PFI0_DBABRECORD0_type *) 0xa80820e0u)	/* SBAB Record 7 */
#define PFI0_SBABRECORD8	(*( PFI0_DBABRECORD0_type *) 0xa8082100u)	/* SBAB Record 8 */
#define PFI0_SBABRECORD9	(*( PFI0_DBABRECORD0_type *) 0xa8082120u)	/* SBAB Record 9 */
#define PFI0_ZBABRECORD0	(*( PFI0_DBABRECORD0_type *) 0xa808c000u)	/* ZBAB Record 0 */
#define PFI0_ZBABRECORD1	(*( PFI0_DBABRECORD0_type *) 0xa808c020u)	/* ZBAB Record 1 */
#define PFI0_ZBABRECORD2	(*( PFI0_DBABRECORD0_type *) 0xa808c040u)	/* ZBAB Record 2 */
#define PFI0_ZBABRECORD3	(*( PFI0_DBABRECORD0_type *) 0xa808c060u)	/* ZBAB Record 3 */
#define PFI1_DBABRECORD0	(*( PFI0_DBABRECORD0_type *) 0xa8384000u)	/* DBAB Record 0 */
#define PFI1_DBABRECORD1	(*( PFI0_DBABRECORD0_type *) 0xa8384020u)	/* DBAB Record 1 */
#define PFI1_MBABRECORD0	(*( PFI0_DBABRECORD0_type *) 0xa8388000u)	/* MBAB Record 0 */
#define PFI1_SBABRECORD0	(*( PFI0_DBABRECORD0_type *) 0xa8382000u)	/* SBAB Record 0 */
#define PFI1_SBABRECORD1	(*( PFI0_DBABRECORD0_type *) 0xa8382020u)	/* SBAB Record 1 */
#define PFI1_SBABRECORD10	(*( PFI0_DBABRECORD0_type *) 0xa8382140u)	/* SBAB Record 10 */
#define PFI1_SBABRECORD11	(*( PFI0_DBABRECORD0_type *) 0xa8382160u)	/* SBAB Record 11 */
#define PFI1_SBABRECORD12	(*( PFI0_DBABRECORD0_type *) 0xa8382180u)	/* SBAB Record 12 */
#define PFI1_SBABRECORD13	(*( PFI0_DBABRECORD0_type *) 0xa83821a0u)	/* SBAB Record 13 */
#define PFI1_SBABRECORD14	(*( PFI0_DBABRECORD0_type *) 0xa83821c0u)	/* SBAB Record 14 */
#define PFI1_SBABRECORD15	(*( PFI0_DBABRECORD0_type *) 0xa83821e0u)	/* SBAB Record 15 */
#define PFI1_SBABRECORD16	(*( PFI0_DBABRECORD0_type *) 0xa8382200u)	/* SBAB Record 16 */
#define PFI1_SBABRECORD2	(*( PFI0_DBABRECORD0_type *) 0xa8382040u)	/* SBAB Record 2 */
#define PFI1_SBABRECORD3	(*( PFI0_DBABRECORD0_type *) 0xa8382060u)	/* SBAB Record 3 */
#define PFI1_SBABRECORD4	(*( PFI0_DBABRECORD0_type *) 0xa8382080u)	/* SBAB Record 4 */
#define PFI1_SBABRECORD5	(*( PFI0_DBABRECORD0_type *) 0xa83820a0u)	/* SBAB Record 5 */
#define PFI1_SBABRECORD6	(*( PFI0_DBABRECORD0_type *) 0xa83820c0u)	/* SBAB Record 6 */
#define PFI1_SBABRECORD7	(*( PFI0_DBABRECORD0_type *) 0xa83820e0u)	/* SBAB Record 7 */
#define PFI1_SBABRECORD8	(*( PFI0_DBABRECORD0_type *) 0xa8382100u)	/* SBAB Record 8 */
#define PFI1_SBABRECORD9	(*( PFI0_DBABRECORD0_type *) 0xa8382120u)	/* SBAB Record 9 */
#define PFI1_ZBABRECORD0	(*( PFI0_DBABRECORD0_type *) 0xa838c000u)	/* ZBAB Record 0 */
#define PFI1_ZBABRECORD1	(*( PFI0_DBABRECORD0_type *) 0xa838c020u)	/* ZBAB Record 1 */
#define PFI1_ZBABRECORD2	(*( PFI0_DBABRECORD0_type *) 0xa838c040u)	/* ZBAB Record 2 */
#define PFI1_ZBABRECORD3	(*( PFI0_DBABRECORD0_type *) 0xa838c060u)	/* ZBAB Record 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RCODE          : 22;	/* Error Correction Read Code */
		/* const */ unsigned int R22            : 2;	/* Reserved - RES */
		/* const */ unsigned int RES            : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} PFI0_ECCR_type;
#define PFI0_ECCR	(*( PFI0_ECCR_type *) 0xa8080000u)	/* ECC Read Register */
#define PFI1_ECCR	(*( PFI0_ECCR_type *) 0xa8380000u)	/* ECC Read Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ERR1           : 1;	/* Read Access Single Bit ECC Error */
		/* const */ unsigned int ERR2           : 1;	/* Read Access Double Bit ECC Error */
		/* const */ unsigned int RES            : 1;	/* Reserved */
		/* const */ unsigned int ERRM           : 1;	/* Read Access Multi-bit ECC Error */
		/* const */ unsigned int ERRA           : 1;	/* Read Access ECC Error Within the Address */
		/* const */ unsigned int ALL0           : 1;	/* Read Access All Zeros */
		/* const */ unsigned int ALL1           : 1;	/* All Ones */
		/* const */ unsigned int ERRANY         : 1;	/* Any Read Access ECC Error */
		/* const */ unsigned int RES_9          : 8;	/* Reserved */
		/* const */ unsigned int AER1           : 1;	/* Accumulated Single Bit ECC Errors */
		/* const */ unsigned int AER2           : 1;	/* Accumulated Double Bit ECC Errors */
		/* const */ unsigned int RES_12         : 1;	/* Reserved */
		/* const */ unsigned int AERM           : 1;	/* Accumulated Multi-bit ECC Errors */
		/* const */ unsigned int ARRA           : 1;	/* Accumulated ECC Error Within the Address */
		/* const */ unsigned int AAL0           : 1;	/* Accumulated All Zeros */
		/* const */ unsigned int AAL1           : 1;	/* Accumulated All Ones */
		/* const */ unsigned int AERANY         : 1;	/* Accumulated Any Read Access ECC Error */
		/* const */ unsigned int RES_18         : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} PFI0_ECCS_type;
#define PFI0_ECCS	(*( PFI0_ECCS_type *) 0xa8080020u)	/* ECC Status Register */
#define PFI1_ECCS	(*( PFI0_ECCS_type *) 0xa8380020u)	/* ECC Status Register */


/* PMS */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned __sfrbit32 EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned __sfrbit32 EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned __sfrbit32 EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned __sfrbit32 EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned __sfrbit32 EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned __sfrbit32 EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned __sfrbit32 EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned __sfrbit32 EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned __sfrbit32 EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned __sfrbit32 EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned __sfrbit32 EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned __sfrbit32 EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned __sfrbit32 EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned __sfrbit32 EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned __sfrbit32 EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned __sfrbit32 EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned __sfrbit32 EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned __sfrbit32 EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned __sfrbit32 EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned __sfrbit32 EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned __sfrbit32 EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned __sfrbit32 EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned __sfrbit32 EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned __sfrbit32 EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned __sfrbit32 EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned __sfrbit32 EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned __sfrbit32 EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned __sfrbit32 EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned __sfrbit32 EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned __sfrbit32 EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned __sfrbit32 EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} PMS_ACCEN0_type;
#define PMS_ACCEN0	(*( PMS_ACCEN0_type *) 0xf02481fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} PMS_ACCEN1_type;
#define PMS_ACCEN1	(*( PMS_ACCEN1_type *) 0xf02481f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned int FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned int FE6            : 1;	/* Fault signaling configuration flag for alarm 6 belonging to alarm group i. */
		unsigned int FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned int FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned int FE9            : 1;	/* Fault signaling configuration flag for alarm 9 belonging to alarm group i. */
		unsigned int FE10           : 1;	/* Fault signaling configuration flag for alarm 10 belonging to alarm group i. */
		unsigned int FE11           : 1;	/* Fault signaling configuration flag for alarm 11 belonging to alarm group i. */
		unsigned int FE12           : 1;	/* Fault signaling configuration flag for alarm 12 belonging to alarm group i. */
		unsigned int FE13           : 1;	/* Fault signaling configuration flag for alarm 13 belonging to alarm group i. */
		unsigned int FE14           : 1;	/* Fault signaling configuration flag for alarm 14 belonging to alarm group i. */
		unsigned int FE15           : 1;	/* Fault signaling configuration flag for alarm 15 belonging to alarm group i. */
		unsigned int                : 14;
		unsigned int BITPROT        : 1;	/* AG2iFSP_STDBY register bits protection */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_AG20FSP_STDBY_type;
#define PMS_AG20FSP_STDBY	(*( PMS_AG20FSP_STDBY_type *) 0xf02481a4u)	/* SMU_stdby FSP Conf0guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned int SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned int SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group i. */
		unsigned int SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned int SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned int SF9            : 1;	/* Status flag for alarm 9 belonging to alarm group i. */
		unsigned int SF10           : 1;	/* Status flag for alarm 10 belonging to alarm group i. */
		unsigned int SF11           : 1;	/* Status flag for alarm 11 belonging to alarm group i. */
		unsigned int SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group i. */
		unsigned int SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group i. */
		unsigned int SF14           : 1;	/* Status flag for alarm 14 belonging to alarm group i. */
		unsigned int SF15           : 1;	/* Status flag for alarm 15 belonging to alarm group i. */
		unsigned int                : 14;
		unsigned int FSPERR         : 1;	/* Error Pin Fault State Status Bit */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_AG20_STDBY_type;
#define PMS_AG20_STDBY	(*( PMS_AG20_STDBY_type *) 0xf0248188u)	/* Alarm Status Reg0ster */

typedef volatile union
{
	struct
	{ 
		unsigned int FE0            : 1;	/* Fault signaling configuration flag for alarm 0 belonging to alarm group i. */
		unsigned int FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned int FE2            : 1;	/* Fault signaling configuration flag for alarm 2 belonging to alarm group i. */
		unsigned int FE3            : 1;	/* Fault signaling configuration flag for alarm 3 belonging to alarm group i. */
		unsigned int FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned int FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned int                : 1;
		unsigned int FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned int FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned int FE9            : 1;	/* Fault signaling configuration flag for alarm 9 belonging to alarm group i. */
		unsigned int FE10           : 1;	/* Fault signaling configuration flag for alarm 10 belonging to alarm group i. */
		unsigned int FE11           : 1;	/* Fault signaling configuration flag for alarm 11 belonging to alarm group i. */
		unsigned int FE12           : 1;	/* Fault signaling configuration flag for alarm 12 belonging to alarm group i. */
		unsigned int FE13           : 1;	/* Fault signaling configuration flag for alarm 13 belonging to alarm group i. */
		unsigned int FE14           : 1;	/* Fault signaling configuration flag for alarm 14 belonging to alarm group i. */
		unsigned int FE15           : 1;	/* Fault signaling configuration flag for alarm 15 belonging to alarm group i. */
		unsigned int FE16           : 1;	/* Fault signaling configuration flag for alarm 16 belonging to alarm group i. */
		unsigned int                : 13;
		unsigned int BITPROT        : 1;	/* AG2iFSP_STDBY register bits protection */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_AG21FSP_STDBY_type;
#define PMS_AG21FSP_STDBY	(*( PMS_AG21FSP_STDBY_type *) 0xf02481a8u)	/* SMU_stdby FSP Conf1guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group i. */
		unsigned int SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned int SF2            : 1;	/* Status flag for alarm 2 belonging to alarm group i. */
		unsigned int SF3            : 1;	/* Status flag for alarm 3 belonging to alarm group i. */
		unsigned int SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned int SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned int                : 1;
		unsigned int SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned int SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned int SF9            : 1;	/* Status flag for alarm 9 belonging to alarm group i. */
		unsigned int SF10           : 1;	/* Status flag for alarm 10 belonging to alarm group i. */
		unsigned int SF11           : 1;	/* Status flag for alarm 11 belonging to alarm group i. */
		unsigned int SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group i. */
		unsigned int SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group i. */
		unsigned int SF14           : 1;	/* Status flag for alarm 14 belonging to alarm group i. */
		unsigned int SF15           : 1;	/* Status flag for alarm 15 belonging to alarm group i. */
		unsigned int SF16           : 1;	/* Status flag for alarm 16 belonging to alarm group i. */
		unsigned int                : 15;
	} B;
	int I;
	unsigned int U;

} PMS_AG21_STDBY_type;
#define PMS_AG21_STDBY	(*( PMS_AG21_STDBY_type *) 0xf024818cu)	/* Alarm Status Reg1ster */

typedef volatile union
{
	struct
	{ 
		unsigned int SMUEN          : 1;	/* SMU_stdby Module Enable */
		unsigned int FSP0EN         : 1;	/* SMU_stdby FSP0 Error pin enable */
		unsigned int FSP1EN         : 1;	/* SMU_stdby FSP1 Error pin enable */
		unsigned int ASCE           : 1;	/* SMU_stdby alarm status clear enable */
		unsigned int                : 26;
		unsigned int BITPROT        : 1;	/* CMD_STDBY register bits protection */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_CMD_STDBY_type;
#define PMS_CMD_STDBY	(*( PMS_CMD_STDBY_type *) 0xf024819cu)	/* SMU_stdby Command Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LOWER          : 12;	/* Lower Limit */
		unsigned int                : 3;
		unsigned int LLU            : 1;	/* Lower Limit Underflow */
		unsigned int UPPER          : 12;	/* Upper Limit */
		unsigned int                : 2;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int UOF            : 1;	/* Upper Limit Overflow */
	} B;
	int I;
	unsigned int U;

} PMS_DTSLIM_type;
#define PMS_DTSLIM	(*( PMS_DTSLIM_type *) 0xf02481c8u)	/* Die Temperature Sensor Limit Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESULT         : 12;	/* Result of the DTS Measurement */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} PMS_DTSSTAT_type;
#define PMS_DTSSTAT	(*( PMS_DTSSTAT_type *) 0xf02481c0u)	/* Die Temperature Sensor Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADCCV          : 8;	/* ADC VDD Core Voltage Conversion Result */
		/* const */ unsigned int ADC33V         : 8;	/* ADC VDDP3 Voltage Conversion Result */
		/* const */ unsigned int ADCSWDV        : 8;	/* ADC VEXT Supply Conversion Result */
		/* const */ unsigned int OVC            : 1;	/* EVRC Regulator or VDD Over-voltage event flag */
		/* const */ unsigned int OV33           : 1;	/* EVR33 Regulator or VDDP3 Over-voltage event flag */
		/* const */ unsigned int OVSWD          : 1;	/* Supply Watchdog (SWD) or VEXT Over-voltage event flag */
		/* const */ unsigned int UVC            : 1;	/* EVRC Regulator or VDD Under-voltage event flag */
		/* const */ unsigned int UV33           : 1;	/* EVR33 Regulator or VDDP3 Under-voltage event flag */
		/* const */ unsigned int UVSWD          : 1;	/* Supply Watchdog (SWD) or VEXT Under-voltage event flag */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PMS_EVRADCSTAT_type;
#define PMS_EVRADCSTAT	(*( PMS_EVRADCSTAT_type *) 0xf0248034u)	/* EVR Primary ADC Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVRCOVMOD      : 2;	/* VDD Over-voltage monitoring mode */
		unsigned int PREOVMOD       : 2;	/* EVRPR or VDDPD Over-voltage monitoring mode */
		unsigned int EVRCUVMOD      : 2;	/* VDD Under-voltage monitoring mode */
		unsigned int PREUVMOD       : 2;	/* EVRPR or VDDPD Under-voltage monitoring mode */
		unsigned int EVR33OVMOD     : 2;	/* VDDP3 Supply Over-voltage monitoring mode */
		unsigned int VDDMOVMOD      : 2;	/* VDDM ADC Supply Over-voltage monitoring mode */
		unsigned int EVR33UVMOD     : 2;	/* VDDP3 Supply Under-voltage monitoring mode */
		unsigned int VDDMUVMOD      : 2;	/* VDDM ADC Supply Under-voltage monitoring mode */
		unsigned int SWDOVMOD       : 2;	/* VEXT Over-voltage monitoring mode */
		unsigned int SBOVMOD        : 2;	/* EVR Standby Supply or VEVRSB Over-voltage monitoring mode */
		unsigned int SWDUVMOD       : 2;	/* VEXT Under-voltage monitoring mode */
		unsigned int SBUVMOD        : 2;	/* EVR Standby Supply or VEVRSB Under-voltage monitoring mode */
		unsigned int                : 6;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_EVRMONCTRL_type;
#define PMS_EVRMONCTRL	(*( PMS_EVRMONCTRL_type *) 0xf0248068u)	/* EVR Secondary Monitor Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVRCFIL        : 4;	/* VDD Secondary ADC Supply Filter */
		unsigned int PREFIL         : 4;	/* VDDPD Secondary ADC Supply Filter */
		unsigned int EVR33FIL       : 4;	/* VDDP3 Secondary ADC Supply Filter */
		unsigned int VDDMFIL        : 4;	/* VDDM Secondary ADC Supply Filter */
		unsigned int SWDFIL         : 4;	/* VEXT Secondary ADC Supply Filter */
		unsigned int SBFIL          : 4;	/* VEVRSB Secondary ADC Supply Filter */
		unsigned int                : 5;
		unsigned int CLRFIL         : 1;	/* Clear all Spike Filters */
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_EVRMONFILT_type;
#define PMS_EVRMONFILT	(*( PMS_EVRMONFILT_type *) 0xf0248070u)	/* EVR Secondary Monitor Filter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADCCV          : 8;	/* VDD Supply Secondary ADC Conversion Result */
		/* const */ unsigned int ADC33V         : 8;	/* VDDP3 Supply Secondary ADC Conversion Result */
		/* const */ unsigned int ADCSWDV        : 8;	/* VEXT Supply Secondary ADC Conversion Result */
		/* const */ unsigned int ACTVCNT        : 6;	/* Secondary Monitor Activity Counter */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PMS_EVRMONSTAT1_type;
#define PMS_EVRMONSTAT1	(*( PMS_EVRMONSTAT1_type *) 0xf0248060u)	/* EVR Secondary ADC Status Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADCPRE         : 8;	/* VDDPD Supply Secondary ADC Conversion Result */
		/* const */ unsigned int ADCSB          : 8;	/* VEVRSB Supply Secondary ADC Conversion Result */
		/* const */ unsigned int ADCVDDM        : 8;	/* VDDM Supply Secondary ADC Conversion Result */
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PMS_EVRMONSTAT2_type;
#define PMS_EVRMONSTAT2	(*( PMS_EVRMONSTAT2_type *) 0xf0248064u)	/* EVR Secondary ADC Status Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int OSCFTRIM       : 6;	/* Back-up Clock Fine Trim Value */
		unsigned int                : 10;
		unsigned int OSCFPTRIM      : 6;	/* OSC Fine Trim Signed Value */
		unsigned int                : 7;
		unsigned int OSCTEMPOFFS    : 1;	/* Oscillator Temperature Offset Coefficient */
		unsigned int                : 1;
		unsigned int OSCTRIMEN      : 1;	/* Dynamic Oscillator Trim Enable */
	} B;
	int I;
	unsigned int U;

} PMS_EVROSCCTRL_type;
#define PMS_EVROSCCTRL	(*( PMS_EVROSCCTRL_type *) 0xf02480a0u)	/* EVR Oscillator Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVRCOVVAL      : 8;	/* VDD Supply Secondary Monitor Over-voltage threshold */
		unsigned int EVR33OVVAL     : 8;	/* VDDP3 Supply Secondary Monitor Over-voltage threshold */
		unsigned int SWDOVVAL       : 8;	/* VEXT Supply Secondary Monitor Over-voltage threshold */
		unsigned int                : 6;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_EVROVMON_type;
#define PMS_EVROVMON	(*( PMS_EVROVMON_type *) 0xf024807cu)	/* EVR Secondary Over-voltage Monitor Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PREOVVAL       : 8;	/* VDDPD Supply Secondary Monitor Over-voltage threshold */
		unsigned int VDDMOVVAL      : 8;	/* VDDM Supply Secondary Monitor Over-voltage threshold */
		unsigned int SBOVVAL        : 8;	/* VEVRSB Supply Secondary Monitor Over-voltage threshold */
		unsigned int                : 6;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_EVROVMON2_type;
#define PMS_EVROVMON2	(*( PMS_EVROVMON2_type *) 0xf0248084u)	/* EVR Secondary Over-voltage Monitor Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int RSTCTRIM       : 8;	/* VDD Supply Reset Trim Value */
		unsigned int RST33TRIM      : 8;	/* VDDP3 Supply Reset Trim Value */
		unsigned int RSTSWDTRIM     : 8;	/* VEXT Supply Reset Trim Value */
		unsigned int RSTCOFF        : 1;	/* VDD Reset Enable */
		unsigned int BPRSTCOFF      : 1;	/* Bit Protection RSTCOFF */
		unsigned int RST33OFF       : 1;	/* VDDP3 Reset Enable */
		unsigned int BPRST33OFF     : 1;	/* Bit Protection RST33OFF */
		unsigned int RSTSWDOFF      : 1;	/* VEXT Reset Enable */
		unsigned int BPRSTSWDOFF    : 1;	/* Bit Protection RSTSWDOFF */
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_EVRRSTCON_type;
#define PMS_EVRRSTCON	(*( PMS_EVRRSTCON_type *) 0xf024803cu)	/* EVR Reset Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RSTC           : 8;	/* VDD Supply Reset Value Status */
		/* const */ unsigned int RST33          : 8;	/* VDDP3 Supply Reset Value Status */
		/* const */ unsigned int RSTSWD         : 8;	/* VEXT Supply Reset Value Status */
		/* const */ unsigned int RSTCOFF        : 1;	/* EVRC Reset Enable Status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int RST33OFF       : 1;	/* EVR33 Reset Enable Status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int RSTSWDOFF      : 1;	/* EVR SWD Reset Enable */
		/* const */ unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} PMS_EVRRSTSTAT_type;
#define PMS_EVRRSTSTAT	(*( PMS_EVRRSTSTAT_type *) 0xf0248044u)	/* EVR Reset Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int M0S0EN         : 1;	/* S0 Enable(m0en_s0en_i) */
		unsigned int M0S2EN         : 1;	/* S2 Enable(m0en_s2en_i) */
		unsigned int M0S3EN         : 1;	/* S3 Enable(m0en_s3en_i) */
		unsigned int M0S3CLIP       : 1;	/* S3 Clip(m0en_s3clip_i) */
		unsigned int M0S4EN         : 1;	/* S4 Enable(m0en_s4en_i) */
		unsigned int M0RAMPEN       : 1;	/* Ramp Enable(m0en_rampen_i) */
		unsigned int M0SFRGET       : 1;	/* SFRGET(m0en_sfrget_i) */
		unsigned int M0SKIPEN       : 1;	/* Skip Enable(m0en_skipen_i) */
		unsigned int M0S3COEFF      : 4;	/* S3 Coefficient(m0s3_coeff_i) */
		unsigned int M0S4COEFF      : 4;	/* S4 Coefficient(m0s4_coeff_i) */
		unsigned int M0SRMPCOEFF    : 4;	/* S Ramp Coefficient(m0srmp_coeff_i) */
		unsigned int M0FGETCOEFF    : 4;	/* S2 Forgetting Factor(m0fget_coeff_i) */
		unsigned int M0S2COEFF      : 4;	/* S2 Coefficient(m0s2_coeff_i) */
		unsigned int M0S2VINSRC     : 1;	/* S2 Vin Source(m0s2_vinsrc_i) */
		unsigned int M0S2VOSRC      : 1;	/* S2 Vout Source(m0s2_vosrc_i) */
		unsigned int M0SRMPCOEFFFRAC: 1;	/* S Ramp Fractional Coefficient */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF0_type;
#define PMS_EVRSDCOEFF0	(*( PMS_EVRSDCOEFF0_type *) 0xf0248148u)	/* EVRC SD Coefficient Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int M0VOCFLPF      : 4;	/* LPF Coefficient(m0vocf_lpf_i) */
		unsigned int M0VOCFINC      : 4;	/* Output Voltage Ramp Coefficient(m0vocf_inc_i) */
		unsigned int M0VOUT         : 8;	/* Digital representation of the target voltage(m0vo_lb_i) */
		unsigned int M0VIN          : 11;	/* Digital representation of the input voltage(m0vinh_vin_i+m0vinl_vin_i)) */
		unsigned int M0S3COEFFFRAC  : 2;	/* S3 Fractional Coefficient */
		unsigned int M0S2COEFFFRAC  : 2;	/* S2 Fractional Coefficient */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF1_type;
#define PMS_EVRSDCOEFF1	(*( PMS_EVRSDCOEFF1_type *) 0xf024814cu)	/* EVRC SD Coefficient Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int M1S0EN         : 1;	/* S0 Enable(m1en_s0en_i) */
		unsigned int M1S2EN         : 1;	/* S2 Enable(m1en_s2en_i) */
		unsigned int M1S3EN         : 1;	/* S3 Enable(m1en_s3en_i) */
		unsigned int M1S3CLIP       : 1;	/* S3 Clip(m1en_s3clip_i) */
		unsigned int M1S4EN         : 1;	/* S4 Enable(m1en_s4en_i) */
		unsigned int M1RAMPEN       : 1;	/* Ramp Enable(m1en_rampen_i) */
		unsigned int M1SFRGET       : 1;	/* SFRGET(m1en_sfrget_i) */
		unsigned int M1SKIPEN       : 1;	/* Skip Enable(m1en_skipen_i) */
		unsigned int M1S3COEFF      : 4;	/* S3 Coefficient(m1s3_coeff_i) */
		unsigned int M1S4COEFF      : 4;	/* S4 Coefficient(m1s4_coeff_i) */
		unsigned int M1SRMPCOEFF    : 4;	/* S Ramp Coefficient(m1srmp_coeff_i) */
		unsigned int M1FGETCOEFF    : 4;	/* S2 Forgetting Factor(m1fget_coeff_i) */
		unsigned int M1S2COEFF      : 4;	/* S2 Coefficient(m1s2_coeff_i) */
		unsigned int M1S2VINSRC     : 1;	/* S2 Vin Source(m1s2_vinsrc_i) */
		unsigned int M1S2VOSRC      : 1;	/* S2 Vout Source(m1s2_vosrc_i) */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF2_type;
#define PMS_EVRSDCOEFF2	(*( PMS_EVRSDCOEFF2_type *) 0xf0248150u)	/* EVRC SD Coefficient Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int M1VOCFLPF      : 4;	/* LPF Coefficient(m1vocf_lpf_i) */
		unsigned int M1VOCFINC      : 4;	/* Output Voltage Ramp Coefficient(m1vocf_inc_i) */
		unsigned int M1VOUT         : 8;	/* Digital representation of the target voltage(m1vo_lb_i) */
		unsigned int M1VIN          : 11;	/* Digital representation of the input voltage(m1vinh_vin_i+m1vinl_vin_i) */
		unsigned int M1S3COEFFFRAC  : 2;	/* S3 Fractional Coefficient */
		unsigned int M1S2COEFFFRAC  : 2;	/* S2 Fractional Coefficient */
		unsigned int M1SRMPCOEFFFRAC: 1;	/* S Ramp Fractional Coefficient */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF3_type;
#define PMS_EVRSDCOEFF3	(*( PMS_EVRSDCOEFF3_type *) 0xf0248154u)	/* EVRC SD Coefficient Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int M2S0EN         : 1;	/* S0 Enable(m2en_s0en_i) */
		unsigned int M2S2EN         : 1;	/* S2 Enable(m2en_s2en_i) */
		unsigned int M2S3EN         : 1;	/* S3 Enable(m2en_s3en_i) */
		unsigned int M2S3CLIP       : 1;	/* S3 Clip(m2en_s3clip_i) */
		unsigned int M2S4EN         : 1;	/* S4 Enable(m2en_s4en_i) */
		unsigned int M2RAMPEN       : 1;	/* Ramp Enable(m2en_rampen_i) */
		unsigned int M2SFRGET       : 1;	/* SFRGET(m2en_sfrget_i) */
		unsigned int M2SKIPEN       : 1;	/* Skip Enable(m2en_skipen_i) */
		unsigned int M2S3COEFF      : 4;	/* S3 Coefficient(m2s3_coeff_i) */
		unsigned int M2S4COEFF      : 4;	/* S4 Coefficient(m2s4_coeff_i) */
		unsigned int M2SRMPCOEFF    : 4;	/* S Ramp Coefficient(m2srmp_coeff_i) */
		unsigned int M2FGETCOEFF    : 4;	/* S2 Forgetting Factor(m2fget_coeff_i) */
		unsigned int M2S2COEFF      : 4;	/* S2 Coefficient(m2s2_coeff_i) */
		unsigned int M2S2VINSRC     : 1;	/* S2 Vin Source(m2s2_vinsrc_i) */
		unsigned int M2S2VOSRC      : 1;	/* S2 Vout Source(m2s2_vosrc_i) */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF4_type;
#define PMS_EVRSDCOEFF4	(*( PMS_EVRSDCOEFF4_type *) 0xf0248158u)	/* EVRC SD Coefficient Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int M2VOCFLPF      : 4;	/* LPF Coefficient(m2vocf_lpf_i) */
		unsigned int M2VOCFINC      : 4;	/* Output Voltage Ramp Coefficient(m2vocf_inc_i) */
		unsigned int M2VOUT         : 8;	/* Digital representation of the target voltage(m2vo_lb_i) */
		unsigned int M2VIN          : 11;	/* Digital representation of the input voltage(m2vinh_vin_i+m2vinl_vin_i) */
		unsigned int M2S3COEFFFRAC  : 2;	/* S3 Fractional Coefficient */
		unsigned int M2S2COEFFFRAC  : 2;	/* S2 Fractional Coefficient */
		unsigned int M2SRMPCOEFFFRAC: 1;	/* S Ramp Fractional Coefficient */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF5_type;
#define PMS_EVRSDCOEFF5	(*( PMS_EVRSDCOEFF5_type *) 0xf024815cu)	/* EVRC SD Coefficient Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int CT5REG0        : 8;	/* Commutation trimming and Slope Control(drv5v0_trim_i) */
		unsigned int CT5REG1        : 8;	/* Commutation trimming(drv5v1_trim_i) */
		unsigned int CT5REG2        : 8;	/* Commutation trimming(drv5v2_trim_i) */
		unsigned int                : 7;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF6_type;
#define PMS_EVRSDCOEFF6	(*( PMS_EVRSDCOEFF6_type *) 0xf0248160u)	/* EVRC SD Coefficient Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int CT5REG3        : 8;	/* Commutation trimming(drv5v3_trim_i) */
		unsigned int CT5REG4        : 8;	/* Commutation trimming(drv5v4_trim_i) */
		unsigned int                : 15;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF7_type;
#define PMS_EVRSDCOEFF7	(*( PMS_EVRSDCOEFF7_type *) 0xf0248164u)	/* EVRC SD Coefficient Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CT33REG0       : 8;	/* Commutation trimming(drv3v0_trim_i) */
		unsigned int CT33REG1       : 8;	/* Commutation trimming(drv3v1_trim_i) */
		unsigned int CT33REG2       : 8;	/* Commutation trimming(drv3v2_trim_i) */
		unsigned int                : 7;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF8_type;
#define PMS_EVRSDCOEFF8	(*( PMS_EVRSDCOEFF8_type *) 0xf0248168u)	/* EVRC SD Coefficient Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int CT33REG3       : 8;	/* Commutation trimming(drv3v3_trim_i) */
		unsigned int CT33REG4       : 8;	/* Commutation trimming(drv3v4_trim_i) */
		unsigned int                : 15;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCOEFF9_type;
#define PMS_EVRSDCOEFF9	(*( PMS_EVRSDCOEFF9_type *) 0xf024816cu)	/* EVRC SD Coefficient Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int SDFREQSPRD     : 16;	/* Frequency Spread Threshold(freqsp_coeff_i) */
		unsigned int SDFREQ         : 12;	/* Regulator Switching Frequency or Over-sampling Factor(m0osfl_fact_i+m0osfh_fact_i) */
		unsigned int NGOFF          : 1;	/* NMOS level during OFF state(drvslo_ngoff_i) */
		unsigned int PGOFF          : 1;	/* PMOS level during OFF state(drvslo_pgoff_i) */
		unsigned int UP             : 1;	/* Update request for SMPS register values */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL0_type;
#define PMS_EVRSDCTRL0	(*( PMS_EVRSDCTRL0_type *) 0xf0248108u)	/* EVRC SD Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int M0TOFF         : 8;	/* Minimum Off Time(m0toff_mintof_i) */
		unsigned int M0TON          : 8;	/* Minimum On Time(m0ton_minton_i) */
		unsigned int M0S0COEFF      : 4;	/* S0 coefficient(m0s0_coeff_i) */
		unsigned int M0DEADBD       : 2;	/* Dead Band(m0s0_deadbd_i) */
		unsigned int M0ADCZB        : 2;	/* ADC Zero Bin(m0fcfg_adczb_i) */
		unsigned int M0SKIP         : 4;	/* Skip Pulse Threshold(m0skip_thres_i) */
		unsigned int                : 2;
		unsigned int SYNCEN         : 1;	/* EVRC Synchronization input enable(synci0_en_i) */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL1_type;
#define PMS_EVRSDCTRL1	(*( PMS_EVRSDCTRL1_type *) 0xf024810cu)	/* EVRC SD Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SHVH           : 8;	/* Short to High Voltage Threshold(shrth1_shvh_i) */
		unsigned int SHVL           : 8;	/* Short to Low Voltage Threshold(shrtl1_shvl_i) */
		unsigned int                : 12;
		unsigned int SHHVEN         : 1;	/* Short to High Detection Enable(shrth0_shhven_i) */
		unsigned int SHLVEN         : 1;	/* Short to Low Detection Enable(shrtl0_shlven_i) */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL10_type;
#define PMS_EVRSDCTRL10	(*( PMS_EVRSDCTRL10_type *) 0xf0248130u)	/* EVRC SD Control Register 10 */

typedef volatile union
{
	struct
	{ 
		unsigned int DROOPVH        : 5;	/* High VDD Limit for Droop request(droopvh_thres_i) */
		unsigned int                : 3;
		unsigned int DROOPVL        : 5;	/* Low VDD Limit for Droop request(droopvl_thres_i) */
		unsigned int                : 3;
		unsigned int SYNCMAXDEV     : 5;	/* Maximum Deviation of the Synchronization Input Frequency(synci1_maxdev_i) */
		unsigned int                : 3;
		unsigned int SYNCHYST       : 3;	/* Lock Unlock Hysteresis Window(synci0_hyst_i) */
		unsigned int                : 1;
		unsigned int SYNCMUXSEL     : 2;	/* Synchronisation Input Multiplexer */
		unsigned int                : 1;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL11_type;
#define PMS_EVRSDCTRL11	(*( PMS_EVRSDCTRL11_type *) 0xf0248134u)	/* EVRC SD Control Register 11 */

typedef volatile union
{
	struct
	{ 
		unsigned int LPBNDOFFSET    : 4;	/* Low Power Mode Hysteresis OFFSET(lpbnd_offset_i) */
		unsigned int LPBNDWIDTH     : 4;	/* Low Power Mode Hysteresis Band Width(lpbnd_width_i) */
		unsigned int LPLPFCOEFF     : 4;	/* Low Pass Filter Coefficient(lplpf_coeff_i) */
		unsigned int                : 4;
		unsigned int SDFREQLP       : 12;	/* Regulator Over-sampling Factor(m1osfl_fact_i+m1osfh_fact_i) */
		unsigned int                : 2;
		unsigned int EVRCMOD        : 1;	/* LPM or PWM EVRC Mode Activation */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL2_type;
#define PMS_EVRSDCTRL2	(*( PMS_EVRSDCTRL2_type *) 0xf0248110u)	/* EVRC SD Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int M1TOFF         : 8;	/* Minimum Off Time(m1toff_mintof_i) */
		unsigned int M1TON          : 8;	/* Minimum On Time(m1ton_minton_i) */
		unsigned int M1S0COEFF      : 4;	/* S0 coefficient(m1s0_coeff_i) */
		unsigned int M1DEADBD       : 2;	/* Dead Band(m1s0_deadbd_i) */
		unsigned int M1ADCZB        : 2;	/* ADC Zero Bin(m1fcfg_adczb_i) */
		unsigned int M1SKIP         : 4;	/* Skip Pulse Threshold(m1skip_thres_i) */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL3_type;
#define PMS_EVRSDCTRL3	(*( PMS_EVRSDCTRL3_type *) 0xf0248114u)	/* EVRC SD Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int VOKCFG         : 6;	/* Voltage OK Circuit Configuration(vokcfg_config_i) */
		unsigned int                : 10;
		unsigned int SDFREQST       : 12;	/* Regulator Switching Frequency or Over-sampling Factor(m2osfl_fact_i+m2osfh_fact_i) */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL4_type;
#define PMS_EVRSDCTRL4	(*( PMS_EVRSDCTRL4_type *) 0xf0248118u)	/* EVRC SD Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int M2TOFF         : 8;	/* Minimum Off Time(m2toff_mintof_i) */
		unsigned int M2TON          : 8;	/* Minimum On Time(m2ton_minton_i) */
		unsigned int M2S0COEFF      : 4;	/* S0 coefficient(m2s0_coeff_i) */
		unsigned int M2DEADBD       : 2;	/* Dead Band(m2s0_deadbd_i) */
		unsigned int M2ADCZB        : 2;	/* ADC Zero Bin(m2fcfg_adczb_i) */
		unsigned int M2SKIP         : 4;	/* Skip Pulse Threshold(m2skip_thres_i) */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL5_type;
#define PMS_EVRSDCTRL5	(*( PMS_EVRSDCTRL5_type *) 0xf024811cu)	/* EVRC SD Control Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int SVINTH         : 8;	/* Vin threshold to switch between SINCLO or SINCHI.(svinth_thres_i) */
		unsigned int SVOTH          : 8;	/* Vout threshold to switch from open loop start-up to closed loop mode.(svoth_thres_i) */
		unsigned int SINCLO         : 3;	/* Increment for low input voltage.(sinc_sinclo_i) */
		unsigned int                : 1;
		unsigned int SINCHI         : 3;	/* Increment for high input voltage.(sinc_sinchi_i) */
		unsigned int                : 8;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL6_type;
#define PMS_EVRSDCTRL6	(*( PMS_EVRSDCTRL6_type *) 0xf0248120u)	/* EVRC SD Control Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int DRVNI          : 2;	/* Selection of N-driver current */
		unsigned int DRVPCBF        : 2;	/* P-Driver Current Boost Factor(drvp_strgth_i) */
		unsigned int DRVP           : 4;	/* P-Driver Current(drvp_strgth_i) */
		unsigned int DRVSLOMODE     : 2;	/* Switching Configuration(drvslo_mode_i) */
		unsigned int                : 6;
		unsigned int DRVSPR         : 8;	/* Spare bits(drvspr_x_i) */
		unsigned int SYNCDIVFAC     : 3;	/* Switching frequency division factor for external synchronisation(synco_divfac_i) */
		unsigned int                : 4;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL7_type;
#define PMS_EVRSDCTRL7	(*( PMS_EVRSDCTRL7_type *) 0xf0248124u)	/* EVRC SD Control Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int FBADCOFFS      : 8;	/* Feedback Converted Counter Value Offset(fbadc2_offset_i) */
		unsigned int FBADCSMP       : 6;	/* FB ADC Sampling period(fbadc1_smpthr_i) */
		unsigned int                : 2;
		unsigned int FBADCBLNK      : 2;	/* FB ADC Blanked Samples Number(fbadc0_blank_i) */
		unsigned int                : 2;
		unsigned int FBADCLPF       : 2;	/* FB ADC Counter LPF Coefficient(fbadc0_lpfcnt_i) */
		unsigned int                : 2;
		unsigned int FBADCERR       : 2;	/* FB ADC Error LPF Coefficient(fbadc3_lpferr_i) */
		unsigned int                : 2;
		unsigned int FBADCLSB       : 1;	/* FB ADC LSB for Error Computation(fbadc3_lsb_i) */
		unsigned int                : 2;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL8_type;
#define PMS_EVRSDCTRL8	(*( PMS_EVRSDCTRL8_type *) 0xf0248128u)	/* EVRC SD Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int FFADCOFFS      : 8;	/* Feed Forward Converted Counter Value Offset(ffadc1_offset_i) */
		unsigned int FFADCLPF       : 3;	/* FF ADC Counter LPF Coefficient(ffadc0_lpfcnt_i) */
		unsigned int                : 20;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDCTRL9_type;
#define PMS_EVRSDCTRL9	(*( PMS_EVRSDCTRL9_type *) 0xf024812cu)	/* EVRC SD Control Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADCFBCV        : 8;	/* Step Down Converter Core Voltage Feedback ADC Conversion Result */
		/* const */ unsigned int                : 8;
		/* const */ unsigned int DPWMOUT        : 12;	/* DPWM Control Output Status */
		/* const */ unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} PMS_EVRSDSTAT0_type;
#define PMS_EVRSDSTAT0	(*( PMS_EVRSDSTAT0_type *) 0xf02480fcu)	/* EVR SD Status Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EVRC           : 1;	/* EVRC status */
		/* const */ unsigned int OVC            : 1;	/* VDD Over-voltage event flag */
		/* const */ unsigned int EVR33          : 1;	/* EVR33 status */
		/* const */ unsigned int OV33           : 1;	/* VDDP3 Over-voltage event flag */
		/* const */ unsigned int OVSWD          : 1;	/* VEXT Over-voltage event flag */
		/* const */ unsigned int UVC            : 1;	/* VDD Under-voltage event flag */
		/* const */ unsigned int UV33           : 1;	/* VDDP3 Under-voltage event flag */
		/* const */ unsigned int UVSWD          : 1;	/* VEXT Under-voltage event flag */
		/* const */ unsigned int SYNCLCK        : 1;	/* EVRC Synchronization Input Locked status(sd_sync_in_locked_o) */
		/* const */ unsigned int EVR33VOK       : 1;	/* EVR33 Regulator Voltage OK status */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int RSTC           : 1;	/* EVRC Reset Trigger */
		/* const */ unsigned int RST33          : 1;	/* EVR33 Reset Trigger */
		/* const */ unsigned int RSTSWD         : 1;	/* EVR SWD Reset Trigger */
		/* const */ unsigned int EVRCSHLV       : 1;	/* Short to ground */
		/* const */ unsigned int EVRCSHHV       : 1;	/* Short to supply */
		/* const */ unsigned int EVR33SHLV      : 1;	/* Short to ground */
		/* const */ unsigned int EVR33SHHV      : 1;	/* Short to supply */
		/* const */ unsigned int SWDLVL         : 1;	/* VEXT External Supply Level Status */
		/* const */ unsigned int SDVOK          : 1;	/* EVRC Regulator Voltage OK status */
		/* const */ unsigned int EVRCMOD        : 2;	/* EVRC Mode */
		/* const */ unsigned int OVPRE          : 1;	/* Pre Regulator VDDPD Over-voltage event flag */
		/* const */ unsigned int OVSB           : 1;	/* Standby Supply or VEVRSB Over-voltage event flag */
		/* const */ unsigned int OVDDM          : 1;	/* ADC VDDM Supply Over-voltage event flag */
		/* const */ unsigned int UVPRE          : 1;	/* Pre Regulator VDDPD Under-voltage event flag */
		/* const */ unsigned int UVSB           : 1;	/* Standby Supply or VEVRSB Under-voltage event flag */
		/* const */ unsigned int UVDDM          : 1;	/* ADC VDDM Supply Under-voltage event flag */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PMS_EVRSTAT_type;
#define PMS_EVRSTAT	(*( PMS_EVRSTAT_type *) 0xf024802cu)	/* EVR Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVR33VOUTSEL   : 8;	/* EVR33 Regulator Output Voltage Target Value */
		unsigned int SDVOUTSEL      : 8;	/* EVRC Regulator Output Voltage Target Value */
		unsigned int EVR33VOUTTRIM  : 6;	/* EVR33 Regulator Output Voltage Trim Value */
		unsigned int                : 2;
		unsigned int SDVOUTTRIM     : 6;	/* EVRC Regulator Output Voltage Trim Value(vtrim_trim_i) */
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} PMS_EVRTRIM_type;
#define PMS_EVRTRIM	(*( PMS_EVRTRIM_type *) 0xf024804cu)	/* EVR Trim Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int EVR33VOUTSEL   : 8;	/* EVR33 Regulator Output Voltage Target Value */
		/* const */ unsigned int SDVOUTSEL      : 8;	/* EVRC Regulator Output Voltage Target Value */
		/* const */ unsigned int EVR33VOUTTRIM  : 6;	/* EVR33 Regulator Output Voltage Trim Value */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int SDVOUTTRIM     : 6;	/* EVRC Regulator Output Voltage Trim Value(vtrim_trim_o) */
		/* const */ unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PMS_EVRTRIMSTAT_type;
#define PMS_EVRTRIMSTAT	(*( PMS_EVRTRIMSTAT_type *) 0xf0248050u)	/* EVR Trim Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVRCUVVAL      : 8;	/* VDD Supply Secondary Monitor Under-voltage threshold */
		unsigned int EVR33UVVAL     : 8;	/* VDDP3 Supply Secondary Monitor Under-voltage threshold */
		unsigned int SWDUVVAL       : 8;	/* VEXT Supply Secondary Monitor Under-voltage threshold */
		unsigned int                : 6;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_EVRUVMON_type;
#define PMS_EVRUVMON	(*( PMS_EVRUVMON_type *) 0xf0248078u)	/* EVR Secondary Under-voltage Monitor Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PREUVVAL       : 8;	/* VDDPD Supply Secondary Monitor Under-voltage threshold */
		unsigned int VDDMUVVAL      : 8;	/* VDDM Supply Secondary Monitor Under-voltage threshold */
		unsigned int SBUVVAL        : 8;	/* VEVRSB Supply Secondary Monitor Under-voltage threshold */
		unsigned int VDDMLVLSEL     : 6;	/* VDDM Level Select */
		unsigned int SLCK           : 1;	/* HSM Security Lock */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_EVRUVMON2_type;
#define PMS_EVRUVMON2	(*( PMS_EVRUVMON2_type *) 0xf0248080u)	/* EVR Secondary Under-voltage Monitor Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int EVRCOVVAL      : 8;	/* VDD Supply Primary Monitor Alarm Over-voltage threshold */
		unsigned int EVR33OVVAL     : 8;	/* VDDP3 Supply Primary Monitor Alarm Over-voltage threshold */
		unsigned int SWDOVVAL       : 8;	/* VEXT Supply Primary Monitor Alarm Over-voltage threshold */
		unsigned int EVRCOFF        : 1;	/* VDD Primary Monitor OV Alarm Enable */
		unsigned int EVR33OFF       : 1;	/* VDDP3 Primary Monitor OV Alarm Enable */
		unsigned int SWDOFF         : 1;	/* VEXT Primary Monitor OV Alarm Enable */
		unsigned int                : 4;
		unsigned int SLCK           : 1;	/* HSM Security Lock */
	} B;
	int I;
	unsigned int U;

} PMS_HSMOVMON_type;
#define PMS_HSMOVMON	(*( PMS_HSMOVMON_type *) 0xf024808cu)	/* EVR Primary HSM Over-voltage Monitor Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EVRCUVVAL      : 8;	/* VDD Supply Primary Monitor Alarm Under-voltage threshold */
		unsigned int EVR33UVVAL     : 8;	/* VDDP3 Supply Primary Monitor Alarm Under-voltage threshold */
		unsigned int SWDUVVAL       : 8;	/* VEXT Supply Primary Monitor Alarm Under-voltage threshold */
		unsigned int EVRCOFF        : 1;	/* VDD Primary Monitor UV Alarm Enable */
		unsigned int EVR33OFF       : 1;	/* VDDP3 Primary Monitor UV Alarm Enable */
		unsigned int SWDOFF         : 1;	/* VEXT Primary Monitor UV Alarm Enable */
		unsigned int HSMFIL         : 4;	/* HSM Voltage Filter */
		unsigned int SLCK           : 1;	/* HSM Security Lock */
	} B;
	int I;
	unsigned int U;

} PMS_HSMUVMON_type;
#define PMS_HSMUVMON	(*( PMS_HSMUVMON_type *) 0xf0248088u)	/* EVR Primary HSM Under-voltage Monitor Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} PMS_ID_type;
#define PMS_ID	(*( PMS_ID_type *) 0xf0248008u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TSTEN          : 1;	/* SMU_stdby alarm BIST enable */
		unsigned int TSTCLR         : 1;	/* SMU_stdby BIST flag clear */
		unsigned int                : 28;
		unsigned int BITPROT        : 1;	/* Bit Protection TSTEN */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_MONBISTCTRL_type;
#define PMS_MONBISTCTRL	(*( PMS_MONBISTCTRL_type *) 0xf0248198u)	/* SMU_stdby BIST Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int TSTOK          : 1;	/* SMU_stdby BIST ok bit */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TSTRUN         : 1;	/* SMU_stdby BIST run bit */
		/* const */ unsigned int TSTDONE        : 1;	/* SMU_stdby BIST done bit */
		/* const */ unsigned int SMUERR         : 1;	/* Error found in SMU_stdby found by SMU_stdby BIST */
		/* const */ unsigned int PMSERR         : 1;	/* Error found in PMS SARADC by SMU_stdby BIST */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} PMS_MONBISTSTAT_type;
#define PMS_MONBISTSTAT	(*( PMS_MONBISTSTAT_type *) 0xf0248190u)	/* SMU_stdby BIST Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int B0LAM          : 4;	/* OTGB0 TS16_ADCMON Low Byte */
		unsigned int                : 4;
		unsigned int B0HAM          : 4;	/* OTGB0 TS16_ADCMON High Byte */
		unsigned int                : 4;
		unsigned int B1LAM          : 4;	/* OTGB1 TS16_ADCMON Low Byte */
		unsigned int                : 4;
		unsigned int B1HAM          : 4;	/* OTGB1 TS16_ADCMON High Byte */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} PMS_OTSC0_type;
#define PMS_OTSC0	(*( PMS_OTSC0_type *) 0xf02481e4u)	/* OCDS Trigger Set Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int B0EC           : 4;	/* OTGB0 TS16_EVRCON */
		unsigned int                : 4;
		unsigned int B1EC           : 4;	/* OTGB1 TS16_EVRCON */
		unsigned int                : 4;
		unsigned int DMONAD         : 8;	/* OTGB0 TS16_EVRCON DMONAD */
		unsigned int SMCDBG         : 8;	/* OTGB0 TS16_EVRCON SMCDBG */
	} B;
	int I;
	unsigned int U;

} PMS_OTSC1_type;
#define PMS_OTSC1	(*( PMS_OTSC1_type *) 0xf02481e8u)	/* OCDS Trigger Set Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OTGB0          : 4;	/* Trigger Set for OTGB0 */
		unsigned int                : 4;
		unsigned int OTGB1          : 4;	/* Trigger Set for OTGB1 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} PMS_OTSS_type;
#define PMS_OTSS	(*( PMS_OTSS_type *) 0xf02481e0u)	/* OCDS Trigger Set Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OVSWD          : 1;	/* OVSWD Interrupt enable */
		unsigned int UVSWD          : 1;	/* UVSWD Interrupt enable */
		unsigned int OV33           : 1;	/* OV33 Interrupt enable */
		unsigned int UV33           : 1;	/* UV33 Interrupt enable */
		unsigned int OVC            : 1;	/* OVC Interrupt enable */
		unsigned int UVC            : 1;	/* UVC Interrupt enable */
		unsigned int OVPRE          : 1;	/* OVPRE Interrupt enable */
		unsigned int UVPRE          : 1;	/* UVPRE Interrupt enable */
		unsigned int OVDDM          : 1;	/* OVDDM Interrupt enable */
		unsigned int UVDDM          : 1;	/* UVDDM Interrupt enable */
		unsigned int OVSB           : 1;	/* OVSB Interrupt enable */
		unsigned int UVSB           : 1;	/* UVSB Interrupt enable */
		unsigned int                : 4;
		unsigned int EVRCMOD        : 1;	/* EVRCMOD Interrupt enable */
		unsigned int SDVOK          : 1;	/* SDVOK Interrupt enable */
		unsigned int SYNCLCK        : 1;	/* SD SYNCLCK Interrupt enable */
		unsigned int SWDLVL         : 1;	/* SWDLVL Interrupt enable */
		unsigned int                : 1;
		unsigned int WUTWKP         : 1;	/* WUTWKP Interrupt enable */
		unsigned int ESR0WKP        : 1;	/* ESR0WKP Interrupt enable */
		unsigned int ESR1WKP        : 1;	/* ESR1WKP Interrupt enable */
		unsigned int PINAWKP        : 1;	/* PINAWKP Interrupt enable */
		unsigned int PINBWKP        : 1;	/* PINBWKP Interrupt enable */
		unsigned int SCRINT         : 1;	/* SCRINT Interrupt enable */
		unsigned int SCRRST         : 1;	/* SCRRST Interrupt enable */
		unsigned int SCRECC         : 1;	/* SCRECC Interrupt enable */
		unsigned int SCRWDT         : 1;	/* SCRWDT Interrupt enable */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} PMS_PMSIEN_type;
#define PMS_PMSIEN	(*( PMS_PMSIEN_type *) 0xf0248074u)	/* PMS Interrupt Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int VEXTSTBYEN     : 1;	/* Standby Entry on VEXT Supply ramp-down */
		unsigned int VDDSTBYEN      : 1;	/* Standby Entry on VDD Supply ramp-down */
		unsigned int ESR0DFEN       : 1;	/* ESR0 Digital Filter Enable */
		unsigned int ESR0EDCON      : 2;	/* ESR0 Edge Detection Control */
		unsigned int ESR1DFEN       : 1;	/* ESR1 Digital Filter Enable */
		unsigned int ESR1EDCON      : 2;	/* ESR1 Edge Detection Control */
		unsigned int PINADFEN       : 1;	/* PINA Digital Filter Enable */
		unsigned int PINAEDCON      : 2;	/* PINA Edge Detection Control */
		unsigned int PINBDFEN       : 1;	/* PINB Digital Filter Enable */
		unsigned int PINBEDCON      : 2;	/* PINB Edge Detection Control */
		unsigned int STBYRAMSEL     : 3;	/* Standby RAM supply in Standby Mode */
		unsigned int                : 1;
		unsigned int BLNKFIL        : 4;	/* Blanking Filter delay for Wake-up */
		unsigned int ESR0WKEN       : 1;	/* ESR0 Wake-up enable from Standby */
		unsigned int ESR1WKEN       : 1;	/* ESR1 Wake-up enable from Standby */
		unsigned int PINAWKEN       : 1;	/* Pin A Wake-up enable from Standby */
		unsigned int PINBWKEN       : 1;	/* Pin B Wake-up enable from Standby */
		unsigned int PWRWKEN        : 1;	/* Standby Wake-up Enable on VEXT Supply ramp-up */
		unsigned int SCRWKEN        : 1;	/* Standby Controller Wake-up enable from Standby */
		unsigned int PORSTWKEN      : 1;	/* PORST pin Wake-up enable from Standby */
		unsigned int WUTWKEN        : 1;	/* WUT Wake-up enable from Standby */
	} B;
	int I;
	unsigned int U;

} PMS_PMSWCR0_type;
#define PMS_PMSWCR0	(*( PMS_PMSWCR0_type *) 0xf02480b4u)	/* Standby and Wake-up Control Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SCRINT         : 8;	/* Data exchange from Standby Controller to PMS main domain. */
		unsigned int                : 1;
		unsigned int SCRECC         : 1;	/* SCR RAM ECC error / reset flag */
		unsigned int SCRWDT         : 1;	/* SCR Watchdog Timer error / reset flag */
		unsigned int SCRRST         : 1;	/* SCR Software reset flag */
		unsigned int                : 4;
		unsigned int TCINT          : 8;	/* Data exchange from PMS main domain to Standby Controller. */
		unsigned int TCINTREQ       : 1;	/* SW Interrupt request from PMS to Standby Controller. */
		/* const */ unsigned int SMURST         : 1;	/* SMU Reset indication flag */
		/* const */ unsigned int RST            : 1;	/* Application or System Reset indication flag */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} PMS_PMSWCR2_type;
#define PMS_PMSWCR2	(*( PMS_PMSWCR2_type *) 0xf02480b8u)	/* Standby and Wake-up Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int WUTREL         : 24;	/* WUT reload value. */
		unsigned int                : 3;
		unsigned int WUTEN          : 1;	/* WUT enable */
		/* const */ unsigned int BUSY           : 1;	/* Lock Status - LCK */
		unsigned int WUTDIV         : 1;	/* WUT clock divider */
		unsigned int WUTMODE        : 1;	/* WUT mode selection */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} PMS_PMSWCR3_type;
#define PMS_PMSWCR3	(*( PMS_PMSWCR3_type *) 0xf02480c0u)	/* Standby and Wake-up Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int BPSCRSTREQ     : 1;	/* Standby Controller Reset request enable - SCRSTEN */
		unsigned int SCRSTREQ       : 1;	/* Standby Controller Reset request */
		unsigned int                : 2;
		unsigned int BPPORSTREQ     : 1;	/* Bit Protection for PORSTREQ - PORSTEN */
		unsigned int PORSTREQ       : 1;	/* SCR Reset behavior on warm PORST in Normal RUN / SLEEP mode */
		unsigned int SCRCLKSEL      : 1;	/* Default Clock selection on Standby Mode Entry */
		unsigned int                : 9;
		unsigned int SCRCFG         : 8;	/* Hardware configuration of the 8 bit SCR controller. */
		unsigned int BPSCREN        : 1;	/* Standby Controller Reset request enable */
		unsigned int SCREN          : 1;	/* Standby Controller Enable request */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} PMS_PMSWCR4_type;
#define PMS_PMSWCR4	(*( PMS_PMSWCR4_type *) 0xf02480c4u)	/* Standby and Wake-up Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int BPTRISTREQ     : 1;	/* Bit protection for Tristate request bit (TRISTREQ) */
		unsigned int TRISTREQ       : 1;	/* Tristate enable */
		unsigned int ESR0TRIST      : 1;	/* ESR0 Tristate enable */
		unsigned int                : 1;
		unsigned int PORSTDF        : 1;	/* PORST Digital Filter enable */
		unsigned int                : 1;
		unsigned int DCDCSYNCO      : 1;	/* DC-DC Synchronisation Output */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} PMS_PMSWCR5_type;
#define PMS_PMSWCR5	(*( PMS_PMSWCR5_type *) 0xf02480c8u)	/* Standby and Wake-up Control Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 1;
		/* const */ unsigned int HWCFGEVR       : 2;	/* EVR Hardware Configuration status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int HWCFG4         : 1;	/* Hardware Configuration Pin 4 status */
		/* const */ unsigned int HWCFG5         : 1;	/* Hardware Configuration Pin 5 status */
		/* const */ unsigned int TRIST          : 1;	/* Pad Tristate / Pull-up status */
		/* const */ unsigned int TESTMODE       : 1;	/* TESTMODE Pin status */
		/* const */ unsigned int ESR0TRIST      : 1;	/* ESR0 pin status during Standby */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int PORSTDF        : 1;	/* PORST Digital Filter status */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int SCR            : 1;	/* Standby Controller status */
		/* const */ unsigned int SCRST          : 1;	/* Standby Controller Reset Indication flag */
		/* const */ unsigned int SCRCLK         : 1;	/* Current Clock configuration for SCR before Standby Mode Entry */
		/* const */ unsigned int PORSTREQ       : 1;	/* Standby Controller Reset on warm PORST */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int WUTEN          : 1;	/* WUT Enable status */
		/* const */ unsigned int WUTRUN         : 1;	/* WUT Run status */
		/* const */ unsigned int WUTMODE        : 1;	/* WUT Mode status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int ESR0INT        : 1;	/* ESR0 Interrupt flag */
		/* const */ unsigned int ESR1INT        : 1;	/* ESR1 Interrupt flag */
		/* const */ unsigned int PINAINT        : 1;	/* Pin A Interrupt flag */
		/* const */ unsigned int PINBINT        : 1;	/* Pin B Interrupt flag */
	} B;
	int I;
	unsigned int U;

} PMS_PMSWSTAT_type;
#define PMS_PMSWSTAT	(*( PMS_PMSWSTAT_type *) 0xf02480d4u)	/* Standby and Wake-up Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ESR0WKP        : 1;	/* ESR0 Wake-up flag */
		/* const */ unsigned int ESR1WKP        : 1;	/* ESR1 Wake-up flag */
		/* const */ unsigned int PINAWKP        : 1;	/* Pin Wake-up flag */
		/* const */ unsigned int PINBWKP        : 1;	/* Pin B Wake-up flag */
		/* const */ unsigned int PWRWKP         : 1;	/* Wake-up event on VEXT Supply ramp-up */
		/* const */ unsigned int SCRWKP         : 1;	/* SCR Wake-up flag */
		/* const */ unsigned int PORSTWKP       : 1;	/* PORST Wake-up flag */
		/* const */ unsigned int WUTWKP         : 1;	/* WUT Wake-up flag */
		/* const */ unsigned int ESR0OVRUN      : 1;	/* ESR0 Overrun status flag */
		/* const */ unsigned int ESR1OVRUN      : 1;	/* ESR1 Overrun status flag */
		/* const */ unsigned int PINAOVRUN      : 1;	/* Pin A Overrun status flag */
		/* const */ unsigned int PINBOVRUN      : 1;	/* Pin B Overrun status flag */
		/* const */ unsigned int VDDSTBYEN      : 1;	/* Standby Entry Enable status on VDD Supply ramp-down - VDDSTBYWKEN */
		/* const */ unsigned int SCROVRUN       : 1;	/* SCR Overrun status flag */
		/* const */ unsigned int PORSTOVRUN     : 1;	/* PORST Overrun status flag */
		/* const */ unsigned int WUTOVRUN       : 1;	/* WUT Overrun status flag */
		/* const */ unsigned int STBYRAM        : 3;	/* Standby RAM Supply status */
		/* const */ unsigned int VEXTSTBYEN     : 1;	/* Standby Entry Enable status on VEXT Supply ramp-down - VEXTSTBYWKEN */
		/* const */ unsigned int BLNKFIL        : 4;	/* Blanking Filter Delay for VEXT Supply Wake-up */
		/* const */ unsigned int ESR0WKEN       : 1;	/* ESR0 Wake-up enable status */
		/* const */ unsigned int ESR1WKEN       : 1;	/* ESR1 Wake-up enable status */
		/* const */ unsigned int PINAWKEN       : 1;	/* Pin A Wake-up enable status */
		/* const */ unsigned int PINBWKEN       : 1;	/* Pin B Wake-up enable status */
		/* const */ unsigned int PWRWKEN        : 1;	/* Standby Wake-up Enable status on VEXT Supply ramp-up */
		/* const */ unsigned int SCRWKEN        : 1;	/* Standby Controller Wake-up Enable status */
		/* const */ unsigned int PORSTWKEN      : 1;	/* PORST pin Wake-up enable status from Standby */
		/* const */ unsigned int WUTWKEN        : 1;	/* WUT Wake-up enable status */
	} B;
	int I;
	unsigned int U;

} PMS_PMSWSTAT2_type;
#define PMS_PMSWSTAT2	(*( PMS_PMSWSTAT2_type *) 0xf02480d8u)	/* Standby and Wake-up Status Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int ESR0WKPCLR     : 1;	/* ESR0 Wake-up indication flag clear */
		unsigned int ESR1WKPCLR     : 1;	/* ESR1 Wake-up indication flag clear */
		unsigned int PINAWKPCLR     : 1;	/* PINA Wake-up indication flag clear */
		unsigned int PINBWKPCLR     : 1;	/* PINB Wake-up indication flag clear */
		unsigned int PWRWKPCLR      : 1;	/* PWRWKP Wake-up indication flag clear */
		unsigned int SCRWKPCLR      : 1;	/* SCR Wake-up indication flag clear */
		unsigned int PORSTWKPCLR    : 1;	/* PORST Wake-up indication flag clear */
		unsigned int WUTWKPCLR      : 1;	/* WUT Wake-up indication flag clear */
		unsigned int ESR0OVRUNCLR   : 1;	/* ESR0 Overrun status indication flag clear */
		unsigned int ESR1OVRUNCLR   : 1;	/* ESR1 Overrun status indication flag clear */
		unsigned int PINAOVRUNCLR   : 1;	/* PINA Overrun status indication flag clear */
		unsigned int PINBOVRUNCLR   : 1;	/* PINB Overrun status indication flag clear */
		unsigned int                : 1;
		unsigned int SCROVRUNCLR    : 1;	/* SCR Overrun status indication flag clear */
		unsigned int PORSTOVRUNCLR  : 1;	/* PORST Overrun status indication flag clear */
		unsigned int WUTOVRUNCLR    : 1;	/* WUT Overrun status indication flag clear */
		unsigned int SCRSTCLR       : 1;	/* Standby controller SCRST indication flag clear */
		unsigned int                : 11;
		unsigned int ESR0INTCLR     : 1;	/* ESR0 Interrupt indication flag clear */
		unsigned int ESR1INTCLR     : 1;	/* ESR1 Interrupt indication flag clear */
		unsigned int PINAINTCLR     : 1;	/* PINA Interrupt indication flag clear */
		unsigned int PINBINTCLR     : 1;	/* PINB Interrupt indication flag clear */
	} B;
	int I;
	unsigned int U;

} PMS_PMSWSTATCLR_type;
#define PMS_PMSWSTATCLR	(*( PMS_PMSWSTATCLR_type *) 0xf02480e8u)	/* Standby and Wake-up Status Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int WUTCNT         : 24;	/* WUT counter value. */
		/* const */ unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} PMS_PMSWUTCNT_type;
#define PMS_PMSWUTCNT	(*( PMS_PMSWUTCNT_type *) 0xf02480dcu)	/* Standby WUT Counter Register */


/* P */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} P00_ACCEN0_type;
#define P00_ACCEN0	(*( P00_ACCEN0_type *) 0xf003a0fcu)	/* Port 00 Access Enable Register 0 */
#define P02_ACCEN0	(*( P00_ACCEN0_type *) 0xf003a2fcu)	/* Port 02 Access Enable Register 0 */
#define P10_ACCEN0	(*( P00_ACCEN0_type *) 0xf003aafcu)	/* Port 10 Access Enable Register 0 */
#define P11_ACCEN0	(*( P00_ACCEN0_type *) 0xf003abfcu)	/* Port 11 Access Enable Register 0 */
#define P12_ACCEN0	(*( P00_ACCEN0_type *) 0xf003acfcu)	/* Port 12 Access Enable Register 0 */
#define P14_ACCEN0	(*( P00_ACCEN0_type *) 0xf003aefcu)	/* Port 14 Access Enable Register 0 */
#define P15_ACCEN0	(*( P00_ACCEN0_type *) 0xf003affcu)	/* Port 15 Access Enable Register 0 */
#define P20_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b4fcu)	/* Port 20 Access Enable Register 0 */
#define P21_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b5fcu)	/* Port 21 Access Enable Register 0 */
#define P22_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b6fcu)	/* Port 22 Access Enable Register 0 */
#define P23_ACCEN0	(*( P00_ACCEN0_type *) 0xf003b7fcu)	/* Port 23 Access Enable Register 0 */
#define P32_ACCEN0	(*( P00_ACCEN0_type *) 0xf003c0fcu)	/* Port 32 Access Enable Register 0 */
#define P33_ACCEN0	(*( P00_ACCEN0_type *) 0xf003c1fcu)	/* Port 33 Access Enable Register 0 */
#define P34_ACCEN0	(*( P00_ACCEN0_type *) 0xf003c2fcu)	/* Port 34 Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P00_ACCEN1_type;
#define P00_ACCEN1	(*( P00_ACCEN1_type *) 0xf003a0f8u)	/* Port 00 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Emergency Stop Enable for Pin 0 */
		unsigned int EN1            : 1;	/* Emergency Stop Enable for Pin 1 */
		unsigned int EN2            : 1;	/* Emergency Stop Enable for Pin 2 */
		unsigned int EN3            : 1;	/* Emergency Stop Enable for Pin 3 */
		unsigned int EN4            : 1;	/* Emergency Stop Enable for Pin 4 */
		unsigned int EN5            : 1;	/* Emergency Stop Enable for Pin 5 */
		unsigned int EN6            : 1;	/* Emergency Stop Enable for Pin 6 */
		unsigned int EN7            : 1;	/* Emergency Stop Enable for Pin 7 */
		unsigned int EN8            : 1;	/* Emergency Stop Enable for Pin 8 */
		unsigned int EN9            : 1;	/* Emergency Stop Enable for Pin 9 */
		unsigned int EN10           : 1;	/* Emergency Stop Enable for Pin 10 */
		unsigned int EN11           : 1;	/* Emergency Stop Enable for Pin 11 */
		unsigned int EN12           : 1;	/* Emergency Stop Enable for Pin 12 */
		unsigned int EN13           : 1;	/* Emergency Stop Enable for Pin 13 */
		unsigned int EN14           : 1;	/* Emergency Stop Enable for Pin 14 */
		unsigned int EN15           : 1;	/* Emergency Stop Enable for Pin 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_ESR_type;
#define P00_ESR	(*( P00_ESR_type *) 0xf003a050u)	/* Port 00 Emergency Stop Register */
#define P11_ESR	(*( P00_ESR_type *) 0xf003ab50u)	/* Port 11 Emergency Stop Register */
#define P20_ESR	(*( P00_ESR_type *) 0xf003b450u)	/* Port 20 Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} P00_ID_type;
#define P00_ID	(*( P00_ID_type *) 0xf003a008u)	/* Port 00 Identification Register */
#define P02_ID	(*( P00_ID_type *) 0xf003a208u)	/* Port 02 Identification Register */
#define P10_ID	(*( P00_ID_type *) 0xf003aa08u)	/* Port 10 Identification Register */
#define P11_ID	(*( P00_ID_type *) 0xf003ab08u)	/* Port 11 Identification Register */
#define P12_ID	(*( P00_ID_type *) 0xf003ac08u)	/* Port 12 Identification Register */
#define P14_ID	(*( P00_ID_type *) 0xf003ae08u)	/* Port 14 Identification Register */
#define P15_ID	(*( P00_ID_type *) 0xf003af08u)	/* Port 15 Identification Register */
#define P20_ID	(*( P00_ID_type *) 0xf003b408u)	/* Port 20 Identification Register */
#define P21_ID	(*( P00_ID_type *) 0xf003b508u)	/* Port 21 Identification Register */
#define P22_ID	(*( P00_ID_type *) 0xf003b608u)	/* Port 22 Identification Register */
#define P23_ID	(*( P00_ID_type *) 0xf003b708u)	/* Port 23 Identification Register */
#define P32_ID	(*( P00_ID_type *) 0xf003c008u)	/* Port 32 Identification Register */
#define P33_ID	(*( P00_ID_type *) 0xf003c108u)	/* Port 33 Identification Register */
#define P34_ID	(*( P00_ID_type *) 0xf003c208u)	/* Port 34 Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;	/* Input Bit 0 */
		/* const */ unsigned int P1             : 1;	/* Input Bit 1 */
		/* const */ unsigned int P2             : 1;	/* Input Bit 2 */
		/* const */ unsigned int P3             : 1;	/* Input Bit 3 */
		/* const */ unsigned int P4             : 1;	/* Input Bit 4 */
		/* const */ unsigned int P5             : 1;	/* Input Bit 5 */
		/* const */ unsigned int P6             : 1;	/* Input Bit 6 */
		/* const */ unsigned int P7             : 1;	/* Input Bit 7 */
		/* const */ unsigned int P8             : 1;	/* Input Bit 8 */
		/* const */ unsigned int P9             : 1;	/* Input Bit 9 */
		/* const */ unsigned int P10            : 1;	/* Input Bit 10 */
		/* const */ unsigned int P11            : 1;	/* Input Bit 11 */
		/* const */ unsigned int P12            : 1;	/* Input Bit 12 */
		/* const */ unsigned int P13            : 1;	/* Input Bit 13 */
		/* const */ unsigned int P14            : 1;	/* Input Bit 14 */
		/* const */ unsigned int P15            : 1;	/* Input Bit 15 */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_IN_type;
#define P00_IN	(*( P00_IN_type *) 0xf003a024u)	/* Port 00 Input Register */
#define P11_IN	(*( P00_IN_type *) 0xf003ab24u)	/* Port 11 Input Register */
#define P20_IN	(*( P00_IN_type *) 0xf003b424u)	/* Port 20 Input Register */
#define P33_IN	(*( P00_IN_type *) 0xf003c124u)	/* Port 33 Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC0            : 5;	/* Port Control for Pin 0 */
		unsigned int                : 3;
		unsigned int PC1            : 5;	/* Port Control for Pin 1 */
		unsigned int                : 3;
		unsigned int PC2            : 5;	/* Port Control for Pin 2 */
		unsigned int                : 3;
		unsigned int PC3            : 5;	/* Port Control for Pin 3 */
	} B;
	int I;
	unsigned int U;

} P00_IOCR0_type;
#define P00_IOCR0	(*( P00_IOCR0_type *) 0xf003a010u)	/* Port 00 Input/Output Control Register 0 */
#define P02_IOCR0	(*( P00_IOCR0_type *) 0xf003a210u)	/* Port 02 Input/Output Control Register 0 */
#define P10_IOCR0	(*( P00_IOCR0_type *) 0xf003aa10u)	/* Port 10 Input/Output Control Register 0 */
#define P11_IOCR0	(*( P00_IOCR0_type *) 0xf003ab10u)	/* Port 11 Input/Output Control Register 0 */
#define P12_IOCR0	(*( P00_IOCR0_type *) 0xf003ac10u)	/* Port 12 Input/Output Control Register 0 */
#define P14_IOCR0	(*( P00_IOCR0_type *) 0xf003ae10u)	/* Port 14 Input/Output Control Register 0 */
#define P15_IOCR0	(*( P00_IOCR0_type *) 0xf003af10u)	/* Port 15 Input/Output Control Register 0 */
#define P20_IOCR0	(*( P00_IOCR0_type *) 0xf003b410u)	/* Port 20 Input/Output Control Register 0 */
#define P21_IOCR0	(*( P00_IOCR0_type *) 0xf003b510u)	/* Port 21 Input/Output Control Register 0 */
#define P22_IOCR0	(*( P00_IOCR0_type *) 0xf003b610u)	/* Port 22 Input/Output Control Register 0 */
#define P23_IOCR0	(*( P00_IOCR0_type *) 0xf003b710u)	/* Port 23 Input/Output Control Register 0 */
#define P32_IOCR0	(*( P00_IOCR0_type *) 0xf003c010u)	/* Port 32 Input/Output Control Register 0 */
#define P33_IOCR0	(*( P00_IOCR0_type *) 0xf003c110u)	/* Port 33 Input/Output Control Register 0 */
#define P34_IOCR0	(*( P00_IOCR0_type *) 0xf003c210u)	/* Port 34 Input/Output Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC12           : 5;	/* Port Control for Port 00 Pin 12 */
		unsigned int                : 3;
		unsigned int PC13           : 5;	/* Port Control for Port 00 Pin 13 */
		unsigned int                : 3;
		unsigned int PC14           : 5;	/* Port Control for Port 00 Pin 14 */
		unsigned int                : 3;
		unsigned int PC15           : 5;	/* Port Control for Port 00 Pin 15 */
	} B;
	int I;
	unsigned int U;

} P00_IOCR12_type;
#define P00_IOCR12	(*( P00_IOCR12_type *) 0xf003a01cu)	/* Port 00 Input/Output Control Register 12 */
#define P11_IOCR12	(*( P00_IOCR12_type *) 0xf003ab1cu)	/* Port 11 Input/Output Control Register 12 */
#define P20_IOCR12	(*( P00_IOCR12_type *) 0xf003b41cu)	/* Port 20 Input/Output Control Register 12 */
#define P33_IOCR12	(*( P00_IOCR12_type *) 0xf003c11cu)	/* Port 33 Input/Output Control Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC4            : 5;	/* Port Control for Port 00 Pin 4 */
		unsigned int                : 3;
		unsigned int PC5            : 5;	/* Port Control for Port 00 Pin 5 */
		unsigned int                : 3;
		unsigned int PC6            : 5;	/* Port Control for Port 00 Pin 6 */
		unsigned int                : 3;
		unsigned int PC7            : 5;	/* Port Control for Port 00 Pin 7 */
	} B;
	int I;
	unsigned int U;

} P00_IOCR4_type;
#define P00_IOCR4	(*( P00_IOCR4_type *) 0xf003a014u)	/* Port 00 Input/Output Control Register 4 */
#define P02_IOCR4	(*( P00_IOCR4_type *) 0xf003a214u)	/* Port 02 Input/Output Control Register 4 */
#define P10_IOCR4	(*( P00_IOCR4_type *) 0xf003aa14u)	/* Port 10 Input/Output Control Register 4 */
#define P11_IOCR4	(*( P00_IOCR4_type *) 0xf003ab14u)	/* Port 11 Input/Output Control Register 4 */
#define P14_IOCR4	(*( P00_IOCR4_type *) 0xf003ae14u)	/* Port 14 Input/Output Control Register 4 */
#define P15_IOCR4	(*( P00_IOCR4_type *) 0xf003af14u)	/* Port 15 Input/Output Control Register 4 */
#define P20_IOCR4	(*( P00_IOCR4_type *) 0xf003b414u)	/* Port 20 Input/Output Control Register 4 */
#define P21_IOCR4	(*( P00_IOCR4_type *) 0xf003b514u)	/* Port 21 Input/Output Control Register 4 */
#define P22_IOCR4	(*( P00_IOCR4_type *) 0xf003b614u)	/* Port 22 Input/Output Control Register 4 */
#define P23_IOCR4	(*( P00_IOCR4_type *) 0xf003b714u)	/* Port 23 Input/Output Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC8            : 5;	/* Port Control for Port 00 Pin 8 */
		unsigned int                : 3;
		unsigned int PC9            : 5;	/* Port Control for Port 00 Pin 9 */
		unsigned int                : 3;
		unsigned int PC10           : 5;	/* Port Control for Port 00 Pin 10 */
		unsigned int                : 3;
		unsigned int PC11           : 5;	/* Port Control for Port 00 Pin 11 */
	} B;
	int I;
	unsigned int U;

} P00_IOCR8_type;
#define P00_IOCR8	(*( P00_IOCR8_type *) 0xf003a018u)	/* Port 00 Input/Output Control Register 8 */
#define P02_IOCR8	(*( P00_IOCR8_type *) 0xf003a218u)	/* Port 02 Input/Output Control Register 8 */
#define P10_IOCR8	(*( P00_IOCR8_type *) 0xf003aa18u)	/* Port 10 Input/Output Control Register 8 */
#define P11_IOCR8	(*( P00_IOCR8_type *) 0xf003ab18u)	/* Port 11 Input/Output Control Register 8 */
#define P14_IOCR8	(*( P00_IOCR8_type *) 0xf003ae18u)	/* Port 14 Input/Output Control Register 8 */
#define P15_IOCR8	(*( P00_IOCR8_type *) 0xf003af18u)	/* Port 15 Input/Output Control Register 8 */
#define P20_IOCR8	(*( P00_IOCR8_type *) 0xf003b418u)	/* Port 20 Input/Output Control Register 8 */
#define P33_IOCR8	(*( P00_IOCR8_type *) 0xf003c118u)	/* Port 33 Input/Output Control Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int PCL4           : 1;	/* Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Clear Bit 7 */
		unsigned int PCL8           : 1;	/* Clear Bit 8 */
		unsigned int PCL9           : 1;	/* Clear Bit 9 */
		unsigned int PCL10          : 1;	/* Clear Bit 10 */
		unsigned int PCL11          : 1;	/* Clear Bit 11 */
		unsigned int PCL12          : 1;	/* Clear Bit 12 */
		unsigned int PCL13          : 1;	/* Clear Bit 13 */
		unsigned int PCL14          : 1;	/* Clear Bit 14 */
		unsigned int PCL15          : 1;	/* Clear Bit 15 */
	} B;
	int I;
	unsigned int U;

} P00_OMCR_type;
#define P00_OMCR	(*( P00_OMCR_type *) 0xf003a094u)	/* Port 00 Output Modification Clear Register */
#define P11_OMCR	(*( P00_OMCR_type *) 0xf003ab94u)	/* Port 11 Output Modification Clear Register */
#define P20_OMCR	(*( P00_OMCR_type *) 0xf003b494u)	/* Port 20 Output Modification Clear Register */
#define P33_OMCR	(*( P00_OMCR_type *) 0xf003c194u)	/* Port 33 Output Modification Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} P00_OMCR0_type;
#define P00_OMCR0	(*( P00_OMCR0_type *) 0xf003a080u)	/* Port 00 Output Modification Clear Register 0 */
#define P02_OMCR0	(*( P00_OMCR0_type *) 0xf003a280u)	/* Port 02 Output Modification Clear Register 0 */
#define P10_OMCR0	(*( P00_OMCR0_type *) 0xf003aa80u)	/* Port 10 Output Modification Clear Register 0 */
#define P11_OMCR0	(*( P00_OMCR0_type *) 0xf003ab80u)	/* Port 11 Output Modification Clear Register 0 */
#define P12_OMCR0	(*( P00_OMCR0_type *) 0xf003ac80u)	/* Port 12 Output Modification Clear Register 0 */
#define P14_OMCR0	(*( P00_OMCR0_type *) 0xf003ae80u)	/* Port 14 Output Modification Clear Register 0 */
#define P15_OMCR0	(*( P00_OMCR0_type *) 0xf003af80u)	/* Port 15 Output Modification Clear Register 0 */
#define P20_OMCR0	(*( P00_OMCR0_type *) 0xf003b480u)	/* Port 20 Output Modification Clear Register 0 */
#define P21_OMCR0	(*( P00_OMCR0_type *) 0xf003b580u)	/* Port 21 Output Modification Clear Register 0 */
#define P22_OMCR0	(*( P00_OMCR0_type *) 0xf003b680u)	/* Port 22 Output Modification Clear Register 0 */
#define P23_OMCR0	(*( P00_OMCR0_type *) 0xf003b780u)	/* Port 23 Output Modification Clear Register 0 */
#define P32_OMCR0	(*( P00_OMCR0_type *) 0xf003c080u)	/* Port 32 Output Modification Clear Register 0 */
#define P33_OMCR0	(*( P00_OMCR0_type *) 0xf003c180u)	/* Port 33 Output Modification Clear Register 0 */
#define P34_OMCR0	(*( P00_OMCR0_type *) 0xf003c280u)	/* Port 34 Output Modification Clear Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 28;
		unsigned int PCL12          : 1;	/* Clear Bit 12 */
		unsigned int PCL13          : 1;	/* Clear Bit 13 */
		unsigned int PCL14          : 1;	/* Clear Bit 14 */
		unsigned int PCL15          : 1;	/* Clear Bit 15 */
	} B;
	int I;
	unsigned int U;

} P00_OMCR12_type;
#define P00_OMCR12	(*( P00_OMCR12_type *) 0xf003a08cu)	/* Port 00 Output Modification Clear Register 12 */
#define P11_OMCR12	(*( P00_OMCR12_type *) 0xf003ab8cu)	/* Port 11 Output Modification Clear Register 12 */
#define P20_OMCR12	(*( P00_OMCR12_type *) 0xf003b48cu)	/* Port 20 Output Modification Clear Register 12 */
#define P33_OMCR12	(*( P00_OMCR12_type *) 0xf003c18cu)	/* Port 33 Output Modification Clear Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 20;
		unsigned int PCL4           : 1;	/* Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Clear Bit 7 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} P00_OMCR4_type;
#define P00_OMCR4	(*( P00_OMCR4_type *) 0xf003a084u)	/* Port 00 Output Modification Clear Register 4 */
#define P02_OMCR4	(*( P00_OMCR4_type *) 0xf003a284u)	/* Port 02 Output Modification Clear Register 4 */
#define P10_OMCR4	(*( P00_OMCR4_type *) 0xf003aa84u)	/* Port 10 Output Modification Clear Register 4 */
#define P11_OMCR4	(*( P00_OMCR4_type *) 0xf003ab84u)	/* Port 11 Output Modification Clear Register 4 */
#define P14_OMCR4	(*( P00_OMCR4_type *) 0xf003ae84u)	/* Port 14 Output Modification Clear Register 4 */
#define P15_OMCR4	(*( P00_OMCR4_type *) 0xf003af84u)	/* Port 15 Output Modification Clear Register 4 */
#define P20_OMCR4	(*( P00_OMCR4_type *) 0xf003b484u)	/* Port 20 Output Modification Clear Register 4 */
#define P21_OMCR4	(*( P00_OMCR4_type *) 0xf003b584u)	/* Port 21 Output Modification Clear Register 4 */
#define P22_OMCR4	(*( P00_OMCR4_type *) 0xf003b684u)	/* Port 22 Output Modification Clear Register 4 */
#define P23_OMCR4	(*( P00_OMCR4_type *) 0xf003b784u)	/* Port 23 Output Modification Clear Register 4 */
#define P32_OMCR4	(*( P00_OMCR4_type *) 0xf003c084u)	/* Port 32 Output Modification Clear Register 4 */
#define P33_OMCR4	(*( P00_OMCR4_type *) 0xf003c184u)	/* Port 33 Output Modification Clear Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int PCL8           : 1;	/* Clear Bit 8 */
		unsigned int PCL9           : 1;	/* Clear Bit 9 */
		unsigned int PCL10          : 1;	/* Clear Bit 10 */
		unsigned int PCL11          : 1;	/* Clear Bit 11 */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} P00_OMCR8_type;
#define P00_OMCR8	(*( P00_OMCR8_type *) 0xf003a088u)	/* Port 00 Output Modification Clear Register 8 */
#define P02_OMCR8	(*( P00_OMCR8_type *) 0xf003a288u)	/* Port 02 Output Modification Clear Register 8 */
#define P10_OMCR8	(*( P00_OMCR8_type *) 0xf003aa88u)	/* Port 10 Output Modification Clear Register 8 */
#define P11_OMCR8	(*( P00_OMCR8_type *) 0xf003ab88u)	/* Port 11 Output Modification Clear Register 8 */
#define P14_OMCR8	(*( P00_OMCR8_type *) 0xf003ae88u)	/* Port 14 Output Modification Clear Register 8 */
#define P15_OMCR8	(*( P00_OMCR8_type *) 0xf003af88u)	/* Port 15 Output Modification Clear Register 8 */
#define P20_OMCR8	(*( P00_OMCR8_type *) 0xf003b488u)	/* Port 20 Output Modification Clear Register 8 */
#define P33_OMCR8	(*( P00_OMCR8_type *) 0xf003c188u)	/* Port 33 Output Modification Clear Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Set Bit 0 */
		unsigned int PS1            : 1;	/* Set Bit 1 */
		unsigned int PS2            : 1;	/* Set Bit 2 */
		unsigned int PS3            : 1;	/* Set Bit 3 */
		unsigned int PS4            : 1;	/* Set Bit 4 */
		unsigned int PS5            : 1;	/* Set Bit 5 */
		unsigned int PS6            : 1;	/* Set Bit 6 */
		unsigned int PS7            : 1;	/* Set Bit 7 */
		unsigned int PS8            : 1;	/* Set Bit 8 */
		unsigned int PS9            : 1;	/* Set Bit 9 */
		unsigned int PS10           : 1;	/* Set Bit 10 */
		unsigned int PS11           : 1;	/* Set Bit 11 */
		unsigned int PS12           : 1;	/* Set Bit 12 */
		unsigned int PS13           : 1;	/* Set Bit 13 */
		unsigned int PS14           : 1;	/* Set Bit 14 */
		unsigned int PS15           : 1;	/* Set Bit 15 */
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int PCL4           : 1;	/* Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Clear Bit 7 */
		unsigned int PCL8           : 1;	/* Clear Bit 8 */
		unsigned int PCL9           : 1;	/* Clear Bit 9 */
		unsigned int PCL10          : 1;	/* Clear Bit 10 */
		unsigned int PCL11          : 1;	/* Clear Bit 11 */
		unsigned int PCL12          : 1;	/* Clear Bit 12 */
		unsigned int PCL13          : 1;	/* Clear Bit 13 */
		unsigned int PCL14          : 1;	/* Clear Bit 14 */
		unsigned int PCL15          : 1;	/* Clear Bit 15 */
	} B;
	int I;
	unsigned int U;

} P00_OMR_type;
#define P00_OMR	(*( P00_OMR_type *) 0xf003a004u)	/* Port 00 Output Modification Register */
#define P11_OMR	(*( P00_OMR_type *) 0xf003ab04u)	/* Port 11 Output Modification Register */
#define P20_OMR	(*( P00_OMR_type *) 0xf003b404u)	/* Port 20 Output Modification Register */
#define P33_OMR	(*( P00_OMR_type *) 0xf003c104u)	/* Port 33 Output Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Set Bit 0 */
		unsigned int PS1            : 1;	/* Set Bit 1 */
		unsigned int PS2            : 1;	/* Set Bit 2 */
		unsigned int PS3            : 1;	/* Set Bit 3 */
		unsigned int PS4            : 1;	/* Set Bit 4 */
		unsigned int PS5            : 1;	/* Set Bit 5 */
		unsigned int PS6            : 1;	/* Set Bit 6 */
		unsigned int PS7            : 1;	/* Set Bit 7 */
		unsigned int PS8            : 1;	/* Set Bit 8 */
		unsigned int PS9            : 1;	/* Set Bit 9 */
		unsigned int PS10           : 1;	/* Set Bit 10 */
		unsigned int PS11           : 1;	/* Set Bit 11 */
		unsigned int PS12           : 1;	/* Set Bit 12 */
		unsigned int PS13           : 1;	/* Set Bit 13 */
		unsigned int PS14           : 1;	/* Set Bit 14 */
		unsigned int PS15           : 1;	/* Set Bit 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_OMSR_type;
#define P00_OMSR	(*( P00_OMSR_type *) 0xf003a090u)	/* Port 00 Output Modification Set Register */
#define P11_OMSR	(*( P00_OMSR_type *) 0xf003ab90u)	/* Port 11 Output Modification Set Register */
#define P20_OMSR	(*( P00_OMSR_type *) 0xf003b490u)	/* Port 20 Output Modification Set Register */
#define P33_OMSR	(*( P00_OMSR_type *) 0xf003c190u)	/* Port 33 Output Modification Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Set Bit 0 */
		unsigned int PS1            : 1;	/* Set Bit 1 */
		unsigned int PS2            : 1;	/* Set Bit 2 */
		unsigned int PS3            : 1;	/* Set Bit 3 */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} P00_OMSR0_type;
#define P00_OMSR0	(*( P00_OMSR0_type *) 0xf003a070u)	/* Port 00 Output Modification Set Register 0 */
#define P02_OMSR0	(*( P00_OMSR0_type *) 0xf003a270u)	/* Port 02 Output Modification Set Register 0 */
#define P10_OMSR0	(*( P00_OMSR0_type *) 0xf003aa70u)	/* Port 10 Output Modification Set Register 0 */
#define P11_OMSR0	(*( P00_OMSR0_type *) 0xf003ab70u)	/* Port 11 Output Modification Set Register 0 */
#define P12_OMSR	(*( P00_OMSR0_type *) 0xf003ac90u)	/* Port 12 Output Modification Set Register */
#define P12_OMSR0	(*( P00_OMSR0_type *) 0xf003ac70u)	/* Port 12 Output Modification Set Register 0 */
#define P14_OMSR0	(*( P00_OMSR0_type *) 0xf003ae70u)	/* Port 14 Output Modification Set Register 0 */
#define P15_OMSR0	(*( P00_OMSR0_type *) 0xf003af70u)	/* Port 15 Output Modification Set Register 0 */
#define P20_OMSR0	(*( P00_OMSR0_type *) 0xf003b470u)	/* Port 20 Output Modification Set Register 0 */
#define P21_OMSR0	(*( P00_OMSR0_type *) 0xf003b570u)	/* Port 21 Output Modification Set Register 0 */
#define P22_OMSR0	(*( P00_OMSR0_type *) 0xf003b670u)	/* Port 22 Output Modification Set Register 0 */
#define P23_OMSR0	(*( P00_OMSR0_type *) 0xf003b770u)	/* Port 23 Output Modification Set Register 0 */
#define P32_OMSR0	(*( P00_OMSR0_type *) 0xf003c070u)	/* Port 32 Output Modification Set Register 0 */
#define P33_OMSR0	(*( P00_OMSR0_type *) 0xf003c170u)	/* Port 33 Output Modification Set Register 0 */
#define P34_OMSR	(*( P00_OMSR0_type *) 0xf003c290u)	/* Port 34 Output Modification Set Register */
#define P34_OMSR0	(*( P00_OMSR0_type *) 0xf003c270u)	/* Port 34 Output Modification Set Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 12;
		unsigned int PS12           : 1;	/* Set Bit 12 */
		unsigned int PS13           : 1;	/* Set Bit 13 */
		unsigned int PS14           : 1;	/* Set Bit 14 */
		unsigned int PS15           : 1;	/* Set Bit 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_OMSR12_type;
#define P00_OMSR12	(*( P00_OMSR12_type *) 0xf003a07cu)	/* Port 00 Output Modification Set Register 12 */
#define P11_OMSR12	(*( P00_OMSR12_type *) 0xf003ab7cu)	/* Port 11 Output Modification Set Register 12 */
#define P20_OMSR12	(*( P00_OMSR12_type *) 0xf003b47cu)	/* Port 20 Output Modification Set Register 12 */
#define P33_OMSR12	(*( P00_OMSR12_type *) 0xf003c17cu)	/* Port 33 Output Modification Set Register 12 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int PS4            : 1;	/* Set Bit 4 */
		unsigned int PS5            : 1;	/* Set Bit 5 */
		unsigned int PS6            : 1;	/* Set Bit 6 */
		unsigned int PS7            : 1;	/* Set Bit 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P00_OMSR4_type;
#define P00_OMSR4	(*( P00_OMSR4_type *) 0xf003a074u)	/* Port 00 Output Modification Set Register 4 */
#define P02_OMSR4	(*( P00_OMSR4_type *) 0xf003a274u)	/* Port 02 Output Modification Set Register 4 */
#define P10_OMSR4	(*( P00_OMSR4_type *) 0xf003aa74u)	/* Port 10 Output Modification Set Register 4 */
#define P11_OMSR4	(*( P00_OMSR4_type *) 0xf003ab74u)	/* Port 11 Output Modification Set Register 4 */
#define P14_OMSR4	(*( P00_OMSR4_type *) 0xf003ae74u)	/* Port 14 Output Modification Set Register 4 */
#define P15_OMSR4	(*( P00_OMSR4_type *) 0xf003af74u)	/* Port 15 Output Modification Set Register 4 */
#define P20_OMSR4	(*( P00_OMSR4_type *) 0xf003b474u)	/* Port 20 Output Modification Set Register 4 */
#define P21_OMSR4	(*( P00_OMSR4_type *) 0xf003b574u)	/* Port 21 Output Modification Set Register 4 */
#define P22_OMSR4	(*( P00_OMSR4_type *) 0xf003b674u)	/* Port 22 Output Modification Set Register 4 */
#define P23_OMSR4	(*( P00_OMSR4_type *) 0xf003b774u)	/* Port 23 Output Modification Set Register 4 */
#define P32_OMSR4	(*( P00_OMSR4_type *) 0xf003c074u)	/* Port 32 Output Modification Set Register 4 */
#define P33_OMSR4	(*( P00_OMSR4_type *) 0xf003c174u)	/* Port 33 Output Modification Set Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int PS8            : 1;	/* Set Bit 8 */
		unsigned int PS9            : 1;	/* Set Bit 9 */
		unsigned int PS10           : 1;	/* Set Bit 10 */
		unsigned int PS11           : 1;	/* Set Bit 11 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} P00_OMSR8_type;
#define P00_OMSR8	(*( P00_OMSR8_type *) 0xf003a078u)	/* Port 00 Output Modification Set Register 8 */
#define P02_OMSR8	(*( P00_OMSR8_type *) 0xf003a278u)	/* Port 02 Output Modification Set Register 8 */
#define P10_OMSR8	(*( P00_OMSR8_type *) 0xf003aa78u)	/* Port 10 Output Modification Set Register 8 */
#define P11_OMSR8	(*( P00_OMSR8_type *) 0xf003ab78u)	/* Port 11 Output Modification Set Register 8 */
#define P14_OMSR8	(*( P00_OMSR8_type *) 0xf003ae78u)	/* Port 14 Output Modification Set Register 8 */
#define P15_OMSR8	(*( P00_OMSR8_type *) 0xf003af78u)	/* Port 15 Output Modification Set Register 8 */
#define P20_OMSR8	(*( P00_OMSR8_type *) 0xf003b478u)	/* Port 20 Output Modification Set Register 8 */
#define P33_OMSR8	(*( P00_OMSR8_type *) 0xf003c178u)	/* Port 33 Output Modification Set Register 8 */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;	/* Output Bit 0 */
		unsigned int P1             : 1;	/* Output Bit 1 */
		unsigned int P2             : 1;	/* Output Bit 2 */
		unsigned int P3             : 1;	/* Output Bit 3 */
		unsigned int P4             : 1;	/* Output Bit 4 */
		unsigned int P5             : 1;	/* Output Bit 5 */
		unsigned int P6             : 1;	/* Output Bit 6 */
		unsigned int P7             : 1;	/* Output Bit 7 */
		unsigned int P8             : 1;	/* Output Bit 8 */
		unsigned int P9             : 1;	/* Output Bit 9 */
		unsigned int P10            : 1;	/* Output Bit 10 */
		unsigned int P11            : 1;	/* Output Bit 11 */
		unsigned int P12            : 1;	/* Output Bit 12 */
		unsigned int P13            : 1;	/* Output Bit 13 */
		unsigned int P14            : 1;	/* Output Bit 14 */
		unsigned int P15            : 1;	/* Output Bit 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_OUT_type;
#define P00_OUT	(*( P00_OUT_type *) 0xf003a000u)	/* Port 00 Output Register */
#define P11_OUT	(*( P00_OUT_type *) 0xf003ab00u)	/* Port 11 Output Register */
#define P20_OUT	(*( P00_OUT_type *) 0xf003b400u)	/* Port 20 Output Register */
#define P33_OUT	(*( P00_OUT_type *) 0xf003c100u)	/* Port 33 Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int R0             : 1;	/* Reserved */
		unsigned int R1             : 1;	/* Reserved */
		unsigned int R2             : 1;	/* Reserved */
		unsigned int R3             : 1;	/* Reserved */
		unsigned int R4             : 1;	/* Reserved */
		unsigned int R5             : 1;	/* Reserved */
		unsigned int R6             : 1;	/* Reserved */
		unsigned int R7             : 1;	/* Reserved */
		unsigned int R8             : 1;	/* Reserved */
		unsigned int R9             : 1;	/* Reserved */
		unsigned int R10            : 1;	/* Reserved */
		unsigned int R11            : 1;	/* Reserved */
		unsigned int R12            : 1;	/* Reserved */
		unsigned int R13            : 1;	/* Reserved */
		unsigned int R14            : 1;	/* Reserved */
		unsigned int R15            : 1;	/* Reserved */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_PCSR_type;
#define P00_PCSR	(*( P00_PCSR_type *) 0xf003a064u)	/* Port 00 Pin Controller Select Register */
#define P20_PCSR	(*( P00_PCSR_type *) 0xf003b464u)	/* Port 20 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PDIS0          : 1;	/* Pin Function Decision Control for Pin 0 */
		unsigned int PDIS1          : 1;	/* Pin Function Decision Control for Pin 1 */
		unsigned int PDIS2          : 1;	/* Pin Function Decision Control for Pin 2 */
		unsigned int PDIS3          : 1;	/* Pin Function Decision Control for Pin 3 */
		unsigned int PDIS4          : 1;	/* Pin Function Decision Control for Pin 4 */
		unsigned int PDIS5          : 1;	/* Pin Function Decision Control for Pin 5 */
		unsigned int PDIS6          : 1;	/* Pin Function Decision Control for Pin 6 */
		unsigned int PDIS7          : 1;	/* Pin Function Decision Control for Pin 7 */
		unsigned int PDIS8          : 1;	/* Pin Function Decision Control for Pin 8 */
		unsigned int PDIS9          : 1;	/* Pin Function Decision Control for Pin 9 */
		unsigned int PDIS10         : 1;	/* Pin Function Decision Control for Pin 10 */
		unsigned int PDIS11         : 1;	/* Pin Function Decision Control for Pin 11 */
		unsigned int PDIS12         : 1;	/* Pin Function Decision Control for Pin 12 */
		unsigned int PDIS13         : 1;	/* Pin Function Decision Control for Pin 13 */
		unsigned int PDIS14         : 1;	/* Pin Function Decision Control for Pin 14 */
		unsigned int PDIS15         : 1;	/* Pin Function Decision Control for Pin 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P00_PDISC_type;
#define P00_PDISC	(*( P00_PDISC_type *) 0xf003a060u)	/* Port 00 Pin Function Decision Control Register */
#define P11_PDISC	(*( P00_PDISC_type *) 0xf003ab60u)	/* Port 11 Pin Function Decision Control Register */
#define P20_PDISC	(*( P00_PDISC_type *) 0xf003b460u)	/* Port 20 Pin Function Decision Control Register */
#define P33_PDISC	(*( P00_PDISC_type *) 0xf003c160u)	/* Port 33 Pin Function Decision Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 2;	/* Pad Driver Mode for Pin 0 */
		unsigned int PL0            : 2;	/* Pad Level Selection for Pin 0 */
		unsigned int PD1            : 2;	/* Pad Driver Mode for Pin 1 */
		unsigned int PL1            : 2;	/* Pad Level Selection for Pin 1 */
		unsigned int PD2            : 2;	/* Pad Driver Mode for Pin 2 */
		unsigned int PL2            : 2;	/* Pad Level Selection for Pin 2 */
		unsigned int PD3            : 2;	/* Pad Driver Mode for Pin 3 */
		unsigned int PL3            : 2;	/* Pad Level Selection for Pin 3 */
		unsigned int PD4            : 2;	/* Pad Driver Mode for Pin 4 */
		unsigned int PL4            : 2;	/* Pad Level Selection for Pin 4 */
		unsigned int PD5            : 2;	/* Pad Driver Mode for Pin 5 */
		unsigned int PL5            : 2;	/* Pad Level Selection for Pin 5 */
		unsigned int PD6            : 2;	/* Pad Driver Mode for Pin 6 */
		unsigned int PL6            : 2;	/* Pad Level Selection for Pin 6 */
		unsigned int PD7            : 2;	/* Pad Driver Mode for Pin 7 */
		unsigned int PL7            : 2;	/* Pad Level Selection for Pin 7 */
	} B;
	int I;
	unsigned int U;

} P00_PDR0_type;
#define P00_PDR0	(*( P00_PDR0_type *) 0xf003a040u)	/* Port 00 Pad Driver Mode Register 0 */
#define P02_PDR0	(*( P00_PDR0_type *) 0xf003a240u)	/* Port 02 Pad Driver Mode Register 0 */
#define P10_PDR0	(*( P00_PDR0_type *) 0xf003aa40u)	/* Port 10 Pad Driver Mode Register 0 */
#define P11_PDR0	(*( P00_PDR0_type *) 0xf003ab40u)	/* Port 11 Pad Driver Mode Register 0 */
#define P14_PDR0	(*( P00_PDR0_type *) 0xf003ae40u)	/* Port 14 Pad Driver Mode Register 0 */
#define P15_PDR0	(*( P00_PDR0_type *) 0xf003af40u)	/* Port 15 Pad Driver Mode Register 0 */
#define P20_PDR0	(*( P00_PDR0_type *) 0xf003b440u)	/* Port 20 Pad Driver Mode Register 0 */
#define P21_PDR0	(*( P00_PDR0_type *) 0xf003b540u)	/* Port 21 Pad Driver Mode Register 0 */
#define P22_PDR0	(*( P00_PDR0_type *) 0xf003b640u)	/* Port 22 Pad Driver Mode Register 0 */
#define P23_PDR0	(*( P00_PDR0_type *) 0xf003b740u)	/* Port 23 Pad Driver Mode Register 0 */
#define P32_PDR0	(*( P00_PDR0_type *) 0xf003c040u)	/* Port 32 Pad Driver Mode Register 0 */
#define P33_PDR0	(*( P00_PDR0_type *) 0xf003c140u)	/* Port 33 Pad Driver Mode Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 2;	/* Pad Driver Mode for Pin 8 */
		unsigned int PL8            : 2;	/* Pad Level Selection for Pin 8 */
		unsigned int PD9            : 2;	/* Pad Driver Mode for Pin 9 */
		unsigned int PL9            : 2;	/* Pad Level Selection for Pin 9 */
		unsigned int PD10           : 2;	/* Pad Driver Mode for Pin 10 */
		unsigned int PL10           : 2;	/* Pad Level Selection for Pin 10 */
		unsigned int PD11           : 2;	/* Pad Driver Mode for Pin 11 */
		unsigned int PL11           : 2;	/* Pad Level Selection for Pin 11 */
		unsigned int PD12           : 2;	/* Pad Driver Mode for Pin 12 */
		unsigned int PL12           : 2;	/* Pad Level Selection for Pin 12 */
		unsigned int PD13           : 2;	/* Pad Driver Mode for Pin 13 */
		unsigned int PL13           : 2;	/* Pad Level Selection for Pin 13 */
		unsigned int PD14           : 2;	/* Pad Driver Mode for Pin 14 */
		unsigned int PL14           : 2;	/* Pad Level Selection for Pin 14 */
		unsigned int PD15           : 2;	/* Pad Driver Mode for Pin 15 */
		unsigned int PL15           : 2;	/* Pad Level Selection for Pin 15 */
	} B;
	int I;
	unsigned int U;

} P00_PDR1_type;
#define P00_PDR1	(*( P00_PDR1_type *) 0xf003a044u)	/* Port 00 Pad Driver Mode Register 1 */
#define P11_PDR1	(*( P00_PDR1_type *) 0xf003ab44u)	/* Port 11 Pad Driver Mode Register 1 */
#define P20_PDR1	(*( P00_PDR1_type *) 0xf003b444u)	/* Port 20 Pad Driver Mode Register 1 */
#define P33_PDR1	(*( P00_PDR1_type *) 0xf003c144u)	/* Port 33 Pad Driver Mode Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P02_ACCEN1_type;
#define P02_ACCEN1	(*( P02_ACCEN1_type *) 0xf003a2f8u)	/* Port 02 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Emergency Stop Enable for Pin 0 */
		unsigned int EN1            : 1;	/* Emergency Stop Enable for Pin 1 */
		unsigned int EN2            : 1;	/* Emergency Stop Enable for Pin 2 */
		unsigned int EN3            : 1;	/* Emergency Stop Enable for Pin 3 */
		unsigned int EN4            : 1;	/* Emergency Stop Enable for Pin 4 */
		unsigned int EN5            : 1;	/* Emergency Stop Enable for Pin 5 */
		unsigned int EN6            : 1;	/* Emergency Stop Enable for Pin 6 */
		unsigned int EN7            : 1;	/* Emergency Stop Enable for Pin 7 */
		unsigned int EN8            : 1;	/* Emergency Stop Enable for Pin 8 */
		unsigned int EN9            : 1;	/* Emergency Stop Enable for Pin 9 */
		unsigned int EN10           : 1;	/* Emergency Stop Enable for Pin 10 */
		unsigned int EN11           : 1;	/* Emergency Stop Enable for Pin 11 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} P02_ESR_type;
#define P02_ESR	(*( P02_ESR_type *) 0xf003a250u)	/* Port 02 Emergency Stop Register */
#define P10_ESR	(*( P02_ESR_type *) 0xf003aa50u)	/* Port 10 Emergency Stop Register */
#define P14_ESR	(*( P02_ESR_type *) 0xf003ae50u)	/* Port 14 Emergency Stop Register */
#define P15_ESR	(*( P02_ESR_type *) 0xf003af50u)	/* Port 15 Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;	/* Input Bit 0 */
		/* const */ unsigned int P1             : 1;	/* Input Bit 1 */
		/* const */ unsigned int P2             : 1;	/* Input Bit 2 */
		/* const */ unsigned int P3             : 1;	/* Input Bit 3 */
		/* const */ unsigned int P4             : 1;	/* Input Bit 4 */
		/* const */ unsigned int P5             : 1;	/* Input Bit 5 */
		/* const */ unsigned int P6             : 1;	/* Input Bit 6 */
		/* const */ unsigned int P7             : 1;	/* Input Bit 7 */
		/* const */ unsigned int P8             : 1;	/* Input Bit 8 */
		/* const */ unsigned int P9             : 1;	/* Input Bit 9 */
		/* const */ unsigned int P10            : 1;	/* Input Bit 10 */
		/* const */ unsigned int P11            : 1;	/* Input Bit 11 */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} P02_IN_type;
#define P02_IN	(*( P02_IN_type *) 0xf003a224u)	/* Port 02 Input Register */
#define P10_IN	(*( P02_IN_type *) 0xf003aa24u)	/* Port 10 Input Register */
#define P14_IN	(*( P02_IN_type *) 0xf003ae24u)	/* Port 14 Input Register */
#define P15_IN	(*( P02_IN_type *) 0xf003af24u)	/* Port 15 Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int PCL4           : 1;	/* Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Clear Bit 7 */
		unsigned int PCL8           : 1;	/* Clear Bit 8 */
		unsigned int PCL9           : 1;	/* Clear Bit 9 */
		unsigned int PCL10          : 1;	/* Clear Bit 10 */
		unsigned int PCL11          : 1;	/* Clear Bit 11 */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} P02_OMCR_type;
#define P02_OMCR	(*( P02_OMCR_type *) 0xf003a294u)	/* Port 02 Output Modification Clear Register */
#define P10_OMCR	(*( P02_OMCR_type *) 0xf003aa94u)	/* Port 10 Output Modification Clear Register */
#define P14_OMCR	(*( P02_OMCR_type *) 0xf003ae94u)	/* Port 14 Output Modification Clear Register */
#define P15_OMCR	(*( P02_OMCR_type *) 0xf003af94u)	/* Port 15 Output Modification Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Set Bit 0 */
		unsigned int PS1            : 1;	/* Set Bit 1 */
		unsigned int PS2            : 1;	/* Set Bit 2 */
		unsigned int PS3            : 1;	/* Set Bit 3 */
		unsigned int PS4            : 1;	/* Set Bit 4 */
		unsigned int PS5            : 1;	/* Set Bit 5 */
		unsigned int PS6            : 1;	/* Set Bit 6 */
		unsigned int PS7            : 1;	/* Set Bit 7 */
		unsigned int PS8            : 1;	/* Set Bit 8 */
		unsigned int PS9            : 1;	/* Set Bit 9 */
		unsigned int PS10           : 1;	/* Set Bit 10 */
		unsigned int PS11           : 1;	/* Set Bit 11 */
		unsigned int                : 4;
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int PCL4           : 1;	/* Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Clear Bit 7 */
		unsigned int PCL8           : 1;	/* Clear Bit 8 */
		unsigned int PCL9           : 1;	/* Clear Bit 9 */
		unsigned int PCL10          : 1;	/* Clear Bit 10 */
		unsigned int PCL11          : 1;	/* Clear Bit 11 */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} P02_OMR_type;
#define P02_OMR	(*( P02_OMR_type *) 0xf003a204u)	/* Port 02 Output Modification Register */
#define P10_OMR	(*( P02_OMR_type *) 0xf003aa04u)	/* Port 10 Output Modification Register */
#define P14_OMR	(*( P02_OMR_type *) 0xf003ae04u)	/* Port 14 Output Modification Register */
#define P15_OMR	(*( P02_OMR_type *) 0xf003af04u)	/* Port 15 Output Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Set Bit 0 */
		unsigned int PS1            : 1;	/* Set Bit 1 */
		unsigned int PS2            : 1;	/* Set Bit 2 */
		unsigned int PS3            : 1;	/* Set Bit 3 */
		unsigned int PS4            : 1;	/* Set Bit 4 */
		unsigned int PS5            : 1;	/* Set Bit 5 */
		unsigned int PS6            : 1;	/* Set Bit 6 */
		unsigned int PS7            : 1;	/* Set Bit 7 */
		unsigned int PS8            : 1;	/* Set Bit 8 */
		unsigned int PS9            : 1;	/* Set Bit 9 */
		unsigned int PS10           : 1;	/* Set Bit 10 */
		unsigned int PS11           : 1;	/* Set Bit 11 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} P02_OMSR_type;
#define P02_OMSR	(*( P02_OMSR_type *) 0xf003a290u)	/* Port 02 Output Modification Set Register */
#define P10_OMSR	(*( P02_OMSR_type *) 0xf003aa90u)	/* Port 10 Output Modification Set Register */
#define P14_OMSR	(*( P02_OMSR_type *) 0xf003ae90u)	/* Port 14 Output Modification Set Register */
#define P15_OMSR	(*( P02_OMSR_type *) 0xf003af90u)	/* Port 15 Output Modification Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;	/* Output Bit 0 */
		unsigned int P1             : 1;	/* Output Bit 1 */
		unsigned int P2             : 1;	/* Output Bit 2 */
		unsigned int P3             : 1;	/* Output Bit 3 */
		unsigned int P4             : 1;	/* Output Bit 4 */
		unsigned int P5             : 1;	/* Output Bit 5 */
		unsigned int P6             : 1;	/* Output Bit 6 */
		unsigned int P7             : 1;	/* Output Bit 7 */
		unsigned int P8             : 1;	/* Output Bit 8 */
		unsigned int P9             : 1;	/* Output Bit 9 */
		unsigned int P10            : 1;	/* Output Bit 10 */
		unsigned int P11            : 1;	/* Output Bit 11 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} P02_OUT_type;
#define P02_OUT	(*( P02_OUT_type *) 0xf003a200u)	/* Port 02 Output Register */
#define P10_OUT	(*( P02_OUT_type *) 0xf003aa00u)	/* Port 10 Output Register */
#define P14_OUT	(*( P02_OUT_type *) 0xf003ae00u)	/* Port 14 Output Register */
#define P15_OUT	(*( P02_OUT_type *) 0xf003af00u)	/* Port 15 Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int R0             : 1;	/* Reserved */
		unsigned int R1             : 1;	/* Reserved */
		unsigned int R2             : 1;	/* Reserved */
		unsigned int R3             : 1;	/* Reserved */
		unsigned int R4             : 1;	/* Reserved */
		unsigned int R5             : 1;	/* Reserved */
		unsigned int R6             : 1;	/* Reserved */
		unsigned int R7             : 1;	/* Reserved */
		unsigned int R8             : 1;	/* Reserved */
		unsigned int R9             : 1;	/* Reserved */
		unsigned int R10            : 1;	/* Reserved */
		unsigned int R11            : 1;	/* Reserved */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} P02_PCSR_type;
#define P02_PCSR	(*( P02_PCSR_type *) 0xf003a264u)	/* Port 02 Pin Controller Select Register */
#define P10_PCSR	(*( P02_PCSR_type *) 0xf003aa64u)	/* Port 10 Pin Controller Select Register */
#define P14_PCSR	(*( P02_PCSR_type *) 0xf003ae64u)	/* Port 14 Pin Controller Select Register */
#define P15_PCSR	(*( P02_PCSR_type *) 0xf003af64u)	/* Port 15 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PDIS0          : 1;	/* Pin Function Decision Control for Pin 0 */
		unsigned int PDIS1          : 1;	/* Pin Function Decision Control for Pin 1 */
		unsigned int PDIS2          : 1;	/* Pin Function Decision Control for Pin 2 */
		unsigned int PDIS3          : 1;	/* Pin Function Decision Control for Pin 3 */
		unsigned int PDIS4          : 1;	/* Pin Function Decision Control for Pin 4 */
		unsigned int PDIS5          : 1;	/* Pin Function Decision Control for Pin 5 */
		unsigned int PDIS6          : 1;	/* Pin Function Decision Control for Pin 6 */
		unsigned int PDIS7          : 1;	/* Pin Function Decision Control for Pin 7 */
		unsigned int PDIS8          : 1;	/* Pin Function Decision Control for Pin 8 */
		unsigned int PDIS9          : 1;	/* Pin Function Decision Control for Pin 9 */
		unsigned int PDIS10         : 1;	/* Pin Function Decision Control for Pin 10 */
		unsigned int PDIS11         : 1;	/* Pin Function Decision Control for Pin 11 */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} P02_PDISC_type;
#define P02_PDISC	(*( P02_PDISC_type *) 0xf003a260u)	/* Port 02 Pin Function Decision Control Register */
#define P10_PDISC	(*( P02_PDISC_type *) 0xf003aa60u)	/* Port 10 Pin Function Decision Control Register */
#define P14_PDISC	(*( P02_PDISC_type *) 0xf003ae60u)	/* Port 14 Pin Function Decision Control Register */
#define P15_PDISC	(*( P02_PDISC_type *) 0xf003af60u)	/* Port 15 Pin Function Decision Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD8            : 2;	/* Pad Driver Mode for Pin 8 */
		unsigned int PL8            : 2;	/* Pad Level Selection for Pin 8 */
		unsigned int PD9            : 2;	/* Pad Driver Mode for Pin 9 */
		unsigned int PL9            : 2;	/* Pad Level Selection for Pin 9 */
		unsigned int PD10           : 2;	/* Pad Driver Mode for Pin 10 */
		unsigned int PL10           : 2;	/* Pad Level Selection for Pin 10 */
		unsigned int PD11           : 2;	/* Pad Driver Mode for Pin 11 */
		unsigned int PL11           : 2;	/* Pad Level Selection for Pin 11 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P02_PDR1_type;
#define P02_PDR1	(*( P02_PDR1_type *) 0xf003a244u)	/* Port 02 Pad Driver Mode Register 1 */
#define P10_PDR1	(*( P02_PDR1_type *) 0xf003aa44u)	/* Port 10 Pad Driver Mode Register 1 */
#define P14_PDR1	(*( P02_PDR1_type *) 0xf003ae44u)	/* Port 14 Pad Driver Mode Register 1 */
#define P15_PDR1	(*( P02_PDR1_type *) 0xf003af44u)	/* Port 15 Pad Driver Mode Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P10_ACCEN1_type;
#define P10_ACCEN1	(*( P10_ACCEN1_type *) 0xf003aaf8u)	/* Port 10 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P11_ACCEN1_type;
#define P11_ACCEN1	(*( P11_ACCEN1_type *) 0xf003abf8u)	/* Port 11 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SEL0           : 1;	/* Output Select for Pin 0 */
		unsigned int SEL1           : 1;	/* Output Select for Pin 1 */
		unsigned int SEL2           : 1;	/* Output Select for Pin 2 */
		unsigned int SEL3           : 1;	/* Output Select for Pin 3 */
		unsigned int SEL4           : 1;	/* Output Select for Pin 4 */
		unsigned int R5             : 1;	/* Reserved */
		unsigned int SEL6           : 1;	/* Output Select for Pin 6 */
		unsigned int R7             : 1;	/* Reserved */
		unsigned int R8             : 1;	/* Reserved */
		unsigned int R9             : 1;	/* Reserved */
		unsigned int R10            : 1;	/* Reserved */
		unsigned int R11            : 1;	/* Reserved */
		unsigned int R12            : 1;	/* Reserved */
		unsigned int R13            : 1;	/* Reserved */
		unsigned int R14            : 1;	/* Reserved */
		unsigned int R15            : 1;	/* Reserved */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P11_PCSR_type;
#define P11_PCSR	(*( P11_PCSR_type *) 0xf003ab64u)	/* Port 11 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P12_ACCEN1_type;
#define P12_ACCEN1	(*( P12_ACCEN1_type *) 0xf003acf8u)	/* Port 12 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Emergency Stop Enable for Pin 0 */
		unsigned int EN1            : 1;	/* Emergency Stop Enable for Pin 1 */
		unsigned int EN2            : 1;	/* Emergency Stop Enable for Pin 2 */
		unsigned int EN3            : 1;	/* Emergency Stop Enable for Pin 3 */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} P12_ESR_type;
#define P12_ESR	(*( P12_ESR_type *) 0xf003ac50u)	/* Port 12 Emergency Stop Register */
#define P34_ESR	(*( P12_ESR_type *) 0xf003c250u)	/* Port 34 Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;	/* Input Bit 0 */
		/* const */ unsigned int P1             : 1;	/* Input Bit 1 */
		/* const */ unsigned int P2             : 1;	/* Input Bit 2 */
		/* const */ unsigned int P3             : 1;	/* Input Bit 3 */
		/* const */ unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} P12_IN_type;
#define P12_IN	(*( P12_IN_type *) 0xf003ac24u)	/* Port 12 Input Register */
#define P34_IN	(*( P12_IN_type *) 0xf003c224u)	/* Port 34 Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} P12_OMCR_type;
#define P12_OMCR	(*( P12_OMCR_type *) 0xf003ac94u)	/* Port 12 Output Modification Clear Register */
#define P34_OMCR	(*( P12_OMCR_type *) 0xf003c294u)	/* Port 34 Output Modification Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Set Bit 0 */
		unsigned int PS1            : 1;	/* Set Bit 1 */
		unsigned int PS2            : 1;	/* Set Bit 2 */
		unsigned int PS3            : 1;	/* Set Bit 3 */
		unsigned int                : 12;
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} P12_OMR_type;
#define P12_OMR	(*( P12_OMR_type *) 0xf003ac04u)	/* Port 12 Output Modification Register */
#define P34_OMR	(*( P12_OMR_type *) 0xf003c204u)	/* Port 34 Output Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;	/* Output Bit 0 */
		unsigned int P1             : 1;	/* Output Bit 1 */
		unsigned int P2             : 1;	/* Output Bit 2 */
		unsigned int P3             : 1;	/* Output Bit 3 */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} P12_OUT_type;
#define P12_OUT	(*( P12_OUT_type *) 0xf003ac00u)	/* Port 12 Output Register */
#define P34_OUT	(*( P12_OUT_type *) 0xf003c200u)	/* Port 34 Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int R0             : 1;	/* Reserved */
		unsigned int R1             : 1;	/* Reserved */
		unsigned int R2             : 1;	/* Reserved */
		unsigned int R3             : 1;	/* Reserved */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} P12_PCSR_type;
#define P12_PCSR	(*( P12_PCSR_type *) 0xf003ac64u)	/* Port 12 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PDIS0          : 1;	/* Pin Function Decision Control for Pin 0 */
		unsigned int PDIS1          : 1;	/* Pin Function Decision Control for Pin 1 */
		unsigned int PDIS2          : 1;	/* Pin Function Decision Control for Pin 2 */
		unsigned int PDIS3          : 1;	/* Pin Function Decision Control for Pin 3 */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} P12_PDISC_type;
#define P12_PDISC	(*( P12_PDISC_type *) 0xf003ac60u)	/* Port 12 Pin Function Decision Control Register */
#define P34_PDISC	(*( P12_PDISC_type *) 0xf003c260u)	/* Port 34 Pin Function Decision Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 2;	/* Pad Driver Mode for Pin 0 */
		unsigned int PL0            : 2;	/* Pad Level Selection for Pin 0 */
		unsigned int PD1            : 2;	/* Pad Driver Mode for Pin 1 */
		unsigned int PL1            : 2;	/* Pad Level Selection for Pin 1 */
		unsigned int PD2            : 2;	/* Pad Driver Mode for Pin 2 */
		unsigned int PL2            : 2;	/* Pad Level Selection for Pin 2 */
		unsigned int PD3            : 2;	/* Pad Driver Mode for Pin 3 */
		unsigned int PL3            : 2;	/* Pad Level Selection for Pin 3 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P12_PDR0_type;
#define P12_PDR0	(*( P12_PDR0_type *) 0xf003ac40u)	/* Port 12 Pad Driver Mode Register 0 */
#define P34_PDR0	(*( P12_PDR0_type *) 0xf003c240u)	/* Port 34 Pad Driver Mode Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P14_ACCEN1_type;
#define P14_ACCEN1	(*( P14_ACCEN1_type *) 0xf003aef8u)	/* Port 14 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P15_ACCEN1_type;
#define P15_ACCEN1	(*( P15_ACCEN1_type *) 0xf003aff8u)	/* Port 15 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P20_ACCEN1_type;
#define P20_ACCEN1	(*( P20_ACCEN1_type *) 0xf003b4f8u)	/* Port 20 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P21_ACCEN1_type;
#define P21_ACCEN1	(*( P21_ACCEN1_type *) 0xf003b5f8u)	/* Port 21 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Emergency Stop Enable for Pin 0 */
		unsigned int EN1            : 1;	/* Emergency Stop Enable for Pin 1 */
		unsigned int                : 1;
		unsigned int EN3            : 1;	/* Emergency Stop Enable for Pin 3 */
		unsigned int EN4            : 1;	/* Emergency Stop Enable for Pin 4 */
		unsigned int EN5            : 1;	/* Emergency Stop Enable for Pin 5 */
		unsigned int EN6            : 1;	/* Emergency Stop Enable for Pin 6 */
		unsigned int EN7            : 1;	/* Emergency Stop Enable for Pin 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P21_ESR_type;
#define P21_ESR	(*( P21_ESR_type *) 0xf003b550u)	/* Port 21 Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;	/* Input Bit 0 */
		/* const */ unsigned int P1             : 1;	/* Input Bit 1 */
		/* const */ unsigned int P2             : 1;	/* Input Bit 2 */
		/* const */ unsigned int P3             : 1;	/* Input Bit 3 */
		/* const */ unsigned int P4             : 1;	/* Input Bit 4 */
		/* const */ unsigned int P5             : 1;	/* Input Bit 5 */
		/* const */ unsigned int P6             : 1;	/* Input Bit 6 */
		/* const */ unsigned int P7             : 1;	/* Input Bit 7 */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P21_IN_type;
#define P21_IN	(*( P21_IN_type *) 0xf003b524u)	/* Port 21 Input Register */
#define P22_IN	(*( P21_IN_type *) 0xf003b624u)	/* Port 22 Input Register */
#define P23_IN	(*( P21_IN_type *) 0xf003b724u)	/* Port 23 Input Register */
#define P32_IN	(*( P21_IN_type *) 0xf003c024u)	/* Port 32 Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 7;
		unsigned int PS             : 1;	/* Pad Supply Selection */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P21_LPCR2_type;
#define P21_LPCR2	(*( P21_LPCR2_type *) 0xf003b5a8u)	/* Port 21 LVDS Pad Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int PCL4           : 1;	/* Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Clear Bit 7 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} P21_OMCR_type;
#define P21_OMCR	(*( P21_OMCR_type *) 0xf003b594u)	/* Port 21 Output Modification Clear Register */
#define P22_OMCR	(*( P21_OMCR_type *) 0xf003b694u)	/* Port 22 Output Modification Clear Register */
#define P23_OMCR	(*( P21_OMCR_type *) 0xf003b794u)	/* Port 23 Output Modification Clear Register */
#define P32_OMCR	(*( P21_OMCR_type *) 0xf003c094u)	/* Port 32 Output Modification Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Set Bit 0 */
		unsigned int PS1            : 1;	/* Set Bit 1 */
		unsigned int PS2            : 1;	/* Set Bit 2 */
		unsigned int PS3            : 1;	/* Set Bit 3 */
		unsigned int PS4            : 1;	/* Set Bit 4 */
		unsigned int PS5            : 1;	/* Set Bit 5 */
		unsigned int PS6            : 1;	/* Set Bit 6 */
		unsigned int PS7            : 1;	/* Set Bit 7 */
		unsigned int                : 8;
		unsigned int PCL0           : 1;	/* Clear Bit 0 */
		unsigned int PCL1           : 1;	/* Clear Bit 1 */
		unsigned int PCL2           : 1;	/* Clear Bit 2 */
		unsigned int PCL3           : 1;	/* Clear Bit 3 */
		unsigned int PCL4           : 1;	/* Clear Bit 4 */
		unsigned int PCL5           : 1;	/* Clear Bit 5 */
		unsigned int PCL6           : 1;	/* Clear Bit 6 */
		unsigned int PCL7           : 1;	/* Clear Bit 7 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} P21_OMR_type;
#define P21_OMR	(*( P21_OMR_type *) 0xf003b504u)	/* Port 21 Output Modification Register */
#define P22_OMR	(*( P21_OMR_type *) 0xf003b604u)	/* Port 22 Output Modification Register */
#define P23_OMR	(*( P21_OMR_type *) 0xf003b704u)	/* Port 23 Output Modification Register */
#define P32_OMR	(*( P21_OMR_type *) 0xf003c004u)	/* Port 32 Output Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* Set Bit 0 */
		unsigned int PS1            : 1;	/* Set Bit 1 */
		unsigned int PS2            : 1;	/* Set Bit 2 */
		unsigned int PS3            : 1;	/* Set Bit 3 */
		unsigned int PS4            : 1;	/* Set Bit 4 */
		unsigned int PS5            : 1;	/* Set Bit 5 */
		unsigned int PS6            : 1;	/* Set Bit 6 */
		unsigned int PS7            : 1;	/* Set Bit 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P21_OMSR_type;
#define P21_OMSR	(*( P21_OMSR_type *) 0xf003b590u)	/* Port 21 Output Modification Set Register */
#define P22_OMSR	(*( P21_OMSR_type *) 0xf003b690u)	/* Port 22 Output Modification Set Register */
#define P23_OMSR	(*( P21_OMSR_type *) 0xf003b790u)	/* Port 23 Output Modification Set Register */
#define P32_OMSR	(*( P21_OMSR_type *) 0xf003c090u)	/* Port 32 Output Modification Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;	/* Output Bit 0 */
		unsigned int P1             : 1;	/* Output Bit 1 */
		unsigned int P2             : 1;	/* Output Bit 2 */
		unsigned int P3             : 1;	/* Output Bit 3 */
		unsigned int P4             : 1;	/* Output Bit 4 */
		unsigned int P5             : 1;	/* Output Bit 5 */
		unsigned int P6             : 1;	/* Output Bit 6 */
		unsigned int P7             : 1;	/* Output Bit 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P21_OUT_type;
#define P21_OUT	(*( P21_OUT_type *) 0xf003b500u)	/* Port 21 Output Register */
#define P22_OUT	(*( P21_OUT_type *) 0xf003b600u)	/* Port 22 Output Register */
#define P23_OUT	(*( P21_OUT_type *) 0xf003b700u)	/* Port 23 Output Register */
#define P32_OUT	(*( P21_OUT_type *) 0xf003c000u)	/* Port 32 Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int R0             : 1;	/* Reserved */
		unsigned int R1             : 1;	/* Reserved */
		unsigned int R2             : 1;	/* Reserved */
		unsigned int R3             : 1;	/* Reserved */
		unsigned int R4             : 1;	/* Reserved */
		unsigned int R5             : 1;	/* Reserved */
		unsigned int R6             : 1;	/* Reserved */
		unsigned int R7             : 1;	/* Reserved */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P21_PCSR_type;
#define P21_PCSR	(*( P21_PCSR_type *) 0xf003b564u)	/* Port 21 Pin Controller Select Register */
#define P22_PCSR	(*( P21_PCSR_type *) 0xf003b664u)	/* Port 22 Pin Controller Select Register */
#define P23_PCSR	(*( P21_PCSR_type *) 0xf003b764u)	/* Port 23 Pin Controller Select Register */
#define P32_PCSR	(*( P21_PCSR_type *) 0xf003c064u)	/* Port 32 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PDIS0          : 1;	/* Pin Function Decision Control for Pin 0 */
		unsigned int PDIS1          : 1;	/* Pin Function Decision Control for Pin 1 */
		unsigned int PDIS2          : 1;	/* Pin Function Decision Control for Pin 2 */
		unsigned int PDIS3          : 1;	/* Pin Function Decision Control for Pin 3 */
		unsigned int PDIS4          : 1;	/* Pin Function Decision Control for Pin 4 */
		unsigned int PDIS5          : 1;	/* Pin Function Decision Control for Pin 5 */
		unsigned int PDIS6          : 1;	/* Pin Function Decision Control for Pin 6 */
		unsigned int PDIS7          : 1;	/* Pin Function Decision Control for Pin 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P21_PDISC_type;
#define P21_PDISC	(*( P21_PDISC_type *) 0xf003b560u)	/* Port 21 Pin Function Decision Control Register */
#define P22_PDISC	(*( P21_PDISC_type *) 0xf003b660u)	/* Port 22 Pin Function Decision Control Register */
#define P23_PDISC	(*( P21_PDISC_type *) 0xf003b760u)	/* Port 23 Pin Function Decision Control Register */
#define P32_PDISC	(*( P21_PDISC_type *) 0xf003c060u)	/* Port 32 Pin Function Decision Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P22_ACCEN1_type;
#define P22_ACCEN1	(*( P22_ACCEN1_type *) 0xf003b6f8u)	/* Port 22 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Emergency Stop Enable for Pin 0 */
		unsigned int EN1            : 1;	/* Emergency Stop Enable for Pin 1 */
		unsigned int EN2            : 1;	/* Emergency Stop Enable for Pin 2 */
		unsigned int EN3            : 1;	/* Emergency Stop Enable for Pin 3 */
		unsigned int EN4            : 1;	/* Emergency Stop Enable for Pin 4 */
		unsigned int EN5            : 1;	/* Emergency Stop Enable for Pin 5 */
		unsigned int EN6            : 1;	/* Emergency Stop Enable for Pin 6 */
		unsigned int EN7            : 1;	/* Emergency Stop Enable for Pin 7 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} P22_ESR_type;
#define P22_ESR	(*( P22_ESR_type *) 0xf003b650u)	/* Port 22 Emergency Stop Register */
#define P23_ESR	(*( P22_ESR_type *) 0xf003b750u)	/* Port 23 Emergency Stop Register */
#define P32_ESR	(*( P22_ESR_type *) 0xf003c050u)	/* Port 32 Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P23_ACCEN1_type;
#define P23_ACCEN1	(*( P23_ACCEN1_type *) 0xf003b7f8u)	/* Port 23 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P32_ACCEN1_type;
#define P32_ACCEN1	(*( P32_ACCEN1_type *) 0xf003c0f8u)	/* Port 32 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 3;
		unsigned int PC4            : 5;	/* Port Control for Port 32 Pin 4 */
		unsigned int                : 3;
		unsigned int PC5            : 5;	/* Port Control for Port 32 Pin 5 */
		unsigned int                : 3;
		unsigned int PC6            : 5;	/* Port Control for Port 32 Pin 6 */
		unsigned int                : 3;
		unsigned int PC7            : 5;	/* Port Control for Port 32 Pin 7 */
	} B;
	int I;
	unsigned int U;

} P32_IOCR4_type;
#define P32_IOCR4	(*( P32_IOCR4_type *) 0xf003c014u)	/* Port 32 Input/Output Control Register 4 */
#define P33_IOCR4	(*( P32_IOCR4_type *) 0xf003c114u)	/* Port 33 Input/Output Control Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P33_ACCEN1_type;
#define P33_ACCEN1	(*( P33_ACCEN1_type *) 0xf003c1f8u)	/* Port 33 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Emergency Stop Enable for Pin 0 */
		unsigned int EN1            : 1;	/* Emergency Stop Enable for Pin 1 */
		unsigned int EN2            : 1;	/* Emergency Stop Enable for Pin 2 */
		unsigned int EN3            : 1;	/* Emergency Stop Enable for Pin 3 */
		unsigned int EN4            : 1;	/* Emergency Stop Enable for Pin 4 */
		unsigned int EN5            : 1;	/* Emergency Stop Enable for Pin 5 */
		unsigned int EN6            : 1;	/* Emergency Stop Enable for Pin 6 */
		unsigned int EN7            : 1;	/* Emergency Stop Enable for Pin 7 */
		unsigned int                : 1;
		unsigned int EN9            : 1;	/* Emergency Stop Enable for Pin 9 */
		unsigned int EN10           : 1;	/* Emergency Stop Enable for Pin 10 */
		unsigned int EN11           : 1;	/* Emergency Stop Enable for Pin 11 */
		unsigned int EN12           : 1;	/* Emergency Stop Enable for Pin 12 */
		unsigned int EN13           : 1;	/* Emergency Stop Enable for Pin 13 */
		unsigned int EN14           : 1;	/* Emergency Stop Enable for Pin 14 */
		unsigned int EN15           : 1;	/* Emergency Stop Enable for Pin 15 */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} P33_ESR_type;
#define P33_ESR	(*( P33_ESR_type *) 0xf003c150u)	/* Port 33 Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SEL0           : 1;	/* Output Select for Pin 0 */
		unsigned int SEL1           : 1;	/* Output Select for Pin 1 */
		unsigned int SEL2           : 1;	/* Output Select for Pin 2 */
		unsigned int SEL3           : 1;	/* Output Select for Pin 3 */
		unsigned int SEL4           : 1;	/* Output Select for Pin 4 */
		unsigned int SEL5           : 1;	/* Output Select for Pin 5 */
		unsigned int SEL6           : 1;	/* Output Select for Pin 6 */
		unsigned int SEL7           : 1;	/* Output Select for Pin 7 */
		unsigned int SEL8           : 1;	/* Output Select for Pin 8 */
		unsigned int SEL9           : 1;	/* Output Select for Pin 9 */
		unsigned int SEL10          : 1;	/* Output Select for Pin 10 */
		unsigned int SEL11          : 1;	/* Output Select for Pin 11 */
		unsigned int SEL12          : 1;	/* Output Select for Pin 12 */
		unsigned int SEL13          : 1;	/* Output Select for Pin 13 */
		unsigned int SEL14          : 1;	/* Output Select for Pin 14 */
		unsigned int SEL15          : 1;	/* Output Select for Pin 15 */
		unsigned int                : 15;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} P33_PCSR_type;
#define P33_PCSR	(*( P33_PCSR_type *) 0xf003c164u)	/* Port 33 Pin Controller Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} P34_ACCEN1_type;
#define P34_ACCEN1	(*( P34_ACCEN1_type *) 0xf003c2f8u)	/* Port 34 Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int R0             : 1;	/* Reserved */
		unsigned int SEL1           : 1;	/* Output Select for Pin 1 */
		unsigned int R2             : 1;	/* Reserved */
		unsigned int R3             : 1;	/* Reserved */
		unsigned int                : 27;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} P34_PCSR_type;
#define P34_PCSR	(*( P34_PCSR_type *) 0xf003c264u)	/* Port 34 Pin Controller Select Register */


/* QSPI */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} QSPI0_ACCEN0_type;
#define QSPI0_ACCEN0	(*( QSPI0_ACCEN0_type *) 0xf0001cfcu)	/* Access Enable Register 0 */
#define QSPI1_ACCEN0	(*( QSPI0_ACCEN0_type *) 0xf0001dfcu)	/* Access Enable Register 0 */
#define QSPI2_ACCEN0	(*( QSPI0_ACCEN0_type *) 0xf0001efcu)	/* Access Enable Register 0 */
#define QSPI3_ACCEN0	(*( QSPI0_ACCEN0_type *) 0xf0001ffcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} QSPI0_ACCEN1_type;
#define QSPI0_ACCEN1	(*( QSPI0_ACCEN1_type *) 0xf0001cf8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int LAST           : 1;	/* Last Word in a Frame */
		/* const */ unsigned int IPRE           : 3;	/* Prescaler for the Idle Delay */
		/* const */ unsigned int IDLE           : 3;	/* Idle Delay Length */
		/* const */ unsigned int LPRE           : 3;	/* Prescaler for the Leading Delay */
		/* const */ unsigned int LEAD           : 3;	/* Leading Delay Length */
		/* const */ unsigned int TPRE           : 3;	/* Prescaler for the Trailing Delay */
		/* const */ unsigned int TRAIL          : 3;	/* Trailing Delay Length */
		/* const */ unsigned int PARTYP         : 1;	/* Parity Type */
		/* const */ unsigned int UINT           : 1;	/* User Interrupt at the PT1 Event in the Subsequent Frames */
		/* const */ unsigned int MSB            : 1;	/* Shift MSB or LSB First */
		/* const */ unsigned int BYTE           : 1;	/* Byte */
		/* const */ unsigned int DL             : 5;	/* Data Length */
		/* const */ unsigned int CS             : 4;	/* Channel Select */
	} B;
	int I;
	unsigned int U;

} QSPI0_BACON_type;
#define QSPI0_BACON	(*( QSPI0_BACON_type *) 0xf0001c18u)	/* Basic Configuration Register */
#define QSPI1_BACON	(*( QSPI0_BACON_type *) 0xf0001d18u)	/* Basic Configuration Register */
#define QSPI2_BACON	(*( QSPI0_BACON_type *) 0xf0001e18u)	/* Basic Configuration Register */
#define QSPI3_BACON	(*( QSPI0_BACON_type *) 0xf0001f18u)	/* Basic Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int E              : 32;	/* Entry Point to the TxFIFO */
	} B;
	int I;
	unsigned int U;

} QSPI0_BACONENTRY_type;
#define QSPI0_BACONENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001c60u)	/* BACON_ENTRY Register */
#define QSPI0_DATAENTRY0	(*( QSPI0_BACONENTRY_type *) 0xf0001c64u)	/* DATA_ENTRY Register 0 */
#define QSPI0_DATAENTRY1	(*( QSPI0_BACONENTRY_type *) 0xf0001c68u)	/* DATA_ENTRY Register 1 */
#define QSPI0_DATAENTRY2	(*( QSPI0_BACONENTRY_type *) 0xf0001c6cu)	/* DATA_ENTRY Register 2 */
#define QSPI0_DATAENTRY3	(*( QSPI0_BACONENTRY_type *) 0xf0001c70u)	/* DATA_ENTRY Register 3 */
#define QSPI0_DATAENTRY4	(*( QSPI0_BACONENTRY_type *) 0xf0001c74u)	/* DATA_ENTRY Register 4 */
#define QSPI0_DATAENTRY5	(*( QSPI0_BACONENTRY_type *) 0xf0001c78u)	/* DATA_ENTRY Register 5 */
#define QSPI0_DATAENTRY6	(*( QSPI0_BACONENTRY_type *) 0xf0001c7cu)	/* DATA_ENTRY Register 6 */
#define QSPI0_DATAENTRY7	(*( QSPI0_BACONENTRY_type *) 0xf0001c80u)	/* DATA_ENTRY Register 7 */
#define QSPI0_MIXENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001c5cu)	/* MIX_ENTRY Register */
#define QSPI1_BACONENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001d60u)	/* BACON_ENTRY Register */
#define QSPI1_DATAENTRY0	(*( QSPI0_BACONENTRY_type *) 0xf0001d64u)	/* DATA_ENTRY Register 0 */
#define QSPI1_DATAENTRY1	(*( QSPI0_BACONENTRY_type *) 0xf0001d68u)	/* DATA_ENTRY Register 1 */
#define QSPI1_DATAENTRY2	(*( QSPI0_BACONENTRY_type *) 0xf0001d6cu)	/* DATA_ENTRY Register 2 */
#define QSPI1_DATAENTRY3	(*( QSPI0_BACONENTRY_type *) 0xf0001d70u)	/* DATA_ENTRY Register 3 */
#define QSPI1_DATAENTRY4	(*( QSPI0_BACONENTRY_type *) 0xf0001d74u)	/* DATA_ENTRY Register 4 */
#define QSPI1_DATAENTRY5	(*( QSPI0_BACONENTRY_type *) 0xf0001d78u)	/* DATA_ENTRY Register 5 */
#define QSPI1_DATAENTRY6	(*( QSPI0_BACONENTRY_type *) 0xf0001d7cu)	/* DATA_ENTRY Register 6 */
#define QSPI1_DATAENTRY7	(*( QSPI0_BACONENTRY_type *) 0xf0001d80u)	/* DATA_ENTRY Register 7 */
#define QSPI1_MIXENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001d5cu)	/* MIX_ENTRY Register */
#define QSPI2_BACONENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001e60u)	/* BACON_ENTRY Register */
#define QSPI2_DATAENTRY0	(*( QSPI0_BACONENTRY_type *) 0xf0001e64u)	/* DATA_ENTRY Register 0 */
#define QSPI2_DATAENTRY1	(*( QSPI0_BACONENTRY_type *) 0xf0001e68u)	/* DATA_ENTRY Register 1 */
#define QSPI2_DATAENTRY2	(*( QSPI0_BACONENTRY_type *) 0xf0001e6cu)	/* DATA_ENTRY Register 2 */
#define QSPI2_DATAENTRY3	(*( QSPI0_BACONENTRY_type *) 0xf0001e70u)	/* DATA_ENTRY Register 3 */
#define QSPI2_DATAENTRY4	(*( QSPI0_BACONENTRY_type *) 0xf0001e74u)	/* DATA_ENTRY Register 4 */
#define QSPI2_DATAENTRY5	(*( QSPI0_BACONENTRY_type *) 0xf0001e78u)	/* DATA_ENTRY Register 5 */
#define QSPI2_DATAENTRY6	(*( QSPI0_BACONENTRY_type *) 0xf0001e7cu)	/* DATA_ENTRY Register 6 */
#define QSPI2_DATAENTRY7	(*( QSPI0_BACONENTRY_type *) 0xf0001e80u)	/* DATA_ENTRY Register 7 */
#define QSPI2_MIXENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001e5cu)	/* MIX_ENTRY Register */
#define QSPI3_BACONENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001f60u)	/* BACON_ENTRY Register */
#define QSPI3_DATAENTRY0	(*( QSPI0_BACONENTRY_type *) 0xf0001f64u)	/* DATA_ENTRY Register 0 */
#define QSPI3_DATAENTRY1	(*( QSPI0_BACONENTRY_type *) 0xf0001f68u)	/* DATA_ENTRY Register 1 */
#define QSPI3_DATAENTRY2	(*( QSPI0_BACONENTRY_type *) 0xf0001f6cu)	/* DATA_ENTRY Register 2 */
#define QSPI3_DATAENTRY3	(*( QSPI0_BACONENTRY_type *) 0xf0001f70u)	/* DATA_ENTRY Register 3 */
#define QSPI3_DATAENTRY4	(*( QSPI0_BACONENTRY_type *) 0xf0001f74u)	/* DATA_ENTRY Register 4 */
#define QSPI3_DATAENTRY5	(*( QSPI0_BACONENTRY_type *) 0xf0001f78u)	/* DATA_ENTRY Register 5 */
#define QSPI3_DATAENTRY6	(*( QSPI0_BACONENTRY_type *) 0xf0001f7cu)	/* DATA_ENTRY Register 6 */
#define QSPI3_DATAENTRY7	(*( QSPI0_BACONENTRY_type *) 0xf0001f80u)	/* DATA_ENTRY Register 7 */
#define QSPI3_MIXENTRY	(*( QSPI0_BACONENTRY_type *) 0xf0001f5cu)	/* MIX_ENTRY Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} QSPI0_CLC_type;
#define QSPI0_CLC	(*( QSPI0_CLC_type *) 0xf0001c00u)	/* Clock Control Register */
#define QSPI1_CLC	(*( QSPI0_CLC_type *) 0xf0001d00u)	/* Clock Control Register */
#define QSPI2_CLC	(*( QSPI0_CLC_type *) 0xf0001e00u)	/* Clock Control Register */
#define QSPI3_CLC	(*( QSPI0_CLC_type *) 0xf0001f00u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int Q              : 6;	/* Time Quantum */
		unsigned int A              : 2;	/* Bit Segment 1 */
		unsigned int B              : 2;	/* Bit Segment 2 */
		unsigned int C              : 2;	/* Bit Segment 3 */
		unsigned int CPH            : 1;	/* Clock Phase */
		unsigned int CPOL           : 1;	/* Clock Polarity */
		unsigned int PAREN          : 1;	/* Enable Parity Check */
		unsigned int                : 15;
		unsigned int BE             : 2;	/* Permutate bytes to / from Big Endian */
	} B;
	int I;
	unsigned int U;

} QSPI0_ECON0_type;
#define QSPI0_ECON0	(*( QSPI0_ECON0_type *) 0xf0001c20u)	/* Configuration Extension 0 */
#define QSPI0_ECON1	(*( QSPI0_ECON0_type *) 0xf0001c24u)	/* Configuration Extension 1 */
#define QSPI0_ECON2	(*( QSPI0_ECON0_type *) 0xf0001c28u)	/* Configuration Extension 2 */
#define QSPI0_ECON3	(*( QSPI0_ECON0_type *) 0xf0001c2cu)	/* Configuration Extension 3 */
#define QSPI0_ECON4	(*( QSPI0_ECON0_type *) 0xf0001c30u)	/* Configuration Extension 4 */
#define QSPI0_ECON5	(*( QSPI0_ECON0_type *) 0xf0001c34u)	/* Configuration Extension 5 */
#define QSPI0_ECON6	(*( QSPI0_ECON0_type *) 0xf0001c38u)	/* Configuration Extension 6 */
#define QSPI0_ECON7	(*( QSPI0_ECON0_type *) 0xf0001c3cu)	/* Configuration Extension 7 */
#define QSPI1_ECON0	(*( QSPI0_ECON0_type *) 0xf0001d20u)	/* Configuration Extension 0 */
#define QSPI1_ECON1	(*( QSPI0_ECON0_type *) 0xf0001d24u)	/* Configuration Extension 1 */
#define QSPI1_ECON2	(*( QSPI0_ECON0_type *) 0xf0001d28u)	/* Configuration Extension 2 */
#define QSPI1_ECON3	(*( QSPI0_ECON0_type *) 0xf0001d2cu)	/* Configuration Extension 3 */
#define QSPI1_ECON4	(*( QSPI0_ECON0_type *) 0xf0001d30u)	/* Configuration Extension 4 */
#define QSPI1_ECON5	(*( QSPI0_ECON0_type *) 0xf0001d34u)	/* Configuration Extension 5 */
#define QSPI1_ECON6	(*( QSPI0_ECON0_type *) 0xf0001d38u)	/* Configuration Extension 6 */
#define QSPI1_ECON7	(*( QSPI0_ECON0_type *) 0xf0001d3cu)	/* Configuration Extension 7 */
#define QSPI2_ECON0	(*( QSPI0_ECON0_type *) 0xf0001e20u)	/* Configuration Extension 0 */
#define QSPI2_ECON1	(*( QSPI0_ECON0_type *) 0xf0001e24u)	/* Configuration Extension 1 */
#define QSPI2_ECON2	(*( QSPI0_ECON0_type *) 0xf0001e28u)	/* Configuration Extension 2 */
#define QSPI2_ECON3	(*( QSPI0_ECON0_type *) 0xf0001e2cu)	/* Configuration Extension 3 */
#define QSPI2_ECON4	(*( QSPI0_ECON0_type *) 0xf0001e30u)	/* Configuration Extension 4 */
#define QSPI2_ECON5	(*( QSPI0_ECON0_type *) 0xf0001e34u)	/* Configuration Extension 5 */
#define QSPI2_ECON6	(*( QSPI0_ECON0_type *) 0xf0001e38u)	/* Configuration Extension 6 */
#define QSPI2_ECON7	(*( QSPI0_ECON0_type *) 0xf0001e3cu)	/* Configuration Extension 7 */
#define QSPI3_ECON0	(*( QSPI0_ECON0_type *) 0xf0001f20u)	/* Configuration Extension 0 */
#define QSPI3_ECON1	(*( QSPI0_ECON0_type *) 0xf0001f24u)	/* Configuration Extension 1 */
#define QSPI3_ECON2	(*( QSPI0_ECON0_type *) 0xf0001f28u)	/* Configuration Extension 2 */
#define QSPI3_ECON3	(*( QSPI0_ECON0_type *) 0xf0001f2cu)	/* Configuration Extension 3 */
#define QSPI3_ECON4	(*( QSPI0_ECON0_type *) 0xf0001f30u)	/* Configuration Extension 4 */
#define QSPI3_ECON5	(*( QSPI0_ECON0_type *) 0xf0001f34u)	/* Configuration Extension 5 */
#define QSPI3_ECON6	(*( QSPI0_ECON0_type *) 0xf0001f38u)	/* Configuration Extension 6 */
#define QSPI3_ECON7	(*( QSPI0_ECON0_type *) 0xf0001f3cu)	/* Configuration Extension 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRORCLEARS    : 9;	/* Write Only Bits for Clearing the Error Flags */
		unsigned int TXC            : 1;	/* Transmit Event Flag Clear */
		unsigned int RXC            : 1;	/* Receive Event Flag Clear */
		unsigned int PT1C           : 1;	/* PT1 Event Flag Clear */
		unsigned int PT2C           : 1;	/* PT2 Event Flag Clear */
		unsigned int                : 2;
		unsigned int USRC           : 1;	/* User Event Flag Clear */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} QSPI0_FLAGSCLEAR_type;
#define QSPI0_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xf0001c54u)	/* Flags Clear Register */
#define QSPI1_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xf0001d54u)	/* Flags Clear Register */
#define QSPI2_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xf0001e54u)	/* Flags Clear Register */
#define QSPI3_FLAGSCLEAR	(*( QSPI0_FLAGSCLEAR_type *) 0xf0001f54u)	/* Flags Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TQ             : 8;	/* Global Time Quantum Length */
		unsigned int                : 1;
		unsigned int SI             : 1;	/* Status Injection */
		unsigned int EXPECT         : 4;	/* Time-Out Value for the Expect Phase */
		unsigned int LB             : 1;	/* Loop-Back Control */
		unsigned int DEL0           : 1;	/* Delayed Mode for SLSO0 */
		unsigned int STROBE         : 5;	/* Strobe Delay for SLSO0 in Delayed Mode */
		unsigned int SRF            : 1;	/* Stop on RxFIFO Full */
		unsigned int STIP           : 1;	/* Slave Transmit Idle State Polarity */
		unsigned int                : 1;
		unsigned int EN             : 1;	/* Enable Bit */
		unsigned int MS             : 2;	/* Master Slave Mode */
		unsigned int AREN           : 1;	/* Automatic Reset Enable */
		unsigned int                : 1;
		unsigned int CLKSEL         : 1;	/* Clock Select */
		unsigned int RESETS         : 2;	/* Bits for resetting sub-modules per software */
	} B;
	int I;
	unsigned int U;

} QSPI0_GLOBALCON_type;
#define QSPI0_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xf0001c10u)	/* Global Configuration Register */
#define QSPI1_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xf0001d10u)	/* Global Configuration Register */
#define QSPI2_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xf0001e10u)	/* Global Configuration Register */
#define QSPI3_GLOBALCON	(*( QSPI0_GLOBALCON_type *) 0xf0001f10u)	/* Global Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRORENS       : 9;	/* Error Enable Bits */
		unsigned int TXEN           : 1;	/* Tx Interrupt Event Enable */
		unsigned int RXEN           : 1;	/* RX Interrupt Event Enable */
		unsigned int PT1EN          : 1;	/* Interrupt on PT1 Event Enable */
		unsigned int PT2EN          : 1;	/* Interrupt on PT2 Event Enable */
		unsigned int                : 2;
		unsigned int USREN          : 1;	/* Interrupt on USR Event Enable */
		unsigned int TXFIFOINT      : 2;	/* Transmit FIFO Interrupt Threshold */
		unsigned int RXFIFOINT      : 2;	/* Receive FIFO Interrupt Threshold */
		unsigned int PT1            : 3;	/* Phase Transition Event 1 */
		unsigned int PT2            : 3;	/* Phase Transition Event 2 */
		unsigned int TXFM           : 2;	/* TXFIFO Mode */
		unsigned int RXFM           : 2;	/* RXFIFO Mode */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} QSPI0_GLOBALCON1_type;
#define QSPI0_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xf0001c14u)	/* Global Configuration Register 1 */
#define QSPI1_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xf0001d14u)	/* Global Configuration Register 1 */
#define QSPI2_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xf0001e14u)	/* Global Configuration Register 1 */
#define QSPI3_GLOBALCON1	(*( QSPI0_GLOBALCON1_type *) 0xf0001f14u)	/* Global Configuration Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} QSPI0_ID_type;
#define QSPI0_ID	(*( QSPI0_ID_type *) 0xf0001c08u)	/* Module Identification Register */
#define QSPI1_ID	(*( QSPI0_ID_type *) 0xf0001d08u)	/* Module Identification Register */
#define QSPI2_ID	(*( QSPI0_ID_type *) 0xf0001e08u)	/* Module Identification Register */
#define QSPI3_ID	(*( QSPI0_ID_type *) 0xf0001f08u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} QSPI0_KRST0_type;
#define QSPI0_KRST0	(*( QSPI0_KRST0_type *) 0xf0001cf4u)	/* Kernel Reset Register 0 */
#define QSPI1_KRST0	(*( QSPI0_KRST0_type *) 0xf0001df4u)	/* Kernel Reset Register 0 */
#define QSPI2_KRST0	(*( QSPI0_KRST0_type *) 0xf0001ef4u)	/* Kernel Reset Register 0 */
#define QSPI3_KRST0	(*( QSPI0_KRST0_type *) 0xf0001ff4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} QSPI0_KRST1_type;
#define QSPI0_KRST1	(*( QSPI0_KRST1_type *) 0xf0001cf0u)	/* Kernel Reset Register 1 */
#define QSPI1_KRST1	(*( QSPI0_KRST1_type *) 0xf0001df0u)	/* Kernel Reset Register 1 */
#define QSPI2_KRST1	(*( QSPI0_KRST1_type *) 0xf0001ef0u)	/* Kernel Reset Register 1 */
#define QSPI3_KRST1	(*( QSPI0_KRST1_type *) 0xf0001ff0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} QSPI0_KRSTCLR_type;
#define QSPI0_KRSTCLR	(*( QSPI0_KRSTCLR_type *) 0xf0001cecu)	/* Kernel Reset Status Clear Register */
#define QSPI1_KRSTCLR	(*( QSPI0_KRSTCLR_type *) 0xf0001decu)	/* Kernel Reset Status Clear Register */
#define QSPI2_KRSTCLR	(*( QSPI0_KRSTCLR_type *) 0xf0001eecu)	/* Kernel Reset Status Clear Register */
#define QSPI3_KRSTCLR	(*( QSPI0_KRSTCLR_type *) 0xf0001fecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MCOUNT         : 13;	/* Move Count */
		unsigned int                : 3;
		/* const */ unsigned int CURRENT        : 13;	/* Current Status of the Move Counter */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} QSPI0_MC_type;
#define QSPI0_MC	(*( QSPI0_MC_type *) 0xf0001ca4u)	/* Move Counter Register */
#define QSPI1_MC	(*( QSPI0_MC_type *) 0xf0001da4u)	/* Move Counter Register */
#define QSPI2_MC	(*( QSPI0_MC_type *) 0xf0001ea4u)	/* Move Counter Register */
#define QSPI3_MC	(*( QSPI0_MC_type *) 0xf0001fa4u)	/* Move Counter Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TPRE2          : 3;	/* Prescaler for the Trailing Delay 2 */
		unsigned int TRAIL2         : 3;	/* Last Trailing Delay */
		unsigned int                : 10;
		unsigned int IBLEN          : 1;	/* Interrupt Before Last Enable */
		/* const */ unsigned int IBLF           : 1;	/* Interrupt Before Last Flag */
		unsigned int IBLC           : 1;	/* Clear Bit for IBLF */
		unsigned int IBLS           : 1;	/* Set Bit for IBLF */
		unsigned int IALEN          : 1;	/* Interrupt After Last Enable */
		/* const */ unsigned int IALF           : 1;	/* Interrupt After Last Flag */
		unsigned int IALC           : 1;	/* Clear Bit for IALF */
		unsigned int IALS           : 1;	/* Set Bit for IALF */
		unsigned int                : 6;
		unsigned int T2EN           : 1;	/* TRAIL 2 Injection Enable */
		unsigned int MCEN           : 1;	/* Move Counter Enable */
	} B;
	int I;
	unsigned int U;

} QSPI0_MCCON_type;
#define QSPI0_MCCON	(*( QSPI0_MCCON_type *) 0xf0001ca8u)	/* Move Counter control Register */
#define QSPI1_MCCON	(*( QSPI0_MCCON_type *) 0xf0001da8u)	/* Move Counter control Register */
#define QSPI2_MCCON	(*( QSPI0_MCCON_type *) 0xf0001ea8u)	/* Move Counter control Register */
#define QSPI3_MCCON	(*( QSPI0_MCCON_type *) 0xf0001fa8u)	/* Move Counter control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} QSPI0_OCS_type;
#define QSPI0_OCS	(*( QSPI0_OCS_type *) 0xf0001ce8u)	/* OCDS Control and Status */
#define QSPI1_OCS	(*( QSPI0_OCS_type *) 0xf0001de8u)	/* OCDS Control and Status */
#define QSPI2_OCS	(*( QSPI0_OCS_type *) 0xf0001ee8u)	/* OCDS Control and Status */
#define QSPI3_OCS	(*( QSPI0_OCS_type *) 0xf0001fe8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned int MRIS           : 3;	/* Master Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SRIS           : 3;	/* Slave Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SCIS           : 3;	/* Slave Mode Clock Input Select */
		unsigned int                : 1;
		unsigned int SLSIS          : 3;	/* Slave Mode Slave Select Input Selection */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} QSPI0_PISEL_type;
#define QSPI0_PISEL	(*( QSPI0_PISEL_type *) 0xf0001c04u)	/* Port Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int E              : 32;	/* Read Point from the RxFIFO */
	} B;
	int I;
	unsigned int U;

} QSPI0_RXEXIT_type;
#define QSPI0_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xf0001c90u)	/* RX_EXIT Register */
#define QSPI0_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xf0001c94u)	/* RX_EXIT Debug Register */
#define QSPI1_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xf0001d90u)	/* RX_EXIT Register */
#define QSPI1_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xf0001d94u)	/* RX_EXIT Debug Register */
#define QSPI2_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xf0001e90u)	/* RX_EXIT Register */
#define QSPI2_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xf0001e94u)	/* RX_EXIT Debug Register */
#define QSPI3_RXEXIT	(*( QSPI0_RXEXIT_type *) 0xf0001f90u)	/* RX_EXIT Register */
#define QSPI3_RXEXITD	(*( QSPI0_RXEXIT_type *) 0xf0001f94u)	/* RX_EXIT Debug Register */

typedef volatile union
{
	struct
	{ 
		unsigned int AOL            : 16;	/* Active Output Level for the SLSO Outputs */
		unsigned int OEN            : 16;	/* Enable Bits for the SLSO Outputs */
	} B;
	int I;
	unsigned int U;

} QSPI0_SSOC_type;
#define QSPI0_SSOC	(*( QSPI0_SSOC_type *) 0xf0001c48u)	/* Slave Select Output Control Register */
#define QSPI1_SSOC	(*( QSPI0_SSOC_type *) 0xf0001d48u)	/* Slave Select Output Control Register */
#define QSPI2_SSOC	(*( QSPI0_SSOC_type *) 0xf0001e48u)	/* Slave Select Output Control Register */
#define QSPI3_SSOC	(*( QSPI0_SSOC_type *) 0xf0001f48u)	/* Slave Select Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ERRORFLAGS     : 9;	/* Sticky Flags Signalling Errors */
		unsigned int TXF            : 1;	/* Transmit Interrupt Request Flag */
		unsigned int RXF            : 1;	/* Receive Interrupt Request Flag */
		unsigned int PT1F           : 1;	/* Phase Transition 1 Flag */
		unsigned int PT2F           : 1;	/* Phase Transition 2 Flag */
		unsigned int                : 2;
		unsigned int USRF           : 1;	/* User Interrupt Request Flag */
		/* const */ unsigned int TXFIFOLEVEL    : 3;	/* TXFIFO Filling Level */
		/* const */ unsigned int RXFIFOLEVEL    : 3;	/* RXFIFO Filling Level */
		/* const */ unsigned int SLAVESEL       : 4;	/* Currently Active Slave Select Flag */
		/* const */ unsigned int RPV            : 1;	/* Received Parity Value */
		/* const */ unsigned int TPV            : 1;	/* Transmitted Parity Value */
		/* const */ unsigned int PHASE          : 4;	/* Flags the ongoing phase */
	} B;
	int I;
	unsigned int U;

} QSPI0_STATUS_type;
#define QSPI0_STATUS	(*( QSPI0_STATUS_type *) 0xf0001c40u)	/* Status Register */
#define QSPI1_STATUS	(*( QSPI0_STATUS_type *) 0xf0001d40u)	/* Status Register */
#define QSPI2_STATUS	(*( QSPI0_STATUS_type *) 0xf0001e40u)	/* Status Register */
#define QSPI3_STATUS	(*( QSPI0_STATUS_type *) 0xf0001f40u)	/* Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int BITCOUNT       : 8;	/* Number of bits shifted out */
		unsigned int                : 20;
		unsigned int BRDEN          : 1;	/* Baud Rate Deviation Enable */
		unsigned int BRD            : 1;	/* Baud Rate Deviation Flag */
		unsigned int SPDEN          : 1;	/* Spike Detection Enable */
		unsigned int SPD            : 1;	/* Spike Detection Flag */
	} B;
	int I;
	unsigned int U;

} QSPI0_STATUS1_type;
#define QSPI0_STATUS1	(*( QSPI0_STATUS1_type *) 0xf0001c44u)	/* Status Register 1 */
#define QSPI1_STATUS1	(*( QSPI0_STATUS1_type *) 0xf0001d44u)	/* Status Register 1 */
#define QSPI2_STATUS1	(*( QSPI0_STATUS1_type *) 0xf0001e44u)	/* Status Register 1 */
#define QSPI3_STATUS1	(*( QSPI0_STATUS1_type *) 0xf0001f44u)	/* Status Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int XDL            : 16;	/* Extended Data Length */
		/* const */ unsigned int BYTECOUNT      : 16;	/* Extended Data Length */
	} B;
	int I;
	unsigned int U;

} QSPI0_XXLCON_type;
#define QSPI0_XXLCON	(*( QSPI0_XXLCON_type *) 0xf0001c58u)	/* Extra Large Data Configuration Register */
#define QSPI1_XXLCON	(*( QSPI0_XXLCON_type *) 0xf0001d58u)	/* Extra Large Data Configuration Register */
#define QSPI2_XXLCON	(*( QSPI0_XXLCON_type *) 0xf0001e58u)	/* Extra Large Data Configuration Register */
#define QSPI3_XXLCON	(*( QSPI0_XXLCON_type *) 0xf0001f58u)	/* Extra Large Data Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} QSPI1_ACCEN1_type;
#define QSPI1_ACCEN1	(*( QSPI1_ACCEN1_type *) 0xf0001df8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int MRIS           : 3;	/* Master Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SRIS           : 3;	/* Slave Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SCIS           : 3;	/* Slave Mode Clock Input Select */
		unsigned int                : 1;
		unsigned int SLSIS          : 3;	/* Slave Mode Slave Select Input Selection */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} QSPI1_PISEL_type;
#define QSPI1_PISEL	(*( QSPI1_PISEL_type *) 0xf0001d04u)	/* Port Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} QSPI2_ACCEN1_type;
#define QSPI2_ACCEN1	(*( QSPI2_ACCEN1_type *) 0xf0001ef8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CAP            : 15;	/* Captured Value */
		/* const */ unsigned int OVF            : 1;	/* Overflow Flag */
		unsigned int EDGECON        : 2;	/* Edge Configuration */
		unsigned int INS            : 2;	/* Input Selection */
		unsigned int EN             : 1;	/* Enable Bit of the Capture Timer */
		unsigned int                : 7;
		unsigned int CAPC           : 1;	/* Capture Flag Clear */
		unsigned int CAPS           : 1;	/* Capture Flag Set */
		/* const */ unsigned int CAPF           : 1;	/* Capture Flag */
		unsigned int CAPSEL         : 1;	/* Capture Interrupt Select Bit */
	} B;
	int I;
	unsigned int U;

} QSPI2_CAPCON_type;
#define QSPI2_CAPCON	(*( QSPI2_CAPCON_type *) 0xf0001ea0u)	/* Capture Control Register */
#define QSPI3_CAPCON	(*( QSPI2_CAPCON_type *) 0xf0001fa0u)	/* Capture Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MRIS           : 3;	/* Master Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SRIS           : 3;	/* Slave Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SCIS           : 3;	/* Slave Mode Clock Input Select */
		unsigned int                : 1;
		unsigned int SLSIS          : 3;	/* Slave Mode Slave Select Input Selection */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} QSPI2_PISEL_type;
#define QSPI2_PISEL	(*( QSPI2_PISEL_type *) 0xf0001e04u)	/* Port Input Select Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} QSPI3_ACCEN1_type;
#define QSPI3_ACCEN1	(*( QSPI3_ACCEN1_type *) 0xf0001ff8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int MRIS           : 3;	/* Master Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SRIS           : 3;	/* Slave Mode Receive Input Select */
		unsigned int                : 1;
		unsigned int SCIS           : 3;	/* Slave Mode Clock Input Select */
		unsigned int                : 1;
		unsigned int SLSIS          : 3;	/* Slave Mode Slave Select Input Selection */
		unsigned int                : 17;
	} B;
	int I;
	unsigned int U;

} QSPI3_PISEL_type;
#define QSPI3_PISEL	(*( QSPI3_PISEL_type *) 0xf0001f04u)	/* Port Input Select Register */


/* RIF */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} RIF0_ACCEN0_type;
#define RIF0_ACCEN0	(*( RIF0_ACCEN0_type *) 0xfa0400fcu)	/* Access Enable Register 0 */
#define RIF1_ACCEN0	(*( RIF0_ACCEN0_type *) 0xfa0402fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} RIF0_ACCEN1_type;
#define RIF0_ACCEN1	(*( RIF0_ACCEN1_type *) 0xfa0400f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} RIF0_CLC_type;
#define RIF0_CLC	(*( RIF0_CLC_type *) 0xfa040000u)	/* Clock Control Register */
#define RIF1_CLC	(*( RIF0_CLC_type *) 0xfa040200u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DD1            : 16;	/* Debug Data First Sample */
		/* const */ unsigned int DD2            : 16;	/* Debug Data Second Sample */
	} B;
	int I;
	unsigned int U;

} RIF0_DBG0_type;
#define RIF0_DBG0	(*( RIF0_DBG0_type *) 0xfa040080u)	/* Debug Data Register 0 */
#define RIF1_DBG0	(*( RIF0_DBG0_type *) 0xfa040280u)	/* Debug Data Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DD3            : 16;	/* Debug Data Third Sample */
		/* const */ unsigned int DD4            : 16;	/* Debug Data Fourh Sample */
	} B;
	int I;
	unsigned int U;

} RIF0_DBG1_type;
#define RIF0_DBG1	(*( RIF0_DBG1_type *) 0xfa040084u)	/* Debug Data Register 1 */
#define RIF1_DBG1	(*( RIF0_DBG1_type *) 0xfa040284u)	/* Debug Data Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FDLY0          : 3;	/* Frame Signal Delay Line RX0 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CDLY0          : 3;	/* Clock Signal Delay Line RX0 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DDLY0          : 3;	/* Data Signal Delay Line RX0 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int FDLY1          : 3;	/* Frame Signal Delay Line RX1 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CDLY1          : 3;	/* Clock Signal Delay Line RX1 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DDLY1          : 3;	/* Data Signal Delay Line RX1 */
		/* const */ unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} RIF0_DBGDLY0_type;
#define RIF0_DBGDLY0	(*( RIF0_DBGDLY0_type *) 0xfa040054u)	/* Debug Delay Register 0 */
#define RIF1_DBGDLY0	(*( RIF0_DBGDLY0_type *) 0xfa040254u)	/* Debug Delay Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FDLY2          : 3;	/* Frame Signal Delay Line RX2 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CDLY2          : 3;	/* Clock Signal Delay Line RX2 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DDLY2          : 3;	/* Data Signal Delay Line RX2 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int FDLY3          : 3;	/* Frame Signal Delay Line RX3 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int CDLY3          : 3;	/* Clock Signal Delay Line RX3 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DDLY3          : 3;	/* Data Signal Delay Line RX3 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int BMDLY0         : 3;	/* Bist Mode Delay Line 0 */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int BMDLY1         : 3;	/* Bist Mode Delay Line 1 */
		/* const */ unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} RIF0_DBGDLY1_type;
#define RIF0_DBGDLY1	(*( RIF0_DBGDLY1_type *) 0xfa040058u)	/* Debug Delay Register 1 */
#define RIF1_DBGDLY1	(*( RIF0_DBGDLY1_type *) 0xfa040258u)	/* Debug Delay Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DF             : 1;	/* Data Format */
		unsigned int DA             : 1;	/* Data Alignment */
		unsigned int MSB            : 1;	/* Shift Direction MSB / LSB First */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} RIF0_DFU_type;
#define RIF0_DFU	(*( RIF0_DFU_type *) 0xfa04003cu)	/* Data Formatting Unit Register */
#define RIF1_DFU	(*( RIF0_DFU_type *) 0xfa04023cu)	/* Data Formatting Unit Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ENF0           : 1;	/* Enable FIFO0 */
		unsigned int ENF1           : 1;	/* Enable FIFO1 */
		unsigned int ENF2           : 1;	/* Enable FIFO2 */
		unsigned int ENF3           : 1;	/* Enable FIFO3 */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} RIF0_DMI_type;
#define RIF0_DMI	(*( RIF0_DMI_type *) 0xfa04001cu)	/* Data Memory Interface Register */
#define RIF1_DMI	(*( RIF0_DMI_type *) 0xfa04021cu)	/* Data Memory Interface Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CP             : 1;	/* Clock Polarity */
		unsigned int FP             : 1;	/* Frame Polarity */
		unsigned int DP0            : 1;	/* Data Polarity for Lane 0 */
		unsigned int DP1            : 1;	/* Data Polarity for Lane 1 */
		unsigned int DP2            : 1;	/* Data Polarity for Lane 2 */
		unsigned int DP3            : 1;	/* Data Polarity for Lane 3 */
		unsigned int                : 10;
		unsigned int CALEN          : 1;	/* Calibration Enable */
		/* const */ unsigned int CALBSY         : 1;	/* Calibration Busy */
		/* const */ unsigned int CALSTAT        : 1;	/* Calibration Status */
		unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} RIF0_ESI_type;
#define RIF0_ESI	(*( RIF0_ESI_type *) 0xfa040010u)	/* External Serial Interface Register */
#define RIF1_ESI	(*( RIF0_ESI_type *) 0xfa040210u)	/* External Serial Interface Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int CALC           : 1;	/* Calibration End Flag Clear */
		unsigned int FWC            : 1;	/* Frame Watchdog Flag Clear */
		unsigned int REC            : 1;	/* Ramp End Clear */
		unsigned int RR19           : 1;	/* Reserved */
		unsigned int CRCC0          : 1;	/* CRC Error Flag Clear 0 */
		unsigned int CRCC1          : 1;	/* CRC Error Flag Clear 1 */
		unsigned int CRCC2          : 1;	/* CRC Error Flag Clear 2 */
		unsigned int CRCC3          : 1;	/* CRC Error Flag Clear 3 */
		unsigned int R1EC           : 1;	/* RAMP1 Error Flag Clear */
		unsigned int RR25           : 1;	/* Reserved */
		unsigned int R1SC           : 1;	/* RAMP1 Start Flag Clear */
		unsigned int                : 2;
		unsigned int SMCC           : 1;	/* SMCF Alarm Flag Clear */
		unsigned int REGCRCC        : 1;	/* REGCRC Alarm Flag Clear */
		unsigned int LOCKIC         : 1;	/* RIF Internal Lockstep Alarm Flag Clear */
	} B;
	int I;
	unsigned int U;

} RIF0_FLAGSCL_type;
#define RIF0_FLAGSCL	(*( RIF0_FLAGSCL_type *) 0xfa040034u)	/* Flags Clear Register */
#define RIF1_FLAGSCL	(*( RIF0_FLAGSCL_type *) 0xfa040234u)	/* Flags Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		unsigned int CALS           : 1;	/* Calibration End Flag Set */
		unsigned int FWS            : 1;	/* Frame Watchdog Flag Set */
		unsigned int RES            : 1;	/* Ramp End Set */
		unsigned int RR19           : 1;	/* Reserved */
		unsigned int CRCS0          : 1;	/* CRC Error Flag Set 0 */
		unsigned int CRCS1          : 1;	/* CRC Error Flag Set 1 */
		unsigned int CRCS2          : 1;	/* CRC Error Flag Set 2 */
		unsigned int CRCS3          : 1;	/* CRC Error Flag Set 3 */
		unsigned int R1ES           : 1;	/* RAMP1 Error Flag Set 3 */
		unsigned int RR25           : 1;	/* Reserved */
		unsigned int R1SS           : 1;	/* RAMP1 Start Set */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} RIF0_FLAGSSET_type;
#define RIF0_FLAGSSET	(*( RIF0_FLAGSSET_type *) 0xfa040030u)	/* Flags Set Register */
#define RIF1_FLAGSSET	(*( RIF0_FLAGSSET_type *) 0xfa040230u)	/* Flags Set Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MODE           : 1;	/* FLM Mode */
		unsigned int FSWP           : 1;	/* Full Swap */
		unsigned int                : 6;
		unsigned int CRCEN          : 1;	/* CRC Enable */
		unsigned int CRCALT         : 1;	/* Alternative CRC */
		unsigned int CRCERIN        : 1;	/* CRC Error Injection */
		unsigned int EXPCRCWO       : 1;	/* Expected CRC Word Order */
		unsigned int CRCBS          : 1;	/* CRC Byte Swap */
		unsigned int                : 3;
		unsigned int REGCRCEN       : 2;	/* Enable Bit for the Register CRC */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} RIF0_FLM_type;
#define RIF0_FLM	(*( RIF0_FLM_type *) 0xfa040018u)	/* FIFO and Lane Management Register */
#define RIF1_FLM	(*( RIF0_FLM_type *) 0xfa040218u)	/* FIFO and Lane Management Register */

typedef volatile union
{
	struct
	{ 
		unsigned int THRESHOLD      : 10;	/* Frame Watchdog Threshold */
		unsigned int                : 22;
	} B;
	int I;
	unsigned int U;

} RIF0_FWDG_type;
#define RIF0_FWDG	(*( RIF0_FWDG_type *) 0xfa040038u)	/* Frame Watchdog Register */
#define RIF1_FWDG	(*( RIF0_FWDG_type *) 0xfa040238u)	/* Frame Watchdog Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} RIF0_ID_type;
#define RIF0_ID	(*( RIF0_ID_type *) 0xfa040008u)	/* Module Identification Register */
#define RIF1_ID	(*( RIF0_ID_type *) 0xfa040208u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CALE           : 1;	/* Calibration End Interrupt Enable */
		unsigned int FWE            : 1;	/* Frame Watchdog Enable */
		unsigned int REE            : 1;	/* Ramp End Enable */
		unsigned int RR3            : 1;	/* Reserved */
		unsigned int CRCE0          : 1;	/* CRC Error Flag Enable 0 */
		unsigned int CRCE1          : 1;	/* CRC Error Flag Enable 1 */
		unsigned int CRCE2          : 1;	/* CRC Error Flag Enable 2 */
		unsigned int CRCE3          : 1;	/* CRC Error Flag Enable 3 */
		unsigned int R1EE           : 1;	/* RAMP1 Error Enable */
		unsigned int RR9            : 1;	/* Reserved */
		unsigned int R1SE           : 1;	/* RAMP1 Start Enable */
		unsigned int                : 5;
		/* const */ unsigned int CALF           : 1;	/* Calibration End Interrupt Flag */
		/* const */ unsigned int FWF            : 1;	/* Frame Watchdog Interrupt Flag */
		/* const */ unsigned int REF            : 1;	/* Ramp End Flag */
		/* const */ unsigned int RR19           : 1;	/* Reserved */
		/* const */ unsigned int CRCF0          : 1;	/* CRC Error Flag 0 */
		/* const */ unsigned int CRCF1          : 1;	/* CRC Error Flag 1 */
		/* const */ unsigned int CRCF2          : 1;	/* CRC Error Flag 2 */
		/* const */ unsigned int CRCF3          : 1;	/* CRC Error Flag 3 */
		/* const */ unsigned int R1EF           : 1;	/* RAMP1 Error Flag */
		/* const */ unsigned int RR25           : 1;	/* Reserved */
		/* const */ unsigned int R1SF           : 1;	/* RAMP1 Start Flag */
		unsigned int                : 2;
		/* const */ unsigned int SMCF           : 1;	/* Safety Mechanism Control Flag */
		/* const */ unsigned int REGCRCF        : 1;	/* REGCRC Alarm Flag */
		/* const */ unsigned int LOCKIF         : 1;	/* RIF Internal Lockstep Alarm Flag */
	} B;
	int I;
	unsigned int U;

} RIF0_INTCON_type;
#define RIF0_INTCON	(*( RIF0_INTCON_type *) 0xfa04002cu)	/* Interrupt Control Register */
#define RIF1_INTCON	(*( RIF0_INTCON_type *) 0xfa04022cu)	/* Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DL             : 2;	/* Data Length */
		unsigned int                : 1;
		unsigned int PFP            : 1;	/* Parallel Frame Polarity */
		unsigned int                : 12;
		unsigned int EN0            : 1;	/* Enable Deserializer 0 */
		unsigned int EN1            : 1;	/* Enable Deserializer 1 */
		unsigned int EN2            : 1;	/* Enable Deserializer 2 */
		unsigned int EN3            : 1;	/* Enable Deserializer 3 */
		unsigned int                : 9;
		unsigned int DBGSEL         : 2;	/* Selects the lane assigned to the registers DBG0 and DBG1 */
		/* const */ unsigned int SDDV           : 1;	/* Sample Debug Data Valid */
	} B;
	int I;
	unsigned int U;

} RIF0_IPI_type;
#define RIF0_IPI	(*( RIF0_IPI_type *) 0xfa040014u)	/* Internal Parallel Interface Register */
#define RIF1_IPI	(*( RIF0_IPI_type *) 0xfa040214u)	/* Internal Parallel Interface Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} RIF0_KRST0_type;
#define RIF0_KRST0	(*( RIF0_KRST0_type *) 0xfa0400f4u)	/* Kernel Reset Register 0 */
#define RIF1_KRST0	(*( RIF0_KRST0_type *) 0xfa0402f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} RIF0_KRST1_type;
#define RIF0_KRST1	(*( RIF0_KRST1_type *) 0xfa0400f0u)	/* Kernel Reset Register 1 */
#define RIF1_KRST1	(*( RIF0_KRST1_type *) 0xfa0402f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} RIF0_KRSTCLR_type;
#define RIF0_KRSTCLR	(*( RIF0_KRSTCLR_type *) 0xfa0400ecu)	/* Kernel Reset Status Clear Register */
#define RIF1_KRSTCLR	(*( RIF0_KRSTCLR_type *) 0xfa0402ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FRAME          : 8;	/* Frame LVDS Pad Control */
		unsigned int CLK            : 8;	/* CLOCK LVDS Pad Control */
		unsigned int DATA0          : 8;	/* DATA0 LVDS Pad Control */
		unsigned int DATA1          : 8;	/* DATA1 LVDS Pad Control */
	} B;
	int I;
	unsigned int U;

} RIF0_LVDSCON0_type;
#define RIF0_LVDSCON0	(*( RIF0_LVDSCON0_type *) 0xfa04004cu)	/* LVDS Control Register 0 */
#define RIF1_LVDSCON0	(*( RIF0_LVDSCON0_type *) 0xfa04024cu)	/* LVDS Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int DATA2          : 8;	/* DATA2 LVDS Pad Control */
		unsigned int DATA3          : 8;	/* DATA3 LVDS Pad Control */
		unsigned int MISC           : 3;	/* Miscellaneous Common LVDS Pad Control */
		unsigned int RTERM          : 3;	/* Termination Resistor Trimming */
		unsigned int                : 2;
		unsigned int PWRDN          : 1;	/* LVDS Bias Distributor Power Down */
		unsigned int LVDS5VEN       : 1;	/* Enable 5V Mode for LVDS Bias Distributor */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} RIF0_LVDSCON1_type;
#define RIF0_LVDSCON1	(*( RIF0_LVDSCON1_type *) 0xfa040050u)	/* LVDS Control Register 1 */
#define RIF1_LVDSCON1	(*( RIF0_LVDSCON1_type *) 0xfa040250u)	/* LVDS Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned int TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned int TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned int                : 20;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} RIF0_OCS_type;
#define RIF0_OCS	(*( RIF0_OCS_type *) 0xfa0400e8u)	/* OCDS Control and Status */
#define RIF1_OCS	(*( RIF0_OCS_type *) 0xfa0402e8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned int CRC            : 32;	/* CRC Value */
	} B;
	int I;
	unsigned int U;

} RIF0_REGCRC_type;
#define RIF0_REGCRC	(*( RIF0_REGCRC_type *) 0xfa04008cu)	/* Register CRC Register */
#define RIF1_REGCRC	(*( RIF0_REGCRC_type *) 0xfa04028cu)	/* Register CRC Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 30;
		unsigned int LCKSTP         : 1;	/* Lockstep Enable Bit */
		unsigned int INTADC         : 1;	/* Internal ADC Enable Bit */
	} B;
	int I;
	unsigned int U;

} RIF0_RSM0_type;
#define RIF0_RSM0	(*( RIF0_RSM0_type *) 0xfa040020u)	/* Radar State Machine Register 0 */
#define RIF1_RSM0	(*( RIF0_RSM0_type *) 0xfa040220u)	/* Radar State Machine Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RAMPS          : 11;	/* Number of Ramps per Chirp */
		unsigned int                : 1;
		unsigned int RR12           : 2;	/* Reserved */
		unsigned int R1SEL          : 2;	/* Select Bit for RAMP1 Signal */
		/* const */ unsigned int CURRAMP        : 12;	/* Number of Current Ramp */
		unsigned int RR28           : 1;	/* Reserved */
		unsigned int R1POL          : 1;	/* Polarity of RAMP1 Signal */
		unsigned int RR30           : 1;	/* Reserved */
		unsigned int R1EN           : 1;	/* Enable for RAMP1 Signal */
	} B;
	int I;
	unsigned int U;

} RIF0_RSM1_type;
#define RIF0_RSM1	(*( RIF0_RSM1_type *) 0xfa040024u)	/* Radar State Machine Register 1 */
#define RIF1_RSM1	(*( RIF0_RSM1_type *) 0xfa040224u)	/* Radar State Machine Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SAMPLES        : 11;	/* Number of Valid Data Samples */
		unsigned int                : 5;
		/* const */ unsigned int CURSAMPLE      : 12;	/* Number of the Current Valid Data Sample */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} RIF0_RSM2_type;
#define RIF0_RSM2	(*( RIF0_RSM2_type *) 0xfa040028u)	/* Radar State Machine Register 2 */
#define RIF1_RSM2	(*( RIF0_RSM2_type *) 0xfa040228u)	/* Radar State Machine Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 16;
		/* const */ unsigned int ENDSAMPLE      : 12;	/* Value of the Current Sample at the End of the Ramp */
		/* const */ unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} RIF0_RSM2CAP_type;
#define RIF0_RSM2CAP	(*( RIF0_RSM2CAP_type *) 0xfa040044u)	/* Radar State Machine 2 Capture Register */
#define RIF1_RSM2CAP	(*( RIF0_RSM2CAP_type *) 0xfa040244u)	/* Radar State Machine 2 Capture Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LOCKIEN        : 2;	/* Internal Lockstep Enable */
		unsigned int SPUCRCEN       : 2;	/* Enable Bit for the SPU CRC */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} RIF0_SFCON_type;
#define RIF0_SFCON	(*( RIF0_SFCON_type *) 0xfa040088u)	/* Safety Functions Register */
#define RIF1_SFCON	(*( RIF0_SFCON_type *) 0xfa040288u)	/* Safety Functions Register */

typedef volatile union
{
	struct
	{ 
		unsigned int R0             : 8;	/* Reserved */
		unsigned int R8             : 2;	/* Reserved */
		unsigned int R10            : 2;	/* Reserved */
		unsigned int                : 4;
		/* const */ unsigned int R16            : 8;	/* Reserved */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} RIF0_SKEWCAL_type;
#define RIF0_SKEWCAL	(*( RIF0_SKEWCAL_type *) 0xfa040048u)	/* Skew Calibration Register */
#define RIF1_SKEWCAL	(*( RIF0_SKEWCAL_type *) 0xfa040248u)	/* Skew Calibration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SKMR           : 2;	/* Skew Management Ratio */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} RIF0_SRIFOVRCFG_type;
#define RIF0_SRIFOVRCFG	(*( RIF0_SRIFOVRCFG_type *) 0xfa040040u)	/* SRIF Override Configuration Register */
#define RIF1_SRIFOVRCFG	(*( RIF0_SRIFOVRCFG_type *) 0xfa040240u)	/* SRIF Override Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} RIF1_ACCEN1_type;
#define RIF1_ACCEN1	(*( RIF1_ACCEN1_type *) 0xfa0402f8u)	/* Access Enable Register 1 */


/* SCU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} SCU_ACCEN00_type;
#define SCU_ACCEN00	(*( SCU_ACCEN00_type *) 0xf00363fcu)	/* Access Enable Register 00 */
#define SCU_ACCEN10	(*( SCU_ACCEN00_type *) 0xf00363f4u)	/* Access Enable Register 10 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SCU_ACCEN01_type;
#define SCU_ACCEN01	(*( SCU_ACCEN01_type *) 0xf00363f8u)	/* Access Enable Register 01 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SCU_ACCEN11_type;
#define SCU_ACCEN11	(*( SCU_ACCEN11_type *) 0xf00363f0u)	/* Access Enable Register 11 */

typedef volatile union
{
	struct
	{ 
		unsigned int STM0DIS        : 1;	/* STM0 Disable Reset */
		unsigned int STM1DIS        : 1;	/* STM1 Disable Reset */
		unsigned int STM2DIS        : 1;	/* STM2 Disable Reset */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} SCU_ARSTDIS_type;
#define SCU_ARSTDIS	(*( SCU_ARSTDIS_type *) 0xf003605cu)	/* Application Reset Disable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STMDIV         : 4;	/* STM Divider Reload Value */
		unsigned int GTMDIV         : 4;	/* GTM Divider Reload Value */
		unsigned int SRIDIV         : 4;	/* SRI Divider Reload Value */
		unsigned int LPDIV          : 3;	/* Low Power Divider Reload Value */
		unsigned int                : 1;
		unsigned int SPBDIV         : 4;	/* SPB Divider Reload Value */
		unsigned int BBBDIV         : 4;	/* BBB Divider Reload Value */
		unsigned int FSIDIV         : 2;	/* FSI Divider Reload Value */
		unsigned int FSI2DIV        : 2;	/* FSI2 Divider Reload Value */
		unsigned int CLKSEL         : 2;	/* Clock Selection for Source */
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON0_type;
#define SCU_CCUCON0	(*( SCU_CCUCON0_type *) 0xf0036030u)	/* CCU Clock Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int MCANDIV        : 4;	/* MCAN Divider Reload Value */
		unsigned int CLKSELMCAN     : 2;	/* Clock Selection for MCAN */
		unsigned int                : 1;
		unsigned int PLL1DIVDIS     : 1;	/* Divider Disable for fPLL1 */
		unsigned int I2CDIV         : 4;	/* I2C Divider Reload Value */
		unsigned int                : 4;
		unsigned int MSCDIV         : 4;	/* MSC Divider Reload Value */
		unsigned int CLKSELMSC      : 2;	/* Clock Selection for MSC */
		unsigned int                : 2;
		unsigned int QSPIDIV        : 4;	/* QSPI Divider Reload Value */
		unsigned int CLKSELQSPI     : 2;	/* Clock Selection for QSPI */
		unsigned int                : 1;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON1_type;
#define SCU_CCUCON1	(*( SCU_CCUCON1_type *) 0xf0036034u)	/* CCU Clock Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int ASCLINFDIV     : 4;	/* ASCLIN Fast Divider Reload Value */
		unsigned int                : 4;
		unsigned int ASCLINSDIV     : 4;	/* ASCLIN Slow Divider Reload Value */
		unsigned int CLKSELASCLINS  : 2;	/* Clock Selection for ASCLINS */
		unsigned int                : 11;
		unsigned int ERAYPERON      : 1;	/* Power Safe SwitchOff for ERAY Clock */
		unsigned int HSPDMPERON     : 1;	/* Power Safe SwitchOff for HSPDM Clocks */
		unsigned int                : 4;
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON2_type;
#define SCU_CCUCON2	(*( SCU_CCUCON2_type *) 0xf0036040u)	/* CCU Clock Control Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int PLL0MONEN      : 1;	/* PLL0 Clock Monitor Enable */
		unsigned int PLL1MONEN      : 1;	/* PLL1 Clock Monitor Enable */
		unsigned int PLL2MONEN      : 1;	/* PLL2 Clock Monitor Enable */
		unsigned int SPBMONEN       : 1;	/* SPB Clock Monitor Enable */
		unsigned int BACKMONEN      : 1;	/* Backup Clock Monitor Enable */
		unsigned int                : 3;
		unsigned int PLL0MONTST     : 1;	/* PLL0 Clock Monitor Test */
		unsigned int PLL1MONTST     : 1;	/* PLL1 Clock Monitor Test */
		unsigned int PLL2MONTST     : 1;	/* PLL2 Clock Monitor Test */
		unsigned int SPBMONTST      : 1;	/* SPB Clock Monitor Test */
		unsigned int BACKMONTST     : 1;	/* Backup Clock Monitor Test */
		unsigned int                : 17;
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON3_type;
#define SCU_CCUCON3	(*( SCU_CCUCON3_type *) 0xf0036044u)	/* CCU Clock Control Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int LOTHR          : 12;	/* Backup Clock Monitor Lower Threshold */
		unsigned int UPTHR          : 12;	/* Backup Clock Monitor Upper Threshold */
		unsigned int MONEN          : 1;	/* Backup Clock Monitor Enable */
		unsigned int MONTST         : 1;	/* Backup Clock Monitor Test */
		unsigned int                : 4;
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON4_type;
#define SCU_CCUCON4	(*( SCU_CCUCON4_type *) 0xf0036048u)	/* CCU Clock Control Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int GETHDIV        : 4;	/* GETH Divider Reload Value */
		unsigned int MCANHDIV       : 4;	/* MCANH Divider Reload Value */
		unsigned int ADASDIV        : 4;	/* ADAS Divider Reload Value */
		unsigned int                : 18;
		unsigned int UP             : 1;	/* Update Request */
		/* const */ unsigned int LCK            : 1;	/* Lock Status */
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON5_type;
#define SCU_CCUCON5	(*( SCU_CCUCON5_type *) 0xf003604cu)	/* CCU Clock Control Register 5 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU0DIV        : 6;	/* CPU0 Divider Reload Value */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON6_type;
#define SCU_CCUCON6	(*( SCU_CCUCON6_type *) 0xf0036080u)	/* CCU Clock Control Register 6 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU1DIV        : 6;	/* CPU1 Divider Reload Value */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON7_type;
#define SCU_CCUCON7	(*( SCU_CCUCON7_type *) 0xf0036084u)	/* CCU Clock Control Register 7 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU2DIV        : 6;	/* CPU2 Divider Reload Value */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_CCUCON8_type;
#define SCU_CCUCON8	(*( SCU_CCUCON8_type *) 0xf0036088u)	/* CCU Clock Control Register 8 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CHREV          : 6;	/* Chip Revision Number */
		/* const */ unsigned int CHTEC          : 2;	/* Chip Family */
		unsigned int CHPK           : 4;	/* Chip Package */
		unsigned int CHID           : 4;	/* Chip Product */
		/* const */ unsigned int EEA            : 1;	/* Emulation or ADAS Extension Available */
		unsigned int UCODE          : 7;	/* ?Code Version */
		unsigned int FSIZE          : 4;	/* Program Flash Size */
		unsigned int VART           : 3;	/* Variant */
		unsigned int SEC            : 1;	/* Security Device Available */
	} B;
	int I;
	unsigned int U;

} SCU_CHIPID_type;
#define SCU_CHIPID	(*( SCU_CHIPID_type *) 0xf0036140u)	/* Chip Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LOWER          : 12;	/* DTSC Lower Limit */
		unsigned int                : 1;
		/* const */ unsigned int BGPOK          : 1;	/* DTSC Bandgap OK */
		unsigned int EN             : 1;	/* DTSC Enable */
		unsigned int LLU            : 1;	/* DTSC Lower Limit Underflow */
		unsigned int UPPER          : 12;	/* DTSC Upper Limit */
		unsigned int INTEN          : 1;	/* DTSC Interrupt Enable */
		unsigned int                : 1;
		unsigned int INT            : 1;	/* DTSC Interrupt status flag */
		unsigned int UOF            : 1;	/* DTSC Upper Limit Overflow */
	} B;
	int I;
	unsigned int U;

} SCU_DTSCLIM_type;
#define SCU_DTSCLIM	(*( SCU_DTSCLIM_type *) 0xf0036108u)	/* Core Die Temperature Sensor Limit Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int RESULT         : 12;	/* Result of the DTSC Measurement */
		/* const */ unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SCU_DTSCSTAT_type;
#define SCU_DTSCSTAT	(*( SCU_DTSCSTAT_type *) 0xf0036104u)	/* Core Die Temperature Sensor Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved Bit */
		unsigned __sfrbit32 ENDINIT        : 1;	/* End-of-Initialization Control Bit */
		unsigned __sfrbit32 EPW            : 14;	/* User-Definable ENDINIT Password Field */
		/* const */ unsigned __sfrbit32 REL            : 16;	/* Reload Value for the ENDINIT Timeout Counter */
	} B;
	int I;
	unsigned int U;

} SCU_EICON0_type;
#define SCU_EICON0	(*( SCU_EICON0_type *) 0xf003629cu)	/* ENDINIT Global Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int IR0            : 1;	/* Input Frequency Request Control - IR1,IR0 */
		unsigned int DR             : 1;	/* Disable Request Control Bit */
		unsigned int                : 1;
		unsigned int IR1            : 1;	/* Input Frequency Request Control */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_EICON1_type;
#define SCU_EICON1	(*( SCU_EICON1_type *) 0xf00362a0u)	/* ENDINIT Global Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int EXIS0          : 3;	/* External Input Selection 0 */
		unsigned int                : 1;
		unsigned int FEN0           : 1;	/* Falling Edge Enable 0 */
		unsigned int REN0           : 1;	/* Rising Edge Enable 0 */
		unsigned int LDEN0          : 1;	/* Level Detection Enable 0 */
		unsigned int EIEN0          : 1;	/* External Input Enable 0 */
		unsigned int INP0           : 3;	/* Input Node Pointer */
		unsigned int                : 5;
		unsigned int EXIS1          : 3;	/* External Input Selection 1 */
		unsigned int                : 1;
		unsigned int FEN1           : 1;	/* Falling Edge Enable 1 */
		unsigned int REN1           : 1;	/* Rising Edge Enable 1 */
		unsigned int LDEN1          : 1;	/* Level Detection Enable 1 */
		unsigned int EIEN1          : 1;	/* External Input Enable 1 */
		unsigned int INP1           : 3;	/* Input Node Pointer */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SCU_EICR0_type;
#define SCU_EICR0	(*( SCU_EICR0_type *) 0xf0036210u)	/* External Input Channel Register 0 */
#define SCU_EICR1	(*( SCU_EICR0_type *) 0xf0036214u)	/* External Input Channel Register 1 */
#define SCU_EICR2	(*( SCU_EICR0_type *) 0xf0036218u)	/* External Input Channel Register 2 */
#define SCU_EICR3	(*( SCU_EICR0_type *) 0xf003621cu)	/* External Input Channel Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int FILRQ0A        : 1;	/* Filter Enable for REQ0A */
		unsigned int FILRQ5A        : 1;	/* Filter Enable for REQ5A */
		unsigned int FILRQ2A        : 1;	/* Filter Enable for REQ2A */
		unsigned int FILRQ3A        : 1;	/* Filter Enable for REQ3A */
		unsigned int FILRQ0C        : 1;	/* Filter Enable for REQ0C */
		unsigned int FILRQ1C        : 1;	/* Filter Enable for REQ1C */
		unsigned int FILRQ3C        : 1;	/* Filter Enable for REQ3C */
		unsigned int FILRQ2C        : 1;	/* Filter Enable for REQ2C */
		unsigned int FILRQ4A        : 1;	/* Filter Enable for REQ4A */
		unsigned int FILRQ6A        : 1;	/* Filter Enable for REQ6A */
		unsigned int FILRQ1A        : 1;	/* Filter Enable for REQ1A */
		unsigned int FILRQ7A        : 1;	/* Filter Enable for REQ7A */
		unsigned int FILRQ6D        : 1;	/* Filter Enable for REQ6D */
		unsigned int FILRQ4D        : 1;	/* Filter Enable for REQ4D */
		unsigned int FILRQ2B        : 1;	/* Filter Enable for REQ2B */
		unsigned int FILRQ3B        : 1;	/* Filter Enable for REQ3B */
		unsigned int FILRQ7C        : 1;	/* Filter Enable for REQ7C */
		unsigned int                : 7;
		unsigned int FILTDIV        : 4;	/* Digital Glitch Filter Clock Predivider */
		unsigned int DEPTH          : 4;	/* Digital Glitch Filter Depth */
	} B;
	int I;
	unsigned int U;

} SCU_EIFILT_type;
#define SCU_EIFILT	(*( SCU_EIFILT_type *) 0xf003620cu)	/* External Input Filter Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int INTF0          : 1;	/* External Event Flag of Channel 0 */
		/* const */ unsigned int INTF1          : 1;	/* External Event Flag of Channel 1 */
		/* const */ unsigned int INTF2          : 1;	/* External Event Flag of Channel 2 */
		/* const */ unsigned int INTF3          : 1;	/* External Event Flag of Channel 3 */
		/* const */ unsigned int INTF4          : 1;	/* External Event Flag of Channel 4 */
		/* const */ unsigned int INTF5          : 1;	/* External Event Flag of Channel 5 */
		/* const */ unsigned int INTF6          : 1;	/* External Event Flag of Channel 6 */
		/* const */ unsigned int INTF7          : 1;	/* External Event Flag of Channel 7 */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} SCU_EIFR_type;
#define SCU_EIFR	(*( SCU_EIFR_type *) 0xf0036220u)	/* External Input Flag Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AE             : 1;	/* EICON0 Access Error Status Flag */
		/* const */ unsigned int OE             : 1;	/* EI Timeout Overflow Error Status Flag */
		/* const */ unsigned int IS0            : 1;	/* EI Timeout Input Clock Status - IS1,IS0 */
		/* const */ unsigned int DS             : 1;	/* EI Timeout Enable/Disable Status Flag */
		/* const */ unsigned int TO             : 1;	/* EI Time-Out Mode Flag */
		/* const */ unsigned int IS1            : 1;	/* EI Timeout Input Clock Status */
		/* const */ unsigned int Reserved       : 10;	/* Reserved */
		/* const */ unsigned int TIM            : 16;	/* Timer Value */
	} B;
	int I;
	unsigned int U;

} SCU_EISR_type;
#define SCU_EISR	(*( SCU_EISR_type *) 0xf00362a4u)	/* ENDINIT Timeout Counter Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int POL            : 1;	/* Input Polarity */
		unsigned int MODE           : 1;	/* Mode Selection */
		unsigned int ENON           : 1;	/* Enable ON */
		unsigned int PSEL           : 1;	/* PORT Select */
		unsigned int                : 12;
		/* const */ unsigned int EMSF           : 1;	/* Emergency Stop Flag */
		/* const */ unsigned int SEMSF          : 1;	/* SMU Emergency Stop Flag */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} SCU_EMSR_type;
#define SCU_EMSR	(*( SCU_EMSR_type *) 0xf00360fcu)	/* Emergency Stop Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int EMSFM          : 2;	/* Emergency Stop Flag Modification */
		unsigned int SEMSFM         : 2;	/* SMU Emergency Stop Flag Modification */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SCU_EMSSW_type;
#define SCU_EMSSW	(*( SCU_EMSSW_type *) 0xf0036100u)	/* Emergency Stop Software set and clear register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 7;
		unsigned int EDCON          : 2;	/* Edge Detection Control */
		unsigned int                : 23;
	} B;
	int I;
	unsigned int U;

} SCU_ESRCFG0_type;
#define SCU_ESRCFG0	(*( SCU_ESRCFG0_type *) 0xf0036070u)	/* ESR0 Input Configuration Register */
#define SCU_ESRCFG1	(*( SCU_ESRCFG0_type *) 0xf0036074u)	/* ESR1 Input Configuration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ARI            : 1;	/* Application Reset Indicator */
		unsigned int ARC            : 1;	/* Application Reset Indicator Clear */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_ESROCFG_type;
#define SCU_ESROCFG	(*( SCU_ESROCFG_type *) 0xf0036078u)	/* ESR Output Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* External Clock Enable for EXTCLK0 */
		unsigned int                : 1;
		unsigned int SEL0           : 4;	/* External Clock Select for EXTCLK0 */
		unsigned int                : 10;
		unsigned int EN1            : 1;	/* External Clock Enable for EXTCLK1 */
		unsigned int NSEL           : 1;	/* Negation Selection */
		unsigned int SEL1           : 4;	/* External Clock Select for EXTCLK1 */
		unsigned int                : 2;
		unsigned int DIV1           : 8;	/* External Clock Divider for EXTCLK1 */
	} B;
	int I;
	unsigned int U;

} SCU_EXTCON_type;
#define SCU_EXTCON	(*( SCU_EXTCON_type *) 0xf003603cu)	/* External Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int STEP           : 10;	/* Step Value */
		unsigned int                : 4;
		unsigned int DM             : 2;	/* Divider Mode */
		/* const */ unsigned int RESULT         : 10;	/* Result Value */
		unsigned int                : 5;
		unsigned int DISCLK         : 1;	/* Disable Clock */
	} B;
	int I;
	unsigned int U;

} SCU_FDR_type;
#define SCU_FDR	(*( SCU_FDR_type *) 0xf0036038u)	/* Fractional Divider Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FS0            : 1;	/* Set Flag INTFx for Channel 0 */
		unsigned int FS1            : 1;	/* Set Flag INTFx for Channel 1 */
		unsigned int FS2            : 1;	/* Set Flag INTFx for Channel 2 */
		unsigned int FS3            : 1;	/* Set Flag INTFx for Channel 3 */
		unsigned int FS4            : 1;	/* Set Flag INTFx for Channel 4 */
		unsigned int FS5            : 1;	/* Set Flag INTFx for Channel 5 */
		unsigned int FS6            : 1;	/* Set Flag INTFx for Channel 6 */
		unsigned int FS7            : 1;	/* Set Flag INTFx for Channel 7 */
		unsigned int                : 8;
		unsigned int FC0            : 1;	/* Clear Flag INTFx for Channel 0 */
		unsigned int FC1            : 1;	/* Clear Flag INTFx for Channel 1 */
		unsigned int FC2            : 1;	/* Clear Flag INTFx for Channel 2 */
		unsigned int FC3            : 1;	/* Clear Flag INTFx for Channel 3 */
		unsigned int FC4            : 1;	/* Clear Flag INTFx for Channel 4 */
		unsigned int FC5            : 1;	/* Clear Flag INTFx for Channel 5 */
		unsigned int FC6            : 1;	/* Clear Flag INTFx for Channel 6 */
		unsigned int FC7            : 1;	/* Clear Flag INTFx for Channel 7 */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} SCU_FMR_type;
#define SCU_FMR	(*( SCU_FMR_type *) 0xf0036224u)	/* Flag Modification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} SCU_ID_type;
#define SCU_ID	(*( SCU_ID_type *) 0xf0036008u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IPEN00         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN01         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN02         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN03         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN04         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN05         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN06         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int IPEN07         : 1;	/* Flag Pattern Enable for Channel 0 */
		unsigned int                : 5;
		unsigned int GEEN0          : 1;	/* Generate Event Enable 0 */
		unsigned int IGP0           : 2;	/* Interrupt Gating Pattern 0 */
		unsigned int IPEN10         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN11         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN12         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN13         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN14         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN15         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN16         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int IPEN17         : 1;	/* Interrupt Pattern Enable for Channel 1 */
		unsigned int                : 5;
		unsigned int GEEN1          : 1;	/* Generate Event Enable 1 */
		unsigned int IGP1           : 2;	/* Interrupt Gating Pattern 1 */
	} B;
	int I;
	unsigned int U;

} SCU_IGCR0_type;
#define SCU_IGCR0	(*( SCU_IGCR0_type *) 0xf003622cu)	/* Flag Gating Register 0 */
#define SCU_IGCR1	(*( SCU_IGCR0_type *) 0xf0036230u)	/* Flag Gating Register 1 */
#define SCU_IGCR2	(*( SCU_IGCR0_type *) 0xf0036234u)	/* Flag Gating Register 2 */
#define SCU_IGCR3	(*( SCU_IGCR0_type *) 0xf0036238u)	/* Flag Gating Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int P0             : 1;	/* Input Bit 0 */
		/* const */ unsigned int P1             : 1;	/* Input Bit 1 */
		/* const */ unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_IN_type;
#define SCU_IN	(*( SCU_IN_type *) 0xf00360acu)	/* ESR Input Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 4;
		unsigned int PC0            : 4;	/* Control for ESR0 Pin */
		unsigned int                : 4;
		unsigned int PC1            : 4;	/* Control for ESR1 Pin */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_IOCR_type;
#define SCU_IOCR	(*( SCU_IOCR_type *) 0xf00360a0u)	/* Input/Output Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LBISTREQ       : 1;	/* LBIST Request */
		unsigned int LBISTRES       : 1;	/* LBIST-Reset- LBISTRES */
		unsigned int PATTERNS       : 18;	/* LBIST Pattern Number */
		unsigned int                : 8;
		/* const */ unsigned int LBISTDONE      : 1;	/* LBIST Execution Indicator */
		unsigned int                : 1;
		unsigned int LBISTERRINJ    : 1;	/* LBIST / Test-Mode Alarm Error Injection */
		unsigned int LBISTREQRED    : 1;	/* LBIST Request Redundancy */
	} B;
	int I;
	unsigned int U;

} SCU_LBISTCTRL0_type;
#define SCU_LBISTCTRL0	(*( SCU_LBISTCTRL0_type *) 0xf0036164u)	/* Logic BIST Control 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SEED           : 19;	/* LBIST Seed */
		unsigned int                : 5;
		unsigned int SPLITSH        : 3;	/* LBIST Split-Shift Selection */
		unsigned int BODY           : 1;	/* Body Application Indicator */
		unsigned int LBISTFREQU     : 4;	/* LBIST Frequency Selection */
	} B;
	int I;
	unsigned int U;

} SCU_LBISTCTRL1_type;
#define SCU_LBISTCTRL1	(*( SCU_LBISTCTRL1_type *) 0xf0036168u)	/* Logic BIST Control 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LENGTH         : 12;	/* LBIST Maximum Scan-Chain Length */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SCU_LBISTCTRL2_type;
#define SCU_LBISTCTRL2	(*( SCU_LBISTCTRL2_type *) 0xf003616cu)	/* Logic BIST Control 2 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SIGNATURE      : 32;	/* LBIST Signature */
	} B;
	int I;
	unsigned int U;

} SCU_LBISTCTRL3_type;
#define SCU_LBISTCTRL3	(*( SCU_LBISTCTRL3_type *) 0xf0036170u)	/* Logic BIST Control 3 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		/* const */ unsigned int LS0            : 1;	/* Lockstep Mode Status */
		unsigned int                : 14;
		unsigned int LSEN0          : 1;	/* Lockstep Enable */
	} B;
	int I;
	unsigned int U;

} SCU_LCLCON0_type;
#define SCU_LCLCON0	(*( SCU_LCLCON0_type *) 0xf0036134u)	/* LCL CPU0 and CPU2 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 16;
		/* const */ unsigned int LS1            : 1;	/* Lockstep Mode Status */
		unsigned int                : 14;
		unsigned int LSEN1          : 1;	/* Lockstep Enable */
	} B;
	int I;
	unsigned int U;

} SCU_LCLCON1_type;
#define SCU_LCLCON1	(*( SCU_LCLCON1_type *) 0xf0036138u)	/* LCL CPU1 and CPU3 Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int LCLT0          : 1;	/* LCL0 Lockstep Test */
		unsigned int LCLT1          : 1;	/* LCL1 Lockstep Test */
		unsigned int LCLT2          : 1;	/* LCL2 Lockstep Test */
		unsigned int                : 13;
		unsigned int PLCLT0         : 1;	/* PFI0 Lockstep Test */
		unsigned int PLCLT1         : 1;	/* PFI1 Lockstep Test */
		unsigned int PLCLT2         : 1;	/* PFI2 Lockstep Test */
		unsigned int                : 13;
	} B;
	int I;
	unsigned int U;

} SCU_LCLTEST_type;
#define SCU_LCLTEST	(*( SCU_LCLTEST_type *) 0xf003613cu)	/* LCL Test Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DEPT           : 5;	/* Department Identification Number */
		/* const */ unsigned int MANUF          : 11;	/* Manufacturer Identification Number */
		/* const */ unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_MANID_type;
#define SCU_MANID	(*( SCU_MANID_type *) 0xf0036144u)	/* Manufacturer Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PS0            : 1;	/* ESRx Pin Set Bit 0 */
		unsigned int PS1            : 1;	/* ESRx Pin Set Bit 1 */
		unsigned int                : 14;
		unsigned int PCL0           : 1;	/* ESRx Pin Clear Bit 0 */
		unsigned int PCL1           : 1;	/* ESRx Pin Clear Bit 1 */
		unsigned int                : 14;
	} B;
	int I;
	unsigned int U;

} SCU_OMR_type;
#define SCU_OMR	(*( SCU_OMR_type *) 0xf00360a8u)	/* ESR Output Modification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		/* const */ unsigned int PLLLV          : 1;	/* Oscillator for PLL Valid Low Status Bit */
		unsigned int OSCRES         : 1;	/* Oscillator Watchdog Reset */
		unsigned int GAINSEL        : 2;	/* Oscillator Gain Selection */
		unsigned int MODE           : 2;	/* Oscillator Mode */
		unsigned int SHBY           : 1;	/* Shaper Bypass */
		/* const */ unsigned int PLLHV          : 1;	/* Oscillator for PLL Valid High Status Bit */
		unsigned int HYSEN          : 1;	/* Hysteresis Enable */
		unsigned int HYSCTL         : 2;	/* Hysteresis Control */
		unsigned int AMPCTL         : 2;	/* Amplitude Control */
		unsigned int                : 2;
		unsigned int OSCVAL         : 5;	/* OSC Frequency Value */
		unsigned int                : 2;
		unsigned int APREN          : 1;	/* Amplitude Regulation Enable */
		unsigned int CAP0EN         : 1;	/* Capacitance 0 Enable */
		unsigned int CAP1EN         : 1;	/* Capacitance 1 Enable */
		unsigned int CAP2EN         : 1;	/* Capacitance 2 Enable */
		unsigned int CAP3EN         : 1;	/* Capacitance 3 Enable */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SCU_OSCCON_type;
#define SCU_OSCCON	(*( SCU_OSCCON_type *) 0xf0036010u)	/* OSC Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int P0             : 1;	/* Output Bit 0 */
		unsigned int P1             : 1;	/* Output Bit 1 */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_OUT_type;
#define SCU_OUT	(*( SCU_OUT_type *) 0xf00360a4u)	/* ESR Output Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CSEL0          : 1;	/* CPU Select 0 */
		unsigned int CSEL1          : 1;	/* CPU Select 1 (If product has CPU1) */
		unsigned int CSEL2          : 1;	/* CPU Select 2 (If product has CPU2) */
		unsigned int                : 13;
		unsigned int OVSTRT         : 1;	/* Overlay Start */
		unsigned int OVSTP          : 1;	/* Overlay Stop */
		unsigned int DCINVAL        : 1;	/* Data Cache Invalidate */
		unsigned int                : 5;
		unsigned int OVCONF         : 1;	/* Overlay Configured */
		unsigned int POVCONF        : 1;	/* Write Protection for OVCONF */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} SCU_OVCCON_type;
#define SCU_OVCCON	(*( SCU_OVCCON_type *) 0xf00361e4u)	/* Overlay Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int OVEN0          : 1;	/* Overlay Enable 0 */
		unsigned int OVEN1          : 1;	/* Overlay Enable 1 (If product has CPU1) */
		unsigned int OVEN2          : 1;	/* Overlay Enable 2 (If product has CPU2) */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} SCU_OVCENABLE_type;
#define SCU_OVCENABLE	(*( SCU_OVCENABLE_type *) 0xf00361e0u)	/* Overlay Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PDIS0          : 1;	/* Pad Disable for ESR Pin 0 */
		unsigned int PDIS1          : 1;	/* Pad Disable for ESR Pin 1 */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SCU_PDISC_type;
#define SCU_PDISC	(*( SCU_PDISC_type *) 0xf003618cu)	/* Pad Disable Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int PD0            : 2;	/* Pad Driver Mode for ESR Pins 0 */
		unsigned int PL0            : 2;	/* Pad Level Selection for ESR Pins 0 */
		unsigned int PD1            : 2;	/* Pad Driver Mode for ESR Pins 1 */
		unsigned int PL1            : 2;	/* Pad Level Selection for ESR Pins 1 */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} SCU_PDR_type;
#define SCU_PDR	(*( SCU_PDR_type *) 0xf003609cu)	/* ESR Pad Driver Mode Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int PDR0           : 1;	/* Pattern Detection Result of Channel 0 */
		/* const */ unsigned int PDR1           : 1;	/* Pattern Detection Result of Channel 1 */
		/* const */ unsigned int PDR2           : 1;	/* Pattern Detection Result of Channel 2 */
		/* const */ unsigned int PDR3           : 1;	/* Pattern Detection Result of Channel 3 */
		/* const */ unsigned int PDR4           : 1;	/* Pattern Detection Result of Channel 4 */
		/* const */ unsigned int PDR5           : 1;	/* Pattern Detection Result of Channel 5 */
		/* const */ unsigned int PDR6           : 1;	/* Pattern Detection Result of Channel 6 */
		/* const */ unsigned int PDR7           : 1;	/* Pattern Detection Result of Channel 7 */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} SCU_PDRR_type;
#define SCU_PDRR	(*( SCU_PDRR_type *) 0xf0036228u)	/* Pattern Detection Result Register */

typedef volatile union
{
	struct
	{ 
		unsigned int DIVBY          : 1;	/* Divider Bypass */
		unsigned int                : 8;
		unsigned int NDIV           : 7;	/* N-Divider Value */
		unsigned int PLLPWD         : 1;	/* Peripheral PLL Power Saving Mode */
		unsigned int                : 1;
		unsigned int RESLD          : 1;	/* Restart DCO Lock Detection */
		unsigned int                : 5;
		unsigned int PDIV           : 3;	/* P-Divider Value */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} SCU_PERPLLCON0_type;
#define SCU_PERPLLCON0	(*( SCU_PERPLLCON0_type *) 0xf0036028u)	/* Peripheral PLL Configuration 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int K2DIV          : 3;	/* K2-Divider Value */
		unsigned int                : 5;
		unsigned int K3DIV          : 3;	/* K3-Divider Value */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} SCU_PERPLLCON1_type;
#define SCU_PERPLLCON1	(*( SCU_PERPLLCON1_type *) 0xf003602cu)	/* Peripheral PLL Configuration 1 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 1;
		/* const */ unsigned int PWDSTAT        : 1;	/* Peripheral PLL Power-saving Mode Status */
		/* const */ unsigned int LOCK           : 1;	/* Peripheral PLL Lock Status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int K3RDY          : 1;	/* K3 Divider Ready Status */
		/* const */ unsigned int K2RDY          : 1;	/* K2 Divider Ready Status */
		/* const */ unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_PERPLLSTAT_type;
#define SCU_PERPLLSTAT	(*( SCU_PERPLLSTAT_type *) 0xf0036024u)	/* Peripheral PLL Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int REQSLP         : 2;	/* Idle Mode and Sleep Mode Request */
		unsigned int                : 6;
		/* const */ unsigned int PMST           : 3;	/* Power management Status */
		unsigned int                : 21;
	} B;
	int I;
	unsigned int U;

} SCU_PMCSR0_type;
#define SCU_PMCSR0	(*( SCU_PMCSR0_type *) 0xf00360c8u)	/* Power Management Control and Status Register */
#define SCU_PMCSR1	(*( SCU_PMCSR0_type *) 0xf00360ccu)	/* Power Management Control and Status Register */
#define SCU_PMCSR2	(*( SCU_PMCSR0_type *) 0xf00360d0u)	/* Power Management Control and Status Register */
#define SCU_PMCSR3	(*( SCU_PMCSR0_type *) 0xf00360d4u)	/* Power Management Control and Status Register */
#define SCU_PMCSR4	(*( SCU_PMCSR0_type *) 0xf00360d8u)	/* Power Management Control and Status Register */
#define SCU_PMCSR5	(*( SCU_PMCSR0_type *) 0xf00360dcu)	/* Power Management Control and Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CPU0           : 1;	/* CPU0 Status */
		/* const */ unsigned int CPU1           : 1;	/* CPU1 Status */
		/* const */ unsigned int CPU2           : 1;	/* CPU2 Status */
		/* const */ unsigned int CPU3           : 1;	/* CPU3 Status */
		/* const */ unsigned int CPU4           : 1;	/* CPU4 Status */
		/* const */ unsigned int CPU5           : 1;	/* CPU5 Status */
		/* const */ unsigned int                : 10;
		/* const */ unsigned int CPU0LS         : 1;	/* CPU0LS Status */
		/* const */ unsigned int CPU1LS         : 1;	/* CPU1LS Status */
		/* const */ unsigned int CPU2LS         : 1;	/* CPU2LS Status */
		/* const */ unsigned int CPU3LS         : 1;	/* CPU3LS Status */
		/* const */ unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} SCU_PMSTAT0_type;
#define SCU_PMSTAT0	(*( SCU_PMSTAT0_type *) 0xf00360e4u)	/* Power Management Status Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 8;
		unsigned int CPUIDLSEL      : 3;	/* CPU selection for Idle mode */
		unsigned int                : 1;
		unsigned int IRADIS         : 1;	/* Idle-Request-Acknowledge Sequence Disable */
		unsigned int                : 11;
		unsigned int CPUSEL         : 3;	/* CPU selection for Sleep and Standby mode */
		unsigned int STBYEVEN       : 1;	/* Standby Entry Event configuration enable */
		unsigned int STBYEV         : 3;	/* Standby Entry Event Configuration */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SCU_PMSWCR1_type;
#define SCU_PMSWCR1	(*( SCU_PMSWCR1_type *) 0xf00360e8u)	/* Standby and Wake-up Control Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int LJTEN          : 1;	/* Load Jump Timer Enable */
		unsigned int LJTOVEN        : 1;	/* Load Jump Timer Overflow Enable */
		unsigned int LJTOVIEN       : 1;	/* Load Jump Timer Overflow Interrupt Enable */
		unsigned int LJTSTRT        : 1;	/* Load Jump Timer Start */
		unsigned int LJTSTP         : 1;	/* Load Jump Timer Stop */
		unsigned int LJTCLR         : 1;	/* Load Jump Timer Clear */
		unsigned int                : 6;
		unsigned int SDSTEP         : 4;	/* Droop Voltage Step(vdroop_step_i) */
		unsigned int VDTEN          : 1;	/* Voltage Droop Timer Enable */
		unsigned int VDTOVEN        : 1;	/* Voltage Droop Timer Overflow Enable */
		unsigned int VDTOVIEN       : 1;	/* Voltage Droop Timer Overflow Interrupt Enable */
		unsigned int VDTSTRT        : 1;	/* Voltage Droop Timer Start */
		unsigned int VDTSTP         : 1;	/* Voltage Droop Timer Stop */
		unsigned int VDTCLR         : 1;	/* Voltage Droop Timer Clear */
		unsigned int                : 7;
		unsigned int LPSLPEN        : 1;	/* EVRC Low Power Mode activation on a Sleep Request */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} SCU_PMTRCSR0_type;
#define SCU_PMTRCSR0	(*( SCU_PMTRCSR0_type *) 0xf0036198u)	/* Power Management Transition Control and Status Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int LJTCV          : 16;	/* Load Jump Timer Compare Setpoint Value */
		unsigned int VDTCV          : 10;	/* Voltage Droop Timer Compare Setpoint Value */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} SCU_PMTRCSR1_type;
#define SCU_PMTRCSR1	(*( SCU_PMTRCSR1_type *) 0xf003619cu)	/* Power Management Transition Control and Status Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int LDJMPREQ       : 2;	/* Load Jump Request */
		unsigned int                : 2;
		/* const */ unsigned int LJTRUN         : 2;	/* Load Jump Timer Run Status */
		unsigned int                : 2;
		/* const */ unsigned int LJTOV          : 1;	/* Load Jump Timer Overflow Status */
		unsigned int                : 3;
		unsigned int LJTOVCLR       : 1;	/* Load Jump Timer Overflow Status Clear */
		unsigned int                : 3;
		/* const */ unsigned int LJTCNT         : 16;	/* Load Jump Timer Value */
	} B;
	int I;
	unsigned int U;

} SCU_PMTRCSR2_type;
#define SCU_PMTRCSR2	(*( SCU_PMTRCSR2_type *) 0xf00361a0u)	/* Power Management Transition Control and Status Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int VDROOPREQ      : 2;	/* Voltage Droop Request */
		unsigned int                : 2;
		/* const */ unsigned int VDTRUN         : 2;	/* Voltage Droop Timer Run Status */
		unsigned int                : 2;
		/* const */ unsigned int VDTOV          : 1;	/* Voltage Droop Timer Overflow Status */
		unsigned int                : 3;
		unsigned int VDTOVCLR       : 1;	/* Voltage Droop Timer Overflow Status Clear */
		unsigned int                : 3;
		/* const */ unsigned int VDTCNT         : 10;	/* Voltage Droop Timer Value */
		unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} SCU_PMTRCSR3_type;
#define SCU_PMTRCSR3	(*( SCU_PMTRCSR3_type *) 0xf00361a4u)	/* Power Management Transition Control and Status Register 3 */

typedef volatile union
{
	struct
	{ 
		unsigned int ESR0           : 2;	/* ESR0 Reset Request Trigger Reset Configuration */
		unsigned int ESR1           : 2;	/* ESR1 Reset Request Trigger Reset Configuration */
		unsigned int                : 2;
		unsigned int SMU            : 2;	/* SMU Reset Request Trigger Reset Configuration */
		unsigned int SW             : 2;	/* SW Reset Request Trigger Reset Configuration */
		unsigned int STM0           : 2;	/* STM0 Reset Request Trigger Reset Configuration */
		unsigned int STM1           : 2;	/* STM1 Reset Request Trigger Reset Configuration (If Product has STM1) */
		unsigned int STM2           : 2;	/* STM2 Reset Request Trigger Reset Configuration (If Product has STM2) */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_RSTCON_type;
#define SCU_RSTCON	(*( SCU_RSTCON_type *) 0xf0036058u)	/* Reset Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int FRTO           : 1;	/* Force Reset Timeout */
		unsigned int CLRC           : 1;	/* Clear Cold Reset Status */
		unsigned int                : 5;
		/* const */ unsigned int CSSx           : 6;	/* CPU x Shutdown State Reached */
		unsigned int                : 3;
		unsigned int USRINFO        : 16;	/* User Information */
	} B;
	int I;
	unsigned int U;

} SCU_RSTCON2_type;
#define SCU_RSTCON2	(*( SCU_RSTCON2_type *) 0xf0036064u)	/* Additional Reset Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SCU_RSTCON3_type;
#define SCU_RSTCON3	(*( SCU_RSTCON3_type *) 0xf0036068u)	/* Reset Configuration Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ESR0           : 1;	/* Reset Request Trigger Reset Status for ESR0 */
		/* const */ unsigned int ESR1           : 1;	/* Reset Request Trigger Reset Status for ESR1 */
		unsigned int                : 1;
		/* const */ unsigned int SMU            : 1;	/* Reset Request Trigger Reset Status for SMU */
		/* const */ unsigned int SW             : 1;	/* Reset Request Trigger Reset Status for SW */
		/* const */ unsigned int STM0           : 1;	/* Reset Request Trigger Reset Status for STM0 Compare Match */
		/* const */ unsigned int STM1           : 1;	/* Reset Request Trigger Reset Status for STM1 Compare Match (If Product has STM1) */
		/* const */ unsigned int STM2           : 1;	/* Reset Request Trigger Reset Status for STM2 Compare Match (If Product has STM2) */
		unsigned int                : 8;
		/* const */ unsigned int PORST          : 1;	/* Reset Request Trigger Reset Status for PORST */
		unsigned int                : 1;
		/* const */ unsigned int CB0            : 1;	/* Reset Request Trigger Reset Status for Cerberus System Reset */
		/* const */ unsigned int CB1            : 1;	/* Reset Request Trigger Reset Status for Cerberus Debug Reset */
		/* const */ unsigned int CB3            : 1;	/* Reset Request Trigger Reset Status for Cerberus Application Reset */
		unsigned int R21            : 1;	/* Reserved - 0 */
		unsigned int R22            : 1;	/* Reserved - 0 */
		/* const */ unsigned int EVRC           : 1;	/* Reset Request Trigger Reset Status for EVRC */
		/* const */ unsigned int EVR33          : 1;	/* Reset Request Trigger Reset Status for EVR33 */
		/* const */ unsigned int SWD            : 1;	/* Reset Request Trigger Reset Status for Supply Watchdog (SWD) */
		/* const */ unsigned int HSMS           : 1;	/* Reset Request Trigger Reset Status for HSM System Reset (HSM S) */
		/* const */ unsigned int HSMA           : 1;	/* Reset Request Trigger Reset Status for HSM Application Reset (HSM A) */
		/* const */ unsigned int STBYR          : 1;	/* Reset Request Trigger Reset Status for Standby Regulator Watchdog (STBYR) */
		/* const */ unsigned int LBPORST        : 1;	/* LBIST termination due to PORST */
		/* const */ unsigned int LBTERM         : 1;	/* LBIST was properly terminated */
		unsigned int                : 1;
	} B;
	int I;
	unsigned int U;

} SCU_RSTSTAT_type;
#define SCU_RSTSTAT	(*( SCU_RSTSTAT_type *) 0xf0036050u)	/* Reset Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 Reserved       : 1;	/* Reserved Bit */
		unsigned __sfrbit32 ENDINIT        : 1;	/* End-of-Initialization Control Bit */
		unsigned __sfrbit32 EPW            : 14;	/* User-Definable Safety ENDINIT Password Field */
		/* const */ unsigned __sfrbit32 REL            : 16;	/* Reload Value for the Safety ENDINIT Timeout Counter */
	} B;
	int I;
	unsigned int U;

} SCU_SEICON0_type;
#define SCU_SEICON0	(*( SCU_SEICON0_type *) 0xf00362b4u)	/* Safety ENDINIT Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int IR0            : 1;	/* Input Frequency Request Control - IR1,IR0 */
		unsigned int DR             : 1;	/* Disable Request Control Bit */
		unsigned int                : 1;
		unsigned int IR1            : 1;	/* Input Frequency Request Control */
		unsigned int                : 26;
	} B;
	int I;
	unsigned int U;

} SCU_SEICON1_type;
#define SCU_SEICON1	(*( SCU_SEICON1_type *) 0xf00362b8u)	/* Safety ENDINIT Control Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AE             : 1;	/* SEICON0 Access Error Status Flag */
		/* const */ unsigned int OE             : 1;	/* SEI Timeout Overflow Error Status Flag */
		/* const */ unsigned int IS0            : 1;	/* SEI Timeout Input Clock Status */
		/* const */ unsigned int DS             : 1;	/* SEI Enable/Disable Status Flag */
		/* const */ unsigned int TO             : 1;	/* SEI Time-Out Mode Flag */
		/* const */ unsigned int IS1            : 1;	/* SEI Timeout Input Clock Status - IS0, IS1 */
		/* const */ unsigned int Reserved       : 10;	/* Reserved */
		/* const */ unsigned int TIM            : 16;	/* Timer Value */
	} B;
	int I;
	unsigned int U;

} SCU_SEISR_type;
#define SCU_SEISR	(*( SCU_SEISR_type *) 0xf00362bcu)	/* Safety ENDINIT Timeout Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 13;
		unsigned int SFCBAE         : 1;	/* Set Flash Config. Sector Access Enable */
		unsigned int CFCBAE         : 1;	/* Clear Flash Config. Sector Access Enable */
		unsigned int STP            : 1;	/* Start-up Protection Setting */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_STCON_type;
#define SCU_STCON	(*( SCU_STCON_type *) 0xf00360c4u)	/* Start-up Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MEM            : 32;	/* Memory */
	} B;
	int I;
	unsigned int U;

} SCU_STMEM1_type;
#define SCU_STMEM1	(*( SCU_STMEM1_type *) 0xf0036184u)	/* Start-up Memory Register 1 */
#define SCU_STMEM2	(*( SCU_STMEM1_type *) 0xf0036188u)	/* Start-up Memory Register 2 */
#define SCU_STMEM3	(*( SCU_STMEM1_type *) 0xf00361c0u)	/* Start-up Memory Register 3 */
#define SCU_STMEM4	(*( SCU_STMEM1_type *) 0xf00361c4u)	/* Start-up Memory Register 4 */
#define SCU_STMEM5	(*( SCU_STMEM1_type *) 0xf00361c8u)	/* Start-up Memory Register 5 */
#define SCU_STMEM6	(*( SCU_STMEM1_type *) 0xf00361ccu)	/* Start-up Memory Register 6 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int HWCFG          : 8;	/* Hardware Configuration Setting */
		/* const */ unsigned int FTM            : 7;	/* Firmware Test Setting */
		/* const */ unsigned int MODE           : 1;	/* MODE */
		/* const */ unsigned int FCBAE          : 1;	/* Flash Config. Sector Access Enable */
		/* const */ unsigned int LUDIS          : 1;	/* Latch Update Disable */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int TRSTL          : 1;	/* TRSTL Status */
		/* const */ unsigned int SPDEN          : 1;	/* Single Pin DAP Mode Enable */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int RAMINT         : 1;	/* RAM Content Security Integrity */
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} SCU_STSTAT_type;
#define SCU_STSTAT	(*( SCU_STSTAT_type *) 0xf00360c0u)	/* Start-up Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDRCFG        : 2;	/* Address Configuration */
		unsigned int Spare          : 14;	/* Spare address configuration registers */
		/* const */ unsigned int Reserved       : 16;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SCU_SWAPCTRL_type;
#define SCU_SWAPCTRL	(*( SCU_SWAPCTRL_type *) 0xf003614cu)	/* Alternate Address Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 1;
		unsigned int SWRSTREQ       : 1;	/* Software Reset Request */
		unsigned int                : 6;
		unsigned int RES            : 8;	/* Reserved */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_SWRSTCON_type;
#define SCU_SWRSTCON	(*( SCU_SWRSTCON_type *) 0xf0036060u)	/* Software Reset Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CCTRIG0        : 1;	/* Capture Compare Trigger 0 */
		unsigned int                : 1;
		unsigned int RAMINTM        : 2;	/* RAM Integrity Modify */
		unsigned int SETLUDIS       : 1;	/* Set Latch Update Disable */
		unsigned int                : 2;
		unsigned int Res            : 1;	/* Reserved */
		unsigned int DDC            : 1;	/* Disable DXCPL */
		unsigned int Res_6          : 7;	/* Reserved */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_SYSCON_type;
#define SCU_SYSCON	(*( SCU_SYSCON_type *) 0xf003607cu)	/* System Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int MODEN          : 1;	/* Modulation Enable */
		unsigned int                : 6;
		unsigned int NDIV           : 7;	/* N-Divider Value */
		unsigned int PLLPWD         : 1;	/* System PLL Power Saving Mode */
		unsigned int                : 1;
		unsigned int RESLD          : 1;	/* Restart DCO Lock Detection */
		unsigned int                : 5;
		unsigned int PDIV           : 3;	/* P-Divider Value */
		unsigned int                : 3;
		unsigned int INSEL          : 2;	/* Input Selection */
	} B;
	int I;
	unsigned int U;

} SCU_SYSPLLCON0_type;
#define SCU_SYSPLLCON0	(*( SCU_SYSPLLCON0_type *) 0xf0036018u)	/* System PLL Configuration 0 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int K2DIV          : 3;	/* K2-Divider Value */
		unsigned int                : 29;
	} B;
	int I;
	unsigned int U;

} SCU_SYSPLLCON1_type;
#define SCU_SYSPLLCON1	(*( SCU_SYSPLLCON1_type *) 0xf003601cu)	/* System PLL Configuration 1 Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MODCFG         : 16;	/* Modulation Configuration */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_SYSPLLCON2_type;
#define SCU_SYSPLLCON2	(*( SCU_SYSPLLCON2_type *) 0xf0036020u)	/* System PLL Configuration 2 Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 1;
		/* const */ unsigned int PWDSTAT        : 1;	/* System PLL Power-saving Mode Status */
		/* const */ unsigned int LOCK           : 1;	/* System PLL Lock Status */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int K2RDY          : 1;	/* K2 Divider Ready Status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int MODRUN         : 1;	/* Modulation Run */
		/* const */ unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} SCU_SYSPLLSTAT_type;
#define SCU_SYSPLLSTAT	(*( SCU_SYSPLLSTAT_type *) 0xf0036014u)	/* System PLL Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ESR0T          : 1;	/* Clear Trap Request Flag ESR0T */
		unsigned int ESR1T          : 1;	/* Clear Trap Request Flag ESR1T */
		unsigned int TRAP2          : 1;	/* Clear Trap Request Flag TRAP2 */
		unsigned int SMUT           : 1;	/* Clear Trap Request Flag SMUT */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPCLR_type;
#define SCU_TRAPCLR	(*( SCU_TRAPCLR_type *) 0xf003612cu)	/* Trap Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU0ESR0T      : 1;	/* Disable Trap Request ESR0T on CPU0 */
		unsigned int CPU0ESR1T      : 1;	/* Disable Trap Request ESR1T on CPU0 */
		unsigned int CPU0TRAP2T     : 1;	/* Disable Trap Request TRAP2T on CPU0 */
		unsigned int CPU0SMUT       : 1;	/* Disable Trap Request SMUT on CPU0 */
		unsigned int                : 4;
		unsigned int CPU1ESR0T      : 1;	/* Disable Trap Request ESR0T on CPU1 (If product has CPU1) */
		unsigned int CPU1ESR1T      : 1;	/* Disable Trap Request ESR1T on CPU1 (If product has CPU1) */
		unsigned int CPU1TRAP2T     : 1;	/* Disable Trap Request TRAP2T on CPU1 (If product has CPU1) */
		unsigned int CPU1SMUT       : 1;	/* Disable Trap Request SMUT on CPU1 (If product has CPU1) */
		unsigned int                : 4;
		unsigned int CPU2ESR0T      : 1;	/* Disable Trap Request ESR0T on CPU2 (If product has CPU2) */
		unsigned int CPU2ESR1T      : 1;	/* Disable Trap Request ESR1T on CPU2 (If product has CPU2) */
		unsigned int CPU2TRAP2T     : 1;	/* Disable Trap Request TRAP2T on CPU2 (If product has CPU2) */
		unsigned int CPU2SMUT       : 1;	/* Disable Trap Request SMUT on CPU2 (If product has CPU2) */
		unsigned int                : 4;
		unsigned int CPU3xT         : 4;	/* Reserved in this product */
		unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPDIS0_type;
#define SCU_TRAPDIS0	(*( SCU_TRAPDIS0_type *) 0xf0036130u)	/* Trap Disable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU4xT         : 4;	/* Reserved in this product */
		unsigned int                : 4;
		unsigned int CPU5xT         : 4;	/* Reserved in this product */
		unsigned int                : 20;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPDIS1_type;
#define SCU_TRAPDIS1	(*( SCU_TRAPDIS1_type *) 0xf0036120u)	/* Trap Disable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int ESR0T          : 1;	/* Set Trap Request Flag ESR0T */
		unsigned int ESR1T          : 1;	/* Set Trap Request Flag ESR1T */
		unsigned int TRAP2          : 1;	/* Set Trap Request Flag TRAP2 */
		unsigned int SMUT           : 1;	/* Set Trap Request Flag SMUT */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPSET_type;
#define SCU_TRAPSET	(*( SCU_TRAPSET_type *) 0xf0036128u)	/* Trap Set Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ESR0T          : 1;	/* ESR0 Trap Request Flag */
		/* const */ unsigned int ESR1T          : 1;	/* ESR1 Trap Request Flag */
		/* const */ unsigned int TRAP2          : 1;	/* Trap Bit 2 Request Flag */
		/* const */ unsigned int SMUT           : 1;	/* SMU Alarm Trap Request Flag */
		/* const */ unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SCU_TRAPSTAT_type;
#define SCU_TRAPSTAT	(*( SCU_TRAPSTAT_type *) 0xf0036124u)	/* Trap Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ENDINIT        : 1;	/* End-of-Initialization Control Bit */
		unsigned __sfrbit32 LCK            : 1;	/* Lock Bit to Control Access to WDTxCON0 */
		unsigned __sfrbit32 PW             : 14;	/* User-Definable Password Field for Access to WDTxCON0 */
		unsigned __sfrbit32 REL            : 16;	/* Reload Value for the WDT (also Time Check Value) */
	} B;
	int I;
	unsigned int U;

} SCU_WDTCPU0CON0_type;
#define SCU_WDTCPU0CON0	(*( SCU_WDTCPU0CON0_type *) 0xf003624cu)	/* CPU0 WDT Control Register 0 */
#define SCU_WDTCPU1CON0	(*( SCU_WDTCPU0CON0_type *) 0xf0036258u)	/* CPU1 WDT Control Register 0 */
#define SCU_WDTCPU2CON0	(*( SCU_WDTCPU0CON0_type *) 0xf0036264u)	/* CPU2 WDT Control Register 0 */
#define SCU_WDTSCON0	(*( SCU_WDTCPU0CON0_type *) 0xf00362a8u)	/* Safety WDT Control Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 2;
		unsigned int IR0            : 1;	/* Input Frequency Request Control - IR1,IR0 */
		unsigned int DR             : 1;	/* Disable Request Control Bit */
		unsigned int                : 1;
		unsigned int IR1            : 1;	/* Input Frequency Request Control */
		unsigned int UR             : 1;	/* Unlock Restriction Request Control Bit */
		unsigned int PAR            : 1;	/* Password Auto-sequence Request Bit */
		unsigned int TCR            : 1;	/* Counter Check Request Bit */
		unsigned int TCTR           : 7;	/* Timer Check Tolerance Request */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_WDTCPU0CON1_type;
#define SCU_WDTCPU0CON1	(*( SCU_WDTCPU0CON1_type *) 0xf0036250u)	/* CPU0 WDT Control Register 1 */
#define SCU_WDTCPU1CON1	(*( SCU_WDTCPU0CON1_type *) 0xf003625cu)	/* CPU1 WDT Control Register 1 */
#define SCU_WDTCPU2CON1	(*( SCU_WDTCPU0CON1_type *) 0xf0036268u)	/* CPU2 WDT Control Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AE             : 1;	/* Watchdog Access Error Status Flag */
		/* const */ unsigned int OE             : 1;	/* Watchdog Overflow Error Status Flag */
		/* const */ unsigned int IS0            : 1;	/* Watchdog Input Clock Status - IS1,IS0 */
		/* const */ unsigned int DS             : 1;	/* Watchdog Enable/Disable Status Flag */
		/* const */ unsigned int TO             : 1;	/* Watchdog Time-Out Mode Flag */
		/* const */ unsigned int IS1            : 1;	/* Watchdog Input Clock Status */
		/* const */ unsigned int US             : 1;	/* SMU Unlock Restriction Status Flag */
		/* const */ unsigned int PAS            : 1;	/* Password Auto-sequence Status Flag */
		/* const */ unsigned int TCS            : 1;	/* Timer Check Status Flag */
		/* const */ unsigned int TCT            : 7;	/* Timer Check Tolerance */
		/* const */ unsigned int TIM            : 16;	/* Timer Value */
	} B;
	int I;
	unsigned int U;

} SCU_WDTCPU0SR_type;
#define SCU_WDTCPU0SR	(*( SCU_WDTCPU0SR_type *) 0xf0036254u)	/* CPU0 WDT Status Register */
#define SCU_WDTCPU1SR	(*( SCU_WDTCPU0SR_type *) 0xf0036260u)	/* CPU1 WDT Status Register */
#define SCU_WDTCPU2SR	(*( SCU_WDTCPU0SR_type *) 0xf003626cu)	/* CPU2 WDT Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CLRIRF         : 1;	/* Clear Internal Reset Flag */
		unsigned int                : 1;
		unsigned int IR0            : 1;	/* Input Frequency Request Control - IR1,IR0 */
		unsigned int DR             : 1;	/* Disable Request Control Bit */
		unsigned int                : 1;
		unsigned int IR1            : 1;	/* Input Frequency Request Control */
		unsigned int UR             : 1;	/* Unlock Restriction Request Control Bit */
		unsigned int PAR            : 1;	/* Password Auto-sequence Request Bit */
		unsigned int TCR            : 1;	/* Counter Check Request Bit */
		unsigned int TCTR           : 7;	/* Timer Check Tolerance Request */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} SCU_WDTSCON1_type;
#define SCU_WDTSCON1	(*( SCU_WDTSCON1_type *) 0xf00362acu)	/* Safety WDT Control Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int AE             : 1;	/* Watchdog Access Error Status Flag */
		/* const */ unsigned int OE             : 1;	/* Watchdog Overflow Error Status Flag */
		/* const */ unsigned int IS0            : 1;	/* Watchdog Input Clock Status - IS1,IS0 */
		/* const */ unsigned int DS             : 1;	/* Watchdog Enable/Disable Status Flag */
		/* const */ unsigned int TO             : 1;	/* Watchdog Time-Out Mode Flag */
		/* const */ unsigned int IS1            : 1;	/* Watchdog Input Clock Status */
		/* const */ unsigned int US             : 1;	/* SMU Unlock Restriction Status Flag */
		/* const */ unsigned int PAS            : 1;	/* Password Auto-sequence Status Flag */
		/* const */ unsigned int TCS            : 1;	/* Timer Check Status Flag */
		/* const */ unsigned int TCT            : 7;	/* Timer Check Tolerance */
		/* const */ unsigned int TIM            : 16;	/* Timer Value */
	} B;
	int I;
	unsigned int U;

} SCU_WDTSSR_type;
#define SCU_WDTSSR	(*( SCU_WDTSSR_type *) 0xf00362b0u)	/* Safety WDT Status Register */


/* IOM */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} IOM_ACCEN0_type;
#define IOM_ACCEN0	(*( IOM_ACCEN0_type *) 0xf003502cu)	/* IOM Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} IOM_ACCEN1_type;
#define IOM_ACCEN1	(*( IOM_ACCEN1_type *) 0xf0035028u)	/* IOM Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 4;
		unsigned int RMC            : 8;	/* 8-bit Clock Divider Value in RUN Mode */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} IOM_CLC_type;
#define IOM_CLC	(*( IOM_CLC_type *) 0xf0035000u)	/* IOM Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SELC0          : 4;	/* Event Channel Select */
		unsigned int THRC0          : 4;	/* Channel Event Counter Threshold */
		unsigned int SELC1          : 4;	/* Event Channel Select */
		unsigned int THRC1          : 4;	/* Channel Event Counter Threshold */
		unsigned int SELC2          : 4;	/* Event Channel Select */
		unsigned int THRC2          : 4;	/* Channel Event Counter Threshold */
		unsigned int SELC3          : 4;	/* Event Channel Select */
		unsigned int THRC3          : 4;	/* Channel Event Counter Threshold */
	} B;
	int I;
	unsigned int U;

} IOM_ECMCCFG_type;
#define IOM_ECMCCFG	(*( IOM_ECMCCFG_type *) 0xf0035030u)	/* IOM Event Combiner Module Counter Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ETA0           : 1;	/* LAM 0-15 Eve0t Trigger Activity (last) */
		unsigned int ETA1           : 1;	/* LAM 0-15 Eve1t Trigger Activity (last) */
		unsigned int ETA2           : 1;	/* LAM 0-15 Eve2t Trigger Activity (last) */
		unsigned int ETA3           : 1;	/* LAM 0-15 Eve3t Trigger Activity (last) */
		unsigned int ETA4           : 1;	/* LAM 0-15 Eve4t Trigger Activity (last) */
		unsigned int ETA5           : 1;	/* LAM 0-15 Eve5t Trigger Activity (last) */
		unsigned int ETA6           : 1;	/* LAM 0-15 Eve6t Trigger Activity (last) */
		unsigned int ETA7           : 1;	/* LAM 0-15 Eve7t Trigger Activity (last) */
		unsigned int ETA8           : 1;	/* LAM 0-15 Eve8t Trigger Activity (last) */
		unsigned int ETA9           : 1;	/* LAM 0-15 Eve9t Trigger Activity (last) */
		unsigned int ETA10          : 1;	/* LAM 0-15 Eve10t Trigger Activity (last) */
		unsigned int ETA11          : 1;	/* LAM 0-15 Eve11t Trigger Activity (last) */
		unsigned int ETA12          : 1;	/* LAM 0-15 Eve12t Trigger Activity (last) */
		unsigned int ETA13          : 1;	/* LAM 0-15 Eve13t Trigger Activity (last) */
		unsigned int ETA14          : 1;	/* LAM 0-15 Eve14t Trigger Activity (last) */
		unsigned int ETA15          : 1;	/* LAM 0-15 Eve15t Trigger Activity (last) */
		unsigned int ETB0           : 1;	/* LAM 0-15 Eve0t Trigger Activity (previous ETA0-15) */
		unsigned int ETB1           : 1;	/* LAM 0-15 Eve1t Trigger Activity (previous ETA0-15) */
		unsigned int ETB2           : 1;	/* LAM 0-15 Eve2t Trigger Activity (previous ETA0-15) */
		unsigned int ETB3           : 1;	/* LAM 0-15 Eve3t Trigger Activity (previous ETA0-15) */
		unsigned int ETB4           : 1;	/* LAM 0-15 Eve4t Trigger Activity (previous ETA0-15) */
		unsigned int ETB5           : 1;	/* LAM 0-15 Eve5t Trigger Activity (previous ETA0-15) */
		unsigned int ETB6           : 1;	/* LAM 0-15 Eve6t Trigger Activity (previous ETA0-15) */
		unsigned int ETB7           : 1;	/* LAM 0-15 Eve7t Trigger Activity (previous ETA0-15) */
		unsigned int ETB8           : 1;	/* LAM 0-15 Eve8t Trigger Activity (previous ETA0-15) */
		unsigned int ETB9           : 1;	/* LAM 0-15 Eve9t Trigger Activity (previous ETA0-15) */
		unsigned int ETB10          : 1;	/* LAM 0-15 Eve10t Trigger Activity (previous ETA0-15) */
		unsigned int ETB11          : 1;	/* LAM 0-15 Eve11t Trigger Activity (previous ETA0-15) */
		unsigned int ETB12          : 1;	/* LAM 0-15 Eve12t Trigger Activity (previous ETA0-15) */
		unsigned int ETB13          : 1;	/* LAM 0-15 Eve13t Trigger Activity (previous ETA0-15) */
		unsigned int ETB14          : 1;	/* LAM 0-15 Eve14t Trigger Activity (previous ETA0-15) */
		unsigned int ETB15          : 1;	/* LAM 0-15 Eve15t Trigger Activity (previous ETA0-15) */
	} B;
	int I;
	unsigned int U;

} IOM_ECMETH0_type;
#define IOM_ECMETH0	(*( IOM_ECMETH0_type *) 0xf0035038u)	/* IOM Event Combiner Module Event Trigger History Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int ETC0           : 1;	/* LAM 0-15 Eve0t Trigger Activity (previous ETB0-15) */
		unsigned int ETC1           : 1;	/* LAM 0-15 Eve1t Trigger Activity (previous ETB0-15) */
		unsigned int ETC2           : 1;	/* LAM 0-15 Eve2t Trigger Activity (previous ETB0-15) */
		unsigned int ETC3           : 1;	/* LAM 0-15 Eve3t Trigger Activity (previous ETB0-15) */
		unsigned int ETC4           : 1;	/* LAM 0-15 Eve4t Trigger Activity (previous ETB0-15) */
		unsigned int ETC5           : 1;	/* LAM 0-15 Eve5t Trigger Activity (previous ETB0-15) */
		unsigned int ETC6           : 1;	/* LAM 0-15 Eve6t Trigger Activity (previous ETB0-15) */
		unsigned int ETC7           : 1;	/* LAM 0-15 Eve7t Trigger Activity (previous ETB0-15) */
		unsigned int ETC8           : 1;	/* LAM 0-15 Eve8t Trigger Activity (previous ETB0-15) */
		unsigned int ETC9           : 1;	/* LAM 0-15 Eve9t Trigger Activity (previous ETB0-15) */
		unsigned int ETC10          : 1;	/* LAM 0-15 Eve10t Trigger Activity (previous ETB0-15) */
		unsigned int ETC11          : 1;	/* LAM 0-15 Eve11t Trigger Activity (previous ETB0-15) */
		unsigned int ETC12          : 1;	/* LAM 0-15 Eve12t Trigger Activity (previous ETB0-15) */
		unsigned int ETC13          : 1;	/* LAM 0-15 Eve13t Trigger Activity (previous ETB0-15) */
		unsigned int ETC14          : 1;	/* LAM 0-15 Eve14t Trigger Activity (previous ETB0-15) */
		unsigned int ETC15          : 1;	/* LAM 0-15 Eve15t Trigger Activity (previous ETB0-15) */
		unsigned int ETD0           : 1;	/* LAM 0-15 Eve0t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD1           : 1;	/* LAM 0-15 Eve1t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD2           : 1;	/* LAM 0-15 Eve2t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD3           : 1;	/* LAM 0-15 Eve3t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD4           : 1;	/* LAM 0-15 Eve4t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD5           : 1;	/* LAM 0-15 Eve5t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD6           : 1;	/* LAM 0-15 Eve6t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD7           : 1;	/* LAM 0-15 Eve7t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD8           : 1;	/* LAM 0-15 Eve8t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD9           : 1;	/* LAM 0-15 Eve9t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD10          : 1;	/* LAM 0-15 Eve10t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD11          : 1;	/* LAM 0-15 Eve11t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD12          : 1;	/* LAM 0-15 Eve12t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD13          : 1;	/* LAM 0-15 Eve13t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD14          : 1;	/* LAM 0-15 Eve14t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
		unsigned int ETD15          : 1;	/* LAM 0-15 Eve15t Trigger Activity (previous contents of ETC0-15 OR'ed with the previous value of ETD0-15) */
	} B;
	int I;
	unsigned int U;

} IOM_ECMETH1_type;
#define IOM_ECMETH1	(*( IOM_ECMETH1_type *) 0xf003503cu)	/* IOM Event Combiner Module Event Trigger History Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CES0           : 1;	/* Event Combiner Selectio0 */
		unsigned int CES1           : 1;	/* Event Combiner Selectio1 */
		unsigned int CES2           : 1;	/* Event Combiner Selectio2 */
		unsigned int CES3           : 1;	/* Event Combiner Selectio3 */
		unsigned int CES4           : 1;	/* Event Combiner Selectio4 */
		unsigned int CES5           : 1;	/* Event Combiner Selectio5 */
		unsigned int CES6           : 1;	/* Event Combiner Selectio6 */
		unsigned int CES7           : 1;	/* Event Combiner Selectio7 */
		unsigned int CES8           : 1;	/* Event Combiner Selectio8 */
		unsigned int CES9           : 1;	/* Event Combiner Selectio9 */
		unsigned int CES10          : 1;	/* Event Combiner Selectio10 */
		unsigned int CES11          : 1;	/* Event Combiner Selectio11 */
		unsigned int CES12          : 1;	/* Event Combiner Selectio12 */
		unsigned int CES13          : 1;	/* Event Combiner Selectio13 */
		unsigned int CES14          : 1;	/* Event Combiner Selectio14 */
		unsigned int CES15          : 1;	/* Event Combiner Selectio15 */
		unsigned int CTS0           : 1;	/* Accumulated (Counted) Event Combiner Selectio0 */
		unsigned int CTS1           : 1;	/* Accumulated (Counted) Event Combiner Selectio1 */
		unsigned int CTS2           : 1;	/* Accumulated (Counted) Event Combiner Selectio2 */
		unsigned int CTS3           : 1;	/* Accumulated (Counted) Event Combiner Selectio3 */
		unsigned int                : 12;
	} B;
	int I;
	unsigned int U;

} IOM_ECMSELR_type;
#define IOM_ECMSELR	(*( IOM_ECMSELR_type *) 0xf0035034u)	/* IOM Event Combiner Module Global Event Selection Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMP            : 16;	/* Threshold Value of Filter 'and' Prescaler Channel k */
		unsigned int MOD            : 3;	/* Operation Mode Selection for Filter 'and' Prescaler Channel k */
		unsigned int ISM            : 2;	/* Monitor Input Signal Selection for Filter 'and' Prescaler Channel k */
		unsigned int                : 1;
		unsigned int RTG            : 1;	/* Reset Timer behavior for Filter 'and' Prescaler Channel k on Glitch */
		unsigned int                : 1;
		unsigned int ISR            : 3;	/* Reference Input Signal Selection for Filter 'and' Prescaler Channel k */
		unsigned int                : 5;
	} B;
	int I;
	unsigned int U;

} IOM_FPCCTR0_type;
#define IOM_FPCCTR0	(*( IOM_FPCCTR0_type *) 0xf0035080u)	/* IOM Filter and Prescaler Channel Control Register 0 */
#define IOM_FPCCTR1	(*( IOM_FPCCTR0_type *) 0xf0035084u)	/* IOM Filter and Prescaler Channel Control Register 1 */
#define IOM_FPCCTR10	(*( IOM_FPCCTR0_type *) 0xf00350a8u)	/* IOM Filter and Prescaler Channel Control Register 10 */
#define IOM_FPCCTR11	(*( IOM_FPCCTR0_type *) 0xf00350acu)	/* IOM Filter and Prescaler Channel Control Register 11 */
#define IOM_FPCCTR12	(*( IOM_FPCCTR0_type *) 0xf00350b0u)	/* IOM Filter and Prescaler Channel Control Register 12 */
#define IOM_FPCCTR13	(*( IOM_FPCCTR0_type *) 0xf00350b4u)	/* IOM Filter and Prescaler Channel Control Register 13 */
#define IOM_FPCCTR14	(*( IOM_FPCCTR0_type *) 0xf00350b8u)	/* IOM Filter and Prescaler Channel Control Register 14 */
#define IOM_FPCCTR15	(*( IOM_FPCCTR0_type *) 0xf00350bcu)	/* IOM Filter and Prescaler Channel Control Register 15 */
#define IOM_FPCCTR2	(*( IOM_FPCCTR0_type *) 0xf0035088u)	/* IOM Filter and Prescaler Channel Control Register 2 */
#define IOM_FPCCTR3	(*( IOM_FPCCTR0_type *) 0xf003508cu)	/* IOM Filter and Prescaler Channel Control Register 3 */
#define IOM_FPCCTR4	(*( IOM_FPCCTR0_type *) 0xf0035090u)	/* IOM Filter and Prescaler Channel Control Register 4 */
#define IOM_FPCCTR5	(*( IOM_FPCCTR0_type *) 0xf0035094u)	/* IOM Filter and Prescaler Channel Control Register 5 */
#define IOM_FPCCTR6	(*( IOM_FPCCTR0_type *) 0xf0035098u)	/* IOM Filter and Prescaler Channel Control Register 6 */
#define IOM_FPCCTR7	(*( IOM_FPCCTR0_type *) 0xf003509cu)	/* IOM Filter and Prescaler Channel Control Register 7 */
#define IOM_FPCCTR8	(*( IOM_FPCCTR0_type *) 0xf00350a0u)	/* IOM Filter and Prescaler Channel Control Register 8 */
#define IOM_FPCCTR9	(*( IOM_FPCCTR0_type *) 0xf00350a4u)	/* IOM Filter and Prescaler Channel Control Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FEG0           : 1;	/* Falling Edge Glitch Flag for FPC0 */
		unsigned __sfrbit32 FEG1           : 1;	/* Falling Edge Glitch Flag for FPC1 */
		unsigned __sfrbit32 FEG2           : 1;	/* Falling Edge Glitch Flag for FPC2 */
		unsigned __sfrbit32 FEG3           : 1;	/* Falling Edge Glitch Flag for FPC3 */
		unsigned __sfrbit32 FEG4           : 1;	/* Falling Edge Glitch Flag for FPC4 */
		unsigned __sfrbit32 FEG5           : 1;	/* Falling Edge Glitch Flag for FPC5 */
		unsigned __sfrbit32 FEG6           : 1;	/* Falling Edge Glitch Flag for FPC6 */
		unsigned __sfrbit32 FEG7           : 1;	/* Falling Edge Glitch Flag for FPC7 */
		unsigned __sfrbit32 FEG8           : 1;	/* Falling Edge Glitch Flag for FPC8 */
		unsigned __sfrbit32 FEG9           : 1;	/* Falling Edge Glitch Flag for FPC9 */
		unsigned __sfrbit32 FEG10          : 1;	/* Falling Edge Glitch Flag for FPC10 */
		unsigned __sfrbit32 FEG11          : 1;	/* Falling Edge Glitch Flag for FPC11 */
		unsigned __sfrbit32 FEG12          : 1;	/* Falling Edge Glitch Flag for FPC12 */
		unsigned __sfrbit32 FEG13          : 1;	/* Falling Edge Glitch Flag for FPC13 */
		unsigned __sfrbit32 FEG14          : 1;	/* Falling Edge Glitch Flag for FPC14 */
		unsigned __sfrbit32 FEG15          : 1;	/* Falling Edge Glitch Flag for FPC15 */
		unsigned __sfrbit32 REG0           : 1;	/* Rising Edge Glitch Flag for FPC0 */
		unsigned __sfrbit32 REG1           : 1;	/* Rising Edge Glitch Flag for FPC1 */
		unsigned __sfrbit32 REG2           : 1;	/* Rising Edge Glitch Flag for FPC2 */
		unsigned __sfrbit32 REG3           : 1;	/* Rising Edge Glitch Flag for FPC3 */
		unsigned __sfrbit32 REG4           : 1;	/* Rising Edge Glitch Flag for FPC4 */
		unsigned __sfrbit32 REG5           : 1;	/* Rising Edge Glitch Flag for FPC5 */
		unsigned __sfrbit32 REG6           : 1;	/* Rising Edge Glitch Flag for FPC6 */
		unsigned __sfrbit32 REG7           : 1;	/* Rising Edge Glitch Flag for FPC7 */
		unsigned __sfrbit32 REG8           : 1;	/* Rising Edge Glitch Flag for FPC8 */
		unsigned __sfrbit32 REG9           : 1;	/* Rising Edge Glitch Flag for FPC9 */
		unsigned __sfrbit32 REG10          : 1;	/* Rising Edge Glitch Flag for FPC10 */
		unsigned __sfrbit32 REG11          : 1;	/* Rising Edge Glitch Flag for FPC11 */
		unsigned __sfrbit32 REG12          : 1;	/* Rising Edge Glitch Flag for FPC12 */
		unsigned __sfrbit32 REG13          : 1;	/* Rising Edge Glitch Flag for FPC13 */
		unsigned __sfrbit32 REG14          : 1;	/* Rising Edge Glitch Flag for FPC14 */
		unsigned __sfrbit32 REG15          : 1;	/* Rising Edge Glitch Flag for FPC15 */
	} B;
	int I;
	unsigned int U;

} IOM_FPCESR_type;
#define IOM_FPCESR	(*( IOM_FPCESR_type *) 0xf0035078u)	/* IOM Filter and Prescaler Channels Rising 'and' Falling Edge Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TIM            : 16;	/* Timer Value of Filter and Prescaler Channel k */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} IOM_FPCTIM0_type;
#define IOM_FPCTIM0	(*( IOM_FPCTIM0_type *) 0xf00350c0u)	/* IOM Filter and Prescaler Channel Timer Register 0 */
#define IOM_FPCTIM1	(*( IOM_FPCTIM0_type *) 0xf00350c4u)	/* IOM Filter and Prescaler Channel Timer Register 1 */
#define IOM_FPCTIM10	(*( IOM_FPCTIM0_type *) 0xf00350e8u)	/* IOM Filter and Prescaler Channel Timer Register 10 */
#define IOM_FPCTIM11	(*( IOM_FPCTIM0_type *) 0xf00350ecu)	/* IOM Filter and Prescaler Channel Timer Register 11 */
#define IOM_FPCTIM12	(*( IOM_FPCTIM0_type *) 0xf00350f0u)	/* IOM Filter and Prescaler Channel Timer Register 12 */
#define IOM_FPCTIM13	(*( IOM_FPCTIM0_type *) 0xf00350f4u)	/* IOM Filter and Prescaler Channel Timer Register 13 */
#define IOM_FPCTIM14	(*( IOM_FPCTIM0_type *) 0xf00350f8u)	/* IOM Filter and Prescaler Channel Timer Register 14 */
#define IOM_FPCTIM15	(*( IOM_FPCTIM0_type *) 0xf00350fcu)	/* IOM Filter and Prescaler Channel Timer Register 15 */
#define IOM_FPCTIM2	(*( IOM_FPCTIM0_type *) 0xf00350c8u)	/* IOM Filter and Prescaler Channel Timer Register 2 */
#define IOM_FPCTIM3	(*( IOM_FPCTIM0_type *) 0xf00350ccu)	/* IOM Filter and Prescaler Channel Timer Register 3 */
#define IOM_FPCTIM4	(*( IOM_FPCTIM0_type *) 0xf00350d0u)	/* IOM Filter and Prescaler Channel Timer Register 4 */
#define IOM_FPCTIM5	(*( IOM_FPCTIM0_type *) 0xf00350d4u)	/* IOM Filter and Prescaler Channel Timer Register 5 */
#define IOM_FPCTIM6	(*( IOM_FPCTIM0_type *) 0xf00350d8u)	/* IOM Filter and Prescaler Channel Timer Register 6 */
#define IOM_FPCTIM7	(*( IOM_FPCTIM0_type *) 0xf00350dcu)	/* IOM Filter and Prescaler Channel Timer Register 7 */
#define IOM_FPCTIM8	(*( IOM_FPCTIM0_type *) 0xf00350e0u)	/* IOM Filter and Prescaler Channel Timer Register 8 */
#define IOM_FPCTIM9	(*( IOM_FPCTIM0_type *) 0xf00350e4u)	/* IOM Filter and Prescaler Channel Timer Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* GTM input 0 selection for EXOR combiner */
		unsigned int EN1            : 1;	/* GTM input 1 selection for EXOR combiner */
		unsigned int EN2            : 1;	/* GTM input 2 selection for EXOR combiner */
		unsigned int EN3            : 1;	/* GTM input 3 selection for EXOR combiner */
		unsigned int EN4            : 1;	/* GTM input 4 selection for EXOR combiner */
		unsigned int EN5            : 1;	/* GTM input 5 selection for EXOR combiner */
		unsigned int EN6            : 1;	/* GTM input 6 selection for EXOR combiner */
		unsigned int EN7            : 1;	/* GTM input 7 selection for EXOR combiner */
		unsigned int                : 24;
	} B;
	int I;
	unsigned int U;

} IOM_GTMEXR_type;
#define IOM_GTMEXR	(*( IOM_GTMEXR_type *) 0xf0035040u)	/* IOM GTM Input EXOR Combiner Selection Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Number Value */
		/* const */ unsigned int MOD_NUM        : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} IOM_ID_type;
#define IOM_ID	(*( IOM_ID_type *) 0xf0035008u)	/* IOM Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} IOM_KRST0_type;
#define IOM_KRST0	(*( IOM_KRST0_type *) 0xf0035024u)	/* IOM Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} IOM_KRST1_type;
#define IOM_KRST1	(*( IOM_KRST1_type *) 0xf0035020u)	/* IOM Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} IOM_KRSTCLR_type;
#define IOM_KRSTCLR	(*( IOM_KRSTCLR_type *) 0xf003501cu)	/* IOM Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int IVR            : 1;	/* Invert Reference LAM block m */
		unsigned int IVM            : 1;	/* Invert Monitor LAM block m */
		unsigned int MOS            : 1;	/* Monitor Source Select LAM block m */
		unsigned int RMS            : 1;	/* Runmode Select LAM block m */
		unsigned int EWS            : 1;	/* Event Window Select LAM block m */
		unsigned int DISEV          : 1;	/* Disable Events LAM block m */
		unsigned int                : 2;
		unsigned int EDS            : 4;	/* Event Window Active Edge Selection LAM block m */
		unsigned int IVW            : 1;	/* Invert Event Window LAM block m */
		unsigned int                : 3;
		unsigned int MCS            : 4;	/* Monitor Input Signal Selection LAM block m */
		unsigned int RCS            : 4;	/* Reference Input Signal Selection LAM block m */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} IOM_LAMCFG0_type;
#define IOM_LAMCFG0	(*( IOM_LAMCFG0_type *) 0xf0035180u)	/* IOM Logic Analyzer Module Configuration Register 0 */
#define IOM_LAMCFG1	(*( IOM_LAMCFG0_type *) 0xf0035184u)	/* IOM Logic Analyzer Module Configuration Register 1 */
#define IOM_LAMCFG10	(*( IOM_LAMCFG0_type *) 0xf00351a8u)	/* IOM Logic Analyzer Module Configuration Register 10 */
#define IOM_LAMCFG11	(*( IOM_LAMCFG0_type *) 0xf00351acu)	/* IOM Logic Analyzer Module Configuration Register 11 */
#define IOM_LAMCFG12	(*( IOM_LAMCFG0_type *) 0xf00351b0u)	/* IOM Logic Analyzer Module Configuration Register 12 */
#define IOM_LAMCFG13	(*( IOM_LAMCFG0_type *) 0xf00351b4u)	/* IOM Logic Analyzer Module Configuration Register 13 */
#define IOM_LAMCFG14	(*( IOM_LAMCFG0_type *) 0xf00351b8u)	/* IOM Logic Analyzer Module Configuration Register 14 */
#define IOM_LAMCFG15	(*( IOM_LAMCFG0_type *) 0xf00351bcu)	/* IOM Logic Analyzer Module Configuration Register 15 */
#define IOM_LAMCFG2	(*( IOM_LAMCFG0_type *) 0xf0035188u)	/* IOM Logic Analyzer Module Configuration Register 2 */
#define IOM_LAMCFG3	(*( IOM_LAMCFG0_type *) 0xf003518cu)	/* IOM Logic Analyzer Module Configuration Register 3 */
#define IOM_LAMCFG4	(*( IOM_LAMCFG0_type *) 0xf0035190u)	/* IOM Logic Analyzer Module Configuration Register 4 */
#define IOM_LAMCFG5	(*( IOM_LAMCFG0_type *) 0xf0035194u)	/* IOM Logic Analyzer Module Configuration Register 5 */
#define IOM_LAMCFG6	(*( IOM_LAMCFG0_type *) 0xf0035198u)	/* IOM Logic Analyzer Module Configuration Register 6 */
#define IOM_LAMCFG7	(*( IOM_LAMCFG0_type *) 0xf003519cu)	/* IOM Logic Analyzer Module Configuration Register 7 */
#define IOM_LAMCFG8	(*( IOM_LAMCFG0_type *) 0xf00351a0u)	/* IOM Logic Analyzer Module Configuration Register 8 */
#define IOM_LAMCFG9	(*( IOM_LAMCFG0_type *) 0xf00351a4u)	/* IOM Logic Analyzer Module Configuration Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int CNT            : 24;	/* Event Window Count Value LAM block m */
		unsigned int                : 7;
		unsigned int CNTO           : 1;	/* Count Overflow Flag LAM block m */
	} B;
	int I;
	unsigned int U;

} IOM_LAMEWC0_type;
#define IOM_LAMEWC0	(*( IOM_LAMEWC0_type *) 0xf0035100u)	/* IOM Logic Analyzer Module Event Window Count Status Register 0 */
#define IOM_LAMEWC1	(*( IOM_LAMEWC0_type *) 0xf0035104u)	/* IOM Logic Analyzer Module Event Window Count Status Register 1 */
#define IOM_LAMEWC10	(*( IOM_LAMEWC0_type *) 0xf0035128u)	/* IOM Logic Analyzer Module Event Window Count Status Register 10 */
#define IOM_LAMEWC11	(*( IOM_LAMEWC0_type *) 0xf003512cu)	/* IOM Logic Analyzer Module Event Window Count Status Register 11 */
#define IOM_LAMEWC12	(*( IOM_LAMEWC0_type *) 0xf0035130u)	/* IOM Logic Analyzer Module Event Window Count Status Register 12 */
#define IOM_LAMEWC13	(*( IOM_LAMEWC0_type *) 0xf0035134u)	/* IOM Logic Analyzer Module Event Window Count Status Register 13 */
#define IOM_LAMEWC14	(*( IOM_LAMEWC0_type *) 0xf0035138u)	/* IOM Logic Analyzer Module Event Window Count Status Register 14 */
#define IOM_LAMEWC15	(*( IOM_LAMEWC0_type *) 0xf003513cu)	/* IOM Logic Analyzer Module Event Window Count Status Register 15 */
#define IOM_LAMEWC2	(*( IOM_LAMEWC0_type *) 0xf0035108u)	/* IOM Logic Analyzer Module Event Window Count Status Register 2 */
#define IOM_LAMEWC3	(*( IOM_LAMEWC0_type *) 0xf003510cu)	/* IOM Logic Analyzer Module Event Window Count Status Register 3 */
#define IOM_LAMEWC4	(*( IOM_LAMEWC0_type *) 0xf0035110u)	/* IOM Logic Analyzer Module Event Window Count Status Register 4 */
#define IOM_LAMEWC5	(*( IOM_LAMEWC0_type *) 0xf0035114u)	/* IOM Logic Analyzer Module Event Window Count Status Register 5 */
#define IOM_LAMEWC6	(*( IOM_LAMEWC0_type *) 0xf0035118u)	/* IOM Logic Analyzer Module Event Window Count Status Register 6 */
#define IOM_LAMEWC7	(*( IOM_LAMEWC0_type *) 0xf003511cu)	/* IOM Logic Analyzer Module Event Window Count Status Register 7 */
#define IOM_LAMEWC8	(*( IOM_LAMEWC0_type *) 0xf0035120u)	/* IOM Logic Analyzer Module Event Window Count Status Register 8 */
#define IOM_LAMEWC9	(*( IOM_LAMEWC0_type *) 0xf0035124u)	/* IOM Logic Analyzer Module Event Window Count Status Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned int THR            : 24;	/* Event Window Count Threshold */
		unsigned int                : 8;
	} B;
	int I;
	unsigned int U;

} IOM_LAMEWS0_type;
#define IOM_LAMEWS0	(*( IOM_LAMEWS0_type *) 0xf00351c0u)	/* IOM Logic Analyzer Module Event Window Configuration Register 0 */
#define IOM_LAMEWS1	(*( IOM_LAMEWS0_type *) 0xf00351c4u)	/* IOM Logic Analyzer Module Event Window Configuration Register 1 */
#define IOM_LAMEWS10	(*( IOM_LAMEWS0_type *) 0xf00351e8u)	/* IOM Logic Analyzer Module Event Window Configuration Register 10 */
#define IOM_LAMEWS11	(*( IOM_LAMEWS0_type *) 0xf00351ecu)	/* IOM Logic Analyzer Module Event Window Configuration Register 11 */
#define IOM_LAMEWS12	(*( IOM_LAMEWS0_type *) 0xf00351f0u)	/* IOM Logic Analyzer Module Event Window Configuration Register 12 */
#define IOM_LAMEWS13	(*( IOM_LAMEWS0_type *) 0xf00351f4u)	/* IOM Logic Analyzer Module Event Window Configuration Register 13 */
#define IOM_LAMEWS14	(*( IOM_LAMEWS0_type *) 0xf00351f8u)	/* IOM Logic Analyzer Module Event Window Configuration Register 14 */
#define IOM_LAMEWS15	(*( IOM_LAMEWS0_type *) 0xf00351fcu)	/* IOM Logic Analyzer Module Event Window Configuration Register 15 */
#define IOM_LAMEWS2	(*( IOM_LAMEWS0_type *) 0xf00351c8u)	/* IOM Logic Analyzer Module Event Window Configuration Register 2 */
#define IOM_LAMEWS3	(*( IOM_LAMEWS0_type *) 0xf00351ccu)	/* IOM Logic Analyzer Module Event Window Configuration Register 3 */
#define IOM_LAMEWS4	(*( IOM_LAMEWS0_type *) 0xf00351d0u)	/* IOM Logic Analyzer Module Event Window Configuration Register 4 */
#define IOM_LAMEWS5	(*( IOM_LAMEWS0_type *) 0xf00351d4u)	/* IOM Logic Analyzer Module Event Window Configuration Register 5 */
#define IOM_LAMEWS6	(*( IOM_LAMEWS0_type *) 0xf00351d8u)	/* IOM Logic Analyzer Module Event Window Configuration Register 6 */
#define IOM_LAMEWS7	(*( IOM_LAMEWS0_type *) 0xf00351dcu)	/* IOM Logic Analyzer Module Event Window Configuration Register 7 */
#define IOM_LAMEWS8	(*( IOM_LAMEWS0_type *) 0xf00351e0u)	/* IOM Logic Analyzer Module Event Window Configuration Register 8 */
#define IOM_LAMEWS9	(*( IOM_LAMEWS0_type *) 0xf00351e4u)	/* IOM Logic Analyzer Module Event Window Configuration Register 9 */


/* SMU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} SMU_ACCEN0_type;
#define SMU_ACCEN0	(*( SMU_ACCEN0_type *) 0xf0036ffcu)	/* SMU_core Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_ACCEN1_type;
#define SMU_ACCEN1	(*( SMU_ACCEN1_type *) 0xf0036ff8u)	/* SMU_core Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DF0            : 1;	/* Diagnosis flag for alarm 0 belonging to alarm group i. */
		/* const */ unsigned int DF1            : 1;	/* Diagnosis flag for alarm 1 belonging to alarm group i. */
		/* const */ unsigned int DF2            : 1;	/* Diagnosis flag for alarm 2 belonging to alarm group i. */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DF4            : 1;	/* Diagnosis flag for alarm 4 belonging to alarm group i. */
		/* const */ unsigned int DF5            : 1;	/* Diagnosis flag for alarm 5 belonging to alarm group i. */
		/* const */ unsigned int DF6            : 1;	/* Diagnosis flag for alarm 6 belonging to alarm group i. */
		/* const */ unsigned int DF7            : 1;	/* Diagnosis flag for alarm 7 belonging to alarm group i. */
		/* const */ unsigned int DF8            : 1;	/* Diagnosis flag for alarm 8 belonging to alarm group i. */
		/* const */ unsigned int DF9            : 1;	/* Diagnosis flag for alarm 9 belonging to alarm group i. */
		/* const */ unsigned int DF10           : 1;	/* Diagnosis flag for alarm 10 belonging to alarm group i. */
		/* const */ unsigned int DF11           : 1;	/* Diagnosis flag for alarm 11 belonging to alarm group i. */
		/* const */ unsigned int DF12           : 1;	/* Diagnosis flag for alarm 12 belonging to alarm group i. */
		/* const */ unsigned int DF13           : 1;	/* Diagnosis flag for alarm 13 belonging to alarm group i. */
		/* const */ unsigned int DF14           : 1;	/* Diagnosis flag for alarm 14 belonging to alarm group i. */
		/* const */ unsigned int                : 7;
		/* const */ unsigned int DF22           : 1;	/* Diagnosis flag for alarm 22 belonging to alarm group i. */
		/* const */ unsigned int DF23           : 1;	/* Diagnosis flag for alarm 23 belonging to alarm group i. */
		/* const */ unsigned int DF24           : 1;	/* Diagnosis flag for alarm 24 belonging to alarm group i. */
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_AD0_type;
#define SMU_AD0	(*( SMU_AD0_type *) 0xf0036a00u)	/* Alarm Debug Reg0ster */
#define SMU_AD1	(*( SMU_AD0_type *) 0xf0036a04u)	/* Alarm Debug Reg1ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DF0            : 1;	/* Diagnosis flag for alarm 0 belonging to alarm group i. */
		/* const */ unsigned int DF1            : 1;	/* Diagnosis flag for alarm 1 belonging to alarm group i. */
		/* const */ unsigned int DF2            : 1;	/* Diagnosis flag for alarm 2 belonging to alarm group i. */
		/* const */ unsigned int DF3            : 1;	/* Diagnosis flag for alarm 3 belonging to alarm group i. */
		/* const */ unsigned int DF4            : 1;	/* Diagnosis flag for alarm 4 belonging to alarm group i. */
		/* const */ unsigned int DF5            : 1;	/* Diagnosis flag for alarm 5 belonging to alarm group i. */
		/* const */ unsigned int DF6            : 1;	/* Diagnosis flag for alarm 6 belonging to alarm group i. */
		/* const */ unsigned int DF7            : 1;	/* Diagnosis flag for alarm 7 belonging to alarm group i. */
		/* const */ unsigned int DF8            : 1;	/* Diagnosis flag for alarm 8 belonging to alarm group i. */
		/* const */ unsigned int DF9            : 1;	/* Diagnosis flag for alarm 9 belonging to alarm group i. */
		/* const */ unsigned int DF10           : 1;	/* Diagnosis flag for alarm 10 belonging to alarm group i. */
		/* const */ unsigned int DF11           : 1;	/* Diagnosis flag for alarm 11 belonging to alarm group i. */
		/* const */ unsigned int DF12           : 1;	/* Diagnosis flag for alarm 12 belonging to alarm group i. */
		/* const */ unsigned int DF13           : 1;	/* Diagnosis flag for alarm 13 belonging to alarm group i. */
		/* const */ unsigned int DF14           : 1;	/* Diagnosis flag for alarm 14 belonging to alarm group i. */
		/* const */ unsigned int DF15           : 1;	/* Diagnosis flag for alarm 15 belonging to alarm group i. */
		/* const */ unsigned int DF16           : 1;	/* Diagnosis flag for alarm 16 belonging to alarm group i. */
		/* const */ unsigned int DF17           : 1;	/* Diagnosis flag for alarm 17 belonging to alarm group i. */
		/* const */ unsigned int DF18           : 1;	/* Diagnosis flag for alarm 18 belonging to alarm group i. */
		/* const */ unsigned int DF19           : 1;	/* Diagnosis flag for alarm 19 belonging to alarm group i. */
		/* const */ unsigned int DF20           : 1;	/* Diagnosis flag for alarm 20 belonging to alarm group i. */
		/* const */ unsigned int DF21           : 1;	/* Diagnosis flag for alarm 21 belonging to alarm group i. */
		/* const */ unsigned int DF22           : 1;	/* Diagnosis flag for alarm 22 belonging to alarm group i. */
		/* const */ unsigned int                : 9;
	} B;
	int I;
	unsigned int U;

} SMU_AD10_type;
#define SMU_AD10	(*( SMU_AD10_type *) 0xf0036a28u)	/* Alarm Debug Reg10ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DF0            : 1;	/* Diagnosis flag for alarm 0 belonging to alarm group i. */
		/* const */ unsigned int DF1            : 1;	/* Diagnosis flag for alarm 1 belonging to alarm group i. */
		/* const */ unsigned int DF2            : 1;	/* Diagnosis flag for alarm 2 belonging to alarm group i. */
		/* const */ unsigned int DF3            : 1;	/* Diagnosis flag for alarm 3 belonging to alarm group i. */
		/* const */ unsigned int DF4            : 1;	/* Diagnosis flag for alarm 4 belonging to alarm group i. */
		/* const */ unsigned int DF5            : 1;	/* Diagnosis flag for alarm 5 belonging to alarm group i. */
		/* const */ unsigned int DF6            : 1;	/* Diagnosis flag for alarm 6 belonging to alarm group i. */
		/* const */ unsigned int DF7            : 1;	/* Diagnosis flag for alarm 7 belonging to alarm group i. */
		/* const */ unsigned int DF8            : 1;	/* Diagnosis flag for alarm 8 belonging to alarm group i. */
		/* const */ unsigned int DF9            : 1;	/* Diagnosis flag for alarm 9 belonging to alarm group i. */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int DF12           : 1;	/* Diagnosis flag for alarm 12 belonging to alarm group i. */
		/* const */ unsigned int DF13           : 1;	/* Diagnosis flag for alarm 13 belonging to alarm group i. */
		/* const */ unsigned int                : 18;
	} B;
	int I;
	unsigned int U;

} SMU_AD11_type;
#define SMU_AD11	(*( SMU_AD11_type *) 0xf0036a2cu)	/* Alarm Debug Reg11ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DF1            : 1;	/* Diagnosis flag for alarm 1 belonging to alarm group i. */
		/* const */ unsigned int                : 2;
		/* const */ unsigned int DF4            : 1;	/* Diagnosis flag for alarm 4 belonging to alarm group i. */
		/* const */ unsigned int DF5            : 1;	/* Diagnosis flag for alarm 5 belonging to alarm group i. */
		/* const */ unsigned int DF6            : 1;	/* Diagnosis flag for alarm 6 belonging to alarm group i. */
		/* const */ unsigned int DF7            : 1;	/* Diagnosis flag for alarm 7 belonging to alarm group i. */
		/* const */ unsigned int DF8            : 1;	/* Diagnosis flag for alarm 8 belonging to alarm group i. */
		/* const */ unsigned int DF9            : 1;	/* Diagnosis flag for alarm 9 belonging to alarm group i. */
		/* const */ unsigned int DF10           : 1;	/* Diagnosis flag for alarm 10 belonging to alarm group i. */
		/* const */ unsigned int DF11           : 1;	/* Diagnosis flag for alarm 11 belonging to alarm group i. */
		/* const */ unsigned int DF12           : 1;	/* Diagnosis flag for alarm 12 belonging to alarm group i. */
		/* const */ unsigned int DF13           : 1;	/* Diagnosis flag for alarm 13 belonging to alarm group i. */
		/* const */ unsigned int DF14           : 1;	/* Diagnosis flag for alarm 14 belonging to alarm group i. */
		/* const */ unsigned int                : 7;
		/* const */ unsigned int DF22           : 1;	/* Diagnosis flag for alarm 22 belonging to alarm group i. */
		/* const */ unsigned int DF23           : 1;	/* Diagnosis flag for alarm 23 belonging to alarm group i. */
		/* const */ unsigned int DF24           : 1;	/* Diagnosis flag for alarm 24 belonging to alarm group i. */
		/* const */ unsigned int                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_AD2_type;
#define SMU_AD2	(*( SMU_AD2_type *) 0xf0036a08u)	/* Alarm Debug Reg2ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AD3_type;
#define SMU_AD3	(*( SMU_AD3_type *) 0xf0036a0cu)	/* Alarm Debug Reg3ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AD4_type;
#define SMU_AD4	(*( SMU_AD4_type *) 0xf0036a10u)	/* Alarm Debug Reg4ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AD5_type;
#define SMU_AD5	(*( SMU_AD5_type *) 0xf0036a14u)	/* Alarm Debug Reg5ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DF0            : 1;	/* Diagnosis flag for alarm 0 belonging to alarm group i. */
		/* const */ unsigned int DF1            : 1;	/* Diagnosis flag for alarm 1 belonging to alarm group i. */
		/* const */ unsigned int DF2            : 1;	/* Diagnosis flag for alarm 2 belonging to alarm group i. */
		/* const */ unsigned int DF3            : 1;	/* Diagnosis flag for alarm 3 belonging to alarm group i. */
		/* const */ unsigned int DF4            : 1;	/* Diagnosis flag for alarm 4 belonging to alarm group i. */
		/* const */ unsigned int DF5            : 1;	/* Diagnosis flag for alarm 5 belonging to alarm group i. */
		/* const */ unsigned int DF6            : 1;	/* Diagnosis flag for alarm 6 belonging to alarm group i. */
		/* const */ unsigned int DF7            : 1;	/* Diagnosis flag for alarm 7 belonging to alarm group i. */
		/* const */ unsigned int DF8            : 1;	/* Diagnosis flag for alarm 8 belonging to alarm group i. */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int DF13           : 1;	/* Diagnosis flag for alarm 13 belonging to alarm group i. */
		/* const */ unsigned int DF14           : 1;	/* Diagnosis flag for alarm 14 belonging to alarm group i. */
		/* const */ unsigned int DF15           : 1;	/* Diagnosis flag for alarm 15 belonging to alarm group i. */
		/* const */ unsigned int DF16           : 1;	/* Diagnosis flag for alarm 16 belonging to alarm group i. */
		/* const */ unsigned int DF17           : 1;	/* Diagnosis flag for alarm 17 belonging to alarm group i. */
		/* const */ unsigned int DF18           : 1;	/* Diagnosis flag for alarm 18 belonging to alarm group i. */
		/* const */ unsigned int DF19           : 1;	/* Diagnosis flag for alarm 19 belonging to alarm group i. */
		/* const */ unsigned int DF20           : 1;	/* Diagnosis flag for alarm 20 belonging to alarm group i. */
		/* const */ unsigned int DF21           : 1;	/* Diagnosis flag for alarm 21 belonging to alarm group i. */
		/* const */ unsigned int DF22           : 1;	/* Diagnosis flag for alarm 22 belonging to alarm group i. */
		/* const */ unsigned int DF23           : 1;	/* Diagnosis flag for alarm 23 belonging to alarm group i. */
		/* const */ unsigned int DF24           : 1;	/* Diagnosis flag for alarm 24 belonging to alarm group i. */
		/* const */ unsigned int DF25           : 1;	/* Diagnosis flag for alarm 25 belonging to alarm group i. */
		/* const */ unsigned int                : 6;
	} B;
	int I;
	unsigned int U;

} SMU_AD6_type;
#define SMU_AD6	(*( SMU_AD6_type *) 0xf0036a18u)	/* Alarm Debug Reg6ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DF0            : 1;	/* Diagnosis flag for alarm 0 belonging to alarm group i. */
		/* const */ unsigned int DF1            : 1;	/* Diagnosis flag for alarm 1 belonging to alarm group i. */
		/* const */ unsigned int DF2            : 1;	/* Diagnosis flag for alarm 2 belonging to alarm group i. */
		/* const */ unsigned int DF3            : 1;	/* Diagnosis flag for alarm 3 belonging to alarm group i. */
		/* const */ unsigned int DF4            : 1;	/* Diagnosis flag for alarm 4 belonging to alarm group i. */
		/* const */ unsigned int DF5            : 1;	/* Diagnosis flag for alarm 5 belonging to alarm group i. */
		/* const */ unsigned int DF6            : 1;	/* Diagnosis flag for alarm 6 belonging to alarm group i. */
		/* const */ unsigned int DF7            : 1;	/* Diagnosis flag for alarm 7 belonging to alarm group i. */
		/* const */ unsigned int DF8            : 1;	/* Diagnosis flag for alarm 8 belonging to alarm group i. */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int DF12           : 1;	/* Diagnosis flag for alarm 12 belonging to alarm group i. */
		/* const */ unsigned int DF13           : 1;	/* Diagnosis flag for alarm 13 belonging to alarm group i. */
		/* const */ unsigned int DF14           : 1;	/* Diagnosis flag for alarm 14 belonging to alarm group i. */
		/* const */ unsigned int DF15           : 1;	/* Diagnosis flag for alarm 15 belonging to alarm group i. */
		/* const */ unsigned int DF16           : 1;	/* Diagnosis flag for alarm 16 belonging to alarm group i. */
		/* const */ unsigned int DF17           : 1;	/* Diagnosis flag for alarm 17 belonging to alarm group i. */
		/* const */ unsigned int DF18           : 1;	/* Diagnosis flag for alarm 18 belonging to alarm group i. */
		/* const */ unsigned int DF19           : 1;	/* Diagnosis flag for alarm 19 belonging to alarm group i. */
		/* const */ unsigned int DF20           : 1;	/* Diagnosis flag for alarm 20 belonging to alarm group i. */
		/* const */ unsigned int DF21           : 1;	/* Diagnosis flag for alarm 21 belonging to alarm group i. */
		/* const */ unsigned int DF22           : 1;	/* Diagnosis flag for alarm 22 belonging to alarm group i. */
		/* const */ unsigned int DF23           : 1;	/* Diagnosis flag for alarm 23 belonging to alarm group i. */
		/* const */ unsigned int DF24           : 1;	/* Diagnosis flag for alarm 24 belonging to alarm group i. */
		/* const */ unsigned int DF25           : 1;	/* Diagnosis flag for alarm 25 belonging to alarm group i. */
		/* const */ unsigned int DF26           : 1;	/* Diagnosis flag for alarm 26 belonging to alarm group i. */
		/* const */ unsigned int DF27           : 1;	/* Diagnosis flag for alarm 27 belonging to alarm group i. */
		/* const */ unsigned int DF28           : 1;	/* Diagnosis flag for alarm 28 belonging to alarm group i. */
		/* const */ unsigned int DF29           : 1;	/* Diagnosis flag for alarm 29 belonging to alarm group i. */
		/* const */ unsigned int DF30           : 1;	/* Diagnosis flag for alarm 30 belonging to alarm group i. */
		/* const */ unsigned int DF31           : 1;	/* Diagnosis flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AD7_type;
#define SMU_AD7	(*( SMU_AD7_type *) 0xf0036a1cu)	/* Alarm Debug Reg7ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DF0            : 1;	/* Diagnosis flag for alarm 0 belonging to alarm group i. */
		/* const */ unsigned int DF1            : 1;	/* Diagnosis flag for alarm 1 belonging to alarm group i. */
		/* const */ unsigned int DF2            : 1;	/* Diagnosis flag for alarm 2 belonging to alarm group i. */
		/* const */ unsigned int DF3            : 1;	/* Diagnosis flag for alarm 3 belonging to alarm group i. */
		/* const */ unsigned int DF4            : 1;	/* Diagnosis flag for alarm 4 belonging to alarm group i. */
		/* const */ unsigned int DF5            : 1;	/* Diagnosis flag for alarm 5 belonging to alarm group i. */
		/* const */ unsigned int DF6            : 1;	/* Diagnosis flag for alarm 6 belonging to alarm group i. */
		/* const */ unsigned int DF7            : 1;	/* Diagnosis flag for alarm 7 belonging to alarm group i. */
		/* const */ unsigned int DF8            : 1;	/* Diagnosis flag for alarm 8 belonging to alarm group i. */
		/* const */ unsigned int DF9            : 1;	/* Diagnosis flag for alarm 9 belonging to alarm group i. */
		/* const */ unsigned int DF10           : 1;	/* Diagnosis flag for alarm 10 belonging to alarm group i. */
		/* const */ unsigned int DF11           : 1;	/* Diagnosis flag for alarm 11 belonging to alarm group i. */
		/* const */ unsigned int DF12           : 1;	/* Diagnosis flag for alarm 12 belonging to alarm group i. */
		/* const */ unsigned int                : 3;
		/* const */ unsigned int DF16           : 1;	/* Diagnosis flag for alarm 16 belonging to alarm group i. */
		/* const */ unsigned int DF17           : 1;	/* Diagnosis flag for alarm 17 belonging to alarm group i. */
		/* const */ unsigned int DF18           : 1;	/* Diagnosis flag for alarm 18 belonging to alarm group i. */
		/* const */ unsigned int DF19           : 1;	/* Diagnosis flag for alarm 19 belonging to alarm group i. */
		/* const */ unsigned int DF20           : 1;	/* Diagnosis flag for alarm 20 belonging to alarm group i. */
		/* const */ unsigned int DF21           : 1;	/* Diagnosis flag for alarm 21 belonging to alarm group i. */
		/* const */ unsigned int DF22           : 1;	/* Diagnosis flag for alarm 22 belonging to alarm group i. */
		/* const */ unsigned int DF23           : 1;	/* Diagnosis flag for alarm 23 belonging to alarm group i. */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DF25           : 1;	/* Diagnosis flag for alarm 25 belonging to alarm group i. */
		/* const */ unsigned int DF26           : 1;	/* Diagnosis flag for alarm 26 belonging to alarm group i. */
		/* const */ unsigned int DF27           : 1;	/* Diagnosis flag for alarm 27 belonging to alarm group i. */
		/* const */ unsigned int DF28           : 1;	/* Diagnosis flag for alarm 28 belonging to alarm group i. */
		/* const */ unsigned int DF29           : 1;	/* Diagnosis flag for alarm 29 belonging to alarm group i. */
		/* const */ unsigned int DF30           : 1;	/* Diagnosis flag for alarm 30 belonging to alarm group i. */
		/* const */ unsigned int DF31           : 1;	/* Diagnosis flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AD8_type;
#define SMU_AD8	(*( SMU_AD8_type *) 0xf0036a20u)	/* Alarm Debug Reg8ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DF0            : 1;	/* Diagnosis flag for alarm 0 belonging to alarm group i. */
		/* const */ unsigned int DF1            : 1;	/* Diagnosis flag for alarm 1 belonging to alarm group i. */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DF3            : 1;	/* Diagnosis flag for alarm 3 belonging to alarm group i. */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int DF5            : 1;	/* Diagnosis flag for alarm 5 belonging to alarm group i. */
		/* const */ unsigned int                : 9;
		/* const */ unsigned int DF15           : 1;	/* Diagnosis flag for alarm 15 belonging to alarm group i. */
		/* const */ unsigned int DF16           : 1;	/* Diagnosis flag for alarm 16 belonging to alarm group i. */
		/* const */ unsigned int DF17           : 1;	/* Diagnosis flag for alarm 17 belonging to alarm group i. */
		/* const */ unsigned int                : 5;
		/* const */ unsigned int DF23           : 1;	/* Diagnosis flag for alarm 23 belonging to alarm group i. */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int DF28           : 1;	/* Diagnosis flag for alarm 28 belonging to alarm group i. */
		/* const */ unsigned int DF29           : 1;	/* Diagnosis flag for alarm 29 belonging to alarm group i. */
		/* const */ unsigned int DF30           : 1;	/* Diagnosis flag for alarm 30 belonging to alarm group i. */
		/* const */ unsigned int DF31           : 1;	/* Diagnosis flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AD9_type;
#define SMU_AD9	(*( SMU_AD9_type *) 0xf0036a24u)	/* Alarm Debug Reg9ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int IRQ0STS        : 1;	/* IRQ0 Request Status */
		/* const */ unsigned int IRQ1STS        : 1;	/* IRQ1 Request Status */
		/* const */ unsigned int IRQ2STS        : 1;	/* IRQ2 Request Status */
		/* const */ unsigned int RST0STS        : 1;	/* RST0 Request Status */
		/* const */ unsigned int RST1STS        : 1;	/* RST1 Request Status */
		/* const */ unsigned int RST2STS        : 1;	/* RST2 Request Status */
		/* const */ unsigned int RST3STS        : 1;	/* RST3 Request Status */
		/* const */ unsigned int RST4STS        : 1;	/* RST4 Request Status */
		/* const */ unsigned int RST5STS        : 1;	/* RST5 Request Status */
		/* const */ unsigned int NMISTS         : 1;	/* NMI Request Status */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int EMSSTS         : 1;	/* EMS Request Status */
		/* const */ unsigned int                : 4;
		/* const */ unsigned int IRQ0AEM        : 1;	/* IRQ0 AEM */
		/* const */ unsigned int IRQ1AEM        : 1;	/* IRQ1 AEM */
		/* const */ unsigned int IRQ2AEM        : 1;	/* IRQ2 AEM */
		/* const */ unsigned int RST0AEM        : 1;	/* RST0 AEM */
		/* const */ unsigned int RST1AEM        : 1;	/* RST1 AEM */
		/* const */ unsigned int RST2AEM        : 1;	/* RST2 AEM */
		/* const */ unsigned int RST3AEM        : 1;	/* RST3 AEM */
		/* const */ unsigned int RST4AEM        : 1;	/* RST4 AEM */
		/* const */ unsigned int RST5AEM        : 1;	/* RST5 AEM */
		/* const */ unsigned int NMIAEM         : 1;	/* NMI AEM */
		/* const */ unsigned int                : 1;
		/* const */ unsigned int EMSAEM         : 1;	/* EMS AEM */
		/* const */ unsigned int                : 4;
	} B;
	int I;
	unsigned int U;

} SMU_AEX_type;
#define SMU_AEX	(*( SMU_AEX_type *) 0xf0036870u)	/* Alarm Executed Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IRQ0CLR        : 1;	/* IRQ0 Request Status Clear */
		unsigned __sfrbit32 IRQ1CLR        : 1;	/* IRQ1 Request Status Clear */
		unsigned __sfrbit32 IRQ2CLR        : 1;	/* IRQ2 Request Status Clear */
		unsigned __sfrbit32 RST0CLR        : 1;	/* RST0 Request Status Clear */
		unsigned __sfrbit32 RST1CLR        : 1;	/* RST1 Request Status Clear */
		unsigned __sfrbit32 RST2CLR        : 1;	/* RST2 Request Status Clear */
		unsigned __sfrbit32 RST3CLR        : 1;	/* RST3 Request Status Clear */
		unsigned __sfrbit32 RST4CLR        : 1;	/* RST4 Request Status Clear */
		unsigned __sfrbit32 RST5CLR        : 1;	/* RST5 Request Status Clear */
		unsigned __sfrbit32 NMICLR         : 1;	/* NMI Request Status Clear */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 EMSCLR         : 1;	/* EMS Request Status Clear */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 IRQ0AEMCLR     : 1;	/* IRQ0 AEM Status Clear */
		unsigned __sfrbit32 IRQ1AEMCLR     : 1;	/* IRQ1 AEM Status Clear */
		unsigned __sfrbit32 IRQ2AEMCLR     : 1;	/* IRQ2 AEM Status Clear */
		unsigned __sfrbit32 RST0AEMCLR     : 1;	/* RST0 AEM Status Clear */
		unsigned __sfrbit32 RST1AEMCLR     : 1;	/* RST1 AEM Status Clear */
		unsigned __sfrbit32 RST2AEMCLR     : 1;	/* RST2 AEM Status Clear */
		unsigned __sfrbit32 RST3AEMCLR     : 1;	/* RST3 AEM Status Clear */
		unsigned __sfrbit32 RST4AEMCLR     : 1;	/* RST4 AEM Status Clear */
		unsigned __sfrbit32 RST5AEMCLR     : 1;	/* RST5 AEM Status Clear */
		unsigned __sfrbit32 NMIAEMCLR      : 1;	/* NMI AEM Status Clear */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 EMSAEMCLR      : 1;	/* EMS AEM Status Clear */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} SMU_AEXCLR_type;
#define SMU_AEXCLR	(*( SMU_AEXCLR_type *) 0xf0036874u)	/* Alarm Executed Status Clear Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int FCNT           : 4;	/* Fault Counter. */
		/* const */ unsigned int ACNT           : 12;	/* Alarm Counter. */
		/* const */ unsigned int                : 14;
		/* const */ unsigned int FCO            : 1;	/* Fault Counter Overflow. */
		/* const */ unsigned int ACO            : 1;	/* Alarm Counter Overflow. */
	} B;
	int I;
	unsigned int U;

} SMU_AFCNT_type;
#define SMU_AFCNT	(*( SMU_AFCNT_type *) 0xf0036840u)	/* Alarm and Fault Counter */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 SF2            : 1;	/* Status flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 SF9            : 1;	/* Status flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 SF10           : 1;	/* Status flag for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 SF11           : 1;	/* Status flag for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 SF14           : 1;	/* Status flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 SF22           : 1;	/* Status flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 SF23           : 1;	/* Status flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 SF24           : 1;	/* Status flag for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_AG0_type;
#define SMU_AG0	(*( SMU_AG0_type *) 0xf00369c0u)	/* Alarm Status Reg0ster */
#define SMU_AG1	(*( SMU_AG0_type *) 0xf00369c4u)	/* Alarm Status Reg1ster */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_AG0CF0_type;
#define SMU_AG0CF0	(*( SMU_AG0CF0_type *) 0xf0036900u)	/* Alarm Conf0guration Register */
#define SMU_AG0CF1	(*( SMU_AG0CF0_type *) 0xf0036904u)	/* Alarm Conf0guration Register */
#define SMU_AG0CF2	(*( SMU_AG0CF0_type *) 0xf0036908u)	/* Alarm Conf0guration Register */
#define SMU_AG1CF0	(*( SMU_AG0CF0_type *) 0xf003690cu)	/* Alarm Conf1guration Register */
#define SMU_AG1CF1	(*( SMU_AG0CF0_type *) 0xf0036910u)	/* Alarm Conf1guration Register */
#define SMU_AG1CF2	(*( SMU_AG0CF0_type *) 0xf0036914u)	/* Alarm Conf1guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signaling configuration flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signaling configuration flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signaling configuration flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signaling configuration flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signaling configuration flag for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signaling configuration flag for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signaling configuration flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signaling configuration flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signaling configuration flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 FE22           : 1;	/* Fault signaling configuration flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signaling configuration flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signaling configuration flag for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_AG0FSP_type;
#define SMU_AG0FSP	(*( SMU_AG0FSP_type *) 0xf0036990u)	/* SMU_core FSP Conf0guration Register */
#define SMU_AG1FSP	(*( SMU_AG0FSP_type *) 0xf0036994u)	/* SMU_core FSP Conf1guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 SF2            : 1;	/* Status flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 SF3            : 1;	/* Status flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 SF9            : 1;	/* Status flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 SF10           : 1;	/* Status flag for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 SF11           : 1;	/* Status flag for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 SF14           : 1;	/* Status flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 SF15           : 1;	/* Status flag for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 SF16           : 1;	/* Status flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 SF17           : 1;	/* Status flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 SF18           : 1;	/* Status flag for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 SF19           : 1;	/* Status flag for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 SF20           : 1;	/* Status flag for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 SF21           : 1;	/* Status flag for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 SF22           : 1;	/* Status flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32                : 9;
	} B;
	int I;
	unsigned int U;

} SMU_AG10_type;
#define SMU_AG10	(*( SMU_AG10_type *) 0xf00369e8u)	/* Alarm Status Reg10ster */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32                : 9;
	} B;
	int I;
	unsigned int U;

} SMU_AG10CF0_type;
#define SMU_AG10CF0	(*( SMU_AG10CF0_type *) 0xf0036978u)	/* Alarm Conf10guration Register */
#define SMU_AG10CF1	(*( SMU_AG10CF0_type *) 0xf003697cu)	/* Alarm Conf10guration Register */
#define SMU_AG10CF2	(*( SMU_AG10CF0_type *) 0xf0036980u)	/* Alarm Conf10guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signaling configuration flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signaling configuration flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signaling configuration flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signaling configuration flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signaling configuration flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signaling configuration flag for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signaling configuration flag for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signaling configuration flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signaling configuration flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signaling configuration flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signaling configuration flag for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signaling configuration flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signaling configuration flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signaling configuration flag for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signaling configuration flag for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signaling configuration flag for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signaling configuration flag for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signaling configuration flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32                : 9;
	} B;
	int I;
	unsigned int U;

} SMU_AG10FSP_type;
#define SMU_AG10FSP	(*( SMU_AG10FSP_type *) 0xf00369b8u)	/* SMU_core FSP Conf10guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 SF2            : 1;	/* Status flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 SF3            : 1;	/* Status flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 SF9            : 1;	/* Status flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} SMU_AG11_type;
#define SMU_AG11	(*( SMU_AG11_type *) 0xf00369ecu)	/* Alarm Status Reg11ster */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} SMU_AG11CF0_type;
#define SMU_AG11CF0	(*( SMU_AG11CF0_type *) 0xf0036984u)	/* Alarm Conf11guration Register */
#define SMU_AG11CF1	(*( SMU_AG11CF0_type *) 0xf0036988u)	/* Alarm Conf11guration Register */
#define SMU_AG11CF2	(*( SMU_AG11CF0_type *) 0xf003698cu)	/* Alarm Conf11guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signaling configuration flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signaling configuration flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signaling configuration flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signaling configuration flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signaling configuration flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 FE12           : 1;	/* Fault signaling configuration flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signaling configuration flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32                : 18;
	} B;
	int I;
	unsigned int U;

} SMU_AG11FSP_type;
#define SMU_AG11FSP	(*( SMU_AG11FSP_type *) 0xf00369bcu)	/* SMU_core FSP Conf11guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 SF9            : 1;	/* Status flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 SF10           : 1;	/* Status flag for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 SF11           : 1;	/* Status flag for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 SF14           : 1;	/* Status flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 SF22           : 1;	/* Status flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 SF23           : 1;	/* Status flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 SF24           : 1;	/* Status flag for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_AG2_type;
#define SMU_AG2	(*( SMU_AG2_type *) 0xf00369c8u)	/* Alarm Status Reg2ster */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_AG2CF0_type;
#define SMU_AG2CF0	(*( SMU_AG2CF0_type *) 0xf0036918u)	/* Alarm Conf2guration Register */
#define SMU_AG2CF1	(*( SMU_AG2CF0_type *) 0xf003691cu)	/* Alarm Conf2guration Register */
#define SMU_AG2CF2	(*( SMU_AG2CF0_type *) 0xf0036920u)	/* Alarm Conf2guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signaling configuration flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signaling configuration flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signaling configuration flag for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signaling configuration flag for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signaling configuration flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signaling configuration flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signaling configuration flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 FE22           : 1;	/* Fault signaling configuration flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signaling configuration flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signaling configuration flag for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_AG2FSP_type;
#define SMU_AG2FSP	(*( SMU_AG2FSP_type *) 0xf0036998u)	/* SMU_core FSP Conf2guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG3_type;
#define SMU_AG3	(*( SMU_AG3_type *) 0xf00369ccu)	/* Alarm Status Reg3ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG3CF0_type;
#define SMU_AG3CF0	(*( SMU_AG3CF0_type *) 0xf0036924u)	/* Alarm Conf3guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG3CF1_type;
#define SMU_AG3CF1	(*( SMU_AG3CF1_type *) 0xf0036928u)	/* Alarm Conf3guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG3CF2_type;
#define SMU_AG3CF2	(*( SMU_AG3CF2_type *) 0xf003692cu)	/* Alarm Conf3guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG3FSP_type;
#define SMU_AG3FSP	(*( SMU_AG3FSP_type *) 0xf003699cu)	/* SMU_core FSP Conf3guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG4_type;
#define SMU_AG4	(*( SMU_AG4_type *) 0xf00369d0u)	/* Alarm Status Reg4ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG4CF0_type;
#define SMU_AG4CF0	(*( SMU_AG4CF0_type *) 0xf0036930u)	/* Alarm Conf4guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG4CF1_type;
#define SMU_AG4CF1	(*( SMU_AG4CF1_type *) 0xf0036934u)	/* Alarm Conf4guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG4CF2_type;
#define SMU_AG4CF2	(*( SMU_AG4CF2_type *) 0xf0036938u)	/* Alarm Conf4guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG4FSP_type;
#define SMU_AG4FSP	(*( SMU_AG4FSP_type *) 0xf00369a0u)	/* SMU_core FSP Conf4guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG5_type;
#define SMU_AG5	(*( SMU_AG5_type *) 0xf00369d4u)	/* Alarm Status Reg5ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG5CF0_type;
#define SMU_AG5CF0	(*( SMU_AG5CF0_type *) 0xf003693cu)	/* Alarm Conf5guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG5CF1_type;
#define SMU_AG5CF1	(*( SMU_AG5CF1_type *) 0xf0036940u)	/* Alarm Conf5guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG5CF2_type;
#define SMU_AG5CF2	(*( SMU_AG5CF2_type *) 0xf0036944u)	/* Alarm Conf5guration Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SMU_AG5FSP_type;
#define SMU_AG5FSP	(*( SMU_AG5FSP_type *) 0xf00369a4u)	/* SMU_core FSP Conf5guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 SF2            : 1;	/* Status flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 SF3            : 1;	/* Status flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 SF14           : 1;	/* Status flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 SF15           : 1;	/* Status flag for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 SF16           : 1;	/* Status flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 SF17           : 1;	/* Status flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 SF18           : 1;	/* Status flag for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 SF19           : 1;	/* Status flag for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 SF20           : 1;	/* Status flag for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 SF21           : 1;	/* Status flag for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 SF22           : 1;	/* Status flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 SF23           : 1;	/* Status flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 SF24           : 1;	/* Status flag for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32 SF25           : 1;	/* Status flag for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32                : 6;
	} B;
	int I;
	unsigned int U;

} SMU_AG6_type;
#define SMU_AG6	(*( SMU_AG6_type *) 0xf00369d8u)	/* Alarm Status Reg6ster */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32                : 6;
	} B;
	int I;
	unsigned int U;

} SMU_AG6CF0_type;
#define SMU_AG6CF0	(*( SMU_AG6CF0_type *) 0xf0036948u)	/* Alarm Conf6guration Register */
#define SMU_AG6CF1	(*( SMU_AG6CF0_type *) 0xf003694cu)	/* Alarm Conf6guration Register */
#define SMU_AG6CF2	(*( SMU_AG6CF0_type *) 0xf0036950u)	/* Alarm Conf6guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signaling configuration flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signaling configuration flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signaling configuration flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signaling configuration flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 FE13           : 1;	/* Fault signaling configuration flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signaling configuration flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signaling configuration flag for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signaling configuration flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signaling configuration flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signaling configuration flag for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signaling configuration flag for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signaling configuration flag for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signaling configuration flag for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signaling configuration flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signaling configuration flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signaling configuration flag for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signaling configuration flag for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32                : 6;
	} B;
	int I;
	unsigned int U;

} SMU_AG6FSP_type;
#define SMU_AG6FSP	(*( SMU_AG6FSP_type *) 0xf00369a8u)	/* SMU_core FSP Conf6guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 SF2            : 1;	/* Status flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 SF3            : 1;	/* Status flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 SF13           : 1;	/* Status flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 SF14           : 1;	/* Status flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 SF15           : 1;	/* Status flag for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 SF16           : 1;	/* Status flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 SF17           : 1;	/* Status flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 SF18           : 1;	/* Status flag for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 SF19           : 1;	/* Status flag for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 SF20           : 1;	/* Status flag for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 SF21           : 1;	/* Status flag for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 SF22           : 1;	/* Status flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 SF23           : 1;	/* Status flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 SF24           : 1;	/* Status flag for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32 SF25           : 1;	/* Status flag for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32 SF26           : 1;	/* Status flag for alarm 26 belonging to alarm group i. */
		unsigned __sfrbit32 SF27           : 1;	/* Status flag for alarm 27 belonging to alarm group i. */
		unsigned __sfrbit32 SF28           : 1;	/* Status flag for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 SF29           : 1;	/* Status flag for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 SF30           : 1;	/* Status flag for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 SF31           : 1;	/* Status flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG7_type;
#define SMU_AG7	(*( SMU_AG7_type *) 0xf00369dcu)	/* Alarm Status Reg7ster */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 CF13           : 1;	/* Configuration flag x (x=0-2) for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 CF14           : 1;	/* Configuration flag x (x=0-2) for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 CF24           : 1;	/* Configuration flag x (x=0-2) for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group i. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group i. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG7CF0_type;
#define SMU_AG7CF0	(*( SMU_AG7CF0_type *) 0xf0036954u)	/* Alarm Conf7guration Register */
#define SMU_AG7CF1	(*( SMU_AG7CF0_type *) 0xf0036958u)	/* Alarm Conf7guration Register */
#define SMU_AG7CF2	(*( SMU_AG7CF0_type *) 0xf003695cu)	/* Alarm Conf7guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signaling configuration flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signaling configuration flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signaling configuration flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signaling configuration flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 FE12           : 1;	/* Fault signaling configuration flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32 FE13           : 1;	/* Fault signaling configuration flag for alarm 13 belonging to alarm group i. */
		unsigned __sfrbit32 FE14           : 1;	/* Fault signaling configuration flag for alarm 14 belonging to alarm group i. */
		unsigned __sfrbit32 FE15           : 1;	/* Fault signaling configuration flag for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signaling configuration flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signaling configuration flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signaling configuration flag for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signaling configuration flag for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signaling configuration flag for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signaling configuration flag for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signaling configuration flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signaling configuration flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32 FE24           : 1;	/* Fault signaling configuration flag for alarm 24 belonging to alarm group i. */
		unsigned __sfrbit32 FE25           : 1;	/* Fault signaling configuration flag for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signaling configuration flag for alarm 26 belonging to alarm group i. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signaling configuration flag for alarm 27 belonging to alarm group i. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signaling configuration flag for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signaling configuration flag for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signaling configuration flag for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signaling configuration flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG7FSP_type;
#define SMU_AG7FSP	(*( SMU_AG7FSP_type *) 0xf00369acu)	/* SMU_core FSP Conf7guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 SF2            : 1;	/* Status flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 SF3            : 1;	/* Status flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 SF4            : 1;	/* Status flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 SF6            : 1;	/* Status flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 SF7            : 1;	/* Status flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 SF8            : 1;	/* Status flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 SF9            : 1;	/* Status flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 SF10           : 1;	/* Status flag for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 SF11           : 1;	/* Status flag for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 SF12           : 1;	/* Status flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 SF16           : 1;	/* Status flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 SF17           : 1;	/* Status flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 SF18           : 1;	/* Status flag for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 SF19           : 1;	/* Status flag for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 SF20           : 1;	/* Status flag for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 SF21           : 1;	/* Status flag for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 SF22           : 1;	/* Status flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 SF23           : 1;	/* Status flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SF25           : 1;	/* Status flag for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32 SF26           : 1;	/* Status flag for alarm 26 belonging to alarm group i. */
		unsigned __sfrbit32 SF27           : 1;	/* Status flag for alarm 27 belonging to alarm group i. */
		unsigned __sfrbit32 SF28           : 1;	/* Status flag for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 SF29           : 1;	/* Status flag for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 SF30           : 1;	/* Status flag for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 SF31           : 1;	/* Status flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG8_type;
#define SMU_AG8	(*( SMU_AG8_type *) 0xf00369e0u)	/* Alarm Status Reg8ster */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 CF2            : 1;	/* Configuration flag x (x=0-2) for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 CF4            : 1;	/* Configuration flag x (x=0-2) for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 CF6            : 1;	/* Configuration flag x (x=0-2) for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 CF7            : 1;	/* Configuration flag x (x=0-2) for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 CF8            : 1;	/* Configuration flag x (x=0-2) for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 CF9            : 1;	/* Configuration flag x (x=0-2) for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 CF10           : 1;	/* Configuration flag x (x=0-2) for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 CF11           : 1;	/* Configuration flag x (x=0-2) for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 CF12           : 1;	/* Configuration flag x (x=0-2) for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 CF18           : 1;	/* Configuration flag x (x=0-2) for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 CF19           : 1;	/* Configuration flag x (x=0-2) for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 CF20           : 1;	/* Configuration flag x (x=0-2) for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 CF21           : 1;	/* Configuration flag x (x=0-2) for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 CF22           : 1;	/* Configuration flag x (x=0-2) for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CF25           : 1;	/* Configuration flag x (x=0-2) for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32 CF26           : 1;	/* Configuration flag x (x=0-2) for alarm 26 belonging to alarm group i. */
		unsigned __sfrbit32 CF27           : 1;	/* Configuration flag x (x=0-2) for alarm 27 belonging to alarm group i. */
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG8CF0_type;
#define SMU_AG8CF0	(*( SMU_AG8CF0_type *) 0xf0036960u)	/* Alarm Conf8guration Register */
#define SMU_AG8CF1	(*( SMU_AG8CF0_type *) 0xf0036964u)	/* Alarm Conf8guration Register */
#define SMU_AG8CF2	(*( SMU_AG8CF0_type *) 0xf0036968u)	/* Alarm Conf8guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signaling configuration flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32 FE2            : 1;	/* Fault signaling configuration flag for alarm 2 belonging to alarm group i. */
		unsigned __sfrbit32 FE3            : 1;	/* Fault signaling configuration flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32 FE4            : 1;	/* Fault signaling configuration flag for alarm 4 belonging to alarm group i. */
		unsigned __sfrbit32 FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32 FE6            : 1;	/* Fault signaling configuration flag for alarm 6 belonging to alarm group i. */
		unsigned __sfrbit32 FE7            : 1;	/* Fault signaling configuration flag for alarm 7 belonging to alarm group i. */
		unsigned __sfrbit32 FE8            : 1;	/* Fault signaling configuration flag for alarm 8 belonging to alarm group i. */
		unsigned __sfrbit32 FE9            : 1;	/* Fault signaling configuration flag for alarm 9 belonging to alarm group i. */
		unsigned __sfrbit32 FE10           : 1;	/* Fault signaling configuration flag for alarm 10 belonging to alarm group i. */
		unsigned __sfrbit32 FE11           : 1;	/* Fault signaling configuration flag for alarm 11 belonging to alarm group i. */
		unsigned __sfrbit32 FE12           : 1;	/* Fault signaling configuration flag for alarm 12 belonging to alarm group i. */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 FE16           : 1;	/* Fault signaling configuration flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signaling configuration flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32 FE18           : 1;	/* Fault signaling configuration flag for alarm 18 belonging to alarm group i. */
		unsigned __sfrbit32 FE19           : 1;	/* Fault signaling configuration flag for alarm 19 belonging to alarm group i. */
		unsigned __sfrbit32 FE20           : 1;	/* Fault signaling configuration flag for alarm 20 belonging to alarm group i. */
		unsigned __sfrbit32 FE21           : 1;	/* Fault signaling configuration flag for alarm 21 belonging to alarm group i. */
		unsigned __sfrbit32 FE22           : 1;	/* Fault signaling configuration flag for alarm 22 belonging to alarm group i. */
		unsigned __sfrbit32 FE23           : 1;	/* Fault signaling configuration flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 FE25           : 1;	/* Fault signaling configuration flag for alarm 25 belonging to alarm group i. */
		unsigned __sfrbit32 FE26           : 1;	/* Fault signaling configuration flag for alarm 26 belonging to alarm group i. */
		unsigned __sfrbit32 FE27           : 1;	/* Fault signaling configuration flag for alarm 27 belonging to alarm group i. */
		unsigned __sfrbit32 FE28           : 1;	/* Fault signaling configuration flag for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signaling configuration flag for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signaling configuration flag for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signaling configuration flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG8FSP_type;
#define SMU_AG8FSP	(*( SMU_AG8FSP_type *) 0xf00369b0u)	/* SMU_core FSP Conf8guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SF0            : 1;	/* Status flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 SF1            : 1;	/* Status flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SF3            : 1;	/* Status flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SF5            : 1;	/* Status flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32                : 9;
		unsigned __sfrbit32 SF15           : 1;	/* Status flag for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 SF16           : 1;	/* Status flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 SF17           : 1;	/* Status flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 SF23           : 1;	/* Status flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 SF28           : 1;	/* Status flag for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 SF29           : 1;	/* Status flag for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 SF30           : 1;	/* Status flag for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 SF31           : 1;	/* Status flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG9_type;
#define SMU_AG9	(*( SMU_AG9_type *) 0xf00369e4u)	/* Alarm Status Reg9ster */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CF0            : 1;	/* Configuration flag x (x=0-2) for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 CF1            : 1;	/* Configuration flag x (x=0-2) for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CF3            : 1;	/* Configuration flag x (x=0-2) for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 CF5            : 1;	/* Configuration flag x (x=0-2) for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32                : 9;
		unsigned __sfrbit32 CF15           : 1;	/* Configuration flag x (x=0-2) for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 CF16           : 1;	/* Configuration flag x (x=0-2) for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 CF17           : 1;	/* Configuration flag x (x=0-2) for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 CF23           : 1;	/* Configuration flag x (x=0-2) for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 CF28           : 1;	/* Configuration flag x (x=0-2) for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 CF29           : 1;	/* Configuration flag x (x=0-2) for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 CF30           : 1;	/* Configuration flag x (x=0-2) for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 CF31           : 1;	/* Configuration flag x (x=0-2) for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG9CF0_type;
#define SMU_AG9CF0	(*( SMU_AG9CF0_type *) 0xf003696cu)	/* Alarm Conf9guration Register */
#define SMU_AG9CF1	(*( SMU_AG9CF0_type *) 0xf0036970u)	/* Alarm Conf9guration Register */
#define SMU_AG9CF2	(*( SMU_AG9CF0_type *) 0xf0036974u)	/* Alarm Conf9guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 FE0            : 1;	/* Fault signaling configuration flag for alarm 0 belonging to alarm group i. */
		unsigned __sfrbit32 FE1            : 1;	/* Fault signaling configuration flag for alarm 1 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 FE3            : 1;	/* Fault signaling configuration flag for alarm 3 belonging to alarm group i. */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 FE5            : 1;	/* Fault signaling configuration flag for alarm 5 belonging to alarm group i. */
		unsigned __sfrbit32                : 9;
		unsigned __sfrbit32 FE15           : 1;	/* Fault signaling configuration flag for alarm 15 belonging to alarm group i. */
		unsigned __sfrbit32 FE16           : 1;	/* Fault signaling configuration flag for alarm 16 belonging to alarm group i. */
		unsigned __sfrbit32 FE17           : 1;	/* Fault signaling configuration flag for alarm 17 belonging to alarm group i. */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 FE23           : 1;	/* Fault signaling configuration flag for alarm 23 belonging to alarm group i. */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 FE28           : 1;	/* Fault signaling configuration flag for alarm 28 belonging to alarm group i. */
		unsigned __sfrbit32 FE29           : 1;	/* Fault signaling configuration flag for alarm 29 belonging to alarm group i. */
		unsigned __sfrbit32 FE30           : 1;	/* Fault signaling configuration flag for alarm 30 belonging to alarm group i. */
		unsigned __sfrbit32 FE31           : 1;	/* Fault signaling configuration flag for alarm 31 belonging to alarm group i. */
	} B;
	int I;
	unsigned int U;

} SMU_AG9FSP_type;
#define SMU_AG9FSP	(*( SMU_AG9FSP_type *) 0xf00369b4u)	/* SMU_core FSP Conf9guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 IGCS0          : 3;	/* Interrupt Generation Configuration Set 0 */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 IGCS1          : 3;	/* Interrupt Generation Configuration Set 1 */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 IGCS2          : 3;	/* Interrupt Generation Configuration Set 2 */
		unsigned __sfrbit32                : 5;
		unsigned __sfrbit32 RCS            : 6;	/* CPU Reset Configuration Set */
		unsigned __sfrbit32                : 2;
		unsigned __sfrbit32 PES            : 5;	/* Port Emergency Stop */
		unsigned __sfrbit32 EFRST          : 1;	/* Enable FAULT to RUN State Transition */
		unsigned __sfrbit32                : 2;
	} B;
	int I;
	unsigned int U;

} SMU_AGC_type;
#define SMU_AGC	(*( SMU_AGC_type *) 0xf003682cu)	/* Alarm Global Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} SMU_CLC_type;
#define SMU_CLC	(*( SMU_CLC_type *) 0xf0036800u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CMD            : 4;	/* Implements the SMU_core Command Interface. */
		unsigned __sfrbit32 ARG            : 4;	/* Implements the SMU_core Command Interface. */
		unsigned __sfrbit32                : 24;
	} B;
	int I;
	unsigned int U;

} SMU_CMD_type;
#define SMU_CMD	(*( SMU_CMD_type *) 0xf0036820u)	/* Command Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SSM            : 2;	/* Running state of the SMU_core State Machine */
		/* const */ unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} SMU_DBG_type;
#define SMU_DBG	(*( SMU_DBG_type *) 0xf0036838u)	/* Debug Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PRE1           : 3;	/* Prescaler1 */
		unsigned __sfrbit32 PRE2           : 2;	/* Prescaler2 */
		unsigned __sfrbit32 MODE           : 2;	/* Fault Signaling Protocol configuration */
		unsigned __sfrbit32 PES            : 1;	/* Port Emergency Stop (PES) */
		/* const */ unsigned __sfrbit32 TFSP_LOW       : 14;	/* Specifies the FSP fault state duration */
		unsigned __sfrbit32 TFSP_HIGH      : 10;	/* Specifies the FSP fault state duration */
	} B;
	int I;
	unsigned int U;

} SMU_FSP_type;
#define SMU_FSP	(*( SMU_FSP_type *) 0xf0036828u)	/* Fault Signaling Protocol */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned int MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned int MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} SMU_ID_type;
#define SMU_ID	(*( SMU_ID_type *) 0xf0036808u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CFGLCK         : 8;	/* Configuration Lock */
		unsigned __sfrbit32 PERLCK         : 8;	/* Permanent Lock */
		unsigned __sfrbit32                : 16;
	} B;
	int I;
	unsigned int U;

} SMU_KEYS_type;
#define SMU_KEYS	(*( SMU_KEYS_type *) 0xf0036834u)	/* Key Register */

typedef volatile union
{
	struct
	{ 
		unsigned int TGS            : 2;	/* Trigger Set for OTGB0/1 */
		unsigned int TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned int TG_P           : 1;	/* TGS, TGB Write Protection */
		unsigned int                : 20;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} SMU_OCS_type;
#define SMU_OCS	(*( SMU_OCS_type *) 0xf0036fe8u)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 HWDIR          : 2;	/* Port Direction. */
		unsigned __sfrbit32 HWEN           : 2;	/* Port Enable */
		unsigned __sfrbit32 GFSCU_EN       : 1;	/* Glitch Filter for ErrorPin SMU_FSP0 to SCU enable */
		unsigned __sfrbit32 GFSTS_EN       : 1;	/* Glitch Filter for ErrorPin SMU_FSP0 to register SMU_STS enable */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 PCS            : 1;	/* PAD Configuration Select */
		unsigned __sfrbit32                : 6;
		/* const */ unsigned __sfrbit32 PCFG           : 9;	/* PAD Configuration */
		unsigned __sfrbit32                : 9;
	} B;
	int I;
	unsigned int U;

} SMU_PCTL_type;
#define SMU_PCTL	(*( SMU_PCTL_type *) 0xf003683cu)	/* Port Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TE0            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE1            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE2            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE3            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE4            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE5            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE6            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE7            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE8            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE9            : 1;	/* Test Enable. */
		unsigned __sfrbit32 TE10           : 1;	/* Test Enable. */
		unsigned __sfrbit32                : 21;
	} B;
	int I;
	unsigned int U;

} SMU_RMCTL_type;
#define SMU_RMCTL	(*( SMU_RMCTL_type *) 0xf0036b00u)	/* Register Monitor Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EF0            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF1            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF2            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF3            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF4            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF5            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF6            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF7            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF8            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF9            : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 EF10           : 1;	/* Status flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32                : 21;
	} B;
	int I;
	unsigned int U;

} SMU_RMEF_type;
#define SMU_RMEF	(*( SMU_RMEF_type *) 0xf0036b04u)	/* Register Monitor Error Flags */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STS0           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS1           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS2           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS3           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS4           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS5           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS6           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS7           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS8           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS9           : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32 STS10          : 1;	/* Ready flag related to the different instances of the register monitor safety mechanism. */
		unsigned __sfrbit32                : 21;
	} B;
	int I;
	unsigned int U;

} SMU_RMSTS_type;
#define SMU_RMSTS	(*( SMU_RMSTS_type *) 0xf0036b08u)	/* Register Monitor Self Test Status */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GID0           : 4;	/* Group Index 0. */
		unsigned __sfrbit32 ALID0          : 5;	/* Alarm Identifier 0. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 GID1           : 4;	/* Group Index 1. */
		unsigned __sfrbit32 ALID1          : 5;	/* Alarm Identifier 1. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_RTAC00_type;
#define SMU_RTAC00	(*( SMU_RTAC00_type *) 0xf0036860u)	/* Recovery Timer 0 Alarm Configuration 0 */
#define SMU_RTAC10	(*( SMU_RTAC00_type *) 0xf0036868u)	/* Recovery Timer 1 Alarm Configuration 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GID2           : 4;	/* Group Index 2. */
		unsigned __sfrbit32 ALID2          : 5;	/* Alarm Identifier 0. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 GID3           : 4;	/* Group Index 3. */
		unsigned __sfrbit32 ALID3          : 5;	/* Alarm Identifier 1. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_RTAC01_type;
#define SMU_RTAC01	(*( SMU_RTAC01_type *) 0xf0036864u)	/* Recovery Timer 0 Alarm Configuration 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GID2           : 4;	/* Group Index 2. */
		unsigned __sfrbit32 ALID2          : 5;	/* Alarm Identifier 2. */
		unsigned __sfrbit32                : 7;
		unsigned __sfrbit32 GID3           : 4;	/* Group Index 3. */
		unsigned __sfrbit32 ALID3          : 5;	/* Alarm Identifier 3. */
		unsigned __sfrbit32                : 7;
	} B;
	int I;
	unsigned int U;

} SMU_RTAC11_type;
#define SMU_RTAC11	(*( SMU_RTAC11_type *) 0xf003686cu)	/* Recovery Timer 1 Alarm Configuration 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RT0E           : 1;	/* RT0 Enable Bit */
		unsigned __sfrbit32 RT1E           : 1;	/* RT1 Enable Bit */
		unsigned __sfrbit32                : 6;
		unsigned __sfrbit32 RTD            : 24;	/* Recovery Timer Duration */
	} B;
	int I;
	unsigned int U;

} SMU_RTC_type;
#define SMU_RTC	(*( SMU_RTC_type *) 0xf0036830u)	/* Recovery Timer Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CMD            : 4;	/* Last command received */
		unsigned __sfrbit32 ARG            : 4;	/* Last command argument received */
		unsigned __sfrbit32 RES            : 1;	/* Result of last received command */
		unsigned __sfrbit32 ASCE           : 1;	/* Alarm Status Clear Enable */
		/* const */ unsigned __sfrbit32 FSP            : 2;	/* Fault Signaling Protocol status */
		unsigned __sfrbit32 FSTS           : 1;	/* Fault State Timing Status */
		unsigned __sfrbit32                : 3;
		unsigned __sfrbit32 RTS0           : 1;	/* Recovery Timer 0 Status */
		unsigned __sfrbit32 RTME0          : 1;	/* Recovery Timer 0 Missed Event */
		unsigned __sfrbit32 RTS1           : 1;	/* Recovery Timer 1 Status */
		unsigned __sfrbit32 RTME1          : 1;	/* Recovery Timer 1 Missed Event */
		unsigned __sfrbit32                : 12;
	} B;
	int I;
	unsigned int U;

} SMU_STS_type;
#define SMU_STS	(*( SMU_STS_type *) 0xf0036824u)	/* Status Register */


/* SPU */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned __sfrbit32 EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned __sfrbit32 EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned __sfrbit32 EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned __sfrbit32 EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned __sfrbit32 EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned __sfrbit32 EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned __sfrbit32 EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned __sfrbit32 EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned __sfrbit32 EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned __sfrbit32 EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned __sfrbit32 EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned __sfrbit32 EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned __sfrbit32 EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned __sfrbit32 EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned __sfrbit32 EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned __sfrbit32 EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned __sfrbit32 EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned __sfrbit32 EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned __sfrbit32 EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned __sfrbit32 EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned __sfrbit32 EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned __sfrbit32 EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned __sfrbit32 EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned __sfrbit32 EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned __sfrbit32 EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned __sfrbit32 EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned __sfrbit32 EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned __sfrbit32 EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned __sfrbit32 EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned __sfrbit32 EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned __sfrbit32 EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} SPU0_ACCEN0_type;
#define SPU0_ACCEN0	(*( SPU0_ACCEN0_type *) 0xfa8007e4u)	/* Access Enable Register 0 */
#define SPU1_ACCEN0	(*( SPU0_ACCEN0_type *) 0xfac007e4u)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_ACCEN1_type;
#define SPU0_ACCEN1	(*( SPU0_ACCEN1_type *) 0xfa8007e8u)	/* Access Enable Register 1 */
#define SPU0_ACFG2	(*( SPU0_ACCEN1_type *) 0xfa800210u)	/* Spare Configuration Register */
#define SPU0_BE0_UNLDR_ACFG	(*( SPU0_ACCEN1_type *) 0xfa800080u)	/* Spare Configuration Register */
#define SPU0_BE1_UNLDR_ACFG	(*( SPU0_ACCEN1_type *) 0xfa8000c0u)	/* Spare Configuration Register */
#define SPU0_ID_RM_ACFG0	(*( SPU0_ACCEN1_type *) 0xfa800050u)	/* Spare Configuration Register */
#define SPU0_ID_RM_ACFG1	(*( SPU0_ACCEN1_type *) 0xfa800054u)	/* Spare Configuration Register */
#define SPU1_ACCEN1	(*( SPU0_ACCEN1_type *) 0xfac007e8u)	/* Access Enable Register 1 */
#define SPU1_ACFG2	(*( SPU0_ACCEN1_type *) 0xfac00210u)	/* Spare Configuration Register */
#define SPU1_BE0_UNLDR_ACFG	(*( SPU0_ACCEN1_type *) 0xfac00080u)	/* Spare Configuration Register */
#define SPU1_BE1_UNLDR_ACFG	(*( SPU0_ACCEN1_type *) 0xfac000c0u)	/* Spare Configuration Register */
#define SPU1_ID_RM_ACFG0	(*( SPU0_ACCEN1_type *) 0xfac00050u)	/* Spare Configuration Register */
#define SPU1_ID_RM_ACFG1	(*( SPU0_ACCEN1_type *) 0xfac00054u)	/* Spare Configuration Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ADROFST0_ANT   : 16;	/* Antenna Offset Address */
		unsigned __sfrbit32 ADROFST1_ANT   : 16;	/* Antenna Offset Address */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_A0_ANTOFST_type;
#define SPU0_BE0_A0_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfa800068u)	/* Antenna Offset */
#define SPU0_BE0_A1_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfa80006cu)	/* Antenna Offset */
#define SPU0_BE0_A2_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfa800070u)	/* Antenna Offset */
#define SPU0_BE0_A3_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfa800074u)	/* Antenna Offset */
#define SPU0_BE1_A0_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfa8000a8u)	/* Antenna Offset */
#define SPU0_BE1_A1_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfa8000acu)	/* Antenna Offset */
#define SPU0_BE1_A2_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfa8000b0u)	/* Antenna Offset */
#define SPU0_BE1_A3_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfa8000b4u)	/* Antenna Offset */
#define SPU1_BE0_A0_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfac00068u)	/* Antenna Offset */
#define SPU1_BE0_A1_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfac0006cu)	/* Antenna Offset */
#define SPU1_BE0_A2_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfac00070u)	/* Antenna Offset */
#define SPU1_BE0_A3_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfac00074u)	/* Antenna Offset */
#define SPU1_BE1_A0_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfac000a8u)	/* Antenna Offset */
#define SPU1_BE1_A1_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfac000acu)	/* Antenna Offset */
#define SPU1_BE1_A2_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfac000b0u)	/* Antenna Offset */
#define SPU1_BE1_A3_ANTOFST	(*( SPU0_BE0_A0_ANTOFST_type *) 0xfac000b4u)	/* Antenna Offset */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 19;	/* CFAR Base Address */
		unsigned __sfrbit32 SEWIN          : 6;	/* Spectrum Extension Window */
		unsigned __sfrbit32 EXTNSN         : 2;	/* Spectrum Extension */
		unsigned __sfrbit32 CFAR_CAE       : 1;	/* CFAR CA Engine Enable */
		unsigned __sfrbit32 CFAR_GOSE      : 1;	/* CFAR GOS Engine Enable */
		unsigned __sfrbit32 CFAREN         : 3;	/* CFAR Module Enable */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_CFARCTRL_type;
#define SPU0_BE0_CFARCTRL	(*( SPU0_BE0_CFARCTRL_type *) 0xfa800098u)	/* CFAR Module Control */
#define SPU0_BE1_CFARCTRL	(*( SPU0_BE0_CFARCTRL_type *) 0xfa8000d8u)	/* CFAR Module Control */
#define SPU1_BE0_CFARCTRL	(*( SPU0_BE0_CFARCTRL_type *) 0xfac00098u)	/* CFAR Module Control */
#define SPU1_BE1_CFARCTRL	(*( SPU0_BE0_CFARCTRL_type *) 0xfac000d8u)	/* CFAR Module Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DRPL           : 8;	/* Drop Last */
		unsigned __sfrbit32 DRPF           : 8;	/* Drop First */
		unsigned __sfrbit32 EXPNT          : 6;	/* Common Exponent */
		unsigned __sfrbit32 PHSHFT         : 2;	/* Fast Phase Shift */
		unsigned __sfrbit32 SIZE           : 4;	/* FFT Size */
		unsigned __sfrbit32 FORMAT         : 2;	/* Window Data Format */
		unsigned __sfrbit32 FFTBYPS        : 1;	/* FFT Bypass */
		unsigned __sfrbit32 IFFT           : 1;	/* Inverse FFT Enable */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_LDR_CONF_type;
#define SPU0_BE0_LDR_CONF	(*( SPU0_BE0_LDR_CONF_type *) 0xfa800060u)	/* Loader Configuration */
#define SPU0_BE1_LDR_CONF	(*( SPU0_BE0_LDR_CONF_type *) 0xfa8000a0u)	/* Loader Configuration */
#define SPU1_BE0_LDR_CONF	(*( SPU0_BE0_LDR_CONF_type *) 0xfac00060u)	/* Loader Configuration */
#define SPU1_BE1_LDR_CONF	(*( SPU0_BE0_LDR_CONF_type *) 0xfac000a0u)	/* Loader Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 WBASE          : 16;	/* Window Coefficient Base Address */
		unsigned __sfrbit32 PADF           : 13;	/* Pad at Front */
		/* const */ unsigned __sfrbit32 RES            : 2;	/* Reserved */
		unsigned __sfrbit32 WINEN          : 1;	/* Window Function Enable */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_LDR_CONF2_type;
#define SPU0_BE0_LDR_CONF2	(*( SPU0_BE0_LDR_CONF2_type *) 0xfa800064u)	/* Loader Configuration E0tended */
#define SPU0_BE1_LDR_CONF2	(*( SPU0_BE0_LDR_CONF2_type *) 0xfa8000a4u)	/* Loader Configuration E1tended */
#define SPU1_BE0_LDR_CONF2	(*( SPU0_BE0_LDR_CONF2_type *) 0xfac00064u)	/* Loader Configuration E0tended */
#define SPU1_BE1_LDR_CONF2	(*( SPU0_BE0_LDR_CONF2_type *) 0xfac000a4u)	/* Loader Configuration E1tended */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 19;	/* Radar Memory Base Address */
		unsigned __sfrbit32 EN             : 1;	/* Enable */
		unsigned __sfrbit32 FORMAT         : 2;	/* Output Format */
		unsigned __sfrbit32 SCALE          : 2;	/* Result Scaling */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_NCICTRL_type;
#define SPU0_BE0_NCICTRL	(*( SPU0_BE0_NCICTRL_type *) 0xfa800088u)	/* NCI Control */
#define SPU0_BE1_NCICTRL	(*( SPU0_BE0_NCICTRL_type *) 0xfa8000c8u)	/* NCI Control */
#define SPU1_BE0_NCICTRL	(*( SPU0_BE0_NCICTRL_type *) 0xfac00088u)	/* NCI Control */
#define SPU1_BE1_NCICTRL	(*( SPU0_BE0_NCICTRL_type *) 0xfac000c8u)	/* NCI Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 19;	/* Radar Memory Base Address */
		unsigned __sfrbit32 MODE           : 1;	/* ODP Mode */
		unsigned __sfrbit32 FTR            : 1;	/* Force to Real */
		unsigned __sfrbit32 SCALE          : 1;	/* Scale Results to 16 bit */
		unsigned __sfrbit32 EXPNT          : 5;	/* Common Exponent */
		unsigned __sfrbit32 IPF            : 1;	/* In Place FFT */
		unsigned __sfrbit32 ROF            : 1;	/* Real Only Format */
		unsigned __sfrbit32 HPFP           : 1;	/* Half Precision Floating Point */
		/* const */ unsigned __sfrbit32 RES            : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_ODP_CONF_type;
#define SPU0_BE0_ODP_CONF	(*( SPU0_BE0_ODP_CONF_type *) 0xfa800084u)	/* Output Data Processor Configuration */
#define SPU0_BE1_ODP_CONF	(*( SPU0_BE0_ODP_CONF_type *) 0xfa8000c4u)	/* Output Data Processor Configuration */
#define SPU1_BE0_ODP_CONF	(*( SPU0_BE0_ODP_CONF_type *) 0xfac00084u)	/* Output Data Processor Configuration */
#define SPU1_BE1_ODP_CONF	(*( SPU0_BE0_ODP_CONF_type *) 0xfac000c4u)	/* Output Data Processor Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 19;	/* Radar Memory Base Address */
		/* const */ unsigned __sfrbit32 RES            : 12;	/* Reserved */
		unsigned __sfrbit32 EN             : 1;	/* Enable */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_PWRCTRL_type;
#define SPU0_BE0_PWRCTRL	(*( SPU0_BE0_PWRCTRL_type *) 0xfa800094u)	/* Power Information Channel Control */
#define SPU0_BE0_SBCTRL	(*( SPU0_BE0_PWRCTRL_type *) 0xfa80009cu)	/* Sideband Control */
#define SPU0_BE1_PWRCTRL	(*( SPU0_BE0_PWRCTRL_type *) 0xfa8000d4u)	/* Power Information Channel Control */
#define SPU0_BE1_SBCTRL	(*( SPU0_BE0_PWRCTRL_type *) 0xfa8000dcu)	/* Sideband Control */
#define SPU1_BE0_PWRCTRL	(*( SPU0_BE0_PWRCTRL_type *) 0xfac00094u)	/* Power Information Channel Control */
#define SPU1_BE0_SBCTRL	(*( SPU0_BE0_PWRCTRL_type *) 0xfac0009cu)	/* Sideband Control */
#define SPU1_BE1_PWRCTRL	(*( SPU0_BE0_PWRCTRL_type *) 0xfac000d4u)	/* Power Information Channel Control */
#define SPU1_BE1_SBCTRL	(*( SPU0_BE0_PWRCTRL_type *) 0xfac000dcu)	/* Sideband Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 19;	/* Radar Memory Base Address */
		unsigned __sfrbit32 SCALE          : 2;	/* Sum Antenna Result Scaling */
		unsigned __sfrbit32 PRECISION      : 1;	/* Output Precision */
		/* const */ unsigned __sfrbit32 RES            : 10;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_PWRSUM_type;
#define SPU0_BE0_PWRSUM	(*( SPU0_BE0_PWRSUM_type *) 0xfa800090u)	/* Power Summation */
#define SPU0_BE1_PWRSUM	(*( SPU0_BE0_PWRSUM_type *) 0xfa8000d0u)	/* Power Summation */
#define SPU1_BE0_PWRSUM	(*( SPU0_BE0_PWRSUM_type *) 0xfac00090u)	/* Power Summation */
#define SPU1_BE1_PWRSUM	(*( SPU0_BE0_PWRSUM_type *) 0xfac000d0u)	/* Power Summation */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 19;	/* Radar Memory Base Address */
		unsigned __sfrbit32 PWRMODE        : 1;	/* Power Mode */
		unsigned __sfrbit32 SUMMODE        : 2;	/* Summation Mode */
		unsigned __sfrbit32 REAL           : 1;	/* Real Value */
		unsigned __sfrbit32 USEANT         : 8;	/* Antennae to Use */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_SUMCTRL_type;
#define SPU0_BE0_SUMCTRL	(*( SPU0_BE0_SUMCTRL_type *) 0xfa80008cu)	/* Summation Unit Control */
#define SPU0_BE1_SUMCTRL	(*( SPU0_BE0_SUMCTRL_type *) 0xfa8000ccu)	/* Summation Unit Control */
#define SPU1_BE0_SUMCTRL	(*( SPU0_BE0_SUMCTRL_type *) 0xfac0008cu)	/* Summation Unit Control */
#define SPU1_BE1_SUMCTRL	(*( SPU0_BE0_SUMCTRL_type *) 0xfac000ccu)	/* Summation Unit Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EXPNT          : 5;	/* Common Exponent */
		unsigned __sfrbit32 FORMAT         : 1;	/* Input Data Format */
		unsigned __sfrbit32 HISTEN         : 1;	/* Histogram Enable */
		unsigned __sfrbit32 HAFE           : 1;	/* Histogram Antenna Filter Enable */
		unsigned __sfrbit32 AFV            : 3;	/* Antenna Filter Value */
		/* const */ unsigned __sfrbit32 RES            : 2;	/* Reserved */
		unsigned __sfrbit32 HISTBINS       : 3;	/* Number of power values per histogram bin. */
		unsigned __sfrbit32 HISTBASE       : 16;	/* Histogram Base Address */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_UNLDR_CONF_type;
#define SPU0_BE0_UNLDR_CONF	(*( SPU0_BE0_UNLDR_CONF_type *) 0xfa800078u)	/* Unloader Configuration */
#define SPU0_BE1_UNLDR_CONF	(*( SPU0_BE0_UNLDR_CONF_type *) 0xfa8000b8u)	/* Unloader Configuration */
#define SPU1_BE0_UNLDR_CONF	(*( SPU0_BE0_UNLDR_CONF_type *) 0xfac00078u)	/* Unloader Configuration */
#define SPU1_BE1_UNLDR_CONF	(*( SPU0_BE0_UNLDR_CONF_type *) 0xfac000b8u)	/* Unloader Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 STRT           : 16;	/* Start Count */
		unsigned __sfrbit32 END            : 16;	/* End Count */
	} B;
	int I;
	unsigned int U;

} SPU0_BE0_UNLDR_CONF2_type;
#define SPU0_BE0_UNLDR_CONF2	(*( SPU0_BE0_UNLDR_CONF2_type *) 0xfa80007cu)	/* Unloader Configuration 2 */
#define SPU0_BE1_UNLDR_CONF2	(*( SPU0_BE0_UNLDR_CONF2_type *) 0xfa8000bcu)	/* Unloader Configuration 2 */
#define SPU1_BE0_UNLDR_CONF2	(*( SPU0_BE0_UNLDR_CONF2_type *) 0xfac0007cu)	/* Unloader Configuration 2 */
#define SPU1_BE1_UNLDR_CONF2	(*( SPU0_BE0_UNLDR_CONF2_type *) 0xfac000bcu)	/* Unloader Configuration 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 B_R0           : 1;	/* BIN */
		unsigned __sfrbit32 B_R1           : 1;	/* BIN */
		unsigned __sfrbit32 B_R2           : 1;	/* BIN */
		unsigned __sfrbit32 B_R3           : 1;	/* BIN */
		unsigned __sfrbit32 B_R4           : 1;	/* BIN */
		unsigned __sfrbit32 B_R5           : 1;	/* BIN */
		unsigned __sfrbit32 B_R6           : 1;	/* BIN */
		unsigned __sfrbit32 B_R7           : 1;	/* BIN */
		unsigned __sfrbit32 B_R8           : 1;	/* BIN */
		unsigned __sfrbit32 B_R9           : 1;	/* BIN */
		unsigned __sfrbit32 B_R10          : 1;	/* BIN */
		unsigned __sfrbit32 B_R11          : 1;	/* BIN */
		unsigned __sfrbit32 B_R12          : 1;	/* BIN */
		unsigned __sfrbit32 B_R13          : 1;	/* BIN */
		unsigned __sfrbit32 B_R14          : 1;	/* BIN */
		unsigned __sfrbit32 B_R15          : 1;	/* BIN */
		unsigned __sfrbit32 B_R16          : 1;	/* BIN */
		unsigned __sfrbit32 B_R17          : 1;	/* BIN */
		unsigned __sfrbit32 B_R18          : 1;	/* BIN */
		unsigned __sfrbit32 B_R19          : 1;	/* BIN */
		unsigned __sfrbit32 B_R20          : 1;	/* BIN */
		unsigned __sfrbit32 B_R21          : 1;	/* BIN */
		unsigned __sfrbit32 B_R22          : 1;	/* BIN */
		unsigned __sfrbit32 B_R23          : 1;	/* BIN */
		unsigned __sfrbit32 B_R24          : 1;	/* BIN */
		unsigned __sfrbit32 B_R25          : 1;	/* BIN */
		unsigned __sfrbit32 B_R26          : 1;	/* BIN */
		unsigned __sfrbit32 B_R27          : 1;	/* BIN */
		unsigned __sfrbit32 B_R28          : 1;	/* BIN */
		unsigned __sfrbit32 B_R29          : 1;	/* BIN */
		unsigned __sfrbit32 B_R30          : 1;	/* BIN */
		unsigned __sfrbit32 B_R31          : 1;	/* BIN */
	} B;
	int I;
	unsigned int U;

} SPU0_BIN0_REJ_type;
#define SPU0_BIN0_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8000e0u)	/* Bin Rejection Mask */
#define SPU0_BIN10_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800108u)	/* Bin Rejection Mask */
#define SPU0_BIN11_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80010cu)	/* Bin Rejection Mask */
#define SPU0_BIN12_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800110u)	/* Bin Rejection Mask */
#define SPU0_BIN13_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800114u)	/* Bin Rejection Mask */
#define SPU0_BIN14_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800118u)	/* Bin Rejection Mask */
#define SPU0_BIN15_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80011cu)	/* Bin Rejection Mask */
#define SPU0_BIN16_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800120u)	/* Bin Rejection Mask */
#define SPU0_BIN17_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800124u)	/* Bin Rejection Mask */
#define SPU0_BIN18_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800128u)	/* Bin Rejection Mask */
#define SPU0_BIN19_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80012cu)	/* Bin Rejection Mask */
#define SPU0_BIN1_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8000e4u)	/* Bin Rejection Mask */
#define SPU0_BIN20_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800130u)	/* Bin Rejection Mask */
#define SPU0_BIN21_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800134u)	/* Bin Rejection Mask */
#define SPU0_BIN22_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800138u)	/* Bin Rejection Mask */
#define SPU0_BIN23_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80013cu)	/* Bin Rejection Mask */
#define SPU0_BIN24_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800140u)	/* Bin Rejection Mask */
#define SPU0_BIN25_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800144u)	/* Bin Rejection Mask */
#define SPU0_BIN26_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800148u)	/* Bin Rejection Mask */
#define SPU0_BIN27_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80014cu)	/* Bin Rejection Mask */
#define SPU0_BIN28_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800150u)	/* Bin Rejection Mask */
#define SPU0_BIN29_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800154u)	/* Bin Rejection Mask */
#define SPU0_BIN2_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8000e8u)	/* Bin Rejection Mask */
#define SPU0_BIN30_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800158u)	/* Bin Rejection Mask */
#define SPU0_BIN31_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80015cu)	/* Bin Rejection Mask */
#define SPU0_BIN32_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800160u)	/* Bin Rejection Mask */
#define SPU0_BIN33_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800164u)	/* Bin Rejection Mask */
#define SPU0_BIN34_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800168u)	/* Bin Rejection Mask */
#define SPU0_BIN35_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80016cu)	/* Bin Rejection Mask */
#define SPU0_BIN36_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800170u)	/* Bin Rejection Mask */
#define SPU0_BIN37_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800174u)	/* Bin Rejection Mask */
#define SPU0_BIN38_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800178u)	/* Bin Rejection Mask */
#define SPU0_BIN39_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80017cu)	/* Bin Rejection Mask */
#define SPU0_BIN3_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8000ecu)	/* Bin Rejection Mask */
#define SPU0_BIN40_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800180u)	/* Bin Rejection Mask */
#define SPU0_BIN41_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800184u)	/* Bin Rejection Mask */
#define SPU0_BIN42_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800188u)	/* Bin Rejection Mask */
#define SPU0_BIN43_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80018cu)	/* Bin Rejection Mask */
#define SPU0_BIN44_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800190u)	/* Bin Rejection Mask */
#define SPU0_BIN45_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800194u)	/* Bin Rejection Mask */
#define SPU0_BIN46_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800198u)	/* Bin Rejection Mask */
#define SPU0_BIN47_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa80019cu)	/* Bin Rejection Mask */
#define SPU0_BIN48_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001a0u)	/* Bin Rejection Mask */
#define SPU0_BIN49_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001a4u)	/* Bin Rejection Mask */
#define SPU0_BIN4_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8000f0u)	/* Bin Rejection Mask */
#define SPU0_BIN50_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001a8u)	/* Bin Rejection Mask */
#define SPU0_BIN51_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001acu)	/* Bin Rejection Mask */
#define SPU0_BIN52_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001b0u)	/* Bin Rejection Mask */
#define SPU0_BIN53_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001b4u)	/* Bin Rejection Mask */
#define SPU0_BIN54_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001b8u)	/* Bin Rejection Mask */
#define SPU0_BIN55_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001bcu)	/* Bin Rejection Mask */
#define SPU0_BIN56_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001c0u)	/* Bin Rejection Mask */
#define SPU0_BIN57_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001c4u)	/* Bin Rejection Mask */
#define SPU0_BIN58_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001c8u)	/* Bin Rejection Mask */
#define SPU0_BIN59_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001ccu)	/* Bin Rejection Mask */
#define SPU0_BIN5_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8000f4u)	/* Bin Rejection Mask */
#define SPU0_BIN60_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001d0u)	/* Bin Rejection Mask */
#define SPU0_BIN61_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001d4u)	/* Bin Rejection Mask */
#define SPU0_BIN62_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001d8u)	/* Bin Rejection Mask */
#define SPU0_BIN63_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8001dcu)	/* Bin Rejection Mask */
#define SPU0_BIN6_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8000f8u)	/* Bin Rejection Mask */
#define SPU0_BIN7_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa8000fcu)	/* Bin Rejection Mask */
#define SPU0_BIN8_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800100u)	/* Bin Rejection Mask */
#define SPU0_BIN9_REJ	(*( SPU0_BIN0_REJ_type *) 0xfa800104u)	/* Bin Rejection Mask */
#define SPU1_BIN0_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac000e0u)	/* Bin Rejection Mask */
#define SPU1_BIN10_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00108u)	/* Bin Rejection Mask */
#define SPU1_BIN11_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0010cu)	/* Bin Rejection Mask */
#define SPU1_BIN12_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00110u)	/* Bin Rejection Mask */
#define SPU1_BIN13_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00114u)	/* Bin Rejection Mask */
#define SPU1_BIN14_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00118u)	/* Bin Rejection Mask */
#define SPU1_BIN15_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0011cu)	/* Bin Rejection Mask */
#define SPU1_BIN16_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00120u)	/* Bin Rejection Mask */
#define SPU1_BIN17_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00124u)	/* Bin Rejection Mask */
#define SPU1_BIN18_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00128u)	/* Bin Rejection Mask */
#define SPU1_BIN19_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0012cu)	/* Bin Rejection Mask */
#define SPU1_BIN1_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac000e4u)	/* Bin Rejection Mask */
#define SPU1_BIN20_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00130u)	/* Bin Rejection Mask */
#define SPU1_BIN21_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00134u)	/* Bin Rejection Mask */
#define SPU1_BIN22_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00138u)	/* Bin Rejection Mask */
#define SPU1_BIN23_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0013cu)	/* Bin Rejection Mask */
#define SPU1_BIN24_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00140u)	/* Bin Rejection Mask */
#define SPU1_BIN25_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00144u)	/* Bin Rejection Mask */
#define SPU1_BIN26_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00148u)	/* Bin Rejection Mask */
#define SPU1_BIN27_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0014cu)	/* Bin Rejection Mask */
#define SPU1_BIN28_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00150u)	/* Bin Rejection Mask */
#define SPU1_BIN29_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00154u)	/* Bin Rejection Mask */
#define SPU1_BIN2_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac000e8u)	/* Bin Rejection Mask */
#define SPU1_BIN30_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00158u)	/* Bin Rejection Mask */
#define SPU1_BIN31_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0015cu)	/* Bin Rejection Mask */
#define SPU1_BIN32_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00160u)	/* Bin Rejection Mask */
#define SPU1_BIN33_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00164u)	/* Bin Rejection Mask */
#define SPU1_BIN34_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00168u)	/* Bin Rejection Mask */
#define SPU1_BIN35_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0016cu)	/* Bin Rejection Mask */
#define SPU1_BIN36_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00170u)	/* Bin Rejection Mask */
#define SPU1_BIN37_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00174u)	/* Bin Rejection Mask */
#define SPU1_BIN38_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00178u)	/* Bin Rejection Mask */
#define SPU1_BIN39_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0017cu)	/* Bin Rejection Mask */
#define SPU1_BIN3_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac000ecu)	/* Bin Rejection Mask */
#define SPU1_BIN40_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00180u)	/* Bin Rejection Mask */
#define SPU1_BIN41_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00184u)	/* Bin Rejection Mask */
#define SPU1_BIN42_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00188u)	/* Bin Rejection Mask */
#define SPU1_BIN43_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0018cu)	/* Bin Rejection Mask */
#define SPU1_BIN44_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00190u)	/* Bin Rejection Mask */
#define SPU1_BIN45_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00194u)	/* Bin Rejection Mask */
#define SPU1_BIN46_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00198u)	/* Bin Rejection Mask */
#define SPU1_BIN47_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac0019cu)	/* Bin Rejection Mask */
#define SPU1_BIN48_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001a0u)	/* Bin Rejection Mask */
#define SPU1_BIN49_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001a4u)	/* Bin Rejection Mask */
#define SPU1_BIN4_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac000f0u)	/* Bin Rejection Mask */
#define SPU1_BIN50_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001a8u)	/* Bin Rejection Mask */
#define SPU1_BIN51_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001acu)	/* Bin Rejection Mask */
#define SPU1_BIN52_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001b0u)	/* Bin Rejection Mask */
#define SPU1_BIN53_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001b4u)	/* Bin Rejection Mask */
#define SPU1_BIN54_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001b8u)	/* Bin Rejection Mask */
#define SPU1_BIN55_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001bcu)	/* Bin Rejection Mask */
#define SPU1_BIN56_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001c0u)	/* Bin Rejection Mask */
#define SPU1_BIN57_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001c4u)	/* Bin Rejection Mask */
#define SPU1_BIN58_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001c8u)	/* Bin Rejection Mask */
#define SPU1_BIN59_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001ccu)	/* Bin Rejection Mask */
#define SPU1_BIN5_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac000f4u)	/* Bin Rejection Mask */
#define SPU1_BIN60_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001d0u)	/* Bin Rejection Mask */
#define SPU1_BIN61_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001d4u)	/* Bin Rejection Mask */
#define SPU1_BIN62_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001d8u)	/* Bin Rejection Mask */
#define SPU1_BIN63_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac001dcu)	/* Bin Rejection Mask */
#define SPU1_BIN6_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac000f8u)	/* Bin Rejection Mask */
#define SPU1_BIN7_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac000fcu)	/* Bin Rejection Mask */
#define SPU1_BIN8_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00100u)	/* Bin Rejection Mask */
#define SPU1_BIN9_REJ	(*( SPU0_BIN0_REJ_type *) 0xfac00104u)	/* Bin Rejection Mask */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RMODE          : 2;	/* Bin Rejection Mode */
		unsigned __sfrbit32 ZMODE          : 1;	/* Threshold Rejection Mode */
		unsigned __sfrbit32 LJUST          : 1;	/* Left Justify */
		unsigned __sfrbit32 VALUE          : 24;	/* Threshold Value */
		/* const */ unsigned __sfrbit32 RES            : 4;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_BINREJCTRL_type;
#define SPU0_BINREJCTRL	(*( SPU0_BINREJCTRL_type *) 0xfa800208u)	/* Bin Rejection Unit Control */
#define SPU1_BINREJCTRL	(*( SPU0_BINREJCTRL_type *) 0xfac00208u)	/* Bin Rejection Unit Control */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CNT            : 20;	/* Access Count */
		/* const */ unsigned __sfrbit32 RES            : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_BRCNT_type;
#define SPU0_BRCNT	(*( SPU0_BRCNT_type *) 0xfa80034cu)	/* Bin Rejection Unit Load Count */
#define SPU0_FFTRCNT	(*( SPU0_BRCNT_type *) 0xfa800340u)	/* FFT Unload Count */
#define SPU0_FFTWCNT	(*( SPU0_BRCNT_type *) 0xfa80033cu)	/* FFT Load Count */
#define SPU0_IBMCNT	(*( SPU0_BRCNT_type *) 0xfa800334u)	/* Input Buffer Memory Count */
#define SPU0_IDMCNT	(*( SPU0_BRCNT_type *) 0xfa800330u)	/* Input DMA Count */
#define SPU0_LDRCNT	(*( SPU0_BRCNT_type *) 0xfa800338u)	/* Input Buffer Memory Read Count */
#define SPU0_ODMACNT0	(*( SPU0_BRCNT_type *) 0xfa800354u)	/* Out0ut DMA Port Write Count */
#define SPU0_ODMACNT1	(*( SPU0_BRCNT_type *) 0xfa800358u)	/* Out1ut DMA Port Write Count */
#define SPU0_ODMACNT2	(*( SPU0_BRCNT_type *) 0xfa80035cu)	/* Out2ut DMA Port Write Count */
#define SPU0_ODMACNT3	(*( SPU0_BRCNT_type *) 0xfa800360u)	/* Out3ut DMA Port Write Count */
#define SPU0_ODMACNT4	(*( SPU0_BRCNT_type *) 0xfa800364u)	/* Out4ut DMA Port Write Count */
#define SPU0_ODMACNT5	(*( SPU0_BRCNT_type *) 0xfa800368u)	/* Out5ut DMA Port Write Count */
#define SPU0_ODMACNT6	(*( SPU0_BRCNT_type *) 0xfa80036cu)	/* Out6ut DMA Port Write Count */
#define SPU0_ODMACNT7	(*( SPU0_BRCNT_type *) 0xfa800370u)	/* Out7ut DMA Port Write Count */
#define SPU0_ULDRCNT	(*( SPU0_BRCNT_type *) 0xfa800344u)	/* Output Buffer Memory Write Count */
#define SPU1_BRCNT	(*( SPU0_BRCNT_type *) 0xfac0034cu)	/* Bin Rejection Unit Load Count */
#define SPU1_FFTRCNT	(*( SPU0_BRCNT_type *) 0xfac00340u)	/* FFT Unload Count */
#define SPU1_FFTWCNT	(*( SPU0_BRCNT_type *) 0xfac0033cu)	/* FFT Load Count */
#define SPU1_IBMCNT	(*( SPU0_BRCNT_type *) 0xfac00334u)	/* Input Buffer Memory Count */
#define SPU1_IDMCNT	(*( SPU0_BRCNT_type *) 0xfac00330u)	/* Input DMA Count */
#define SPU1_LDRCNT	(*( SPU0_BRCNT_type *) 0xfac00338u)	/* Input Buffer Memory Read Count */
#define SPU1_ODMACNT0	(*( SPU0_BRCNT_type *) 0xfac00354u)	/* Out0ut DMA Port Write Count */
#define SPU1_ODMACNT1	(*( SPU0_BRCNT_type *) 0xfac00358u)	/* Out1ut DMA Port Write Count */
#define SPU1_ODMACNT2	(*( SPU0_BRCNT_type *) 0xfac0035cu)	/* Out2ut DMA Port Write Count */
#define SPU1_ODMACNT3	(*( SPU0_BRCNT_type *) 0xfac00360u)	/* Out3ut DMA Port Write Count */
#define SPU1_ODMACNT4	(*( SPU0_BRCNT_type *) 0xfac00364u)	/* Out4ut DMA Port Write Count */
#define SPU1_ODMACNT5	(*( SPU0_BRCNT_type *) 0xfac00368u)	/* Out5ut DMA Port Write Count */
#define SPU1_ODMACNT6	(*( SPU0_BRCNT_type *) 0xfac0036cu)	/* Out6ut DMA Port Write Count */
#define SPU1_ODMACNT7	(*( SPU0_BRCNT_type *) 0xfac00370u)	/* Out7ut DMA Port Write Count */
#define SPU1_ULDRCNT	(*( SPU0_BRCNT_type *) 0xfac00344u)	/* Output Buffer Memory Write Count */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CAALGO         : 2;	/* CA-CFAR Algorithm Select */
		unsigned __sfrbit32 GOSALGO        : 2;	/* GOS-CFAR Algorithm Select */
		unsigned __sfrbit32 CAGUARD        : 6;	/* Guard Cells */
		unsigned __sfrbit32 CAWINCELL      : 3;	/* Window Cells Exponent */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 CFARSEL        : 2;	/* Inline CFAR Engine */
		unsigned __sfrbit32 CABETA         : 16;	/* CA-CFAR Beta */
	} B;
	int I;
	unsigned int U;

} SPU0_CFARCFG_type;
#define SPU0_CFARCFG	(*( SPU0_CFARCFG_type *) 0xfa8001f4u)	/* CFAR Configuration */
#define SPU1_CFARCFG	(*( SPU0_CFARCFG_type *) 0xfac001f4u)	/* CFAR Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GOSGUARD       : 6;	/* Guard Cells */
		unsigned __sfrbit32 IDXLD          : 5;	/* Index Lead */
		unsigned __sfrbit32 IDXLG          : 5;	/* Index Lag */
		unsigned __sfrbit32 GOSWINCELL     : 6;	/* Window Cells Exponent */
		unsigned __sfrbit32 CASHWIN        : 3;	/* CASH Subwindow */
		/* const */ unsigned __sfrbit32 RES            : 7;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_CFARCFG2_type;
#define SPU0_CFARCFG2	(*( SPU0_CFARCFG2_type *) 0xfa8001f8u)	/* CFAR Configuration 2 */
#define SPU1_CFARCFG2	(*( SPU0_CFARCFG2_type *) 0xfac001f8u)	/* CFAR Configuration 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 GOSBETA        : 16;	/* GOS-CFAR Beta */
		unsigned __sfrbit32 CHAN5OFFST     : 16;	/* Channel 5 Address Offset */
	} B;
	int I;
	unsigned int U;

} SPU0_CFARCFG3_type;
#define SPU0_CFARCFG3	(*( SPU0_CFARCFG3_type *) 0xfa8001fcu)	/* CFAR Configuration 3 */
#define SPU1_CFARCFG3	(*( SPU0_CFARCFG3_type *) 0xfac001fcu)	/* CFAR Configuration 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CNT            : 21;	/* Access Count */
		/* const */ unsigned __sfrbit32 RES            : 11;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_CFARCNT_type;
#define SPU0_CFARCNT	(*( SPU0_CFARCNT_type *) 0xfa800350u)	/* CFAR Unit Load Count */
#define SPU0_ODMCNT	(*( SPU0_CFARCNT_type *) 0xfa800348u)	/* Output Buffer Memory Read Count */
#define SPU1_CFARCNT	(*( SPU0_CFARCNT_type *) 0xfac00350u)	/* CFAR Unit Load Count */
#define SPU1_ODMCNT	(*( SPU0_CFARCNT_type *) 0xfac00348u)	/* Output Buffer Memory Read Count */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DISR           : 1;	/* Disable Request */
		/* const */ unsigned __sfrbit32 DISS           : 1;	/* Disable Status */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 EDIS           : 1;	/* Sleep Mode Enable Control */
		/* const */ unsigned __sfrbit32 RES_5          : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_CLC_type;
#define SPU0_CLC	(*( SPU0_CLC_type *) 0xfa800000u)	/* Clock Control */
#define SPU1_CLC	(*( SPU0_CLC_type *) 0xfac00000u)	/* Clock Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CLR            : 2;	/* Clear */
		/* const */ unsigned __sfrbit32 RES            : 14;	/* Reserved */
		unsigned __sfrbit32 CNTTST         : 2;	/* Monitor Counter Test */
		unsigned __sfrbit32 SELECT         : 5;	/* Counter Select */
		/* const */ unsigned __sfrbit32 RES_5          : 9;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_CNTCLR_type;
#define SPU0_CNTCLR	(*( SPU0_CNTCLR_type *) 0xfa800374u)	/* Safety Counter Clear */
#define SPU1_CNTCLR	(*( SPU0_CNTCLR_type *) 0xfac00374u)	/* Safety Counter Clear */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRIG           : 1;	/* SPU Software Trigger */
		/* const */ unsigned __sfrbit32 BUSY           : 1;	/* SPU Busy Flag */
		unsigned __sfrbit32 MODE           : 3;	/* SPU Trigger Mode */
		unsigned __sfrbit32 NXT_CONF       : 19;	/* Next Configuration Base Address */
		unsigned __sfrbit32 DIV            : 2;	/* Clock Division Ratio */
		unsigned __sfrbit32 ATTN           : 1;	/* Generate Service Request Interrupt */
		unsigned __sfrbit32 XTRIG          : 1;	/* Cross Trigger */
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 LAST           : 1;	/* Last Configuration */
	} B;
	int I;
	unsigned int U;

} SPU0_CTRL_type;
#define SPU0_CTRL	(*( SPU0_CTRL_type *) 0xfa80021cu)	/* SPU Control */
#define SPU1_CTRL	(*( SPU0_CTRL_type *) 0xfac0021cu)	/* SPU Control */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 CRC            : 32;	/* CRC */
	} B;
	int I;
	unsigned int U;

} SPU0_CTRL0_CRC_type;
#define SPU0_CTRL0_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800500u)	/* Monitor CRC R0gister */
#define SPU0_CTRL10_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800528u)	/* Monitor CRC R10gister */
#define SPU0_CTRL11_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80052cu)	/* Monitor CRC R11gister */
#define SPU0_CTRL12_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800530u)	/* Monitor CRC R12gister */
#define SPU0_CTRL13_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800534u)	/* Monitor CRC R13gister */
#define SPU0_CTRL14_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800538u)	/* Monitor CRC R14gister */
#define SPU0_CTRL15_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80053cu)	/* Monitor CRC R15gister */
#define SPU0_CTRL16_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800540u)	/* Monitor CRC R16gister */
#define SPU0_CTRL17_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800544u)	/* Monitor CRC R17gister */
#define SPU0_CTRL18_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800548u)	/* Monitor CRC R18gister */
#define SPU0_CTRL19_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80054cu)	/* Monitor CRC R19gister */
#define SPU0_CTRL1_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800504u)	/* Monitor CRC R1gister */
#define SPU0_CTRL20_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800550u)	/* Monitor CRC R20gister */
#define SPU0_CTRL21_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800554u)	/* Monitor CRC R21gister */
#define SPU0_CTRL22_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800558u)	/* Monitor CRC R22gister */
#define SPU0_CTRL23_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80055cu)	/* Monitor CRC R23gister */
#define SPU0_CTRL24_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800560u)	/* Monitor CRC R24gister */
#define SPU0_CTRL2_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800508u)	/* Monitor CRC R2gister */
#define SPU0_CTRL3_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80050cu)	/* Monitor CRC R3gister */
#define SPU0_CTRL4_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800510u)	/* Monitor CRC R4gister */
#define SPU0_CTRL5_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800514u)	/* Monitor CRC R5gister */
#define SPU0_CTRL6_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800518u)	/* Monitor CRC R6gister */
#define SPU0_CTRL7_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80051cu)	/* Monitor CRC R7gister */
#define SPU0_CTRL8_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800520u)	/* Monitor CRC R8gister */
#define SPU0_CTRL9_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800524u)	/* Monitor CRC R9gister */
#define SPU0_DATA0_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800388u)	/* Monitor CRC Register */
#define SPU0_DATA10_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003b0u)	/* Monitor CRC Register */
#define SPU0_DATA11_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003b4u)	/* Monitor CRC Register */
#define SPU0_DATA12_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003b8u)	/* Monitor CRC Register */
#define SPU0_DATA13_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003bcu)	/* Monitor CRC Register */
#define SPU0_DATA14_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003c0u)	/* Monitor CRC Register */
#define SPU0_DATA15_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003c4u)	/* Monitor CRC Register */
#define SPU0_DATA16_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003c8u)	/* Monitor CRC Register */
#define SPU0_DATA17_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003ccu)	/* Monitor CRC Register */
#define SPU0_DATA18_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003d0u)	/* Monitor CRC Register */
#define SPU0_DATA19_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003d4u)	/* Monitor CRC Register */
#define SPU0_DATA1_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80038cu)	/* Monitor CRC Register */
#define SPU0_DATA20_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003d8u)	/* Monitor CRC Register */
#define SPU0_DATA21_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003dcu)	/* Monitor CRC Register */
#define SPU0_DATA22_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003e0u)	/* Monitor CRC Register */
#define SPU0_DATA23_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003e4u)	/* Monitor CRC Register */
#define SPU0_DATA24_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003e8u)	/* Monitor CRC Register */
#define SPU0_DATA25_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003ecu)	/* Monitor CRC Register */
#define SPU0_DATA26_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003f0u)	/* Monitor CRC Register */
#define SPU0_DATA27_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003f4u)	/* Monitor CRC Register */
#define SPU0_DATA28_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003f8u)	/* Monitor CRC Register */
#define SPU0_DATA29_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003fcu)	/* Monitor CRC Register */
#define SPU0_DATA2_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800390u)	/* Monitor CRC Register */
#define SPU0_DATA30_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800400u)	/* Monitor CRC Register */
#define SPU0_DATA31_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800404u)	/* Monitor CRC Register */
#define SPU0_DATA32_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800408u)	/* Monitor CRC Register */
#define SPU0_DATA33_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80040cu)	/* Monitor CRC Register */
#define SPU0_DATA34_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800410u)	/* Monitor CRC Register */
#define SPU0_DATA35_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800414u)	/* Monitor CRC Register */
#define SPU0_DATA36_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800418u)	/* Monitor CRC Register */
#define SPU0_DATA37_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80041cu)	/* Monitor CRC Register */
#define SPU0_DATA38_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800420u)	/* Monitor CRC Register */
#define SPU0_DATA39_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800424u)	/* Monitor CRC Register */
#define SPU0_DATA3_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800394u)	/* Monitor CRC Register */
#define SPU0_DATA40_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800428u)	/* Monitor CRC Register */
#define SPU0_DATA41_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80042cu)	/* Monitor CRC Register */
#define SPU0_DATA42_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800430u)	/* Monitor CRC Register */
#define SPU0_DATA43_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800434u)	/* Monitor CRC Register */
#define SPU0_DATA44_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800438u)	/* Monitor CRC Register */
#define SPU0_DATA45_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80043cu)	/* Monitor CRC Register */
#define SPU0_DATA46_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800440u)	/* Monitor CRC Register */
#define SPU0_DATA47_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800444u)	/* Monitor CRC Register */
#define SPU0_DATA48_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800448u)	/* Monitor CRC Register */
#define SPU0_DATA49_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80044cu)	/* Monitor CRC Register */
#define SPU0_DATA4_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800398u)	/* Monitor CRC Register */
#define SPU0_DATA50_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800450u)	/* Monitor CRC Register */
#define SPU0_DATA51_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800454u)	/* Monitor CRC Register */
#define SPU0_DATA52_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800458u)	/* Monitor CRC Register */
#define SPU0_DATA53_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80045cu)	/* Monitor CRC Register */
#define SPU0_DATA54_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800460u)	/* Monitor CRC Register */
#define SPU0_DATA55_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800464u)	/* Monitor CRC Register */
#define SPU0_DATA56_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800468u)	/* Monitor CRC Register */
#define SPU0_DATA57_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80046cu)	/* Monitor CRC Register */
#define SPU0_DATA58_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800470u)	/* Monitor CRC Register */
#define SPU0_DATA59_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800474u)	/* Monitor CRC Register */
#define SPU0_DATA5_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80039cu)	/* Monitor CRC Register */
#define SPU0_DATA60_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800478u)	/* Monitor CRC Register */
#define SPU0_DATA61_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80047cu)	/* Monitor CRC Register */
#define SPU0_DATA62_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800480u)	/* Monitor CRC Register */
#define SPU0_DATA63_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800484u)	/* Monitor CRC Register */
#define SPU0_DATA64_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800488u)	/* Monitor CRC Register */
#define SPU0_DATA65_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80048cu)	/* Monitor CRC Register */
#define SPU0_DATA66_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800490u)	/* Monitor CRC Register */
#define SPU0_DATA67_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800494u)	/* Monitor CRC Register */
#define SPU0_DATA68_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa800498u)	/* Monitor CRC Register */
#define SPU0_DATA69_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa80049cu)	/* Monitor CRC Register */
#define SPU0_DATA6_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003a0u)	/* Monitor CRC Register */
#define SPU0_DATA70_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004a0u)	/* Monitor CRC Register */
#define SPU0_DATA71_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004a4u)	/* Monitor CRC Register */
#define SPU0_DATA72_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004a8u)	/* Monitor CRC Register */
#define SPU0_DATA73_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004acu)	/* Monitor CRC Register */
#define SPU0_DATA74_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004b0u)	/* Monitor CRC Register */
#define SPU0_DATA75_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004b4u)	/* Monitor CRC Register */
#define SPU0_DATA76_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004b8u)	/* Monitor CRC Register */
#define SPU0_DATA77_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004bcu)	/* Monitor CRC Register */
#define SPU0_DATA78_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004c0u)	/* Monitor CRC Register */
#define SPU0_DATA79_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004c4u)	/* Monitor CRC Register */
#define SPU0_DATA7_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003a4u)	/* Monitor CRC Register */
#define SPU0_DATA80_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004c8u)	/* Monitor CRC Register */
#define SPU0_DATA81_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004ccu)	/* Monitor CRC Register */
#define SPU0_DATA82_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004d0u)	/* Monitor CRC Register */
#define SPU0_DATA83_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004d4u)	/* Monitor CRC Register */
#define SPU0_DATA84_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004d8u)	/* Monitor CRC Register */
#define SPU0_DATA85_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8004dcu)	/* Monitor CRC Register */
#define SPU0_DATA8_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003a8u)	/* Monitor CRC Register */
#define SPU0_DATA9_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfa8003acu)	/* Monitor CRC Register */
#define SPU1_CTRL0_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00500u)	/* Monitor CRC R0gister */
#define SPU1_CTRL10_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00528u)	/* Monitor CRC R10gister */
#define SPU1_CTRL11_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0052cu)	/* Monitor CRC R11gister */
#define SPU1_CTRL12_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00530u)	/* Monitor CRC R12gister */
#define SPU1_CTRL13_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00534u)	/* Monitor CRC R13gister */
#define SPU1_CTRL14_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00538u)	/* Monitor CRC R14gister */
#define SPU1_CTRL15_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0053cu)	/* Monitor CRC R15gister */
#define SPU1_CTRL16_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00540u)	/* Monitor CRC R16gister */
#define SPU1_CTRL17_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00544u)	/* Monitor CRC R17gister */
#define SPU1_CTRL18_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00548u)	/* Monitor CRC R18gister */
#define SPU1_CTRL19_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0054cu)	/* Monitor CRC R19gister */
#define SPU1_CTRL1_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00504u)	/* Monitor CRC R1gister */
#define SPU1_CTRL20_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00550u)	/* Monitor CRC R20gister */
#define SPU1_CTRL21_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00554u)	/* Monitor CRC R21gister */
#define SPU1_CTRL22_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00558u)	/* Monitor CRC R22gister */
#define SPU1_CTRL23_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0055cu)	/* Monitor CRC R23gister */
#define SPU1_CTRL24_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00560u)	/* Monitor CRC R24gister */
#define SPU1_CTRL2_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00508u)	/* Monitor CRC R2gister */
#define SPU1_CTRL3_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0050cu)	/* Monitor CRC R3gister */
#define SPU1_CTRL4_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00510u)	/* Monitor CRC R4gister */
#define SPU1_CTRL5_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00514u)	/* Monitor CRC R5gister */
#define SPU1_CTRL6_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00518u)	/* Monitor CRC R6gister */
#define SPU1_CTRL7_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0051cu)	/* Monitor CRC R7gister */
#define SPU1_CTRL8_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00520u)	/* Monitor CRC R8gister */
#define SPU1_CTRL9_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00524u)	/* Monitor CRC R9gister */
#define SPU1_DATA0_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00388u)	/* Monitor CRC Register */
#define SPU1_DATA10_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003b0u)	/* Monitor CRC Register */
#define SPU1_DATA11_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003b4u)	/* Monitor CRC Register */
#define SPU1_DATA12_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003b8u)	/* Monitor CRC Register */
#define SPU1_DATA13_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003bcu)	/* Monitor CRC Register */
#define SPU1_DATA14_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003c0u)	/* Monitor CRC Register */
#define SPU1_DATA15_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003c4u)	/* Monitor CRC Register */
#define SPU1_DATA16_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003c8u)	/* Monitor CRC Register */
#define SPU1_DATA17_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003ccu)	/* Monitor CRC Register */
#define SPU1_DATA18_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003d0u)	/* Monitor CRC Register */
#define SPU1_DATA19_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003d4u)	/* Monitor CRC Register */
#define SPU1_DATA1_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0038cu)	/* Monitor CRC Register */
#define SPU1_DATA20_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003d8u)	/* Monitor CRC Register */
#define SPU1_DATA21_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003dcu)	/* Monitor CRC Register */
#define SPU1_DATA22_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003e0u)	/* Monitor CRC Register */
#define SPU1_DATA23_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003e4u)	/* Monitor CRC Register */
#define SPU1_DATA24_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003e8u)	/* Monitor CRC Register */
#define SPU1_DATA25_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003ecu)	/* Monitor CRC Register */
#define SPU1_DATA26_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003f0u)	/* Monitor CRC Register */
#define SPU1_DATA27_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003f4u)	/* Monitor CRC Register */
#define SPU1_DATA28_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003f8u)	/* Monitor CRC Register */
#define SPU1_DATA29_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003fcu)	/* Monitor CRC Register */
#define SPU1_DATA2_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00390u)	/* Monitor CRC Register */
#define SPU1_DATA30_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00400u)	/* Monitor CRC Register */
#define SPU1_DATA31_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00404u)	/* Monitor CRC Register */
#define SPU1_DATA32_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00408u)	/* Monitor CRC Register */
#define SPU1_DATA33_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0040cu)	/* Monitor CRC Register */
#define SPU1_DATA34_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00410u)	/* Monitor CRC Register */
#define SPU1_DATA35_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00414u)	/* Monitor CRC Register */
#define SPU1_DATA36_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00418u)	/* Monitor CRC Register */
#define SPU1_DATA37_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0041cu)	/* Monitor CRC Register */
#define SPU1_DATA38_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00420u)	/* Monitor CRC Register */
#define SPU1_DATA39_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00424u)	/* Monitor CRC Register */
#define SPU1_DATA3_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00394u)	/* Monitor CRC Register */
#define SPU1_DATA40_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00428u)	/* Monitor CRC Register */
#define SPU1_DATA41_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0042cu)	/* Monitor CRC Register */
#define SPU1_DATA42_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00430u)	/* Monitor CRC Register */
#define SPU1_DATA43_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00434u)	/* Monitor CRC Register */
#define SPU1_DATA44_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00438u)	/* Monitor CRC Register */
#define SPU1_DATA45_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0043cu)	/* Monitor CRC Register */
#define SPU1_DATA46_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00440u)	/* Monitor CRC Register */
#define SPU1_DATA47_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00444u)	/* Monitor CRC Register */
#define SPU1_DATA48_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00448u)	/* Monitor CRC Register */
#define SPU1_DATA49_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0044cu)	/* Monitor CRC Register */
#define SPU1_DATA4_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00398u)	/* Monitor CRC Register */
#define SPU1_DATA50_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00450u)	/* Monitor CRC Register */
#define SPU1_DATA51_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00454u)	/* Monitor CRC Register */
#define SPU1_DATA52_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00458u)	/* Monitor CRC Register */
#define SPU1_DATA53_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0045cu)	/* Monitor CRC Register */
#define SPU1_DATA54_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00460u)	/* Monitor CRC Register */
#define SPU1_DATA55_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00464u)	/* Monitor CRC Register */
#define SPU1_DATA56_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00468u)	/* Monitor CRC Register */
#define SPU1_DATA57_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0046cu)	/* Monitor CRC Register */
#define SPU1_DATA58_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00470u)	/* Monitor CRC Register */
#define SPU1_DATA59_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00474u)	/* Monitor CRC Register */
#define SPU1_DATA5_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0039cu)	/* Monitor CRC Register */
#define SPU1_DATA60_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00478u)	/* Monitor CRC Register */
#define SPU1_DATA61_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0047cu)	/* Monitor CRC Register */
#define SPU1_DATA62_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00480u)	/* Monitor CRC Register */
#define SPU1_DATA63_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00484u)	/* Monitor CRC Register */
#define SPU1_DATA64_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00488u)	/* Monitor CRC Register */
#define SPU1_DATA65_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0048cu)	/* Monitor CRC Register */
#define SPU1_DATA66_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00490u)	/* Monitor CRC Register */
#define SPU1_DATA67_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00494u)	/* Monitor CRC Register */
#define SPU1_DATA68_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac00498u)	/* Monitor CRC Register */
#define SPU1_DATA69_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac0049cu)	/* Monitor CRC Register */
#define SPU1_DATA6_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003a0u)	/* Monitor CRC Register */
#define SPU1_DATA70_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004a0u)	/* Monitor CRC Register */
#define SPU1_DATA71_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004a4u)	/* Monitor CRC Register */
#define SPU1_DATA72_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004a8u)	/* Monitor CRC Register */
#define SPU1_DATA73_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004acu)	/* Monitor CRC Register */
#define SPU1_DATA74_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004b0u)	/* Monitor CRC Register */
#define SPU1_DATA75_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004b4u)	/* Monitor CRC Register */
#define SPU1_DATA76_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004b8u)	/* Monitor CRC Register */
#define SPU1_DATA77_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004bcu)	/* Monitor CRC Register */
#define SPU1_DATA78_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004c0u)	/* Monitor CRC Register */
#define SPU1_DATA79_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004c4u)	/* Monitor CRC Register */
#define SPU1_DATA7_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003a4u)	/* Monitor CRC Register */
#define SPU1_DATA80_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004c8u)	/* Monitor CRC Register */
#define SPU1_DATA81_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004ccu)	/* Monitor CRC Register */
#define SPU1_DATA82_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004d0u)	/* Monitor CRC Register */
#define SPU1_DATA83_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004d4u)	/* Monitor CRC Register */
#define SPU1_DATA84_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004d8u)	/* Monitor CRC Register */
#define SPU1_DATA85_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac004dcu)	/* Monitor CRC Register */
#define SPU1_DATA8_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003a8u)	/* Monitor CRC Register */
#define SPU1_DATA9_CRC	(*( SPU0_CTRL0_CRC_type *) 0xfac003acu)	/* Monitor CRC Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN             : 1;	/* Enable */
		unsigned __sfrbit32 SWITCH         : 1;	/* Buffer Memory Switch */
		unsigned __sfrbit32 COUNT          : 3;	/* Switch Count */
		unsigned __sfrbit32 EN_CNT         : 1;	/* Enable Count */
		/* const */ unsigned __sfrbit32 RES            : 26;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_DPASS_CONF_type;
#define SPU0_DPASS_CONF	(*( SPU0_DPASS_CONF_type *) 0xfa80005cu)	/* Double Pass Configuration */
#define SPU1_DPASS_CONF	(*( SPU0_DPASS_CONF_type *) 0xfac0005cu)	/* Double Pass Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 SRC            : 2;	/* Data Source */
		unsigned __sfrbit32 ANT            : 2;	/* Number of Antennae */
		unsigned __sfrbit32 SMPLCNT        : 11;	/* Sample Count */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 RAMPS          : 11;	/* Ramps per Measurement Cycle */
		/* const */ unsigned __sfrbit32 RES_6          : 3;	/* Reserved */
		unsigned __sfrbit32 SIGNED         : 1;	/* Signed or Unsigned Data */
		unsigned __sfrbit32 FORMAT         : 1;	/* RIF Data Format */
	} B;
	int I;
	unsigned int U;

} SPU0_ID_CONF_type;
#define SPU0_ID_CONF	(*( SPU0_ID_CONF_type *) 0xfa800030u)	/* Input DMA Configuration */
#define SPU1_ID_CONF	(*( SPU0_ID_CONF_type *) 0xfac00030u)	/* Input DMA Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BPADDR         : 19;	/* Bypass Address */
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
		unsigned __sfrbit32 BYPASS         : 1;	/* SPU Bypass Mode */
		unsigned __sfrbit32 BPRLD          : 1;	/* Bypass Reload */
		/* const */ unsigned __sfrbit32 RES_5          : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_ID_CONF2_type;
#define SPU0_ID_CONF2	(*( SPU0_ID_CONF2_type *) 0xfa800034u)	/* Input DMA Configuration 2 */
#define SPU1_ID_CONF2	(*( SPU0_ID_CONF2_type *) 0xfac00034u)	/* Input DMA Configuration 2 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BLO            : 24;	/* Bin Loop Offset */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_ID_RM_BLO_type;
#define SPU0_ID_RM_BLO	(*( SPU0_ID_RM_BLO_type *) 0xfa800044u)	/* Bin Offset Address Configuration */
#define SPU1_ID_RM_BLO	(*( SPU0_ID_RM_BLO_type *) 0xfac00044u)	/* Bin Offset Address Configuration */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BLR            : 13;	/* Bin Loop Repeat */
		/* const */ unsigned __sfrbit32 RES            : 19;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_ID_RM_BLR_type;
#define SPU0_ID_RM_BLR	(*( SPU0_ID_RM_BLR_type *) 0xfa80004cu)	/* Bin Loop Repeat */
#define SPU1_ID_RM_BLR	(*( SPU0_ID_RM_BLR_type *) 0xfac0004cu)	/* Bin Loop Repeat */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 BASE           : 19;	/* Radar Memory Base Address */
		unsigned __sfrbit32 FORMAT         : 3;	/* Input Data Format */
		unsigned __sfrbit32 TRNSPS         : 1;	/* Transpose Addressing */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 AM             : 3;	/* Antenna Mapping */
		/* const */ unsigned __sfrbit32 RES_6          : 1;	/* Reserved */
		unsigned __sfrbit32 BLOCKS         : 3;	/* Number of Datablocks */
		unsigned __sfrbit32 PM             : 1;	/* Processing Mode */
	} B;
	int I;
	unsigned int U;

} SPU0_ID_RM_CONF_type;
#define SPU0_ID_RM_CONF	(*( SPU0_ID_RM_CONF_type *) 0xfa800038u)	/* Input DMA Configuration: Radar Memory */
#define SPU1_ID_RM_CONF	(*( SPU0_ID_RM_CONF_type *) 0xfac00038u)	/* Input DMA Configuration: Radar Memory */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ILO            : 24;	/* Inner Loop Offset */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_ID_RM_ILO_type;
#define SPU0_ID_RM_ILO	(*( SPU0_ID_RM_ILO_type *) 0xfa80003cu)	/* Inner Loop Address Offset */
#define SPU1_ID_RM_ILO	(*( SPU0_ID_RM_ILO_type *) 0xfac0003cu)	/* Inner Loop Address Offset */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ILR            : 13;	/* Inner Loop Repeat */
		/* const */ unsigned __sfrbit32 RES            : 3;	/* Reserved */
		unsigned __sfrbit32 OLR            : 13;	/* Outer Loop Repeat */
		/* const */ unsigned __sfrbit32 RES_4          : 3;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_ID_RM_IOLR_type;
#define SPU0_ID_RM_IOLR	(*( SPU0_ID_RM_IOLR_type *) 0xfa800048u)	/* Inner and Outer Loop Repeat */
#define SPU1_ID_RM_IOLR	(*( SPU0_ID_RM_IOLR_type *) 0xfac00048u)	/* Inner and Outer Loop Repeat */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OLO            : 24;	/* Outer Loop Offset */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_ID_RM_OLO_type;
#define SPU0_ID_RM_OLO	(*( SPU0_ID_RM_OLO_type *) 0xfa800040u)	/* Outer Loop Address Offset */
#define SPU1_ID_RM_OLO	(*( SPU0_ID_RM_OLO_type *) 0xfac00040u)	/* Outer Loop Address Offset */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* Kernel Reset */
		/* const */ unsigned __sfrbit32 RSTSTAT        : 1;	/* Kernel Reset Status */
		/* const */ unsigned __sfrbit32 RES            : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_KRST0_type;
#define SPU0_KRST0	(*( SPU0_KRST0_type *) 0xfa8007f4u)	/* Kernel Reset Register 0 */
#define SPU1_KRST0	(*( SPU0_KRST0_type *) 0xfac007f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* Kernel Reset */
		/* const */ unsigned __sfrbit32 RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_KRST1_type;
#define SPU0_KRST1	(*( SPU0_KRST1_type *) 0xfa8007f8u)	/* Kernel Reset Register 1 */
#define SPU1_KRST1	(*( SPU0_KRST1_type *) 0xfac007f8u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CLR            : 1;	/* Kernel Reset Status Clear */
		/* const */ unsigned __sfrbit32 RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_KRSTCLR_type;
#define SPU0_KRSTCLR	(*( SPU0_KRSTCLR_type *) 0xfa8007fcu)	/* Kernel Reset Clear */
#define SPU1_KRSTCLR	(*( SPU0_KRSTCLR_type *) 0xfac007fcu)	/* Kernel Reset Clear */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 WIDTH          : 2;	/* Local Maximum Window Width */
		unsigned __sfrbit32 TMODE          : 2;	/* Threshold Mode */
		unsigned __sfrbit32 LMODE          : 2;	/* Local Max Mode */
		unsigned __sfrbit32 CMBN           : 1;	/* Check Combine */
		unsigned __sfrbit32 LJUST          : 1;	/* Left Justify */
		unsigned __sfrbit32 TSHLD          : 24;	/* Threshold */
	} B;
	int I;
	unsigned int U;

} SPU0_LCLMAX_type;
#define SPU0_LCLMAX	(*( SPU0_LCLMAX_type *) 0xfa80020cu)	/* Local Maximum Control */
#define SPU1_LCLMAX	(*( SPU0_LCLMAX_type *) 0xfac0020cu)	/* Local Maximum Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ALPHA          : 16;	/* Alpha Constant */
		unsigned __sfrbit32 BETA           : 16;	/* Beta Constant */
	} B;
	int I;
	unsigned int U;

} SPU0_MAGAPPROX_type;
#define SPU0_MAGAPPROX	(*( SPU0_MAGAPPROX_type *) 0xfa8001e0u)	/* Magnitude Approximation Constants */
#define SPU1_MAGAPPROX	(*( SPU0_MAGAPPROX_type *) 0xfac001e0u)	/* Magnitude Approximation Constants */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 REJCNT         : 12;	/* Rejection Count */
		/* const */ unsigned __sfrbit32 THSLDCNT       : 12;	/* Threshold Function Count */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_MD0_BINCOUNT_type;
#define SPU0_MD0_BINCOUNT	(*( SPU0_MD0_BINCOUNT_type *) 0xfa800224u)	/* Bin Rejection Unit Tracking */
#define SPU0_MD1_BINCOUNT	(*( SPU0_MD0_BINCOUNT_type *) 0xfa8002acu)	/* Bin Rejection Unit Tracking */
#define SPU1_MD0_BINCOUNT	(*( SPU0_MD0_BINCOUNT_type *) 0xfac00224u)	/* Bin Rejection Unit Tracking */
#define SPU1_MD1_BINCOUNT	(*( SPU0_MD0_BINCOUNT_type *) 0xfac002acu)	/* Bin Rejection Unit Tracking */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 B_A0           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A1           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A2           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A3           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A4           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A5           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A6           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A7           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A8           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A9           : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A10          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A11          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A12          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A13          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A14          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A15          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A16          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A17          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A18          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A19          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A20          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A21          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A22          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A23          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A24          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A25          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A26          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A27          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A28          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A29          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A30          : 1;	/* BIN */
		/* const */ unsigned __sfrbit32 B_A31          : 1;	/* BIN */
	} B;
	int I;
	unsigned int U;

} SPU0_MD0_MASK0_ACCEPT_type;
#define SPU0_MD0_MASK0_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800228u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK10_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800250u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK11_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800254u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK12_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800258u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK13_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80025cu)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK14_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800260u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK15_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800264u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK16_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800268u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK17_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80026cu)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK18_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800270u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK19_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800274u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK1_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80022cu)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK20_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800278u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK21_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80027cu)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK22_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800280u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK23_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800284u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK24_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800288u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK25_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80028cu)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK26_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800290u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK27_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800294u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK28_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800298u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK29_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80029cu)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK2_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800230u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK30_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002a0u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK31_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002a4u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK3_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800234u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK4_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800238u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK5_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80023cu)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK6_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800240u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK7_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800244u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK8_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800248u)	/* Bin Acceptance Mask */
#define SPU0_MD0_MASK9_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80024cu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK0_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002b0u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK10_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002d8u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK11_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002dcu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK12_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002e0u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK13_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002e4u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK14_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002e8u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK15_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002ecu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK16_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002f0u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK17_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002f4u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK18_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002f8u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK19_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002fcu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK1_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002b4u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK20_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800300u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK21_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800304u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK22_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800308u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK23_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80030cu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK24_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800310u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK25_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800314u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK26_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800318u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK27_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80031cu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK28_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800320u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK29_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800324u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK2_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002b8u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK30_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa800328u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK31_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa80032cu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK3_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002bcu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK4_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002c0u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK5_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002c4u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK6_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002c8u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK7_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002ccu)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK8_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002d0u)	/* Bin Acceptance Mask */
#define SPU0_MD1_MASK9_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfa8002d4u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK0_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00228u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK10_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00250u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK11_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00254u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK12_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00258u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK13_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0025cu)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK14_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00260u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK15_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00264u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK16_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00268u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK17_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0026cu)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK18_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00270u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK19_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00274u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK1_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0022cu)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK20_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00278u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK21_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0027cu)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK22_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00280u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK23_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00284u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK24_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00288u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK25_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0028cu)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK26_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00290u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK27_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00294u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK28_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00298u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK29_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0029cu)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK2_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00230u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK30_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002a0u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK31_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002a4u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK3_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00234u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK4_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00238u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK5_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0023cu)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK6_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00240u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK7_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00244u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK8_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00248u)	/* Bin Acceptance Mask */
#define SPU1_MD0_MASK9_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0024cu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK0_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002b0u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK10_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002d8u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK11_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002dcu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK12_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002e0u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK13_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002e4u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK14_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002e8u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK15_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002ecu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK16_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002f0u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK17_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002f4u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK18_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002f8u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK19_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002fcu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK1_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002b4u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK20_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00300u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK21_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00304u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK22_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00308u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK23_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0030cu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK24_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00310u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK25_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00314u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK26_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00318u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK27_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0031cu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK28_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00320u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK29_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00324u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK2_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002b8u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK30_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac00328u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK31_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac0032cu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK3_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002bcu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK4_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002c0u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK5_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002c4u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK6_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002c8u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK7_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002ccu)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK8_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002d0u)	/* Bin Acceptance Mask */
#define SPU1_MD1_MASK9_ACCEPT	(*( SPU0_MD0_MASK0_ACCEPT_type *) 0xfac002d4u)	/* Bin Acceptance Mask */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SMPLCNT        : 12;	/* Sample Count */
		/* const */ unsigned __sfrbit32 RES            : 4;	/* Reserved */
		/* const */ unsigned __sfrbit32 EXPNT          : 5;	/* Common Exponent */
		/* const */ unsigned __sfrbit32 RES_4          : 11;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_MD0_METADATA_type;
#define SPU0_MD0_METADATA	(*( SPU0_MD0_METADATA_type *) 0xfa800220u)	/* Dataset Metadata */
#define SPU0_MD1_METADATA	(*( SPU0_MD0_METADATA_type *) 0xfa8002a8u)	/* Dataset Metadata */
#define SPU1_MD0_METADATA	(*( SPU0_MD0_METADATA_type *) 0xfac00220u)	/* Dataset Metadata */
#define SPU1_MD1_METADATA	(*( SPU0_MD0_METADATA_type *) 0xfac002a8u)	/* Dataset Metadata */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned __sfrbit32 MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned __sfrbit32 MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} SPU0_MODID_type;
#define SPU0_MODID	(*( SPU0_MODID_type *) 0xfa800004u)	/* Module Identification Register */
#define SPU1_MODID	(*( SPU0_MODID_type *) 0xfac00004u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RAMP           : 11;	/* Ramp Counter */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 SAMPLE         : 11;	/* Sample Count */
		/* const */ unsigned __sfrbit32 RES_4          : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 IDM_BUSY       : 1;	/* IDM Busy */
		/* const */ unsigned __sfrbit32 LDR_BUSY       : 1;	/* Loader Busy */
		/* const */ unsigned __sfrbit32 M1_BUSY        : 1;	/* MATH1 Unit Busy */
		/* const */ unsigned __sfrbit32 UL_BUSY        : 1;	/* Unloader Busy */
		/* const */ unsigned __sfrbit32 M2_BUSY        : 1;	/* MATH2 Busy */
		/* const */ unsigned __sfrbit32 ODM_BUSY       : 1;	/* ODM Busy */
		/* const */ unsigned __sfrbit32 RES_11         : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_MONITOR_type;
#define SPU0_MONITOR	(*( SPU0_MONITOR_type *) 0xfa800378u)	/* SPU Monitor */
#define SPU1_MONITOR	(*( SPU0_MONITOR_type *) 0xfac00378u)	/* SPU Monitor */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ANT0           : 16;	/* Scaling Factor for Antenna 0 */
		unsigned __sfrbit32 ANT1           : 16;	/* Scaling Factor for Antenna 1 */
	} B;
	int I;
	unsigned int U;

} SPU0_NCISCALAR0_type;
#define SPU0_NCISCALAR0	(*( SPU0_NCISCALAR0_type *) 0xfa8001e4u)	/* NCI Antennae Scaling Factor */
#define SPU1_NCISCALAR0	(*( SPU0_NCISCALAR0_type *) 0xfac001e4u)	/* NCI Antennae Scaling Factor */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ANT2           : 16;	/* Scaling Factor for Antenna 2 */
		unsigned __sfrbit32 ANT3           : 16;	/* Scaling Factor for Antenna 3 */
	} B;
	int I;
	unsigned int U;

} SPU0_NCISCALAR1_type;
#define SPU0_NCISCALAR1	(*( SPU0_NCISCALAR1_type *) 0xfa8001e8u)	/* NCI Antennae Scaling Factor */
#define SPU1_NCISCALAR1	(*( SPU0_NCISCALAR1_type *) 0xfac001e8u)	/* NCI Antennae Scaling Factor */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ANT4           : 16;	/* Scaling Factor for Antenna 4 */
		unsigned __sfrbit32 ANT5           : 16;	/* Scaling Factor for Antenna 5 */
	} B;
	int I;
	unsigned int U;

} SPU0_NCISCALAR2_type;
#define SPU0_NCISCALAR2	(*( SPU0_NCISCALAR2_type *) 0xfa8001ecu)	/* NCI Antennae Scaling Factor */
#define SPU1_NCISCALAR2	(*( SPU0_NCISCALAR2_type *) 0xfac001ecu)	/* NCI Antennae Scaling Factor */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ANT6           : 16;	/* Scaling Factor for Antenna 6 */
		unsigned __sfrbit32 ANT7           : 16;	/* Scaling Factor for Antenna 7 */
	} B;
	int I;
	unsigned int U;

} SPU0_NCISCALAR3_type;
#define SPU0_NCISCALAR3	(*( SPU0_NCISCALAR3_type *) 0xfa8001f0u)	/* NCI Antennae Scaling Factor */
#define SPU1_NCISCALAR3	(*( SPU0_NCISCALAR3_type *) 0xfac001f0u)	/* NCI Antennae Scaling Factor */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TGS            : 2;	/* Trigger Bus Select */
		unsigned __sfrbit32 TGB            : 1;	/* OTGB0/1 Bus Select */
		unsigned __sfrbit32 TG_P           : 1;	/* TGS, TGB Write Protection */
		/* const */ unsigned __sfrbit32 RES            : 20;	/* Reserved */
		unsigned __sfrbit32 SUS            : 4;	/* Suspend */
		unsigned __sfrbit32 SUS_P          : 1;	/* Suspend Protect */
		/* const */ unsigned __sfrbit32 SUSSTA         : 1;	/* Suspend Status */
		/* const */ unsigned __sfrbit32 RES_8          : 2;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_OCS_type;
#define SPU0_OCS	(*( SPU0_OCS_type *) 0xfa8007ecu)	/* OCDS Control and Status */
#define SPU1_OCS	(*( SPU0_OCS_type *) 0xfac007ecu)	/* OCDS Control and Status */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DDREN          : 1;	/* Destructive Debug Read Enable */
		unsigned __sfrbit32 DREN           : 1;	/* Destructive Read Enable */
		/* const */ unsigned __sfrbit32 RES            : 30;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_ODA_type;
#define SPU0_ODA	(*( SPU0_ODA_type *) 0xfa8007f0u)	/* OCDS Debug Access Register */
#define SPU1_ODA	(*( SPU0_ODA_type *) 0xfac007f0u)	/* OCDS Debug Access Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 RST            : 1;	/* Counter Reset */
		unsigned __sfrbit32 EN             : 1;	/* Counter Enable */
		unsigned __sfrbit32 LIMIT          : 11;	/* Preacquisition Counter Limit */
		unsigned __sfrbit32 TRIG           : 1;	/* Trigger on Limit */
		unsigned __sfrbit32 ERR            : 1;	/* Error Interrupt on Limit */
		unsigned __sfrbit32 ATTN           : 1;	/* Attention Request Interrupt onLimit */
		/* const */ unsigned __sfrbit32 COUNT          : 11;	/* Counter Value */
		/* const */ unsigned __sfrbit32 RES            : 5;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_PACTR_type;
#define SPU0_PACTR	(*( SPU0_PACTR_type *) 0xfa800058u)	/* Partial-Acquisition Counter */
#define SPU1_PACTR	(*( SPU0_PACTR_type *) 0xfac00058u)	/* Partial-Acquisition Counter */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CRC            : 32;	/* CRC */
	} B;
	int I;
	unsigned int U;

} SPU0_REGCRC_type;
#define SPU0_REGCRC	(*( SPU0_REGCRC_type *) 0xfa800218u)	/* Register CRC */
#define SPU1_REGCRC	(*( SPU0_REGCRC_type *) 0xfac00218u)	/* Register CRC */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OPERAND        : 32;	/* Operand for Scaling */
	} B;
	int I;
	unsigned int U;

} SPU0_SCALARADD_type;
#define SPU0_SCALARADD	(*( SPU0_SCALARADD_type *) 0xfa800200u)	/* Scalar Addition Operand */
#define SPU0_SCALARMULT	(*( SPU0_SCALARADD_type *) 0xfa800204u)	/* Scalar Multiplication Operand */
#define SPU1_SCALARADD	(*( SPU0_SCALARADD_type *) 0xfac00200u)	/* Scalar Addition Operand */
#define SPU1_SCALARMULT	(*( SPU0_SCALARADD_type *) 0xfac00204u)	/* Scalar Multiplication Operand */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CTRLCRCEN      : 2;	/* Control CRC Enable */
		unsigned __sfrbit32 DATACRCEN      : 2;	/* Data CRC Enable */
		unsigned __sfrbit32 REGCRCEN       : 2;	/* Register CRC Enable */
		unsigned __sfrbit32 RIFCRC         : 2;	/* RIF Data CRC Check Enable */
		unsigned __sfrbit32 BPCRC          : 2;	/* Bypass Data CRC Check Enable */
		unsigned __sfrbit32 RMTAERR        : 2;	/* Radar Memory Access Address Error Enable */
		/* const */ unsigned __sfrbit32 RES            : 20;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_SMCTRL_type;
#define SPU0_SMCTRL	(*( SPU0_SMCTRL_type *) 0xfa80037cu)	/* Safety Mechanism Control Functions */
#define SPU1_SMCTRL	(*( SPU0_SMCTRL_type *) 0xfac0037cu)	/* Safety Mechanism Control Functions */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 SMSTAT         : 6;	/* Safety Mechanism Status */
		/* const */ unsigned __sfrbit32 RES            : 2;	/* Reserved */
		unsigned __sfrbit32 SMSCLR         : 1;	/* Clear Safety Mechanism Status */
		/* const */ unsigned __sfrbit32 RES_4          : 7;	/* Reserved */
		/* const */ unsigned __sfrbit32 SMCTRLSTS      : 1;	/* Safety Machanism Control Status */
		unsigned __sfrbit32 SMCTRLCLR      : 1;	/* Clear SMCTRL Status Flag */
		/* const */ unsigned __sfrbit32 RES_7          : 14;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_SMSTAT_type;
#define SPU0_SMSTAT	(*( SPU0_SMSTAT_type *) 0xfa800380u)	/* Safety Mechanism Status */
#define SPU1_SMSTAT	(*( SPU0_SMSTAT_type *) 0xfac00380u)	/* Safety Mechanism Status */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CINIT          : 2;	/* Monitor CRC Unit Initialise */
		/* const */ unsigned __sfrbit32 RES            : 14;	/* Reserved */
		unsigned __sfrbit32 RIFCRCTST      : 2;	/* Test RIF CRC */
		unsigned __sfrbit32 BPCRCTST       : 2;	/* Test Bypass CRC */
		unsigned __sfrbit32 RMCTRLTST      : 2;	/* Test Radar Memory Control */
		unsigned __sfrbit32 RDECCTST       : 2;	/* Test EMEM Read Data ECC */
		unsigned __sfrbit32 RMTAERRTST     : 2;	/* Test Radar Memory Access Address Error */
		/* const */ unsigned __sfrbit32 RES_8          : 6;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_SMUSER_type;
#define SPU0_SMUSER	(*( SPU0_SMUSER_type *) 0xfa800384u)	/* Safety Mechanism Control Functions [User) */
#define SPU1_SMUSER	(*( SPU0_SMUSER_type *) 0xfac00384u)	/* Safety Mechanism Control Functions [User) */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ERRSTS         : 1;	/* Error Status */
		unsigned __sfrbit32 ERRCLR         : 1;	/* Error Clear */
		unsigned __sfrbit32 ERRMSK         : 6;	/* Error Mask */
		unsigned __sfrbit32 INTSTS         : 1;	/* Interrupt Status */
		unsigned __sfrbit32 INTCLR         : 1;	/* Interrupt Clear */
		unsigned __sfrbit32 INTMSK         : 6;	/* Interrupt Mask */
		unsigned __sfrbit32 OVRRN          : 3;	/* Overrun */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		/* const */ unsigned __sfrbit32 ERRTRG         : 6;	/* Interrupt Trigger */
		/* const */ unsigned __sfrbit32 INTTRG         : 6;	/* Interrupt Trigger */
	} B;
	int I;
	unsigned int U;

} SPU0_STAT_type;
#define SPU0_STAT	(*( SPU0_STAT_type *) 0xfa800008u)	/* Status and Reporting */
#define SPU1_STAT	(*( SPU0_STAT_type *) 0xfac00008u)	/* Status and Reporting */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 16;	/* Reserved */
		unsigned __sfrbit32 TRSCTRL        : 8;	/* Trace Control */
		/* const */ unsigned __sfrbit32 RES_3          : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPU0_USROTC_type;
#define SPU0_USROTC	(*( SPU0_USROTC_type *) 0xfa8007e0u)	/* User OCDS Trace Control */
#define SPU1_USROTC	(*( SPU0_USROTC_type *) 0xfac007e0u)	/* User OCDS Trace Control */


/* SPULCKSTP */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned __sfrbit32 EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned __sfrbit32 EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned __sfrbit32 EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned __sfrbit32 EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned __sfrbit32 EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned __sfrbit32 EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned __sfrbit32 EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned __sfrbit32 EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned __sfrbit32 EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned __sfrbit32 EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned __sfrbit32 EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned __sfrbit32 EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned __sfrbit32 EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned __sfrbit32 EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned __sfrbit32 EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned __sfrbit32 EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned __sfrbit32 EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned __sfrbit32 EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned __sfrbit32 EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned __sfrbit32 EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned __sfrbit32 EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned __sfrbit32 EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned __sfrbit32 EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned __sfrbit32 EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned __sfrbit32 EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned __sfrbit32 EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned __sfrbit32 EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned __sfrbit32 EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned __sfrbit32 EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned __sfrbit32 EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned __sfrbit32 EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_ACCEN0_type;
#define SPULCKSTP_ACCEN0	(*( SPULCKSTP_ACCEN0_type *) 0xfa7000e4u)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RES            : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_ACCEN1_type;
#define SPULCKSTP_ACCEN1	(*( SPULCKSTP_ACCEN1_type *) 0xfa7000e8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 DISR           : 1;	/* Disable Request */
		/* const */ unsigned __sfrbit32 DISS           : 1;	/* Disable Status */
		/* const */ unsigned __sfrbit32 RES            : 1;	/* Reserved */
		unsigned __sfrbit32 EDIS           : 1;	/* Sleep Mode Enable Control */
		/* const */ unsigned __sfrbit32 RES_5          : 28;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_CLC_type;
#define SPULCKSTP_CLC	(*( SPULCKSTP_CLC_type *) 0xfa700000u)	/* Clock Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 LSEN0          : 2;	/* Lockstep Comparator 0 Enable */
		unsigned __sfrbit32 LSEN1          : 2;	/* Lockstep Comparator 1 Enable */
		unsigned __sfrbit32 LSEN2          : 2;	/* Lockstep Comparator 2 Enable */
		unsigned __sfrbit32 LSEN3          : 2;	/* Lockstep Comparator 3 Enable */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
		unsigned __sfrbit32 ERRDIS         : 2;	/* Error Disable */
		unsigned __sfrbit32 MS             : 2;	/* Mirror SPU0 */
		/* const */ unsigned __sfrbit32 RES_8          : 12;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_CTRL_type;
#define SPULCKSTP_CTRL	(*( SPULCKSTP_CTRL_type *) 0xfa700010u)	/* SPU Lockstep Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 CLR0           : 2;	/* Clear Lockstep Comparator 0 Fail Flag */
		unsigned __sfrbit32 CLR1           : 2;	/* Clear Lockstep Comparator 1 Fail Flag */
		unsigned __sfrbit32 CLR2           : 2;	/* Clear Lockstep Comparator 2 Fail Flag */
		unsigned __sfrbit32 CLR3           : 2;	/* Clear Lockstep Comparator 3 Fail Flag */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
		unsigned __sfrbit32 RCLR0          : 2;	/* Clear Lockstep Comparator 0 Redundancy Fail Flag */
		unsigned __sfrbit32 RCLR1          : 2;	/* Clear Lockstep Comparator 1 Redundancy Fail Flag */
		unsigned __sfrbit32 RCLR2          : 2;	/* Clear Lockstep Comparator 2 Redundancy Fail Flag */
		unsigned __sfrbit32 RCLR3          : 2;	/* Clear Lockstep Comparator 3 Redundancy Fail Flag */
		/* const */ unsigned __sfrbit32 RES_10         : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_ERRCLR_type;
#define SPULCKSTP_ERRCLR	(*( SPULCKSTP_ERRCLR_type *) 0xfa70001cu)	/* Error Clear */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 LCFAIL0        : 2;	/* Lockstep Comparator 0 Fail */
		/* const */ unsigned __sfrbit32 LCFAIL1        : 2;	/* Lockstep Comparator 1 Fail */
		/* const */ unsigned __sfrbit32 LCFAIL2        : 2;	/* Lockstep Comparator 2 Fail */
		/* const */ unsigned __sfrbit32 LCFAIL3        : 2;	/* Lockstep Comparator 3 Fail */
		/* const */ unsigned __sfrbit32 RES            : 8;	/* Reserved */
		/* const */ unsigned __sfrbit32 LCRFAIL0       : 2;	/* Lockstep Comparator 0 Redundancy Fail */
		/* const */ unsigned __sfrbit32 LCRFAIL1       : 2;	/* Lockstep Comparator 1 Redundancy Fail */
		/* const */ unsigned __sfrbit32 LCRFAIL2       : 2;	/* Lockstep Comparator 2 Redundancy Fail */
		/* const */ unsigned __sfrbit32 LCRFAIL3       : 2;	/* Lockstep Comparator 3 Redundancy Fail */
		/* const */ unsigned __sfrbit32 RES_10         : 8;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_ERROR_type;
#define SPULCKSTP_ERROR	(*( SPULCKSTP_ERROR_type *) 0xfa700018u)	/* Error Monitoring Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned __sfrbit32 MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned __sfrbit32 MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_MODID_type;
#define SPULCKSTP_MODID	(*( SPULCKSTP_MODID_type *) 0xfa700004u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TRIGGER        : 1;	/* SPU Trigger */
		/* const */ unsigned __sfrbit32 RES            : 31;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_SPUCTRL_type;
#define SPULCKSTP_SPUCTRL	(*( SPULCKSTP_SPUCTRL_type *) 0xfa700024u)	/* SPU Control */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 LSTST0         : 2;	/* Test Lockstep Comparator 0 Alarm */
		unsigned __sfrbit32 LSTST1         : 2;	/* Test Lockstep Comparator 1 Alarm */
		unsigned __sfrbit32 LSTST2         : 2;	/* Test Lockstep Comparator 2 Alarm */
		unsigned __sfrbit32 LSTST3         : 2;	/* Test Lockstep Comparator 3 Alarm */
		/* const */ unsigned __sfrbit32 RES            : 24;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} SPULCKSTP_TEST_type;
#define SPULCKSTP_TEST	(*( SPULCKSTP_TEST_type *) 0xfa700020u)	/* Alarm Test Register */


/* DOM */
typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned __sfrbit32 EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned __sfrbit32 EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned __sfrbit32 EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned __sfrbit32 EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned __sfrbit32 EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned __sfrbit32 EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned __sfrbit32 EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned __sfrbit32 EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned __sfrbit32 EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned __sfrbit32 EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned __sfrbit32 EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned __sfrbit32 EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned __sfrbit32 EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned __sfrbit32 EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned __sfrbit32 EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned __sfrbit32 EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned __sfrbit32 EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned __sfrbit32 EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned __sfrbit32 EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned __sfrbit32 EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned __sfrbit32 EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned __sfrbit32 EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned __sfrbit32 EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned __sfrbit32 EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned __sfrbit32 EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned __sfrbit32 EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned __sfrbit32 EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned __sfrbit32 EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned __sfrbit32 EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned __sfrbit32 EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned __sfrbit32 EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} DOM0_ACCEN0_type;
#define DOM0_ACCEN0	(*( DOM0_ACCEN0_type *) 0xf87004f0u)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} DOM0_ACCEN1_type;
#define DOM0_ACCEN1	(*( DOM0_ACCEN1_type *) 0xf87004f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 OLDAEN         : 1;	/* Online Data Acquisition Enable */
		unsigned __sfrbit32                : 31;
	} B;
	int I;
	unsigned int U;

} DOM0_BRCON_type;
#define DOM0_BRCON	(*( DOM0_BRCON_type *) 0xf8700430u)	/* Domain 0 Bridge Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 RD_N           : 1;	/* Read Status - RD */
		/* const */ unsigned __sfrbit32 WR_N           : 1;	/* Write Status - WR */
		/* const */ unsigned __sfrbit32 SVM            : 1;	/* Supervisor Mode Status */
		/* const */ unsigned __sfrbit32                : 1;
		/* const */ unsigned __sfrbit32 OPC            : 4;	/* Operation Code */
		/* const */ unsigned __sfrbit32 TR_ID          : 8;	/* Transaction ID */
		/* const */ unsigned __sfrbit32 ADDR_EDC       : 8;	/* Address Phase Error Detection Information */
		/* const */ unsigned __sfrbit32 MCI_SBS        : 8;	/* MCI Sideband Signals [7:0] */
	} B;
	int I;
	unsigned int U;

} DOM0_ERR0_type;
#define DOM0_ERR0	(*( DOM0_ERR0_type *) 0xf8700018u)	/* SCI 0 Error Capture Register */
#define DOM0_ERR1	(*( DOM0_ERR0_type *) 0xf8700038u)	/* SCI 1 Error Capture Register */
#define DOM0_ERR10	(*( DOM0_ERR0_type *) 0xf8700158u)	/* SCI 10 Error Capture Register */
#define DOM0_ERR11	(*( DOM0_ERR0_type *) 0xf8700178u)	/* SCI 11 Error Capture Register */
#define DOM0_ERR12	(*( DOM0_ERR0_type *) 0xf8700198u)	/* SCI 12 Error Capture Register */
#define DOM0_ERR13	(*( DOM0_ERR0_type *) 0xf87001b8u)	/* SCI 13 Error Capture Register */
#define DOM0_ERR14	(*( DOM0_ERR0_type *) 0xf87001d8u)	/* SCI 14 Error Capture Register */
#define DOM0_ERR15	(*( DOM0_ERR0_type *) 0xf87001f8u)	/* SCI 15 Error Capture Register */
#define DOM0_ERR2	(*( DOM0_ERR0_type *) 0xf8700058u)	/* SCI 2 Error Capture Register */
#define DOM0_ERR3	(*( DOM0_ERR0_type *) 0xf8700078u)	/* SCI 3 Error Capture Register */
#define DOM0_ERR4	(*( DOM0_ERR0_type *) 0xf8700098u)	/* SCI 4 Error Capture Register */
#define DOM0_ERR5	(*( DOM0_ERR0_type *) 0xf87000b8u)	/* SCI 5 Error Capture Register */
#define DOM0_ERR6	(*( DOM0_ERR0_type *) 0xf87000d8u)	/* SCI 6 Error Capture Register */
#define DOM0_ERR7	(*( DOM0_ERR0_type *) 0xf87000f8u)	/* SCI 7 Error Capture Register */
#define DOM0_ERR8	(*( DOM0_ERR0_type *) 0xf8700118u)	/* SCI 8 Error Capture Register */
#define DOM0_ERR9	(*( DOM0_ERR0_type *) 0xf8700138u)	/* SCI 9 Error Capture Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 ADDR           : 32;	/* Transaction Address */
	} B;
	int I;
	unsigned int U;

} DOM0_ERRADDR0_type;
#define DOM0_ERRADDR0	(*( DOM0_ERRADDR0_type *) 0xf8700010u)	/* SCI 0 Error Address Capture Register */
#define DOM0_ERRADDR1	(*( DOM0_ERRADDR0_type *) 0xf8700030u)	/* SCI 1 Error Address Capture Register */
#define DOM0_ERRADDR10	(*( DOM0_ERRADDR0_type *) 0xf8700150u)	/* SCI 10 Error Address Capture Register */
#define DOM0_ERRADDR11	(*( DOM0_ERRADDR0_type *) 0xf8700170u)	/* SCI 11 Error Address Capture Register */
#define DOM0_ERRADDR12	(*( DOM0_ERRADDR0_type *) 0xf8700190u)	/* SCI 12 Error Address Capture Register */
#define DOM0_ERRADDR13	(*( DOM0_ERRADDR0_type *) 0xf87001b0u)	/* SCI 13 Error Address Capture Register */
#define DOM0_ERRADDR14	(*( DOM0_ERRADDR0_type *) 0xf87001d0u)	/* SCI 14 Error Address Capture Register */
#define DOM0_ERRADDR15	(*( DOM0_ERRADDR0_type *) 0xf87001f0u)	/* SCI 15 Error Address Capture Register */
#define DOM0_ERRADDR2	(*( DOM0_ERRADDR0_type *) 0xf8700050u)	/* SCI 2 Error Address Capture Register */
#define DOM0_ERRADDR3	(*( DOM0_ERRADDR0_type *) 0xf8700070u)	/* SCI 3 Error Address Capture Register */
#define DOM0_ERRADDR4	(*( DOM0_ERRADDR0_type *) 0xf8700090u)	/* SCI 4 Error Address Capture Register */
#define DOM0_ERRADDR5	(*( DOM0_ERRADDR0_type *) 0xf87000b0u)	/* SCI 5 Error Address Capture Register */
#define DOM0_ERRADDR6	(*( DOM0_ERRADDR0_type *) 0xf87000d0u)	/* SCI 6 Error Address Capture Register */
#define DOM0_ERRADDR7	(*( DOM0_ERRADDR0_type *) 0xf87000f0u)	/* SCI 7 Error Address Capture Register */
#define DOM0_ERRADDR8	(*( DOM0_ERRADDR0_type *) 0xf8700110u)	/* SCI 8 Error Address Capture Register */
#define DOM0_ERRADDR9	(*( DOM0_ERRADDR0_type *) 0xf8700130u)	/* SCI 9 Error Address Capture Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned __sfrbit32 MOD_REV        : 8;	/* Module Revision Number */
		/* const */ unsigned __sfrbit32 MOD_TYPE       : 8;	/* Module Type */
		/* const */ unsigned __sfrbit32 MOD_NUMBER     : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} DOM0_ID_type;
#define DOM0_ID	(*( DOM0_ID_type *) 0xf8700408u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 PEEN           : 1;	/* Protocol Error Enable */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 SETPE          : 1;	/* Set Protocol Error */
		unsigned __sfrbit32                : 1;
		unsigned __sfrbit32 PEACK          : 1;	/* Protocol Error Acknowledge */
		unsigned __sfrbit32                : 27;
	} B;
	int I;
	unsigned int U;

} DOM0_PECON0_type;
#define DOM0_PECON0	(*( DOM0_PECON0_type *) 0xf8700000u)	/* Protocol Error Control Register 0 */
#define DOM0_PECON1	(*( DOM0_PECON0_type *) 0xf8700020u)	/* Protocol Error Control Register 1 */
#define DOM0_PECON10	(*( DOM0_PECON0_type *) 0xf8700140u)	/* Protocol Error Control Register 10 */
#define DOM0_PECON11	(*( DOM0_PECON0_type *) 0xf8700160u)	/* Protocol Error Control Register 11 */
#define DOM0_PECON12	(*( DOM0_PECON0_type *) 0xf8700180u)	/* Protocol Error Control Register 12 */
#define DOM0_PECON13	(*( DOM0_PECON0_type *) 0xf87001a0u)	/* Protocol Error Control Register 13 */
#define DOM0_PECON14	(*( DOM0_PECON0_type *) 0xf87001c0u)	/* Protocol Error Control Register 14 */
#define DOM0_PECON15	(*( DOM0_PECON0_type *) 0xf87001e0u)	/* Protocol Error Control Register 15 */
#define DOM0_PECON2	(*( DOM0_PECON0_type *) 0xf8700040u)	/* Protocol Error Control Register 2 */
#define DOM0_PECON3	(*( DOM0_PECON0_type *) 0xf8700060u)	/* Protocol Error Control Register 3 */
#define DOM0_PECON4	(*( DOM0_PECON0_type *) 0xf8700080u)	/* Protocol Error Control Register 4 */
#define DOM0_PECON5	(*( DOM0_PECON0_type *) 0xf87000a0u)	/* Protocol Error Control Register 5 */
#define DOM0_PECON6	(*( DOM0_PECON0_type *) 0xf87000c0u)	/* Protocol Error Control Register 6 */
#define DOM0_PECON7	(*( DOM0_PECON0_type *) 0xf87000e0u)	/* Protocol Error Control Register 7 */
#define DOM0_PECON8	(*( DOM0_PECON0_type *) 0xf8700100u)	/* Protocol Error Control Register 8 */
#define DOM0_PECON9	(*( DOM0_PECON0_type *) 0xf8700120u)	/* Protocol Error Control Register 9 */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32                : 16;
		unsigned __sfrbit32 PESCI0         : 1;	/* Protocol Error status of SCI0 */
		unsigned __sfrbit32 PESCI1         : 1;	/* Protocol Error status of SCI1 */
		unsigned __sfrbit32 PESCI2         : 1;	/* Protocol Error status of SCI2 */
		unsigned __sfrbit32 PESCI3         : 1;	/* Protocol Error status of SCI3 */
		unsigned __sfrbit32 PESCI4         : 1;	/* Protocol Error status of SCI4 */
		unsigned __sfrbit32 PESCI5         : 1;	/* Protocol Error status of SCI5 */
		unsigned __sfrbit32 PESCI6         : 1;	/* Protocol Error status of SCI6 */
		unsigned __sfrbit32 PESCI7         : 1;	/* Protocol Error status of SCI7 */
		unsigned __sfrbit32 PESCI8         : 1;	/* Protocol Error status of SCI8 */
		unsigned __sfrbit32 PESCI9         : 1;	/* Protocol Error status of SCI9 */
		unsigned __sfrbit32 PESCI10        : 1;	/* Protocol Error status of SCI10 */
		unsigned __sfrbit32 PESCI11        : 1;	/* Protocol Error status of SCI11 */
		unsigned __sfrbit32 PESCI12        : 1;	/* Protocol Error status of SCI12 */
		unsigned __sfrbit32 PESCI13        : 1;	/* Protocol Error status of SCI13 */
		unsigned __sfrbit32 PESCI14        : 1;	/* Protocol Error status of SCI14 */
		unsigned __sfrbit32 PESCI15        : 1;	/* Protocol Error status of SCI15 */
	} B;
	int I;
	unsigned int U;

} DOM0_PESTAT_type;
#define DOM0_PESTAT	(*( DOM0_PESTAT_type *) 0xf8700410u)	/* Protocol Error Status Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 MCI0_P         : 1;	/* MCI0 Priority */
		unsigned __sfrbit32 MCI1_P         : 1;	/* MCI1 Priority */
		unsigned __sfrbit32 MCI2_P         : 1;	/* MCI2 Priority */
		unsigned __sfrbit32 MCI3_P         : 1;	/* MCI3 Priority */
		unsigned __sfrbit32 MCI4_P         : 1;	/* MCI4 Priority */
		unsigned __sfrbit32 MCI5_P         : 1;	/* MCI5 Priority */
		unsigned __sfrbit32 MCI6_P         : 1;	/* MCI6 Priority */
		unsigned __sfrbit32 MCI7_P         : 1;	/* MCI7 Priority */
		unsigned __sfrbit32 MCI8_P         : 1;	/* MCI8 Priority */
		unsigned __sfrbit32 MCI9_P         : 1;	/* MCI9 Priority */
		unsigned __sfrbit32 MCI10_P        : 1;	/* MCI10 Priority */
		unsigned __sfrbit32 MCI11_P        : 1;	/* MCI11 Priority */
		unsigned __sfrbit32                : 4;
		unsigned __sfrbit32 HPRS           : 3;	/* High Priority Round Share */
		unsigned __sfrbit32                : 13;
	} B;
	int I;
	unsigned int U;

} DOM0_PRIORITY0_type;
#define DOM0_PRIORITY0	(*( DOM0_PRIORITY0_type *) 0xf8700008u)	/* SCI0 Arbiter Priority Register */
#define DOM0_PRIORITY1	(*( DOM0_PRIORITY0_type *) 0xf8700028u)	/* SCI1 Arbiter Priority Register */
#define DOM0_PRIORITY10	(*( DOM0_PRIORITY0_type *) 0xf8700148u)	/* SCI10 Arbiter Priority Register */
#define DOM0_PRIORITY11	(*( DOM0_PRIORITY0_type *) 0xf8700168u)	/* SCI11 Arbiter Priority Register */
#define DOM0_PRIORITY12	(*( DOM0_PRIORITY0_type *) 0xf8700188u)	/* SCI12 Arbiter Priority Register */
#define DOM0_PRIORITY13	(*( DOM0_PRIORITY0_type *) 0xf87001a8u)	/* SCI13 Arbiter Priority Register */
#define DOM0_PRIORITY14	(*( DOM0_PRIORITY0_type *) 0xf87001c8u)	/* SCI14 Arbiter Priority Register */
#define DOM0_PRIORITY15	(*( DOM0_PRIORITY0_type *) 0xf87001e8u)	/* SCI15 Arbiter Priority Register */
#define DOM0_PRIORITY2	(*( DOM0_PRIORITY0_type *) 0xf8700048u)	/* SCI2 Arbiter Priority Register */
#define DOM0_PRIORITY3	(*( DOM0_PRIORITY0_type *) 0xf8700068u)	/* SCI3 Arbiter Priority Register */
#define DOM0_PRIORITY4	(*( DOM0_PRIORITY0_type *) 0xf8700088u)	/* SCI4 Arbiter Priority Register */
#define DOM0_PRIORITY5	(*( DOM0_PRIORITY0_type *) 0xf87000a8u)	/* SCI5 Arbiter Priority Register */
#define DOM0_PRIORITY6	(*( DOM0_PRIORITY0_type *) 0xf87000c8u)	/* SCI6 Arbiter Priority Register */
#define DOM0_PRIORITY7	(*( DOM0_PRIORITY0_type *) 0xf87000e8u)	/* SCI7 Arbiter Priority Register */
#define DOM0_PRIORITY8	(*( DOM0_PRIORITY0_type *) 0xf8700108u)	/* SCI8 Arbiter Priority Register */
#define DOM0_PRIORITY9	(*( DOM0_PRIORITY0_type *) 0xf8700128u)	/* SCI9 Arbiter Priority Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 ENSCI0         : 1;	/* Enable Transaction ID Error from SCI0 */
		unsigned __sfrbit32 ENSCI1         : 1;	/* Enable Transaction ID Error from SCI1 */
		unsigned __sfrbit32 ENSCI2         : 1;	/* Enable Transaction ID Error from SCI2 */
		unsigned __sfrbit32 ENSCI3         : 1;	/* Enable Transaction ID Error from SCI3 */
		unsigned __sfrbit32 ENSCI4         : 1;	/* Enable Transaction ID Error from SCI4 */
		unsigned __sfrbit32 ENSCI5         : 1;	/* Enable Transaction ID Error from SCI5 */
		unsigned __sfrbit32 ENSCI6         : 1;	/* Enable Transaction ID Error from SCI6 */
		unsigned __sfrbit32 ENSCI7         : 1;	/* Enable Transaction ID Error from SCI7 */
		unsigned __sfrbit32 ENSCI8         : 1;	/* Enable Transaction ID Error from SCI8 */
		unsigned __sfrbit32 ENSCI9         : 1;	/* Enable Transaction ID Error from SCI9 */
		unsigned __sfrbit32 ENSCI10        : 1;	/* Enable Transaction ID Error from SCI10 */
		unsigned __sfrbit32 ENSCI11        : 1;	/* Enable Transaction ID Error from SCI11 */
		unsigned __sfrbit32 ENSCI12        : 1;	/* Enable Transaction ID Error from SCI12 */
		unsigned __sfrbit32 ENSCI13        : 1;	/* Enable Transaction ID Error from SCI13 */
		unsigned __sfrbit32 ENSCI14        : 1;	/* Enable Transaction ID Error from SCI14 */
		unsigned __sfrbit32 ENSCI15        : 1;	/* Enable Transaction ID Error from SCI15 */
		unsigned __sfrbit32 ENMCI0         : 1;	/* Enable Transaction ID Error from MCI0 */
		unsigned __sfrbit32 ENMCI1         : 1;	/* Enable Transaction ID Error from MCI1 */
		unsigned __sfrbit32 ENMCI2         : 1;	/* Enable Transaction ID Error from MCI2 */
		unsigned __sfrbit32 ENMCI3         : 1;	/* Enable Transaction ID Error from MCI3 */
		unsigned __sfrbit32 ENMCI4         : 1;	/* Enable Transaction ID Error from MCI4 */
		unsigned __sfrbit32 ENMCI5         : 1;	/* Enable Transaction ID Error from MCI5 */
		unsigned __sfrbit32 ENMCI6         : 1;	/* Enable Transaction ID Error from MCI6 */
		unsigned __sfrbit32 ENMCI7         : 1;	/* Enable Transaction ID Error from MCI7 */
		unsigned __sfrbit32 ENMCI8         : 1;	/* Enable Transaction ID Error from MCI8 */
		unsigned __sfrbit32 ENMCI9         : 1;	/* Enable Transaction ID Error from MCI9 */
		unsigned __sfrbit32 ENMCI10        : 1;	/* Enable Transaction ID Error from MCI10 */
		unsigned __sfrbit32 ENMCI11        : 1;	/* Enable Transaction ID Error from MCI11 */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} DOM0_TIDEN_type;
#define DOM0_TIDEN	(*( DOM0_TIDEN_type *) 0xf8700420u)	/* Transaction ID Enable Register */

typedef volatile union
{
	struct
	{ 
		unsigned __sfrbit32 TIDSCI0        : 1;	/* Transaction ID Error from SCI0 Status */
		unsigned __sfrbit32 TIDSCI1        : 1;	/* Transaction ID Error from SCI1 Status */
		unsigned __sfrbit32 TIDSCI2        : 1;	/* Transaction ID Error from SCI2 Status */
		unsigned __sfrbit32 TIDSCI3        : 1;	/* Transaction ID Error from SCI3 Status */
		unsigned __sfrbit32 TIDSCI4        : 1;	/* Transaction ID Error from SCI4 Status */
		unsigned __sfrbit32 TIDSCI5        : 1;	/* Transaction ID Error from SCI5 Status */
		unsigned __sfrbit32 TIDSCI6        : 1;	/* Transaction ID Error from SCI6 Status */
		unsigned __sfrbit32 TIDSCI7        : 1;	/* Transaction ID Error from SCI7 Status */
		unsigned __sfrbit32 TIDSCI8        : 1;	/* Transaction ID Error from SCI8 Status */
		unsigned __sfrbit32 TIDSCI9        : 1;	/* Transaction ID Error from SCI9 Status */
		unsigned __sfrbit32 TIDSCI10       : 1;	/* Transaction ID Error from SCI10 Status */
		unsigned __sfrbit32 TIDSCI11       : 1;	/* Transaction ID Error from SCI11 Status */
		unsigned __sfrbit32 TIDSCI12       : 1;	/* Transaction ID Error from SCI12 Status */
		unsigned __sfrbit32 TIDSCI13       : 1;	/* Transaction ID Error from SCI13 Status */
		unsigned __sfrbit32 TIDSCI14       : 1;	/* Transaction ID Error from SCI14 Status */
		unsigned __sfrbit32 TIDSCI15       : 1;	/* Transaction ID Error from SCI15 Status */
		unsigned __sfrbit32 TIDMCI0        : 1;	/* Transaction ID Error from MCI0 Status */
		unsigned __sfrbit32 TIDMCI1        : 1;	/* Transaction ID Error from MCI1 Status */
		unsigned __sfrbit32 TIDMCI2        : 1;	/* Transaction ID Error from MCI2 Status */
		unsigned __sfrbit32 TIDMCI3        : 1;	/* Transaction ID Error from MCI3 Status */
		unsigned __sfrbit32 TIDMCI4        : 1;	/* Transaction ID Error from MCI4 Status */
		unsigned __sfrbit32 TIDMCI5        : 1;	/* Transaction ID Error from MCI5 Status */
		unsigned __sfrbit32 TIDMCI6        : 1;	/* Transaction ID Error from MCI6 Status */
		unsigned __sfrbit32 TIDMCI7        : 1;	/* Transaction ID Error from MCI7 Status */
		unsigned __sfrbit32 TIDMCI8        : 1;	/* Transaction ID Error from MCI8 Status */
		unsigned __sfrbit32 TIDMCI9        : 1;	/* Transaction ID Error from MCI9 Status */
		unsigned __sfrbit32 TIDMCI10       : 1;	/* Transaction ID Error from MCI10 Status */
		unsigned __sfrbit32 TIDMCI11       : 1;	/* Transaction ID Error from MCI11 Status */
		unsigned __sfrbit32                : 4;
	} B;
	int I;
	unsigned int U;

} DOM0_TIDSTAT_type;
#define DOM0_TIDSTAT	(*( DOM0_TIDSTAT_type *) 0xf8700418u)	/* Transaction ID Status Register */


/* STM */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} STM0_ACCEN0_type;
#define STM0_ACCEN0	(*( STM0_ACCEN0_type *) 0xf00010fcu)	/* Access Enable Register 0 */
#define STM1_ACCEN0	(*( STM0_ACCEN0_type *) 0xf00011fcu)	/* Access Enable Register 0 */
#define STM2_ACCEN0	(*( STM0_ACCEN0_type *) 0xf00012fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} STM0_ACCEN1_type;
#define STM0_ACCEN1	(*( STM0_ACCEN1_type *) 0xf00010f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STMCAP_63_32   : 32;	/* Captured System Timer Bits [63:32] - STMCAP[63:32] */
	} B;
	int I;
	unsigned int U;

} STM0_CAP_type;
#define STM0_CAP	(*( STM0_CAP_type *) 0xf000102cu)	/* Timer Capture Register */
#define STM0_CAPSV	(*( STM0_CAP_type *) 0xf0001054u)	/* Timer Capture Register Second View */
#define STM1_CAP	(*( STM0_CAP_type *) 0xf000112cu)	/* Timer Capture Register */
#define STM1_CAPSV	(*( STM0_CAP_type *) 0xf0001154u)	/* Timer Capture Register Second View */
#define STM2_CAP	(*( STM0_CAP_type *) 0xf000122cu)	/* Timer Capture Register */
#define STM2_CAPSV	(*( STM0_CAP_type *) 0xf0001254u)	/* Timer Capture Register Second View */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		unsigned int                : 1;
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} STM0_CLC_type;
#define STM0_CLC	(*( STM0_CLC_type *) 0xf0001000u)	/* Clock Control Register */
#define STM1_CLC	(*( STM0_CLC_type *) 0xf0001100u)	/* Clock Control Register */
#define STM2_CLC	(*( STM0_CLC_type *) 0xf0001200u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int MSIZE0         : 5;	/* Compare Register Size for CMP0 */
		unsigned int                : 3;
		unsigned int MSTART0        : 5;	/* Start Bit Location for CMP0 */
		unsigned int                : 3;
		unsigned int MSIZE1         : 5;	/* Compare Register Size for CMP1 */
		unsigned int                : 3;
		unsigned int MSTART1        : 5;	/* Start Bit Location for CMP1 */
		unsigned int                : 3;
	} B;
	int I;
	unsigned int U;

} STM0_CMCON_type;
#define STM0_CMCON	(*( STM0_CMCON_type *) 0xf0001038u)	/* Compare Match Control Register */
#define STM1_CMCON	(*( STM0_CMCON_type *) 0xf0001138u)	/* Compare Match Control Register */
#define STM2_CMCON	(*( STM0_CMCON_type *) 0xf0001238u)	/* Compare Match Control Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMPVAL         : 32;	/* Compare Value of Compare Register x */
	} B;
	int I;
	unsigned int U;

} STM0_CMP0_type;
#define STM0_CMP0	(*( STM0_CMP0_type *) 0xf0001030u)	/* Compare Register 0 */
#define STM0_CMP1	(*( STM0_CMP0_type *) 0xf0001034u)	/* Compare Register 1 */
#define STM1_CMP0	(*( STM0_CMP0_type *) 0xf0001130u)	/* Compare Register 0 */
#define STM1_CMP1	(*( STM0_CMP0_type *) 0xf0001134u)	/* Compare Register 1 */
#define STM2_CMP0	(*( STM0_CMP0_type *) 0xf0001230u)	/* Compare Register 0 */
#define STM2_CMP1	(*( STM0_CMP0_type *) 0xf0001234u)	/* Compare Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CMP0EN         : 1;	/* Compare Register CMP0 Interrupt Enable Control */
		/* const */ unsigned int CMP0IR         : 1;	/* Compare Register CMP0 Interrupt Request Flag */
		unsigned int CMP0OS         : 1;	/* Compare Register CMP0 Interrupt Output Selection */
		unsigned int                : 1;
		unsigned int CMP1EN         : 1;	/* Compare Register CMP1 Interrupt Enable Control */
		/* const */ unsigned int CMP1IR         : 1;	/* Compare Register CMP1 Interrupt Request Flag */
		unsigned int CMP1OS         : 1;	/* Compare Register CMP1 Interrupt Output Selection */
		unsigned int                : 25;
	} B;
	int I;
	unsigned int U;

} STM0_ICR_type;
#define STM0_ICR	(*( STM0_ICR_type *) 0xf000103cu)	/* Interrupt Control Register */
#define STM1_ICR	(*( STM0_ICR_type *) 0xf000113cu)	/* Interrupt Control Register */
#define STM2_ICR	(*( STM0_ICR_type *) 0xf000123cu)	/* Interrupt Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUM         : 16;	/* Module Number Value */
	} B;
	int I;
	unsigned int U;

} STM0_ID_type;
#define STM0_ID	(*( STM0_ID_type *) 0xf0001008u)	/* Module Identification Register */
#define STM1_ID	(*( STM0_ID_type *) 0xf0001108u)	/* Module Identification Register */
#define STM2_ID	(*( STM0_ID_type *) 0xf0001208u)	/* Module Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CMP0IRR        : 1;	/* Reset Compare Register CMP0 Interrupt Flag */
		unsigned int CMP0IRS        : 1;	/* Set Compare Register CMP0 Interrupt Flag */
		unsigned int CMP1IRR        : 1;	/* Reset Compare Register CMP1 Interrupt Flag */
		unsigned int CMP1IRS        : 1;	/* Set Compare Register CMP1 Interrupt Flag */
		unsigned int                : 28;
	} B;
	int I;
	unsigned int U;

} STM0_ISCR_type;
#define STM0_ISCR	(*( STM0_ISCR_type *) 0xf0001040u)	/* Interrupt Set/Clear Register */
#define STM1_ISCR	(*( STM0_ISCR_type *) 0xf0001140u)	/* Interrupt Set/Clear Register */
#define STM2_ISCR	(*( STM0_ISCR_type *) 0xf0001240u)	/* Interrupt Set/Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		/* const */ unsigned int RSTSTAT        : 1;	/* Kernel Reset Status */
		unsigned int                : 30;
	} B;
	int I;
	unsigned int U;

} STM0_KRST0_type;
#define STM0_KRST0	(*( STM0_KRST0_type *) 0xf00010f4u)	/* Kernel Reset Register 0 */
#define STM1_KRST0	(*( STM0_KRST0_type *) 0xf00011f4u)	/* Kernel Reset Register 0 */
#define STM2_KRST0	(*( STM0_KRST0_type *) 0xf00012f4u)	/* Kernel Reset Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int RST            : 1;	/* Kernel Reset */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} STM0_KRST1_type;
#define STM0_KRST1	(*( STM0_KRST1_type *) 0xf00010f0u)	/* Kernel Reset Register 1 */
#define STM1_KRST1	(*( STM0_KRST1_type *) 0xf00011f0u)	/* Kernel Reset Register 1 */
#define STM2_KRST1	(*( STM0_KRST1_type *) 0xf00012f0u)	/* Kernel Reset Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int CLR            : 1;	/* Kernel Reset Status Clear */
		unsigned int                : 31;
	} B;
	int I;
	unsigned int U;

} STM0_KRSTCLR_type;
#define STM0_KRSTCLR	(*( STM0_KRSTCLR_type *) 0xf00010ecu)	/* Kernel Reset Status Clear Register */
#define STM1_KRSTCLR	(*( STM0_KRSTCLR_type *) 0xf00011ecu)	/* Kernel Reset Status Clear Register */
#define STM2_KRSTCLR	(*( STM0_KRSTCLR_type *) 0xf00012ecu)	/* Kernel Reset Status Clear Register */

typedef volatile union
{
	struct
	{ 
		unsigned int                : 24;
		unsigned int SUS            : 4;	/* OCDS Suspend Control */
		unsigned int SUS_P          : 1;	/* SUS Write Protection */
		/* const */ unsigned int SUSSTA         : 1;	/* Suspend State */
		unsigned int                : 2;
	} B;
	int I;
	unsigned int U;

} STM0_OCS_type;
#define STM0_OCS	(*( STM0_OCS_type *) 0xf00010e8u)	/* OCDS Control and Status Register */
#define STM1_OCS	(*( STM0_OCS_type *) 0xf00011e8u)	/* OCDS Control and Status Register */
#define STM2_OCS	(*( STM0_OCS_type *) 0xf00012e8u)	/* OCDS Control and Status Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_31_0       : 32;	/* System Timer Bits [31:0] - STM[31:0] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM0_type;
#define STM0_TIM0	(*( STM0_TIM0_type *) 0xf0001010u)	/* Timer Register 0 */
#define STM0_TIM0SV	(*( STM0_TIM0_type *) 0xf0001050u)	/* Timer Register 0 Second View */
#define STM1_TIM0	(*( STM0_TIM0_type *) 0xf0001110u)	/* Timer Register 0 */
#define STM1_TIM0SV	(*( STM0_TIM0_type *) 0xf0001150u)	/* Timer Register 0 Second View */
#define STM2_TIM0	(*( STM0_TIM0_type *) 0xf0001210u)	/* Timer Register 0 */
#define STM2_TIM0SV	(*( STM0_TIM0_type *) 0xf0001250u)	/* Timer Register 0 Second View */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_35_4       : 32;	/* System Timer Bits [35:4] - STM[35:4] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM1_type;
#define STM0_TIM1	(*( STM0_TIM1_type *) 0xf0001014u)	/* Timer Register 1 */
#define STM1_TIM1	(*( STM0_TIM1_type *) 0xf0001114u)	/* Timer Register 1 */
#define STM2_TIM1	(*( STM0_TIM1_type *) 0xf0001214u)	/* Timer Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_39_8       : 32;	/* System Timer Bits [39:8] - STM[39:8] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM2_type;
#define STM0_TIM2	(*( STM0_TIM2_type *) 0xf0001018u)	/* Timer Register 2 */
#define STM1_TIM2	(*( STM0_TIM2_type *) 0xf0001118u)	/* Timer Register 2 */
#define STM2_TIM2	(*( STM0_TIM2_type *) 0xf0001218u)	/* Timer Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_43_12      : 32;	/* System Timer Bits [43:12] - STM[43:12] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM3_type;
#define STM0_TIM3	(*( STM0_TIM3_type *) 0xf000101cu)	/* Timer Register 3 */
#define STM1_TIM3	(*( STM0_TIM3_type *) 0xf000111cu)	/* Timer Register 3 */
#define STM2_TIM3	(*( STM0_TIM3_type *) 0xf000121cu)	/* Timer Register 3 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_47_16      : 32;	/* System Timer Bits [47:16] - STM[47:16] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM4_type;
#define STM0_TIM4	(*( STM0_TIM4_type *) 0xf0001020u)	/* Timer Register 4 */
#define STM1_TIM4	(*( STM0_TIM4_type *) 0xf0001120u)	/* Timer Register 4 */
#define STM2_TIM4	(*( STM0_TIM4_type *) 0xf0001220u)	/* Timer Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_51_20      : 32;	/* System Timer Bits [51:20] - STM[51:20] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM5_type;
#define STM0_TIM5	(*( STM0_TIM5_type *) 0xf0001024u)	/* Timer Register 5 */
#define STM1_TIM5	(*( STM0_TIM5_type *) 0xf0001124u)	/* Timer Register 5 */
#define STM2_TIM5	(*( STM0_TIM5_type *) 0xf0001224u)	/* Timer Register 5 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int STM_63_32      : 32;	/* System Timer Bits [63:32] - STM[63:32] */
	} B;
	int I;
	unsigned int U;

} STM0_TIM6_type;
#define STM0_TIM6	(*( STM0_TIM6_type *) 0xf0001028u)	/* Timer Register 6 */
#define STM1_TIM6	(*( STM0_TIM6_type *) 0xf0001128u)	/* Timer Register 6 */
#define STM2_TIM6	(*( STM0_TIM6_type *) 0xf0001228u)	/* Timer Register 6 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} STM1_ACCEN1_type;
#define STM1_ACCEN1	(*( STM1_ACCEN1_type *) 0xf00011f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Reserved       : 32;	/* Reserved */
	} B;
	int I;
	unsigned int U;

} STM2_ACCEN1_type;
#define STM2_ACCEN1	(*( STM2_ACCEN1_type *) 0xf00012f8u)	/* Access Enable Register 1 */

#define SYSTIME_LOW	STM0_TIM0.U
#define SYSTIME_HIGH	STM0_CAP.U
#define SYSTIME0_LOW	STM0_TIM0.U
#define SYSTIME0_HIGH	STM0_CAP.U
#define SYSTIME1_LOW	STM1_TIM0.U
#define SYSTIME1_HIGH	STM1_CAP.U
#define SYSTIME2_LOW	STM2_TIM0.U
#define SYSTIME2_HIGH	STM2_CAP.U

/* MTU */
typedef volatile union
{
	struct
	{ 
		unsigned int EN0            : 1;	/* Access Enable for Master TAG ID 0 */
		unsigned int EN1            : 1;	/* Access Enable for Master TAG ID 1 */
		unsigned int EN2            : 1;	/* Access Enable for Master TAG ID 2 */
		unsigned int EN3            : 1;	/* Access Enable for Master TAG ID 3 */
		unsigned int EN4            : 1;	/* Access Enable for Master TAG ID 4 */
		unsigned int EN5            : 1;	/* Access Enable for Master TAG ID 5 */
		unsigned int EN6            : 1;	/* Access Enable for Master TAG ID 6 */
		unsigned int EN7            : 1;	/* Access Enable for Master TAG ID 7 */
		unsigned int EN8            : 1;	/* Access Enable for Master TAG ID 8 */
		unsigned int EN9            : 1;	/* Access Enable for Master TAG ID 9 */
		unsigned int EN10           : 1;	/* Access Enable for Master TAG ID 10 */
		unsigned int EN11           : 1;	/* Access Enable for Master TAG ID 11 */
		unsigned int EN12           : 1;	/* Access Enable for Master TAG ID 12 */
		unsigned int EN13           : 1;	/* Access Enable for Master TAG ID 13 */
		unsigned int EN14           : 1;	/* Access Enable for Master TAG ID 14 */
		unsigned int EN15           : 1;	/* Access Enable for Master TAG ID 15 */
		unsigned int EN16           : 1;	/* Access Enable for Master TAG ID 16 */
		unsigned int EN17           : 1;	/* Access Enable for Master TAG ID 17 */
		unsigned int EN18           : 1;	/* Access Enable for Master TAG ID 18 */
		unsigned int EN19           : 1;	/* Access Enable for Master TAG ID 19 */
		unsigned int EN20           : 1;	/* Access Enable for Master TAG ID 20 */
		unsigned int EN21           : 1;	/* Access Enable for Master TAG ID 21 */
		unsigned int EN22           : 1;	/* Access Enable for Master TAG ID 22 */
		unsigned int EN23           : 1;	/* Access Enable for Master TAG ID 23 */
		unsigned int EN24           : 1;	/* Access Enable for Master TAG ID 24 */
		unsigned int EN25           : 1;	/* Access Enable for Master TAG ID 25 */
		unsigned int EN26           : 1;	/* Access Enable for Master TAG ID 26 */
		unsigned int EN27           : 1;	/* Access Enable for Master TAG ID 27 */
		unsigned int EN28           : 1;	/* Access Enable for Master TAG ID 28 */
		unsigned int EN29           : 1;	/* Access Enable for Master TAG ID 29 */
		unsigned int EN30           : 1;	/* Access Enable for Master TAG ID 30 */
		unsigned int EN31           : 1;	/* Access Enable for Master TAG ID 31 */
	} B;
	int I;
	unsigned int U;

} MTU_ACCEN0_type;
#define MTU_ACCEN0	(*( MTU_ACCEN0_type *) 0xf00600fcu)	/* Access Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int R0             : 32;	/* Reserved - Res */
	} B;
	int I;
	unsigned int U;

} MTU_ACCEN1_type;
#define MTU_ACCEN1	(*( MTU_ACCEN1_type *) 0xf00600f8u)	/* Access Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int DISR           : 1;	/* Module Disable Request Bit */
		/* const */ unsigned int DISS           : 1;	/* Module Disable Status Bit */
		/* const */ unsigned int Resvd          : 1;	/* Resvd */
		unsigned int EDIS           : 1;	/* Sleep Mode Enable Control */
		unsigned int                : 4;
		/* const */ unsigned int Reserved       : 8;	/* Reserved */
		unsigned int                : 16;
	} B;
	int I;
	unsigned int U;

} MTU_CLC_type;
#define MTU_CLC	(*( MTU_CLC_type *) 0xf0060000u)	/* Clock Control Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MODREV         : 8;	/* Module Revision Number */
		/* const */ unsigned int MODTYPE        : 8;	/* Module Type */
		/* const */ unsigned int MODNUMBER      : 16;	/* Module Number */
	} B;
	int I;
	unsigned int U;

} MTU_ID_type;
#define MTU_ID	(*( MTU_ID_type *) 0xf0060008u)	/* Identification Register */

typedef volatile union
{
	struct
	{ 
		unsigned int SBE            : 1;	/* Single Bit Error Notification 'and' Tracking Enable */
		unsigned int DBE            : 1;	/* Double Bit Error Notification and Tracking Enable */
		unsigned int ADDRE          : 1;	/* Address Error Notification Enable */
		unsigned int OVFE           : 1;	/* ETRR Overflow notification enable- OVFE */
		unsigned int OPENE          : 1;	/* SSH Operational Error Notification Enable */
		unsigned int MISCE          : 1;	/* SSH Misc. Errors Notification Enable */
		/* const */ unsigned int R6             : 10;	/* Reserved - Res */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_ALMSRCS_type;
#define MTU_MC0_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00610eeu)	/* Alarm Sources Conf0guration Register */
#define MTU_MC10_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0061aeeu)	/* Alarm Sources Conf10guration Register */
#define MTU_MC11_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0061beeu)	/* Alarm Sources Conf11guration Register */
#define MTU_MC12_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0061ceeu)	/* Alarm Sources Conf12guration Register */
#define MTU_MC13_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0061deeu)	/* Alarm Sources Conf13guration Register */
#define MTU_MC14_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0061eeeu)	/* Alarm Sources Conf14guration Register */
#define MTU_MC15_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0061feeu)	/* Alarm Sources Conf15guration Register */
#define MTU_MC16_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00620eeu)	/* Alarm Sources Conf16guration Register */
#define MTU_MC17_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00621eeu)	/* Alarm Sources Conf17guration Register */
#define MTU_MC18_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00622eeu)	/* Alarm Sources Conf18guration Register */
#define MTU_MC19_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00623eeu)	/* Alarm Sources Conf19guration Register */
#define MTU_MC1_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00611eeu)	/* Alarm Sources Conf1guration Register */
#define MTU_MC20_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00624eeu)	/* Alarm Sources Conf20guration Register */
#define MTU_MC21_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00625eeu)	/* Alarm Sources Conf21guration Register */
#define MTU_MC22_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00626eeu)	/* Alarm Sources Conf22guration Register */
#define MTU_MC23_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00627eeu)	/* Alarm Sources Conf23guration Register */
#define MTU_MC24_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00628eeu)	/* Alarm Sources Conf24guration Register */
#define MTU_MC25_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00629eeu)	/* Alarm Sources Conf25guration Register */
#define MTU_MC26_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0062aeeu)	/* Alarm Sources Conf26guration Register */
#define MTU_MC27_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0062beeu)	/* Alarm Sources Conf27guration Register */
#define MTU_MC28_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0062ceeu)	/* Alarm Sources Conf28guration Register */
#define MTU_MC29_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0062deeu)	/* Alarm Sources Conf29guration Register */
#define MTU_MC2_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00612eeu)	/* Alarm Sources Conf2guration Register */
#define MTU_MC30_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0062eeeu)	/* Alarm Sources Conf30guration Register */
#define MTU_MC31_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0062feeu)	/* Alarm Sources Conf31guration Register */
#define MTU_MC32_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00630eeu)	/* Alarm Sources Conf32guration Register */
#define MTU_MC33_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00631eeu)	/* Alarm Sources Conf33guration Register */
#define MTU_MC34_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00632eeu)	/* Alarm Sources Conf34guration Register */
#define MTU_MC35_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00633eeu)	/* Alarm Sources Conf35guration Register */
#define MTU_MC36_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00634eeu)	/* Alarm Sources Conf36guration Register */
#define MTU_MC37_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00635eeu)	/* Alarm Sources Conf37guration Register */
#define MTU_MC38_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00636eeu)	/* Alarm Sources Conf38guration Register */
#define MTU_MC39_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00637eeu)	/* Alarm Sources Conf39guration Register */
#define MTU_MC3_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00613eeu)	/* Alarm Sources Conf3guration Register */
#define MTU_MC40_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00638eeu)	/* Alarm Sources Conf40guration Register */
#define MTU_MC41_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00639eeu)	/* Alarm Sources Conf41guration Register */
#define MTU_MC42_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0063aeeu)	/* Alarm Sources Conf42guration Register */
#define MTU_MC43_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0063beeu)	/* Alarm Sources Conf43guration Register */
#define MTU_MC44_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0063ceeu)	/* Alarm Sources Conf44guration Register */
#define MTU_MC45_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0063deeu)	/* Alarm Sources Conf45guration Register */
#define MTU_MC46_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0063eeeu)	/* Alarm Sources Conf46guration Register */
#define MTU_MC47_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0063feeu)	/* Alarm Sources Conf47guration Register */
#define MTU_MC48_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00640eeu)	/* Alarm Sources Conf48guration Register */
#define MTU_MC49_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00641eeu)	/* Alarm Sources Conf49guration Register */
#define MTU_MC4_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00614eeu)	/* Alarm Sources Conf4guration Register */
#define MTU_MC50_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00642eeu)	/* Alarm Sources Conf50guration Register */
#define MTU_MC51_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00643eeu)	/* Alarm Sources Conf51guration Register */
#define MTU_MC52_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00644eeu)	/* Alarm Sources Conf52guration Register */
#define MTU_MC53_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00645eeu)	/* Alarm Sources Conf53guration Register */
#define MTU_MC54_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00646eeu)	/* Alarm Sources Conf54guration Register */
#define MTU_MC55_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00647eeu)	/* Alarm Sources Conf55guration Register */
#define MTU_MC56_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00648eeu)	/* Alarm Sources Conf56guration Register */
#define MTU_MC57_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00649eeu)	/* Alarm Sources Conf57guration Register */
#define MTU_MC58_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0064aeeu)	/* Alarm Sources Conf58guration Register */
#define MTU_MC59_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0064beeu)	/* Alarm Sources Conf59guration Register */
#define MTU_MC5_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00615eeu)	/* Alarm Sources Conf5guration Register */
#define MTU_MC60_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0064ceeu)	/* Alarm Sources Conf60guration Register */
#define MTU_MC61_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0064deeu)	/* Alarm Sources Conf61guration Register */
#define MTU_MC62_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0064eeeu)	/* Alarm Sources Conf62guration Register */
#define MTU_MC63_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0064feeu)	/* Alarm Sources Conf63guration Register */
#define MTU_MC64_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00650eeu)	/* Alarm Sources Conf64guration Register */
#define MTU_MC65_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00651eeu)	/* Alarm Sources Conf65guration Register */
#define MTU_MC66_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00652eeu)	/* Alarm Sources Conf66guration Register */
#define MTU_MC67_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00653eeu)	/* Alarm Sources Conf67guration Register */
#define MTU_MC68_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00654eeu)	/* Alarm Sources Conf68guration Register */
#define MTU_MC69_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00655eeu)	/* Alarm Sources Conf69guration Register */
#define MTU_MC6_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00616eeu)	/* Alarm Sources Conf6guration Register */
#define MTU_MC70_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00656eeu)	/* Alarm Sources Conf70guration Register */
#define MTU_MC71_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00657eeu)	/* Alarm Sources Conf71guration Register */
#define MTU_MC72_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00658eeu)	/* Alarm Sources Conf72guration Register */
#define MTU_MC73_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00659eeu)	/* Alarm Sources Conf73guration Register */
#define MTU_MC74_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0065aeeu)	/* Alarm Sources Conf74guration Register */
#define MTU_MC75_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0065beeu)	/* Alarm Sources Conf75guration Register */
#define MTU_MC76_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0065ceeu)	/* Alarm Sources Conf76guration Register */
#define MTU_MC77_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0065deeu)	/* Alarm Sources Conf77guration Register */
#define MTU_MC78_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0065eeeu)	/* Alarm Sources Conf78guration Register */
#define MTU_MC79_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0065feeu)	/* Alarm Sources Conf79guration Register */
#define MTU_MC7_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00617eeu)	/* Alarm Sources Conf7guration Register */
#define MTU_MC80_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00660eeu)	/* Alarm Sources Conf80guration Register */
#define MTU_MC81_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00661eeu)	/* Alarm Sources Conf81guration Register */
#define MTU_MC82_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00662eeu)	/* Alarm Sources Conf82guration Register */
#define MTU_MC83_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00663eeu)	/* Alarm Sources Conf83guration Register */
#define MTU_MC84_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00664eeu)	/* Alarm Sources Conf84guration Register */
#define MTU_MC85_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00665eeu)	/* Alarm Sources Conf85guration Register */
#define MTU_MC86_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00666eeu)	/* Alarm Sources Conf86guration Register */
#define MTU_MC87_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00667eeu)	/* Alarm Sources Conf87guration Register */
#define MTU_MC88_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00668eeu)	/* Alarm Sources Conf88guration Register */
#define MTU_MC89_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00669eeu)	/* Alarm Sources Conf89guration Register */
#define MTU_MC8_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00618eeu)	/* Alarm Sources Conf8guration Register */
#define MTU_MC90_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0066aeeu)	/* Alarm Sources Conf90guration Register */
#define MTU_MC91_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0066beeu)	/* Alarm Sources Conf91guration Register */
#define MTU_MC92_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0066ceeu)	/* Alarm Sources Conf92guration Register */
#define MTU_MC93_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0066deeu)	/* Alarm Sources Conf93guration Register */
#define MTU_MC94_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0066eeeu)	/* Alarm Sources Conf94guration Register */
#define MTU_MC95_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf0066feeu)	/* Alarm Sources Conf95guration Register */
#define MTU_MC9_ALMSRCS	(*( MTU_MC0_ALMSRCS_type *) 0xf00619eeu)	/* Alarm Sources Conf9guration Register */

typedef volatile union
{
	struct
	{ 
		unsigned int ACCSTYPE       : 8;	/* Access type */
		/* const */ unsigned int R8             : 4;	/* Reserved - Res */
		unsigned int NUMACCS        : 4;	/* Number of accesses per address */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_CONFIG0_type;
#define MTU_MC0_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061000u)	/* Conf0guration Registers */
#define MTU_MC10_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061a00u)	/* Conf10guration Registers */
#define MTU_MC11_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061b00u)	/* Conf11guration Registers */
#define MTU_MC12_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061c00u)	/* Conf12guration Registers */
#define MTU_MC13_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061d00u)	/* Conf13guration Registers */
#define MTU_MC14_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061e00u)	/* Conf14guration Registers */
#define MTU_MC15_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061f00u)	/* Conf15guration Registers */
#define MTU_MC16_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062000u)	/* Conf16guration Registers */
#define MTU_MC17_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062100u)	/* Conf17guration Registers */
#define MTU_MC18_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062200u)	/* Conf18guration Registers */
#define MTU_MC19_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062300u)	/* Conf19guration Registers */
#define MTU_MC1_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061100u)	/* Conf1guration Registers */
#define MTU_MC20_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062400u)	/* Conf20guration Registers */
#define MTU_MC21_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062500u)	/* Conf21guration Registers */
#define MTU_MC22_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062600u)	/* Conf22guration Registers */
#define MTU_MC23_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062700u)	/* Conf23guration Registers */
#define MTU_MC24_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062800u)	/* Conf24guration Registers */
#define MTU_MC25_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062900u)	/* Conf25guration Registers */
#define MTU_MC26_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062a00u)	/* Conf26guration Registers */
#define MTU_MC27_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062b00u)	/* Conf27guration Registers */
#define MTU_MC28_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062c00u)	/* Conf28guration Registers */
#define MTU_MC29_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062d00u)	/* Conf29guration Registers */
#define MTU_MC2_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061200u)	/* Conf2guration Registers */
#define MTU_MC30_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062e00u)	/* Conf30guration Registers */
#define MTU_MC31_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0062f00u)	/* Conf31guration Registers */
#define MTU_MC32_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063000u)	/* Conf32guration Registers */
#define MTU_MC33_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063100u)	/* Conf33guration Registers */
#define MTU_MC34_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063200u)	/* Conf34guration Registers */
#define MTU_MC35_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063300u)	/* Conf35guration Registers */
#define MTU_MC36_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063400u)	/* Conf36guration Registers */
#define MTU_MC37_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063500u)	/* Conf37guration Registers */
#define MTU_MC38_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063600u)	/* Conf38guration Registers */
#define MTU_MC39_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063700u)	/* Conf39guration Registers */
#define MTU_MC3_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061300u)	/* Conf3guration Registers */
#define MTU_MC40_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063800u)	/* Conf40guration Registers */
#define MTU_MC41_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063900u)	/* Conf41guration Registers */
#define MTU_MC42_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063a00u)	/* Conf42guration Registers */
#define MTU_MC43_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063b00u)	/* Conf43guration Registers */
#define MTU_MC44_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063c00u)	/* Conf44guration Registers */
#define MTU_MC45_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063d00u)	/* Conf45guration Registers */
#define MTU_MC46_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063e00u)	/* Conf46guration Registers */
#define MTU_MC47_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0063f00u)	/* Conf47guration Registers */
#define MTU_MC48_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064000u)	/* Conf48guration Registers */
#define MTU_MC49_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064100u)	/* Conf49guration Registers */
#define MTU_MC4_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061400u)	/* Conf4guration Registers */
#define MTU_MC50_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064200u)	/* Conf50guration Registers */
#define MTU_MC51_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064300u)	/* Conf51guration Registers */
#define MTU_MC52_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064400u)	/* Conf52guration Registers */
#define MTU_MC53_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064500u)	/* Conf53guration Registers */
#define MTU_MC54_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064600u)	/* Conf54guration Registers */
#define MTU_MC55_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064700u)	/* Conf55guration Registers */
#define MTU_MC56_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064800u)	/* Conf56guration Registers */
#define MTU_MC57_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064900u)	/* Conf57guration Registers */
#define MTU_MC58_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064a00u)	/* Conf58guration Registers */
#define MTU_MC59_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064b00u)	/* Conf59guration Registers */
#define MTU_MC5_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061500u)	/* Conf5guration Registers */
#define MTU_MC60_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064c00u)	/* Conf60guration Registers */
#define MTU_MC61_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064d00u)	/* Conf61guration Registers */
#define MTU_MC62_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064e00u)	/* Conf62guration Registers */
#define MTU_MC63_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0064f00u)	/* Conf63guration Registers */
#define MTU_MC64_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065000u)	/* Conf64guration Registers */
#define MTU_MC65_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065100u)	/* Conf65guration Registers */
#define MTU_MC66_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065200u)	/* Conf66guration Registers */
#define MTU_MC67_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065300u)	/* Conf67guration Registers */
#define MTU_MC68_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065400u)	/* Conf68guration Registers */
#define MTU_MC69_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065500u)	/* Conf69guration Registers */
#define MTU_MC6_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061600u)	/* Conf6guration Registers */
#define MTU_MC70_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065600u)	/* Conf70guration Registers */
#define MTU_MC71_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065700u)	/* Conf71guration Registers */
#define MTU_MC72_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065800u)	/* Conf72guration Registers */
#define MTU_MC73_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065900u)	/* Conf73guration Registers */
#define MTU_MC74_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065a00u)	/* Conf74guration Registers */
#define MTU_MC75_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065b00u)	/* Conf75guration Registers */
#define MTU_MC76_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065c00u)	/* Conf76guration Registers */
#define MTU_MC77_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065d00u)	/* Conf77guration Registers */
#define MTU_MC78_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065e00u)	/* Conf78guration Registers */
#define MTU_MC79_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0065f00u)	/* Conf79guration Registers */
#define MTU_MC7_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061700u)	/* Conf7guration Registers */
#define MTU_MC80_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066000u)	/* Conf80guration Registers */
#define MTU_MC81_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066100u)	/* Conf81guration Registers */
#define MTU_MC82_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066200u)	/* Conf82guration Registers */
#define MTU_MC83_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066300u)	/* Conf83guration Registers */
#define MTU_MC84_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066400u)	/* Conf84guration Registers */
#define MTU_MC85_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066500u)	/* Conf85guration Registers */
#define MTU_MC86_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066600u)	/* Conf86guration Registers */
#define MTU_MC87_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066700u)	/* Conf87guration Registers */
#define MTU_MC88_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066800u)	/* Conf88guration Registers */
#define MTU_MC89_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066900u)	/* Conf89guration Registers */
#define MTU_MC8_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061800u)	/* Conf8guration Registers */
#define MTU_MC90_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066a00u)	/* Conf90guration Registers */
#define MTU_MC91_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066b00u)	/* Conf91guration Registers */
#define MTU_MC92_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066c00u)	/* Conf92guration Registers */
#define MTU_MC93_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066d00u)	/* Conf93guration Registers */
#define MTU_MC94_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066e00u)	/* Conf94guration Registers */
#define MTU_MC95_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0066f00u)	/* Conf95guration Registers */
#define MTU_MC9_CONFIG0	(*( MTU_MC0_CONFIG0_type *) 0xf0061900u)	/* Conf9guration Registers */

typedef volatile union
{
	struct
	{ 
		unsigned int ACCSPAT        : 8;	/* Access pattern */
		unsigned int SELFASTB       : 4;	/* Select Fast Bit */
		unsigned int AG_MOD         : 4;	/* Address Generator Mode */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_CONFIG1_type;
#define MTU_MC0_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061002u)	/* Conf0guration Register 1 */
#define MTU_MC10_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061a02u)	/* Conf10guration Register 1 */
#define MTU_MC11_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061b02u)	/* Conf11guration Register 1 */
#define MTU_MC12_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061c02u)	/* Conf12guration Register 1 */
#define MTU_MC13_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061d02u)	/* Conf13guration Register 1 */
#define MTU_MC14_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061e02u)	/* Conf14guration Register 1 */
#define MTU_MC15_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061f02u)	/* Conf15guration Register 1 */
#define MTU_MC16_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062002u)	/* Conf16guration Register 1 */
#define MTU_MC17_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062102u)	/* Conf17guration Register 1 */
#define MTU_MC18_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062202u)	/* Conf18guration Register 1 */
#define MTU_MC19_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062302u)	/* Conf19guration Register 1 */
#define MTU_MC1_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061102u)	/* Conf1guration Register 1 */
#define MTU_MC20_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062402u)	/* Conf20guration Register 1 */
#define MTU_MC21_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062502u)	/* Conf21guration Register 1 */
#define MTU_MC22_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062602u)	/* Conf22guration Register 1 */
#define MTU_MC23_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062702u)	/* Conf23guration Register 1 */
#define MTU_MC24_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062802u)	/* Conf24guration Register 1 */
#define MTU_MC25_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062902u)	/* Conf25guration Register 1 */
#define MTU_MC26_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062a02u)	/* Conf26guration Register 1 */
#define MTU_MC27_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062b02u)	/* Conf27guration Register 1 */
#define MTU_MC28_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062c02u)	/* Conf28guration Register 1 */
#define MTU_MC29_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062d02u)	/* Conf29guration Register 1 */
#define MTU_MC2_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061202u)	/* Conf2guration Register 1 */
#define MTU_MC30_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062e02u)	/* Conf30guration Register 1 */
#define MTU_MC31_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0062f02u)	/* Conf31guration Register 1 */
#define MTU_MC32_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063002u)	/* Conf32guration Register 1 */
#define MTU_MC33_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063102u)	/* Conf33guration Register 1 */
#define MTU_MC34_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063202u)	/* Conf34guration Register 1 */
#define MTU_MC35_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063302u)	/* Conf35guration Register 1 */
#define MTU_MC36_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063402u)	/* Conf36guration Register 1 */
#define MTU_MC37_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063502u)	/* Conf37guration Register 1 */
#define MTU_MC38_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063602u)	/* Conf38guration Register 1 */
#define MTU_MC39_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063702u)	/* Conf39guration Register 1 */
#define MTU_MC3_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061302u)	/* Conf3guration Register 1 */
#define MTU_MC40_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063802u)	/* Conf40guration Register 1 */
#define MTU_MC41_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063902u)	/* Conf41guration Register 1 */
#define MTU_MC42_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063a02u)	/* Conf42guration Register 1 */
#define MTU_MC43_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063b02u)	/* Conf43guration Register 1 */
#define MTU_MC44_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063c02u)	/* Conf44guration Register 1 */
#define MTU_MC45_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063d02u)	/* Conf45guration Register 1 */
#define MTU_MC46_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063e02u)	/* Conf46guration Register 1 */
#define MTU_MC47_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0063f02u)	/* Conf47guration Register 1 */
#define MTU_MC48_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064002u)	/* Conf48guration Register 1 */
#define MTU_MC49_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064102u)	/* Conf49guration Register 1 */
#define MTU_MC4_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061402u)	/* Conf4guration Register 1 */
#define MTU_MC50_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064202u)	/* Conf50guration Register 1 */
#define MTU_MC51_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064302u)	/* Conf51guration Register 1 */
#define MTU_MC52_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064402u)	/* Conf52guration Register 1 */
#define MTU_MC53_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064502u)	/* Conf53guration Register 1 */
#define MTU_MC54_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064602u)	/* Conf54guration Register 1 */
#define MTU_MC55_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064702u)	/* Conf55guration Register 1 */
#define MTU_MC56_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064802u)	/* Conf56guration Register 1 */
#define MTU_MC57_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064902u)	/* Conf57guration Register 1 */
#define MTU_MC58_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064a02u)	/* Conf58guration Register 1 */
#define MTU_MC59_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064b02u)	/* Conf59guration Register 1 */
#define MTU_MC5_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061502u)	/* Conf5guration Register 1 */
#define MTU_MC60_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064c02u)	/* Conf60guration Register 1 */
#define MTU_MC61_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064d02u)	/* Conf61guration Register 1 */
#define MTU_MC62_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064e02u)	/* Conf62guration Register 1 */
#define MTU_MC63_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0064f02u)	/* Conf63guration Register 1 */
#define MTU_MC64_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065002u)	/* Conf64guration Register 1 */
#define MTU_MC65_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065102u)	/* Conf65guration Register 1 */
#define MTU_MC66_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065202u)	/* Conf66guration Register 1 */
#define MTU_MC67_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065302u)	/* Conf67guration Register 1 */
#define MTU_MC68_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065402u)	/* Conf68guration Register 1 */
#define MTU_MC69_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065502u)	/* Conf69guration Register 1 */
#define MTU_MC6_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061602u)	/* Conf6guration Register 1 */
#define MTU_MC70_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065602u)	/* Conf70guration Register 1 */
#define MTU_MC71_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065702u)	/* Conf71guration Register 1 */
#define MTU_MC72_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065802u)	/* Conf72guration Register 1 */
#define MTU_MC73_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065902u)	/* Conf73guration Register 1 */
#define MTU_MC74_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065a02u)	/* Conf74guration Register 1 */
#define MTU_MC75_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065b02u)	/* Conf75guration Register 1 */
#define MTU_MC76_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065c02u)	/* Conf76guration Register 1 */
#define MTU_MC77_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065d02u)	/* Conf77guration Register 1 */
#define MTU_MC78_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065e02u)	/* Conf78guration Register 1 */
#define MTU_MC79_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0065f02u)	/* Conf79guration Register 1 */
#define MTU_MC7_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061702u)	/* Conf7guration Register 1 */
#define MTU_MC80_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066002u)	/* Conf80guration Register 1 */
#define MTU_MC81_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066102u)	/* Conf81guration Register 1 */
#define MTU_MC82_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066202u)	/* Conf82guration Register 1 */
#define MTU_MC83_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066302u)	/* Conf83guration Register 1 */
#define MTU_MC84_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066402u)	/* Conf84guration Register 1 */
#define MTU_MC85_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066502u)	/* Conf85guration Register 1 */
#define MTU_MC86_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066602u)	/* Conf86guration Register 1 */
#define MTU_MC87_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066702u)	/* Conf87guration Register 1 */
#define MTU_MC88_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066802u)	/* Conf88guration Register 1 */
#define MTU_MC89_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066902u)	/* Conf89guration Register 1 */
#define MTU_MC8_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061802u)	/* Conf8guration Register 1 */
#define MTU_MC90_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066a02u)	/* Conf90guration Register 1 */
#define MTU_MC91_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066b02u)	/* Conf91guration Register 1 */
#define MTU_MC92_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066c02u)	/* Conf92guration Register 1 */
#define MTU_MC93_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066d02u)	/* Conf93guration Register 1 */
#define MTU_MC94_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066e02u)	/* Conf94guration Register 1 */
#define MTU_MC95_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0066f02u)	/* Conf95guration Register 1 */
#define MTU_MC9_CONFIG1	(*( MTU_MC0_CONFIG1_type *) 0xf0061902u)	/* Conf9guration Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int SERR           : 1;	/* Error Detected */
		unsigned int CERR           : 1;	/* CE alarm occured */
		unsigned int UCERR          : 1;	/* Uncorrectable Error Alarm Occured */
		unsigned int MERR           : 1;	/* Miscellaneous Error Alarm Occured */
		unsigned int TRC            : 1;	/* Tracking Clear */
		/* const */ unsigned int VAL            : 5;	/* Valid Bits */
		unsigned int PERMERR        : 5;	/* Permanent Error in ETRR Entry */
		/* const */ unsigned int EOV            : 1;	/* Error Overflow */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_ECCD_type;
#define MTU_MC0_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061010u)	/* Memory ECC Detect0on Register */
#define MTU_MC10_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061a10u)	/* Memory ECC Detect10on Register */
#define MTU_MC11_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061b10u)	/* Memory ECC Detect11on Register */
#define MTU_MC12_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061c10u)	/* Memory ECC Detect12on Register */
#define MTU_MC13_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061d10u)	/* Memory ECC Detect13on Register */
#define MTU_MC14_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061e10u)	/* Memory ECC Detect14on Register */
#define MTU_MC15_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061f10u)	/* Memory ECC Detect15on Register */
#define MTU_MC16_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062010u)	/* Memory ECC Detect16on Register */
#define MTU_MC17_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062110u)	/* Memory ECC Detect17on Register */
#define MTU_MC18_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062210u)	/* Memory ECC Detect18on Register */
#define MTU_MC19_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062310u)	/* Memory ECC Detect19on Register */
#define MTU_MC1_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061110u)	/* Memory ECC Detect1on Register */
#define MTU_MC20_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062410u)	/* Memory ECC Detect20on Register */
#define MTU_MC21_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062510u)	/* Memory ECC Detect21on Register */
#define MTU_MC22_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062610u)	/* Memory ECC Detect22on Register */
#define MTU_MC23_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062710u)	/* Memory ECC Detect23on Register */
#define MTU_MC24_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062810u)	/* Memory ECC Detect24on Register */
#define MTU_MC25_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062910u)	/* Memory ECC Detect25on Register */
#define MTU_MC26_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062a10u)	/* Memory ECC Detect26on Register */
#define MTU_MC27_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062b10u)	/* Memory ECC Detect27on Register */
#define MTU_MC28_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062c10u)	/* Memory ECC Detect28on Register */
#define MTU_MC29_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062d10u)	/* Memory ECC Detect29on Register */
#define MTU_MC2_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061210u)	/* Memory ECC Detect2on Register */
#define MTU_MC30_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062e10u)	/* Memory ECC Detect30on Register */
#define MTU_MC31_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0062f10u)	/* Memory ECC Detect31on Register */
#define MTU_MC32_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063010u)	/* Memory ECC Detect32on Register */
#define MTU_MC33_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063110u)	/* Memory ECC Detect33on Register */
#define MTU_MC34_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063210u)	/* Memory ECC Detect34on Register */
#define MTU_MC35_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063310u)	/* Memory ECC Detect35on Register */
#define MTU_MC36_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063410u)	/* Memory ECC Detect36on Register */
#define MTU_MC37_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063510u)	/* Memory ECC Detect37on Register */
#define MTU_MC38_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063610u)	/* Memory ECC Detect38on Register */
#define MTU_MC39_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063710u)	/* Memory ECC Detect39on Register */
#define MTU_MC3_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061310u)	/* Memory ECC Detect3on Register */
#define MTU_MC40_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063810u)	/* Memory ECC Detect40on Register */
#define MTU_MC41_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063910u)	/* Memory ECC Detect41on Register */
#define MTU_MC42_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063a10u)	/* Memory ECC Detect42on Register */
#define MTU_MC43_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063b10u)	/* Memory ECC Detect43on Register */
#define MTU_MC44_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063c10u)	/* Memory ECC Detect44on Register */
#define MTU_MC45_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063d10u)	/* Memory ECC Detect45on Register */
#define MTU_MC46_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063e10u)	/* Memory ECC Detect46on Register */
#define MTU_MC47_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0063f10u)	/* Memory ECC Detect47on Register */
#define MTU_MC48_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064010u)	/* Memory ECC Detect48on Register */
#define MTU_MC49_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064110u)	/* Memory ECC Detect49on Register */
#define MTU_MC4_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061410u)	/* Memory ECC Detect4on Register */
#define MTU_MC50_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064210u)	/* Memory ECC Detect50on Register */
#define MTU_MC51_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064310u)	/* Memory ECC Detect51on Register */
#define MTU_MC52_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064410u)	/* Memory ECC Detect52on Register */
#define MTU_MC53_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064510u)	/* Memory ECC Detect53on Register */
#define MTU_MC54_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064610u)	/* Memory ECC Detect54on Register */
#define MTU_MC55_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064710u)	/* Memory ECC Detect55on Register */
#define MTU_MC56_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064810u)	/* Memory ECC Detect56on Register */
#define MTU_MC57_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064910u)	/* Memory ECC Detect57on Register */
#define MTU_MC58_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064a10u)	/* Memory ECC Detect58on Register */
#define MTU_MC59_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064b10u)	/* Memory ECC Detect59on Register */
#define MTU_MC5_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061510u)	/* Memory ECC Detect5on Register */
#define MTU_MC60_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064c10u)	/* Memory ECC Detect60on Register */
#define MTU_MC61_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064d10u)	/* Memory ECC Detect61on Register */
#define MTU_MC62_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064e10u)	/* Memory ECC Detect62on Register */
#define MTU_MC63_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0064f10u)	/* Memory ECC Detect63on Register */
#define MTU_MC64_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065010u)	/* Memory ECC Detect64on Register */
#define MTU_MC65_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065110u)	/* Memory ECC Detect65on Register */
#define MTU_MC66_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065210u)	/* Memory ECC Detect66on Register */
#define MTU_MC67_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065310u)	/* Memory ECC Detect67on Register */
#define MTU_MC68_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065410u)	/* Memory ECC Detect68on Register */
#define MTU_MC69_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065510u)	/* Memory ECC Detect69on Register */
#define MTU_MC6_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061610u)	/* Memory ECC Detect6on Register */
#define MTU_MC70_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065610u)	/* Memory ECC Detect70on Register */
#define MTU_MC71_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065710u)	/* Memory ECC Detect71on Register */
#define MTU_MC72_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065810u)	/* Memory ECC Detect72on Register */
#define MTU_MC73_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065910u)	/* Memory ECC Detect73on Register */
#define MTU_MC74_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065a10u)	/* Memory ECC Detect74on Register */
#define MTU_MC75_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065b10u)	/* Memory ECC Detect75on Register */
#define MTU_MC76_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065c10u)	/* Memory ECC Detect76on Register */
#define MTU_MC77_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065d10u)	/* Memory ECC Detect77on Register */
#define MTU_MC78_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065e10u)	/* Memory ECC Detect78on Register */
#define MTU_MC79_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0065f10u)	/* Memory ECC Detect79on Register */
#define MTU_MC7_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061710u)	/* Memory ECC Detect7on Register */
#define MTU_MC80_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066010u)	/* Memory ECC Detect80on Register */
#define MTU_MC81_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066110u)	/* Memory ECC Detect81on Register */
#define MTU_MC82_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066210u)	/* Memory ECC Detect82on Register */
#define MTU_MC83_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066310u)	/* Memory ECC Detect83on Register */
#define MTU_MC84_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066410u)	/* Memory ECC Detect84on Register */
#define MTU_MC85_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066510u)	/* Memory ECC Detect85on Register */
#define MTU_MC86_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066610u)	/* Memory ECC Detect86on Register */
#define MTU_MC87_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066710u)	/* Memory ECC Detect87on Register */
#define MTU_MC88_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066810u)	/* Memory ECC Detect88on Register */
#define MTU_MC89_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066910u)	/* Memory ECC Detect89on Register */
#define MTU_MC8_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061810u)	/* Memory ECC Detect8on Register */
#define MTU_MC90_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066a10u)	/* Memory ECC Detect90on Register */
#define MTU_MC91_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066b10u)	/* Memory ECC Detect91on Register */
#define MTU_MC92_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066c10u)	/* Memory ECC Detect92on Register */
#define MTU_MC93_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066d10u)	/* Memory ECC Detect93on Register */
#define MTU_MC94_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066e10u)	/* Memory ECC Detect94on Register */
#define MTU_MC95_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0066f10u)	/* Memory ECC Detect95on Register */
#define MTU_MC9_ECCD	(*( MTU_MC0_ECCD_type *) 0xf0061910u)	/* Memory ECC Detect9on Register */

typedef volatile union
{
	struct
	{ 
		unsigned int CENE           : 1;	/* ECC Correction Event Alarm Notification Enable */
		unsigned int UCENE          : 1;	/* Uncorrectable Error Affecting SRAM / SSH Operation: Alarm Notification Enable - UENE */
		unsigned int MENE           : 1;	/* Miscellaneous Alarm Notification Enable: MENE */
		unsigned int ECE            : 1;	/* Error Correction Enable */
		unsigned int TRE            : 1;	/* Tracking Enable */
		unsigned int BFLE           : 1;	/* Bit Flip Enable */
		unsigned int SFLE           : 1;	/* Signature Bit Flip Enables */
		/* const */ unsigned int R7             : 1;	/* Reserved - Res */
		unsigned int ECCMAP         : 2;	/* ECC Bit Mapping Mode */
		unsigned int TC_TWR_SEL     : 1;	/* TriCore Tower Select */
		unsigned int SFFD           : 1;	/* Safety Flip-Flop Diagnostics */
		/* const */ unsigned int R12            : 4;	/* Reserved - Res */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_ECCS_type;
#define MTU_MC0_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006100eu)	/* ECC Safety Reg0ster */
#define MTU_MC10_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0061a0eu)	/* ECC Safety Reg10ster */
#define MTU_MC11_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0061b0eu)	/* ECC Safety Reg11ster */
#define MTU_MC12_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0061c0eu)	/* ECC Safety Reg12ster */
#define MTU_MC13_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0061d0eu)	/* ECC Safety Reg13ster */
#define MTU_MC14_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0061e0eu)	/* ECC Safety Reg14ster */
#define MTU_MC15_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0061f0eu)	/* ECC Safety Reg15ster */
#define MTU_MC16_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006200eu)	/* ECC Safety Reg16ster */
#define MTU_MC17_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006210eu)	/* ECC Safety Reg17ster */
#define MTU_MC18_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006220eu)	/* ECC Safety Reg18ster */
#define MTU_MC19_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006230eu)	/* ECC Safety Reg19ster */
#define MTU_MC1_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006110eu)	/* ECC Safety Reg1ster */
#define MTU_MC20_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006240eu)	/* ECC Safety Reg20ster */
#define MTU_MC21_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006250eu)	/* ECC Safety Reg21ster */
#define MTU_MC22_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006260eu)	/* ECC Safety Reg22ster */
#define MTU_MC23_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006270eu)	/* ECC Safety Reg23ster */
#define MTU_MC24_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006280eu)	/* ECC Safety Reg24ster */
#define MTU_MC25_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006290eu)	/* ECC Safety Reg25ster */
#define MTU_MC26_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0062a0eu)	/* ECC Safety Reg26ster */
#define MTU_MC27_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0062b0eu)	/* ECC Safety Reg27ster */
#define MTU_MC28_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0062c0eu)	/* ECC Safety Reg28ster */
#define MTU_MC29_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0062d0eu)	/* ECC Safety Reg29ster */
#define MTU_MC2_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006120eu)	/* ECC Safety Reg2ster */
#define MTU_MC30_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0062e0eu)	/* ECC Safety Reg30ster */
#define MTU_MC31_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0062f0eu)	/* ECC Safety Reg31ster */
#define MTU_MC32_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006300eu)	/* ECC Safety Reg32ster */
#define MTU_MC33_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006310eu)	/* ECC Safety Reg33ster */
#define MTU_MC34_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006320eu)	/* ECC Safety Reg34ster */
#define MTU_MC35_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006330eu)	/* ECC Safety Reg35ster */
#define MTU_MC36_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006340eu)	/* ECC Safety Reg36ster */
#define MTU_MC37_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006350eu)	/* ECC Safety Reg37ster */
#define MTU_MC38_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006360eu)	/* ECC Safety Reg38ster */
#define MTU_MC39_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006370eu)	/* ECC Safety Reg39ster */
#define MTU_MC3_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006130eu)	/* ECC Safety Reg3ster */
#define MTU_MC40_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006380eu)	/* ECC Safety Reg40ster */
#define MTU_MC41_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006390eu)	/* ECC Safety Reg41ster */
#define MTU_MC42_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0063a0eu)	/* ECC Safety Reg42ster */
#define MTU_MC43_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0063b0eu)	/* ECC Safety Reg43ster */
#define MTU_MC44_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0063c0eu)	/* ECC Safety Reg44ster */
#define MTU_MC45_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0063d0eu)	/* ECC Safety Reg45ster */
#define MTU_MC46_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0063e0eu)	/* ECC Safety Reg46ster */
#define MTU_MC47_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0063f0eu)	/* ECC Safety Reg47ster */
#define MTU_MC48_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006400eu)	/* ECC Safety Reg48ster */
#define MTU_MC49_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006410eu)	/* ECC Safety Reg49ster */
#define MTU_MC4_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006140eu)	/* ECC Safety Reg4ster */
#define MTU_MC50_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006420eu)	/* ECC Safety Reg50ster */
#define MTU_MC51_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006430eu)	/* ECC Safety Reg51ster */
#define MTU_MC52_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006440eu)	/* ECC Safety Reg52ster */
#define MTU_MC53_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006450eu)	/* ECC Safety Reg53ster */
#define MTU_MC54_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006460eu)	/* ECC Safety Reg54ster */
#define MTU_MC55_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006470eu)	/* ECC Safety Reg55ster */
#define MTU_MC56_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006480eu)	/* ECC Safety Reg56ster */
#define MTU_MC57_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006490eu)	/* ECC Safety Reg57ster */
#define MTU_MC58_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0064a0eu)	/* ECC Safety Reg58ster */
#define MTU_MC59_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0064b0eu)	/* ECC Safety Reg59ster */
#define MTU_MC5_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006150eu)	/* ECC Safety Reg5ster */
#define MTU_MC60_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0064c0eu)	/* ECC Safety Reg60ster */
#define MTU_MC61_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0064d0eu)	/* ECC Safety Reg61ster */
#define MTU_MC62_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0064e0eu)	/* ECC Safety Reg62ster */
#define MTU_MC63_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0064f0eu)	/* ECC Safety Reg63ster */
#define MTU_MC64_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006500eu)	/* ECC Safety Reg64ster */
#define MTU_MC65_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006510eu)	/* ECC Safety Reg65ster */
#define MTU_MC66_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006520eu)	/* ECC Safety Reg66ster */
#define MTU_MC67_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006530eu)	/* ECC Safety Reg67ster */
#define MTU_MC68_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006540eu)	/* ECC Safety Reg68ster */
#define MTU_MC69_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006550eu)	/* ECC Safety Reg69ster */
#define MTU_MC6_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006160eu)	/* ECC Safety Reg6ster */
#define MTU_MC70_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006560eu)	/* ECC Safety Reg70ster */
#define MTU_MC71_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006570eu)	/* ECC Safety Reg71ster */
#define MTU_MC72_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006580eu)	/* ECC Safety Reg72ster */
#define MTU_MC73_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006590eu)	/* ECC Safety Reg73ster */
#define MTU_MC74_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0065a0eu)	/* ECC Safety Reg74ster */
#define MTU_MC75_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0065b0eu)	/* ECC Safety Reg75ster */
#define MTU_MC76_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0065c0eu)	/* ECC Safety Reg76ster */
#define MTU_MC77_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0065d0eu)	/* ECC Safety Reg77ster */
#define MTU_MC78_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0065e0eu)	/* ECC Safety Reg78ster */
#define MTU_MC79_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0065f0eu)	/* ECC Safety Reg79ster */
#define MTU_MC7_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006170eu)	/* ECC Safety Reg7ster */
#define MTU_MC80_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006600eu)	/* ECC Safety Reg80ster */
#define MTU_MC81_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006610eu)	/* ECC Safety Reg81ster */
#define MTU_MC82_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006620eu)	/* ECC Safety Reg82ster */
#define MTU_MC83_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006630eu)	/* ECC Safety Reg83ster */
#define MTU_MC84_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006640eu)	/* ECC Safety Reg84ster */
#define MTU_MC85_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006650eu)	/* ECC Safety Reg85ster */
#define MTU_MC86_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006660eu)	/* ECC Safety Reg86ster */
#define MTU_MC87_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006670eu)	/* ECC Safety Reg87ster */
#define MTU_MC88_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006680eu)	/* ECC Safety Reg88ster */
#define MTU_MC89_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006690eu)	/* ECC Safety Reg89ster */
#define MTU_MC8_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006180eu)	/* ECC Safety Reg8ster */
#define MTU_MC90_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0066a0eu)	/* ECC Safety Reg90ster */
#define MTU_MC91_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0066b0eu)	/* ECC Safety Reg91ster */
#define MTU_MC92_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0066c0eu)	/* ECC Safety Reg92ster */
#define MTU_MC93_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0066d0eu)	/* ECC Safety Reg93ster */
#define MTU_MC94_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0066e0eu)	/* ECC Safety Reg94ster */
#define MTU_MC95_ECCS	(*( MTU_MC0_ECCS_type *) 0xf0066f0eu)	/* ECC Safety Reg95ster */
#define MTU_MC9_ECCS	(*( MTU_MC0_ECCS_type *) 0xf006190eu)	/* ECC Safety Reg9ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int SBERR          : 1;	/* Single Bit Error Detected */
		/* const */ unsigned int DBERR          : 1;	/* Double Bit Error Detected */
		/* const */ unsigned int ADDRERR        : 1;	/* Address Fault Detected */
		/* const */ unsigned int R3             : 13;	/* Reserved - Res */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_ERRINFO0_type;
#define MTU_MC0_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00610f2u)	/* Error Informat0on Register 0 */
#define MTU_MC0_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00610f4u)	/* Error Informat0on Register 1 */
#define MTU_MC0_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00610f6u)	/* Error Informat0on Register 2 */
#define MTU_MC0_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00610f8u)	/* Error Informat0on Register 3 */
#define MTU_MC0_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00610fau)	/* Error Informat0on Register 4 */
#define MTU_MC10_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0061af2u)	/* Error Informat10on Register 0 */
#define MTU_MC10_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0061af4u)	/* Error Informat10on Register 1 */
#define MTU_MC10_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0061af6u)	/* Error Informat10on Register 2 */
#define MTU_MC10_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0061af8u)	/* Error Informat10on Register 3 */
#define MTU_MC10_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0061afau)	/* Error Informat10on Register 4 */
#define MTU_MC11_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0061bf2u)	/* Error Informat11on Register 0 */
#define MTU_MC11_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0061bf4u)	/* Error Informat11on Register 1 */
#define MTU_MC11_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0061bf6u)	/* Error Informat11on Register 2 */
#define MTU_MC11_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0061bf8u)	/* Error Informat11on Register 3 */
#define MTU_MC11_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0061bfau)	/* Error Informat11on Register 4 */
#define MTU_MC12_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0061cf2u)	/* Error Informat12on Register 0 */
#define MTU_MC12_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0061cf4u)	/* Error Informat12on Register 1 */
#define MTU_MC12_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0061cf6u)	/* Error Informat12on Register 2 */
#define MTU_MC12_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0061cf8u)	/* Error Informat12on Register 3 */
#define MTU_MC12_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0061cfau)	/* Error Informat12on Register 4 */
#define MTU_MC13_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0061df2u)	/* Error Informat13on Register 0 */
#define MTU_MC13_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0061df4u)	/* Error Informat13on Register 1 */
#define MTU_MC13_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0061df6u)	/* Error Informat13on Register 2 */
#define MTU_MC13_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0061df8u)	/* Error Informat13on Register 3 */
#define MTU_MC13_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0061dfau)	/* Error Informat13on Register 4 */
#define MTU_MC14_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ef2u)	/* Error Informat14on Register 0 */
#define MTU_MC14_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ef4u)	/* Error Informat14on Register 1 */
#define MTU_MC14_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ef6u)	/* Error Informat14on Register 2 */
#define MTU_MC14_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ef8u)	/* Error Informat14on Register 3 */
#define MTU_MC14_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0061efau)	/* Error Informat14on Register 4 */
#define MTU_MC15_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ff2u)	/* Error Informat15on Register 0 */
#define MTU_MC15_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ff4u)	/* Error Informat15on Register 1 */
#define MTU_MC15_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ff6u)	/* Error Informat15on Register 2 */
#define MTU_MC15_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ff8u)	/* Error Informat15on Register 3 */
#define MTU_MC15_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0061ffau)	/* Error Informat15on Register 4 */
#define MTU_MC16_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00620f2u)	/* Error Informat16on Register 0 */
#define MTU_MC16_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00620f4u)	/* Error Informat16on Register 1 */
#define MTU_MC16_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00620f6u)	/* Error Informat16on Register 2 */
#define MTU_MC16_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00620f8u)	/* Error Informat16on Register 3 */
#define MTU_MC16_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00620fau)	/* Error Informat16on Register 4 */
#define MTU_MC17_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00621f2u)	/* Error Informat17on Register 0 */
#define MTU_MC17_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00621f4u)	/* Error Informat17on Register 1 */
#define MTU_MC17_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00621f6u)	/* Error Informat17on Register 2 */
#define MTU_MC17_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00621f8u)	/* Error Informat17on Register 3 */
#define MTU_MC17_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00621fau)	/* Error Informat17on Register 4 */
#define MTU_MC18_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00622f2u)	/* Error Informat18on Register 0 */
#define MTU_MC18_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00622f4u)	/* Error Informat18on Register 1 */
#define MTU_MC18_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00622f6u)	/* Error Informat18on Register 2 */
#define MTU_MC18_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00622f8u)	/* Error Informat18on Register 3 */
#define MTU_MC18_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00622fau)	/* Error Informat18on Register 4 */
#define MTU_MC19_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00623f2u)	/* Error Informat19on Register 0 */
#define MTU_MC19_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00623f4u)	/* Error Informat19on Register 1 */
#define MTU_MC19_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00623f6u)	/* Error Informat19on Register 2 */
#define MTU_MC19_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00623f8u)	/* Error Informat19on Register 3 */
#define MTU_MC19_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00623fau)	/* Error Informat19on Register 4 */
#define MTU_MC1_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00611f2u)	/* Error Informat1on Register 0 */
#define MTU_MC1_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00611f4u)	/* Error Informat1on Register 1 */
#define MTU_MC1_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00611f6u)	/* Error Informat1on Register 2 */
#define MTU_MC1_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00611f8u)	/* Error Informat1on Register 3 */
#define MTU_MC1_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00611fau)	/* Error Informat1on Register 4 */
#define MTU_MC20_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00624f2u)	/* Error Informat20on Register 0 */
#define MTU_MC20_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00624f4u)	/* Error Informat20on Register 1 */
#define MTU_MC20_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00624f6u)	/* Error Informat20on Register 2 */
#define MTU_MC20_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00624f8u)	/* Error Informat20on Register 3 */
#define MTU_MC20_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00624fau)	/* Error Informat20on Register 4 */
#define MTU_MC21_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00625f2u)	/* Error Informat21on Register 0 */
#define MTU_MC21_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00625f4u)	/* Error Informat21on Register 1 */
#define MTU_MC21_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00625f6u)	/* Error Informat21on Register 2 */
#define MTU_MC21_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00625f8u)	/* Error Informat21on Register 3 */
#define MTU_MC21_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00625fau)	/* Error Informat21on Register 4 */
#define MTU_MC22_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00626f2u)	/* Error Informat22on Register 0 */
#define MTU_MC22_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00626f4u)	/* Error Informat22on Register 1 */
#define MTU_MC22_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00626f6u)	/* Error Informat22on Register 2 */
#define MTU_MC22_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00626f8u)	/* Error Informat22on Register 3 */
#define MTU_MC22_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00626fau)	/* Error Informat22on Register 4 */
#define MTU_MC23_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00627f2u)	/* Error Informat23on Register 0 */
#define MTU_MC23_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00627f4u)	/* Error Informat23on Register 1 */
#define MTU_MC23_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00627f6u)	/* Error Informat23on Register 2 */
#define MTU_MC23_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00627f8u)	/* Error Informat23on Register 3 */
#define MTU_MC23_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00627fau)	/* Error Informat23on Register 4 */
#define MTU_MC24_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00628f2u)	/* Error Informat24on Register 0 */
#define MTU_MC24_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00628f4u)	/* Error Informat24on Register 1 */
#define MTU_MC24_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00628f6u)	/* Error Informat24on Register 2 */
#define MTU_MC24_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00628f8u)	/* Error Informat24on Register 3 */
#define MTU_MC24_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00628fau)	/* Error Informat24on Register 4 */
#define MTU_MC25_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00629f2u)	/* Error Informat25on Register 0 */
#define MTU_MC25_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00629f4u)	/* Error Informat25on Register 1 */
#define MTU_MC25_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00629f6u)	/* Error Informat25on Register 2 */
#define MTU_MC25_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00629f8u)	/* Error Informat25on Register 3 */
#define MTU_MC25_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00629fau)	/* Error Informat25on Register 4 */
#define MTU_MC26_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0062af2u)	/* Error Informat26on Register 0 */
#define MTU_MC26_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0062af4u)	/* Error Informat26on Register 1 */
#define MTU_MC26_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0062af6u)	/* Error Informat26on Register 2 */
#define MTU_MC26_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0062af8u)	/* Error Informat26on Register 3 */
#define MTU_MC26_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0062afau)	/* Error Informat26on Register 4 */
#define MTU_MC27_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0062bf2u)	/* Error Informat27on Register 0 */
#define MTU_MC27_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0062bf4u)	/* Error Informat27on Register 1 */
#define MTU_MC27_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0062bf6u)	/* Error Informat27on Register 2 */
#define MTU_MC27_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0062bf8u)	/* Error Informat27on Register 3 */
#define MTU_MC27_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0062bfau)	/* Error Informat27on Register 4 */
#define MTU_MC28_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0062cf2u)	/* Error Informat28on Register 0 */
#define MTU_MC28_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0062cf4u)	/* Error Informat28on Register 1 */
#define MTU_MC28_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0062cf6u)	/* Error Informat28on Register 2 */
#define MTU_MC28_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0062cf8u)	/* Error Informat28on Register 3 */
#define MTU_MC28_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0062cfau)	/* Error Informat28on Register 4 */
#define MTU_MC29_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0062df2u)	/* Error Informat29on Register 0 */
#define MTU_MC29_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0062df4u)	/* Error Informat29on Register 1 */
#define MTU_MC29_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0062df6u)	/* Error Informat29on Register 2 */
#define MTU_MC29_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0062df8u)	/* Error Informat29on Register 3 */
#define MTU_MC29_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0062dfau)	/* Error Informat29on Register 4 */
#define MTU_MC2_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00612f2u)	/* Error Informat2on Register 0 */
#define MTU_MC2_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00612f4u)	/* Error Informat2on Register 1 */
#define MTU_MC2_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00612f6u)	/* Error Informat2on Register 2 */
#define MTU_MC2_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00612f8u)	/* Error Informat2on Register 3 */
#define MTU_MC2_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00612fau)	/* Error Informat2on Register 4 */
#define MTU_MC30_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ef2u)	/* Error Informat30on Register 0 */
#define MTU_MC30_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ef4u)	/* Error Informat30on Register 1 */
#define MTU_MC30_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ef6u)	/* Error Informat30on Register 2 */
#define MTU_MC30_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ef8u)	/* Error Informat30on Register 3 */
#define MTU_MC30_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0062efau)	/* Error Informat30on Register 4 */
#define MTU_MC31_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ff2u)	/* Error Informat31on Register 0 */
#define MTU_MC31_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ff4u)	/* Error Informat31on Register 1 */
#define MTU_MC31_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ff6u)	/* Error Informat31on Register 2 */
#define MTU_MC31_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ff8u)	/* Error Informat31on Register 3 */
#define MTU_MC31_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0062ffau)	/* Error Informat31on Register 4 */
#define MTU_MC32_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00630f2u)	/* Error Informat32on Register 0 */
#define MTU_MC32_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00630f4u)	/* Error Informat32on Register 1 */
#define MTU_MC32_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00630f6u)	/* Error Informat32on Register 2 */
#define MTU_MC32_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00630f8u)	/* Error Informat32on Register 3 */
#define MTU_MC32_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00630fau)	/* Error Informat32on Register 4 */
#define MTU_MC33_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00631f2u)	/* Error Informat33on Register 0 */
#define MTU_MC33_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00631f4u)	/* Error Informat33on Register 1 */
#define MTU_MC33_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00631f6u)	/* Error Informat33on Register 2 */
#define MTU_MC33_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00631f8u)	/* Error Informat33on Register 3 */
#define MTU_MC33_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00631fau)	/* Error Informat33on Register 4 */
#define MTU_MC34_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00632f2u)	/* Error Informat34on Register 0 */
#define MTU_MC34_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00632f4u)	/* Error Informat34on Register 1 */
#define MTU_MC34_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00632f6u)	/* Error Informat34on Register 2 */
#define MTU_MC34_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00632f8u)	/* Error Informat34on Register 3 */
#define MTU_MC34_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00632fau)	/* Error Informat34on Register 4 */
#define MTU_MC35_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00633f2u)	/* Error Informat35on Register 0 */
#define MTU_MC35_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00633f4u)	/* Error Informat35on Register 1 */
#define MTU_MC35_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00633f6u)	/* Error Informat35on Register 2 */
#define MTU_MC35_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00633f8u)	/* Error Informat35on Register 3 */
#define MTU_MC35_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00633fau)	/* Error Informat35on Register 4 */
#define MTU_MC36_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00634f2u)	/* Error Informat36on Register 0 */
#define MTU_MC36_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00634f4u)	/* Error Informat36on Register 1 */
#define MTU_MC36_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00634f6u)	/* Error Informat36on Register 2 */
#define MTU_MC36_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00634f8u)	/* Error Informat36on Register 3 */
#define MTU_MC36_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00634fau)	/* Error Informat36on Register 4 */
#define MTU_MC37_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00635f2u)	/* Error Informat37on Register 0 */
#define MTU_MC37_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00635f4u)	/* Error Informat37on Register 1 */
#define MTU_MC37_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00635f6u)	/* Error Informat37on Register 2 */
#define MTU_MC37_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00635f8u)	/* Error Informat37on Register 3 */
#define MTU_MC37_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00635fau)	/* Error Informat37on Register 4 */
#define MTU_MC38_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00636f2u)	/* Error Informat38on Register 0 */
#define MTU_MC38_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00636f4u)	/* Error Informat38on Register 1 */
#define MTU_MC38_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00636f6u)	/* Error Informat38on Register 2 */
#define MTU_MC38_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00636f8u)	/* Error Informat38on Register 3 */
#define MTU_MC38_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00636fau)	/* Error Informat38on Register 4 */
#define MTU_MC39_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00637f2u)	/* Error Informat39on Register 0 */
#define MTU_MC39_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00637f4u)	/* Error Informat39on Register 1 */
#define MTU_MC39_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00637f6u)	/* Error Informat39on Register 2 */
#define MTU_MC39_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00637f8u)	/* Error Informat39on Register 3 */
#define MTU_MC39_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00637fau)	/* Error Informat39on Register 4 */
#define MTU_MC3_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00613f2u)	/* Error Informat3on Register 0 */
#define MTU_MC3_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00613f4u)	/* Error Informat3on Register 1 */
#define MTU_MC3_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00613f6u)	/* Error Informat3on Register 2 */
#define MTU_MC3_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00613f8u)	/* Error Informat3on Register 3 */
#define MTU_MC3_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00613fau)	/* Error Informat3on Register 4 */
#define MTU_MC40_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00638f2u)	/* Error Informat40on Register 0 */
#define MTU_MC40_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00638f4u)	/* Error Informat40on Register 1 */
#define MTU_MC40_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00638f6u)	/* Error Informat40on Register 2 */
#define MTU_MC40_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00638f8u)	/* Error Informat40on Register 3 */
#define MTU_MC40_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00638fau)	/* Error Informat40on Register 4 */
#define MTU_MC41_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00639f2u)	/* Error Informat41on Register 0 */
#define MTU_MC41_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00639f4u)	/* Error Informat41on Register 1 */
#define MTU_MC41_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00639f6u)	/* Error Informat41on Register 2 */
#define MTU_MC41_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00639f8u)	/* Error Informat41on Register 3 */
#define MTU_MC41_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00639fau)	/* Error Informat41on Register 4 */
#define MTU_MC42_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0063af2u)	/* Error Informat42on Register 0 */
#define MTU_MC42_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0063af4u)	/* Error Informat42on Register 1 */
#define MTU_MC42_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0063af6u)	/* Error Informat42on Register 2 */
#define MTU_MC42_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0063af8u)	/* Error Informat42on Register 3 */
#define MTU_MC42_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0063afau)	/* Error Informat42on Register 4 */
#define MTU_MC43_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0063bf2u)	/* Error Informat43on Register 0 */
#define MTU_MC43_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0063bf4u)	/* Error Informat43on Register 1 */
#define MTU_MC43_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0063bf6u)	/* Error Informat43on Register 2 */
#define MTU_MC43_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0063bf8u)	/* Error Informat43on Register 3 */
#define MTU_MC43_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0063bfau)	/* Error Informat43on Register 4 */
#define MTU_MC44_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0063cf2u)	/* Error Informat44on Register 0 */
#define MTU_MC44_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0063cf4u)	/* Error Informat44on Register 1 */
#define MTU_MC44_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0063cf6u)	/* Error Informat44on Register 2 */
#define MTU_MC44_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0063cf8u)	/* Error Informat44on Register 3 */
#define MTU_MC44_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0063cfau)	/* Error Informat44on Register 4 */
#define MTU_MC45_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0063df2u)	/* Error Informat45on Register 0 */
#define MTU_MC45_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0063df4u)	/* Error Informat45on Register 1 */
#define MTU_MC45_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0063df6u)	/* Error Informat45on Register 2 */
#define MTU_MC45_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0063df8u)	/* Error Informat45on Register 3 */
#define MTU_MC45_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0063dfau)	/* Error Informat45on Register 4 */
#define MTU_MC46_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ef2u)	/* Error Informat46on Register 0 */
#define MTU_MC46_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ef4u)	/* Error Informat46on Register 1 */
#define MTU_MC46_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ef6u)	/* Error Informat46on Register 2 */
#define MTU_MC46_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ef8u)	/* Error Informat46on Register 3 */
#define MTU_MC46_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0063efau)	/* Error Informat46on Register 4 */
#define MTU_MC47_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ff2u)	/* Error Informat47on Register 0 */
#define MTU_MC47_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ff4u)	/* Error Informat47on Register 1 */
#define MTU_MC47_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ff6u)	/* Error Informat47on Register 2 */
#define MTU_MC47_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ff8u)	/* Error Informat47on Register 3 */
#define MTU_MC47_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0063ffau)	/* Error Informat47on Register 4 */
#define MTU_MC48_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00640f2u)	/* Error Informat48on Register 0 */
#define MTU_MC48_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00640f4u)	/* Error Informat48on Register 1 */
#define MTU_MC48_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00640f6u)	/* Error Informat48on Register 2 */
#define MTU_MC48_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00640f8u)	/* Error Informat48on Register 3 */
#define MTU_MC48_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00640fau)	/* Error Informat48on Register 4 */
#define MTU_MC49_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00641f2u)	/* Error Informat49on Register 0 */
#define MTU_MC49_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00641f4u)	/* Error Informat49on Register 1 */
#define MTU_MC49_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00641f6u)	/* Error Informat49on Register 2 */
#define MTU_MC49_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00641f8u)	/* Error Informat49on Register 3 */
#define MTU_MC49_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00641fau)	/* Error Informat49on Register 4 */
#define MTU_MC4_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00614f2u)	/* Error Informat4on Register 0 */
#define MTU_MC4_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00614f4u)	/* Error Informat4on Register 1 */
#define MTU_MC4_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00614f6u)	/* Error Informat4on Register 2 */
#define MTU_MC4_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00614f8u)	/* Error Informat4on Register 3 */
#define MTU_MC4_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00614fau)	/* Error Informat4on Register 4 */
#define MTU_MC50_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00642f2u)	/* Error Informat50on Register 0 */
#define MTU_MC50_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00642f4u)	/* Error Informat50on Register 1 */
#define MTU_MC50_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00642f6u)	/* Error Informat50on Register 2 */
#define MTU_MC50_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00642f8u)	/* Error Informat50on Register 3 */
#define MTU_MC50_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00642fau)	/* Error Informat50on Register 4 */
#define MTU_MC51_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00643f2u)	/* Error Informat51on Register 0 */
#define MTU_MC51_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00643f4u)	/* Error Informat51on Register 1 */
#define MTU_MC51_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00643f6u)	/* Error Informat51on Register 2 */
#define MTU_MC51_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00643f8u)	/* Error Informat51on Register 3 */
#define MTU_MC51_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00643fau)	/* Error Informat51on Register 4 */
#define MTU_MC52_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00644f2u)	/* Error Informat52on Register 0 */
#define MTU_MC52_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00644f4u)	/* Error Informat52on Register 1 */
#define MTU_MC52_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00644f6u)	/* Error Informat52on Register 2 */
#define MTU_MC52_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00644f8u)	/* Error Informat52on Register 3 */
#define MTU_MC52_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00644fau)	/* Error Informat52on Register 4 */
#define MTU_MC53_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00645f2u)	/* Error Informat53on Register 0 */
#define MTU_MC53_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00645f4u)	/* Error Informat53on Register 1 */
#define MTU_MC53_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00645f6u)	/* Error Informat53on Register 2 */
#define MTU_MC53_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00645f8u)	/* Error Informat53on Register 3 */
#define MTU_MC53_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00645fau)	/* Error Informat53on Register 4 */
#define MTU_MC54_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00646f2u)	/* Error Informat54on Register 0 */
#define MTU_MC54_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00646f4u)	/* Error Informat54on Register 1 */
#define MTU_MC54_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00646f6u)	/* Error Informat54on Register 2 */
#define MTU_MC54_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00646f8u)	/* Error Informat54on Register 3 */
#define MTU_MC54_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00646fau)	/* Error Informat54on Register 4 */
#define MTU_MC55_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00647f2u)	/* Error Informat55on Register 0 */
#define MTU_MC55_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00647f4u)	/* Error Informat55on Register 1 */
#define MTU_MC55_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00647f6u)	/* Error Informat55on Register 2 */
#define MTU_MC55_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00647f8u)	/* Error Informat55on Register 3 */
#define MTU_MC55_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00647fau)	/* Error Informat55on Register 4 */
#define MTU_MC56_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00648f2u)	/* Error Informat56on Register 0 */
#define MTU_MC56_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00648f4u)	/* Error Informat56on Register 1 */
#define MTU_MC56_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00648f6u)	/* Error Informat56on Register 2 */
#define MTU_MC56_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00648f8u)	/* Error Informat56on Register 3 */
#define MTU_MC56_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00648fau)	/* Error Informat56on Register 4 */
#define MTU_MC57_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00649f2u)	/* Error Informat57on Register 0 */
#define MTU_MC57_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00649f4u)	/* Error Informat57on Register 1 */
#define MTU_MC57_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00649f6u)	/* Error Informat57on Register 2 */
#define MTU_MC57_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00649f8u)	/* Error Informat57on Register 3 */
#define MTU_MC57_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00649fau)	/* Error Informat57on Register 4 */
#define MTU_MC58_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0064af2u)	/* Error Informat58on Register 0 */
#define MTU_MC58_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0064af4u)	/* Error Informat58on Register 1 */
#define MTU_MC58_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0064af6u)	/* Error Informat58on Register 2 */
#define MTU_MC58_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0064af8u)	/* Error Informat58on Register 3 */
#define MTU_MC58_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0064afau)	/* Error Informat58on Register 4 */
#define MTU_MC59_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0064bf2u)	/* Error Informat59on Register 0 */
#define MTU_MC59_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0064bf4u)	/* Error Informat59on Register 1 */
#define MTU_MC59_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0064bf6u)	/* Error Informat59on Register 2 */
#define MTU_MC59_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0064bf8u)	/* Error Informat59on Register 3 */
#define MTU_MC59_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0064bfau)	/* Error Informat59on Register 4 */
#define MTU_MC5_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00615f2u)	/* Error Informat5on Register 0 */
#define MTU_MC5_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00615f4u)	/* Error Informat5on Register 1 */
#define MTU_MC5_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00615f6u)	/* Error Informat5on Register 2 */
#define MTU_MC5_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00615f8u)	/* Error Informat5on Register 3 */
#define MTU_MC5_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00615fau)	/* Error Informat5on Register 4 */
#define MTU_MC60_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0064cf2u)	/* Error Informat60on Register 0 */
#define MTU_MC60_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0064cf4u)	/* Error Informat60on Register 1 */
#define MTU_MC60_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0064cf6u)	/* Error Informat60on Register 2 */
#define MTU_MC60_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0064cf8u)	/* Error Informat60on Register 3 */
#define MTU_MC60_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0064cfau)	/* Error Informat60on Register 4 */
#define MTU_MC61_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0064df2u)	/* Error Informat61on Register 0 */
#define MTU_MC61_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0064df4u)	/* Error Informat61on Register 1 */
#define MTU_MC61_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0064df6u)	/* Error Informat61on Register 2 */
#define MTU_MC61_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0064df8u)	/* Error Informat61on Register 3 */
#define MTU_MC61_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0064dfau)	/* Error Informat61on Register 4 */
#define MTU_MC62_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ef2u)	/* Error Informat62on Register 0 */
#define MTU_MC62_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ef4u)	/* Error Informat62on Register 1 */
#define MTU_MC62_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ef6u)	/* Error Informat62on Register 2 */
#define MTU_MC62_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ef8u)	/* Error Informat62on Register 3 */
#define MTU_MC62_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0064efau)	/* Error Informat62on Register 4 */
#define MTU_MC63_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ff2u)	/* Error Informat63on Register 0 */
#define MTU_MC63_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ff4u)	/* Error Informat63on Register 1 */
#define MTU_MC63_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ff6u)	/* Error Informat63on Register 2 */
#define MTU_MC63_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ff8u)	/* Error Informat63on Register 3 */
#define MTU_MC63_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0064ffau)	/* Error Informat63on Register 4 */
#define MTU_MC64_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00650f2u)	/* Error Informat64on Register 0 */
#define MTU_MC64_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00650f4u)	/* Error Informat64on Register 1 */
#define MTU_MC64_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00650f6u)	/* Error Informat64on Register 2 */
#define MTU_MC64_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00650f8u)	/* Error Informat64on Register 3 */
#define MTU_MC64_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00650fau)	/* Error Informat64on Register 4 */
#define MTU_MC65_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00651f2u)	/* Error Informat65on Register 0 */
#define MTU_MC65_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00651f4u)	/* Error Informat65on Register 1 */
#define MTU_MC65_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00651f6u)	/* Error Informat65on Register 2 */
#define MTU_MC65_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00651f8u)	/* Error Informat65on Register 3 */
#define MTU_MC65_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00651fau)	/* Error Informat65on Register 4 */
#define MTU_MC66_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00652f2u)	/* Error Informat66on Register 0 */
#define MTU_MC66_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00652f4u)	/* Error Informat66on Register 1 */
#define MTU_MC66_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00652f6u)	/* Error Informat66on Register 2 */
#define MTU_MC66_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00652f8u)	/* Error Informat66on Register 3 */
#define MTU_MC66_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00652fau)	/* Error Informat66on Register 4 */
#define MTU_MC67_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00653f2u)	/* Error Informat67on Register 0 */
#define MTU_MC67_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00653f4u)	/* Error Informat67on Register 1 */
#define MTU_MC67_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00653f6u)	/* Error Informat67on Register 2 */
#define MTU_MC67_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00653f8u)	/* Error Informat67on Register 3 */
#define MTU_MC67_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00653fau)	/* Error Informat67on Register 4 */
#define MTU_MC68_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00654f2u)	/* Error Informat68on Register 0 */
#define MTU_MC68_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00654f4u)	/* Error Informat68on Register 1 */
#define MTU_MC68_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00654f6u)	/* Error Informat68on Register 2 */
#define MTU_MC68_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00654f8u)	/* Error Informat68on Register 3 */
#define MTU_MC68_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00654fau)	/* Error Informat68on Register 4 */
#define MTU_MC69_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00655f2u)	/* Error Informat69on Register 0 */
#define MTU_MC69_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00655f4u)	/* Error Informat69on Register 1 */
#define MTU_MC69_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00655f6u)	/* Error Informat69on Register 2 */
#define MTU_MC69_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00655f8u)	/* Error Informat69on Register 3 */
#define MTU_MC69_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00655fau)	/* Error Informat69on Register 4 */
#define MTU_MC6_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00616f2u)	/* Error Informat6on Register 0 */
#define MTU_MC6_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00616f4u)	/* Error Informat6on Register 1 */
#define MTU_MC6_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00616f6u)	/* Error Informat6on Register 2 */
#define MTU_MC6_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00616f8u)	/* Error Informat6on Register 3 */
#define MTU_MC6_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00616fau)	/* Error Informat6on Register 4 */
#define MTU_MC70_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00656f2u)	/* Error Informat70on Register 0 */
#define MTU_MC70_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00656f4u)	/* Error Informat70on Register 1 */
#define MTU_MC70_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00656f6u)	/* Error Informat70on Register 2 */
#define MTU_MC70_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00656f8u)	/* Error Informat70on Register 3 */
#define MTU_MC70_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00656fau)	/* Error Informat70on Register 4 */
#define MTU_MC71_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00657f2u)	/* Error Informat71on Register 0 */
#define MTU_MC71_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00657f4u)	/* Error Informat71on Register 1 */
#define MTU_MC71_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00657f6u)	/* Error Informat71on Register 2 */
#define MTU_MC71_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00657f8u)	/* Error Informat71on Register 3 */
#define MTU_MC71_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00657fau)	/* Error Informat71on Register 4 */
#define MTU_MC72_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00658f2u)	/* Error Informat72on Register 0 */
#define MTU_MC72_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00658f4u)	/* Error Informat72on Register 1 */
#define MTU_MC72_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00658f6u)	/* Error Informat72on Register 2 */
#define MTU_MC72_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00658f8u)	/* Error Informat72on Register 3 */
#define MTU_MC72_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00658fau)	/* Error Informat72on Register 4 */
#define MTU_MC73_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00659f2u)	/* Error Informat73on Register 0 */
#define MTU_MC73_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00659f4u)	/* Error Informat73on Register 1 */
#define MTU_MC73_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00659f6u)	/* Error Informat73on Register 2 */
#define MTU_MC73_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00659f8u)	/* Error Informat73on Register 3 */
#define MTU_MC73_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00659fau)	/* Error Informat73on Register 4 */
#define MTU_MC74_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0065af2u)	/* Error Informat74on Register 0 */
#define MTU_MC74_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0065af4u)	/* Error Informat74on Register 1 */
#define MTU_MC74_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0065af6u)	/* Error Informat74on Register 2 */
#define MTU_MC74_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0065af8u)	/* Error Informat74on Register 3 */
#define MTU_MC74_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0065afau)	/* Error Informat74on Register 4 */
#define MTU_MC75_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0065bf2u)	/* Error Informat75on Register 0 */
#define MTU_MC75_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0065bf4u)	/* Error Informat75on Register 1 */
#define MTU_MC75_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0065bf6u)	/* Error Informat75on Register 2 */
#define MTU_MC75_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0065bf8u)	/* Error Informat75on Register 3 */
#define MTU_MC75_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0065bfau)	/* Error Informat75on Register 4 */
#define MTU_MC76_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0065cf2u)	/* Error Informat76on Register 0 */
#define MTU_MC76_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0065cf4u)	/* Error Informat76on Register 1 */
#define MTU_MC76_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0065cf6u)	/* Error Informat76on Register 2 */
#define MTU_MC76_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0065cf8u)	/* Error Informat76on Register 3 */
#define MTU_MC76_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0065cfau)	/* Error Informat76on Register 4 */
#define MTU_MC77_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0065df2u)	/* Error Informat77on Register 0 */
#define MTU_MC77_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0065df4u)	/* Error Informat77on Register 1 */
#define MTU_MC77_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0065df6u)	/* Error Informat77on Register 2 */
#define MTU_MC77_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0065df8u)	/* Error Informat77on Register 3 */
#define MTU_MC77_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0065dfau)	/* Error Informat77on Register 4 */
#define MTU_MC78_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ef2u)	/* Error Informat78on Register 0 */
#define MTU_MC78_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ef4u)	/* Error Informat78on Register 1 */
#define MTU_MC78_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ef6u)	/* Error Informat78on Register 2 */
#define MTU_MC78_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ef8u)	/* Error Informat78on Register 3 */
#define MTU_MC78_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0065efau)	/* Error Informat78on Register 4 */
#define MTU_MC79_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ff2u)	/* Error Informat79on Register 0 */
#define MTU_MC79_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ff4u)	/* Error Informat79on Register 1 */
#define MTU_MC79_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ff6u)	/* Error Informat79on Register 2 */
#define MTU_MC79_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ff8u)	/* Error Informat79on Register 3 */
#define MTU_MC79_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0065ffau)	/* Error Informat79on Register 4 */
#define MTU_MC7_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00617f2u)	/* Error Informat7on Register 0 */
#define MTU_MC7_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00617f4u)	/* Error Informat7on Register 1 */
#define MTU_MC7_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00617f6u)	/* Error Informat7on Register 2 */
#define MTU_MC7_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00617f8u)	/* Error Informat7on Register 3 */
#define MTU_MC7_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00617fau)	/* Error Informat7on Register 4 */
#define MTU_MC80_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00660f2u)	/* Error Informat80on Register 0 */
#define MTU_MC80_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00660f4u)	/* Error Informat80on Register 1 */
#define MTU_MC80_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00660f6u)	/* Error Informat80on Register 2 */
#define MTU_MC80_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00660f8u)	/* Error Informat80on Register 3 */
#define MTU_MC80_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00660fau)	/* Error Informat80on Register 4 */
#define MTU_MC81_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00661f2u)	/* Error Informat81on Register 0 */
#define MTU_MC81_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00661f4u)	/* Error Informat81on Register 1 */
#define MTU_MC81_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00661f6u)	/* Error Informat81on Register 2 */
#define MTU_MC81_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00661f8u)	/* Error Informat81on Register 3 */
#define MTU_MC81_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00661fau)	/* Error Informat81on Register 4 */
#define MTU_MC82_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00662f2u)	/* Error Informat82on Register 0 */
#define MTU_MC82_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00662f4u)	/* Error Informat82on Register 1 */
#define MTU_MC82_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00662f6u)	/* Error Informat82on Register 2 */
#define MTU_MC82_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00662f8u)	/* Error Informat82on Register 3 */
#define MTU_MC82_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00662fau)	/* Error Informat82on Register 4 */
#define MTU_MC83_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00663f2u)	/* Error Informat83on Register 0 */
#define MTU_MC83_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00663f4u)	/* Error Informat83on Register 1 */
#define MTU_MC83_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00663f6u)	/* Error Informat83on Register 2 */
#define MTU_MC83_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00663f8u)	/* Error Informat83on Register 3 */
#define MTU_MC83_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00663fau)	/* Error Informat83on Register 4 */
#define MTU_MC84_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00664f2u)	/* Error Informat84on Register 0 */
#define MTU_MC84_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00664f4u)	/* Error Informat84on Register 1 */
#define MTU_MC84_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00664f6u)	/* Error Informat84on Register 2 */
#define MTU_MC84_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00664f8u)	/* Error Informat84on Register 3 */
#define MTU_MC84_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00664fau)	/* Error Informat84on Register 4 */
#define MTU_MC85_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00665f2u)	/* Error Informat85on Register 0 */
#define MTU_MC85_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00665f4u)	/* Error Informat85on Register 1 */
#define MTU_MC85_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00665f6u)	/* Error Informat85on Register 2 */
#define MTU_MC85_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00665f8u)	/* Error Informat85on Register 3 */
#define MTU_MC85_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00665fau)	/* Error Informat85on Register 4 */
#define MTU_MC86_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00666f2u)	/* Error Informat86on Register 0 */
#define MTU_MC86_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00666f4u)	/* Error Informat86on Register 1 */
#define MTU_MC86_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00666f6u)	/* Error Informat86on Register 2 */
#define MTU_MC86_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00666f8u)	/* Error Informat86on Register 3 */
#define MTU_MC86_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00666fau)	/* Error Informat86on Register 4 */
#define MTU_MC87_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00667f2u)	/* Error Informat87on Register 0 */
#define MTU_MC87_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00667f4u)	/* Error Informat87on Register 1 */
#define MTU_MC87_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00667f6u)	/* Error Informat87on Register 2 */
#define MTU_MC87_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00667f8u)	/* Error Informat87on Register 3 */
#define MTU_MC87_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00667fau)	/* Error Informat87on Register 4 */
#define MTU_MC88_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00668f2u)	/* Error Informat88on Register 0 */
#define MTU_MC88_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00668f4u)	/* Error Informat88on Register 1 */
#define MTU_MC88_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00668f6u)	/* Error Informat88on Register 2 */
#define MTU_MC88_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00668f8u)	/* Error Informat88on Register 3 */
#define MTU_MC88_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00668fau)	/* Error Informat88on Register 4 */
#define MTU_MC89_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00669f2u)	/* Error Informat89on Register 0 */
#define MTU_MC89_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00669f4u)	/* Error Informat89on Register 1 */
#define MTU_MC89_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00669f6u)	/* Error Informat89on Register 2 */
#define MTU_MC89_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00669f8u)	/* Error Informat89on Register 3 */
#define MTU_MC89_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00669fau)	/* Error Informat89on Register 4 */
#define MTU_MC8_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00618f2u)	/* Error Informat8on Register 0 */
#define MTU_MC8_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00618f4u)	/* Error Informat8on Register 1 */
#define MTU_MC8_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00618f6u)	/* Error Informat8on Register 2 */
#define MTU_MC8_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00618f8u)	/* Error Informat8on Register 3 */
#define MTU_MC8_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00618fau)	/* Error Informat8on Register 4 */
#define MTU_MC90_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0066af2u)	/* Error Informat90on Register 0 */
#define MTU_MC90_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0066af4u)	/* Error Informat90on Register 1 */
#define MTU_MC90_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0066af6u)	/* Error Informat90on Register 2 */
#define MTU_MC90_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0066af8u)	/* Error Informat90on Register 3 */
#define MTU_MC90_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0066afau)	/* Error Informat90on Register 4 */
#define MTU_MC91_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0066bf2u)	/* Error Informat91on Register 0 */
#define MTU_MC91_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0066bf4u)	/* Error Informat91on Register 1 */
#define MTU_MC91_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0066bf6u)	/* Error Informat91on Register 2 */
#define MTU_MC91_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0066bf8u)	/* Error Informat91on Register 3 */
#define MTU_MC91_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0066bfau)	/* Error Informat91on Register 4 */
#define MTU_MC92_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0066cf2u)	/* Error Informat92on Register 0 */
#define MTU_MC92_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0066cf4u)	/* Error Informat92on Register 1 */
#define MTU_MC92_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0066cf6u)	/* Error Informat92on Register 2 */
#define MTU_MC92_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0066cf8u)	/* Error Informat92on Register 3 */
#define MTU_MC92_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0066cfau)	/* Error Informat92on Register 4 */
#define MTU_MC93_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0066df2u)	/* Error Informat93on Register 0 */
#define MTU_MC93_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0066df4u)	/* Error Informat93on Register 1 */
#define MTU_MC93_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0066df6u)	/* Error Informat93on Register 2 */
#define MTU_MC93_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0066df8u)	/* Error Informat93on Register 3 */
#define MTU_MC93_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0066dfau)	/* Error Informat93on Register 4 */
#define MTU_MC94_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ef2u)	/* Error Informat94on Register 0 */
#define MTU_MC94_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ef4u)	/* Error Informat94on Register 1 */
#define MTU_MC94_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ef6u)	/* Error Informat94on Register 2 */
#define MTU_MC94_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ef8u)	/* Error Informat94on Register 3 */
#define MTU_MC94_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0066efau)	/* Error Informat94on Register 4 */
#define MTU_MC95_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ff2u)	/* Error Informat95on Register 0 */
#define MTU_MC95_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ff4u)	/* Error Informat95on Register 1 */
#define MTU_MC95_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ff6u)	/* Error Informat95on Register 2 */
#define MTU_MC95_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ff8u)	/* Error Informat95on Register 3 */
#define MTU_MC95_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf0066ffau)	/* Error Informat95on Register 4 */
#define MTU_MC9_ERRINFO0	(*( MTU_MC0_ERRINFO0_type *) 0xf00619f2u)	/* Error Informat9on Register 0 */
#define MTU_MC9_ERRINFO1	(*( MTU_MC0_ERRINFO0_type *) 0xf00619f4u)	/* Error Informat9on Register 1 */
#define MTU_MC9_ERRINFO2	(*( MTU_MC0_ERRINFO0_type *) 0xf00619f6u)	/* Error Informat9on Register 2 */
#define MTU_MC9_ERRINFO3	(*( MTU_MC0_ERRINFO0_type *) 0xf00619f8u)	/* Error Informat9on Register 3 */
#define MTU_MC9_ERRINFO4	(*( MTU_MC0_ERRINFO0_type *) 0xf00619fau)	/* Error Informat9on Register 4 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int ADDR           : 13;	/* Address of Error(i) */
		/* const */ unsigned int MBI            : 3;	/* Memory Block Index of Error(i) */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_ETRR0_type;
#define MTU_MC0_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061012u)	/* Error Track0ng Register 0 */
#define MTU_MC0_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061014u)	/* Error Track0ng Register 1 */
#define MTU_MC0_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061016u)	/* Error Track0ng Register 2 */
#define MTU_MC0_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061018u)	/* Error Track0ng Register 3 */
#define MTU_MC0_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006101au)	/* Error Track0ng Register 4 */
#define MTU_MC10_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061a12u)	/* Error Track10ng Register 0 */
#define MTU_MC10_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061a14u)	/* Error Track10ng Register 1 */
#define MTU_MC10_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061a16u)	/* Error Track10ng Register 2 */
#define MTU_MC10_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061a18u)	/* Error Track10ng Register 3 */
#define MTU_MC10_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0061a1au)	/* Error Track10ng Register 4 */
#define MTU_MC11_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061b12u)	/* Error Track11ng Register 0 */
#define MTU_MC11_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061b14u)	/* Error Track11ng Register 1 */
#define MTU_MC11_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061b16u)	/* Error Track11ng Register 2 */
#define MTU_MC11_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061b18u)	/* Error Track11ng Register 3 */
#define MTU_MC11_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0061b1au)	/* Error Track11ng Register 4 */
#define MTU_MC12_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061c12u)	/* Error Track12ng Register 0 */
#define MTU_MC12_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061c14u)	/* Error Track12ng Register 1 */
#define MTU_MC12_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061c16u)	/* Error Track12ng Register 2 */
#define MTU_MC12_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061c18u)	/* Error Track12ng Register 3 */
#define MTU_MC12_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0061c1au)	/* Error Track12ng Register 4 */
#define MTU_MC13_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061d12u)	/* Error Track13ng Register 0 */
#define MTU_MC13_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061d14u)	/* Error Track13ng Register 1 */
#define MTU_MC13_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061d16u)	/* Error Track13ng Register 2 */
#define MTU_MC13_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061d18u)	/* Error Track13ng Register 3 */
#define MTU_MC13_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0061d1au)	/* Error Track13ng Register 4 */
#define MTU_MC14_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061e12u)	/* Error Track14ng Register 0 */
#define MTU_MC14_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061e14u)	/* Error Track14ng Register 1 */
#define MTU_MC14_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061e16u)	/* Error Track14ng Register 2 */
#define MTU_MC14_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061e18u)	/* Error Track14ng Register 3 */
#define MTU_MC14_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0061e1au)	/* Error Track14ng Register 4 */
#define MTU_MC15_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061f12u)	/* Error Track15ng Register 0 */
#define MTU_MC15_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061f14u)	/* Error Track15ng Register 1 */
#define MTU_MC15_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061f16u)	/* Error Track15ng Register 2 */
#define MTU_MC15_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061f18u)	/* Error Track15ng Register 3 */
#define MTU_MC15_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0061f1au)	/* Error Track15ng Register 4 */
#define MTU_MC16_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062012u)	/* Error Track16ng Register 0 */
#define MTU_MC16_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062014u)	/* Error Track16ng Register 1 */
#define MTU_MC16_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062016u)	/* Error Track16ng Register 2 */
#define MTU_MC16_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062018u)	/* Error Track16ng Register 3 */
#define MTU_MC16_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006201au)	/* Error Track16ng Register 4 */
#define MTU_MC17_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062112u)	/* Error Track17ng Register 0 */
#define MTU_MC17_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062114u)	/* Error Track17ng Register 1 */
#define MTU_MC17_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062116u)	/* Error Track17ng Register 2 */
#define MTU_MC17_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062118u)	/* Error Track17ng Register 3 */
#define MTU_MC17_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006211au)	/* Error Track17ng Register 4 */
#define MTU_MC18_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062212u)	/* Error Track18ng Register 0 */
#define MTU_MC18_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062214u)	/* Error Track18ng Register 1 */
#define MTU_MC18_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062216u)	/* Error Track18ng Register 2 */
#define MTU_MC18_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062218u)	/* Error Track18ng Register 3 */
#define MTU_MC18_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006221au)	/* Error Track18ng Register 4 */
#define MTU_MC19_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062312u)	/* Error Track19ng Register 0 */
#define MTU_MC19_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062314u)	/* Error Track19ng Register 1 */
#define MTU_MC19_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062316u)	/* Error Track19ng Register 2 */
#define MTU_MC19_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062318u)	/* Error Track19ng Register 3 */
#define MTU_MC19_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006231au)	/* Error Track19ng Register 4 */
#define MTU_MC1_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061112u)	/* Error Track1ng Register 0 */
#define MTU_MC1_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061114u)	/* Error Track1ng Register 1 */
#define MTU_MC1_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061116u)	/* Error Track1ng Register 2 */
#define MTU_MC1_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061118u)	/* Error Track1ng Register 3 */
#define MTU_MC1_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006111au)	/* Error Track1ng Register 4 */
#define MTU_MC20_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062412u)	/* Error Track20ng Register 0 */
#define MTU_MC20_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062414u)	/* Error Track20ng Register 1 */
#define MTU_MC20_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062416u)	/* Error Track20ng Register 2 */
#define MTU_MC20_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062418u)	/* Error Track20ng Register 3 */
#define MTU_MC20_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006241au)	/* Error Track20ng Register 4 */
#define MTU_MC21_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062512u)	/* Error Track21ng Register 0 */
#define MTU_MC21_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062514u)	/* Error Track21ng Register 1 */
#define MTU_MC21_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062516u)	/* Error Track21ng Register 2 */
#define MTU_MC21_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062518u)	/* Error Track21ng Register 3 */
#define MTU_MC21_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006251au)	/* Error Track21ng Register 4 */
#define MTU_MC22_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062612u)	/* Error Track22ng Register 0 */
#define MTU_MC22_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062614u)	/* Error Track22ng Register 1 */
#define MTU_MC22_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062616u)	/* Error Track22ng Register 2 */
#define MTU_MC22_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062618u)	/* Error Track22ng Register 3 */
#define MTU_MC22_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006261au)	/* Error Track22ng Register 4 */
#define MTU_MC23_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062712u)	/* Error Track23ng Register 0 */
#define MTU_MC23_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062714u)	/* Error Track23ng Register 1 */
#define MTU_MC23_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062716u)	/* Error Track23ng Register 2 */
#define MTU_MC23_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062718u)	/* Error Track23ng Register 3 */
#define MTU_MC23_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006271au)	/* Error Track23ng Register 4 */
#define MTU_MC24_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062812u)	/* Error Track24ng Register 0 */
#define MTU_MC24_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062814u)	/* Error Track24ng Register 1 */
#define MTU_MC24_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062816u)	/* Error Track24ng Register 2 */
#define MTU_MC24_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062818u)	/* Error Track24ng Register 3 */
#define MTU_MC24_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006281au)	/* Error Track24ng Register 4 */
#define MTU_MC25_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062912u)	/* Error Track25ng Register 0 */
#define MTU_MC25_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062914u)	/* Error Track25ng Register 1 */
#define MTU_MC25_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062916u)	/* Error Track25ng Register 2 */
#define MTU_MC25_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062918u)	/* Error Track25ng Register 3 */
#define MTU_MC25_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006291au)	/* Error Track25ng Register 4 */
#define MTU_MC26_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062a12u)	/* Error Track26ng Register 0 */
#define MTU_MC26_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062a14u)	/* Error Track26ng Register 1 */
#define MTU_MC26_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062a16u)	/* Error Track26ng Register 2 */
#define MTU_MC26_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062a18u)	/* Error Track26ng Register 3 */
#define MTU_MC26_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0062a1au)	/* Error Track26ng Register 4 */
#define MTU_MC27_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062b12u)	/* Error Track27ng Register 0 */
#define MTU_MC27_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062b14u)	/* Error Track27ng Register 1 */
#define MTU_MC27_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062b16u)	/* Error Track27ng Register 2 */
#define MTU_MC27_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062b18u)	/* Error Track27ng Register 3 */
#define MTU_MC27_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0062b1au)	/* Error Track27ng Register 4 */
#define MTU_MC28_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062c12u)	/* Error Track28ng Register 0 */
#define MTU_MC28_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062c14u)	/* Error Track28ng Register 1 */
#define MTU_MC28_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062c16u)	/* Error Track28ng Register 2 */
#define MTU_MC28_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062c18u)	/* Error Track28ng Register 3 */
#define MTU_MC28_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0062c1au)	/* Error Track28ng Register 4 */
#define MTU_MC29_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062d12u)	/* Error Track29ng Register 0 */
#define MTU_MC29_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062d14u)	/* Error Track29ng Register 1 */
#define MTU_MC29_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062d16u)	/* Error Track29ng Register 2 */
#define MTU_MC29_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062d18u)	/* Error Track29ng Register 3 */
#define MTU_MC29_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0062d1au)	/* Error Track29ng Register 4 */
#define MTU_MC2_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061212u)	/* Error Track2ng Register 0 */
#define MTU_MC2_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061214u)	/* Error Track2ng Register 1 */
#define MTU_MC2_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061216u)	/* Error Track2ng Register 2 */
#define MTU_MC2_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061218u)	/* Error Track2ng Register 3 */
#define MTU_MC2_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006121au)	/* Error Track2ng Register 4 */
#define MTU_MC30_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062e12u)	/* Error Track30ng Register 0 */
#define MTU_MC30_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062e14u)	/* Error Track30ng Register 1 */
#define MTU_MC30_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062e16u)	/* Error Track30ng Register 2 */
#define MTU_MC30_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062e18u)	/* Error Track30ng Register 3 */
#define MTU_MC30_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0062e1au)	/* Error Track30ng Register 4 */
#define MTU_MC31_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0062f12u)	/* Error Track31ng Register 0 */
#define MTU_MC31_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0062f14u)	/* Error Track31ng Register 1 */
#define MTU_MC31_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0062f16u)	/* Error Track31ng Register 2 */
#define MTU_MC31_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0062f18u)	/* Error Track31ng Register 3 */
#define MTU_MC31_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0062f1au)	/* Error Track31ng Register 4 */
#define MTU_MC32_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063012u)	/* Error Track32ng Register 0 */
#define MTU_MC32_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063014u)	/* Error Track32ng Register 1 */
#define MTU_MC32_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063016u)	/* Error Track32ng Register 2 */
#define MTU_MC32_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063018u)	/* Error Track32ng Register 3 */
#define MTU_MC32_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006301au)	/* Error Track32ng Register 4 */
#define MTU_MC33_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063112u)	/* Error Track33ng Register 0 */
#define MTU_MC33_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063114u)	/* Error Track33ng Register 1 */
#define MTU_MC33_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063116u)	/* Error Track33ng Register 2 */
#define MTU_MC33_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063118u)	/* Error Track33ng Register 3 */
#define MTU_MC33_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006311au)	/* Error Track33ng Register 4 */
#define MTU_MC34_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063212u)	/* Error Track34ng Register 0 */
#define MTU_MC34_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063214u)	/* Error Track34ng Register 1 */
#define MTU_MC34_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063216u)	/* Error Track34ng Register 2 */
#define MTU_MC34_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063218u)	/* Error Track34ng Register 3 */
#define MTU_MC34_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006321au)	/* Error Track34ng Register 4 */
#define MTU_MC35_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063312u)	/* Error Track35ng Register 0 */
#define MTU_MC35_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063314u)	/* Error Track35ng Register 1 */
#define MTU_MC35_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063316u)	/* Error Track35ng Register 2 */
#define MTU_MC35_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063318u)	/* Error Track35ng Register 3 */
#define MTU_MC35_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006331au)	/* Error Track35ng Register 4 */
#define MTU_MC36_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063412u)	/* Error Track36ng Register 0 */
#define MTU_MC36_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063414u)	/* Error Track36ng Register 1 */
#define MTU_MC36_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063416u)	/* Error Track36ng Register 2 */
#define MTU_MC36_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063418u)	/* Error Track36ng Register 3 */
#define MTU_MC36_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006341au)	/* Error Track36ng Register 4 */
#define MTU_MC37_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063512u)	/* Error Track37ng Register 0 */
#define MTU_MC37_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063514u)	/* Error Track37ng Register 1 */
#define MTU_MC37_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063516u)	/* Error Track37ng Register 2 */
#define MTU_MC37_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063518u)	/* Error Track37ng Register 3 */
#define MTU_MC37_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006351au)	/* Error Track37ng Register 4 */
#define MTU_MC38_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063612u)	/* Error Track38ng Register 0 */
#define MTU_MC38_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063614u)	/* Error Track38ng Register 1 */
#define MTU_MC38_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063616u)	/* Error Track38ng Register 2 */
#define MTU_MC38_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063618u)	/* Error Track38ng Register 3 */
#define MTU_MC38_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006361au)	/* Error Track38ng Register 4 */
#define MTU_MC39_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063712u)	/* Error Track39ng Register 0 */
#define MTU_MC39_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063714u)	/* Error Track39ng Register 1 */
#define MTU_MC39_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063716u)	/* Error Track39ng Register 2 */
#define MTU_MC39_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063718u)	/* Error Track39ng Register 3 */
#define MTU_MC39_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006371au)	/* Error Track39ng Register 4 */
#define MTU_MC3_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061312u)	/* Error Track3ng Register 0 */
#define MTU_MC3_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061314u)	/* Error Track3ng Register 1 */
#define MTU_MC3_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061316u)	/* Error Track3ng Register 2 */
#define MTU_MC3_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061318u)	/* Error Track3ng Register 3 */
#define MTU_MC3_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006131au)	/* Error Track3ng Register 4 */
#define MTU_MC40_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063812u)	/* Error Track40ng Register 0 */
#define MTU_MC40_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063814u)	/* Error Track40ng Register 1 */
#define MTU_MC40_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063816u)	/* Error Track40ng Register 2 */
#define MTU_MC40_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063818u)	/* Error Track40ng Register 3 */
#define MTU_MC40_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006381au)	/* Error Track40ng Register 4 */
#define MTU_MC41_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063912u)	/* Error Track41ng Register 0 */
#define MTU_MC41_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063914u)	/* Error Track41ng Register 1 */
#define MTU_MC41_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063916u)	/* Error Track41ng Register 2 */
#define MTU_MC41_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063918u)	/* Error Track41ng Register 3 */
#define MTU_MC41_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006391au)	/* Error Track41ng Register 4 */
#define MTU_MC42_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063a12u)	/* Error Track42ng Register 0 */
#define MTU_MC42_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063a14u)	/* Error Track42ng Register 1 */
#define MTU_MC42_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063a16u)	/* Error Track42ng Register 2 */
#define MTU_MC42_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063a18u)	/* Error Track42ng Register 3 */
#define MTU_MC42_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0063a1au)	/* Error Track42ng Register 4 */
#define MTU_MC43_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063b12u)	/* Error Track43ng Register 0 */
#define MTU_MC43_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063b14u)	/* Error Track43ng Register 1 */
#define MTU_MC43_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063b16u)	/* Error Track43ng Register 2 */
#define MTU_MC43_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063b18u)	/* Error Track43ng Register 3 */
#define MTU_MC43_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0063b1au)	/* Error Track43ng Register 4 */
#define MTU_MC44_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063c12u)	/* Error Track44ng Register 0 */
#define MTU_MC44_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063c14u)	/* Error Track44ng Register 1 */
#define MTU_MC44_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063c16u)	/* Error Track44ng Register 2 */
#define MTU_MC44_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063c18u)	/* Error Track44ng Register 3 */
#define MTU_MC44_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0063c1au)	/* Error Track44ng Register 4 */
#define MTU_MC45_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063d12u)	/* Error Track45ng Register 0 */
#define MTU_MC45_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063d14u)	/* Error Track45ng Register 1 */
#define MTU_MC45_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063d16u)	/* Error Track45ng Register 2 */
#define MTU_MC45_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063d18u)	/* Error Track45ng Register 3 */
#define MTU_MC45_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0063d1au)	/* Error Track45ng Register 4 */
#define MTU_MC46_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063e12u)	/* Error Track46ng Register 0 */
#define MTU_MC46_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063e14u)	/* Error Track46ng Register 1 */
#define MTU_MC46_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063e16u)	/* Error Track46ng Register 2 */
#define MTU_MC46_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063e18u)	/* Error Track46ng Register 3 */
#define MTU_MC46_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0063e1au)	/* Error Track46ng Register 4 */
#define MTU_MC47_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0063f12u)	/* Error Track47ng Register 0 */
#define MTU_MC47_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0063f14u)	/* Error Track47ng Register 1 */
#define MTU_MC47_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0063f16u)	/* Error Track47ng Register 2 */
#define MTU_MC47_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0063f18u)	/* Error Track47ng Register 3 */
#define MTU_MC47_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0063f1au)	/* Error Track47ng Register 4 */
#define MTU_MC48_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064012u)	/* Error Track48ng Register 0 */
#define MTU_MC48_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064014u)	/* Error Track48ng Register 1 */
#define MTU_MC48_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064016u)	/* Error Track48ng Register 2 */
#define MTU_MC48_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064018u)	/* Error Track48ng Register 3 */
#define MTU_MC48_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006401au)	/* Error Track48ng Register 4 */
#define MTU_MC49_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064112u)	/* Error Track49ng Register 0 */
#define MTU_MC49_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064114u)	/* Error Track49ng Register 1 */
#define MTU_MC49_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064116u)	/* Error Track49ng Register 2 */
#define MTU_MC49_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064118u)	/* Error Track49ng Register 3 */
#define MTU_MC49_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006411au)	/* Error Track49ng Register 4 */
#define MTU_MC4_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061412u)	/* Error Track4ng Register 0 */
#define MTU_MC4_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061414u)	/* Error Track4ng Register 1 */
#define MTU_MC4_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061416u)	/* Error Track4ng Register 2 */
#define MTU_MC4_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061418u)	/* Error Track4ng Register 3 */
#define MTU_MC4_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006141au)	/* Error Track4ng Register 4 */
#define MTU_MC50_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064212u)	/* Error Track50ng Register 0 */
#define MTU_MC50_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064214u)	/* Error Track50ng Register 1 */
#define MTU_MC50_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064216u)	/* Error Track50ng Register 2 */
#define MTU_MC50_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064218u)	/* Error Track50ng Register 3 */
#define MTU_MC50_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006421au)	/* Error Track50ng Register 4 */
#define MTU_MC51_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064312u)	/* Error Track51ng Register 0 */
#define MTU_MC51_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064314u)	/* Error Track51ng Register 1 */
#define MTU_MC51_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064316u)	/* Error Track51ng Register 2 */
#define MTU_MC51_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064318u)	/* Error Track51ng Register 3 */
#define MTU_MC51_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006431au)	/* Error Track51ng Register 4 */
#define MTU_MC52_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064412u)	/* Error Track52ng Register 0 */
#define MTU_MC52_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064414u)	/* Error Track52ng Register 1 */
#define MTU_MC52_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064416u)	/* Error Track52ng Register 2 */
#define MTU_MC52_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064418u)	/* Error Track52ng Register 3 */
#define MTU_MC52_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006441au)	/* Error Track52ng Register 4 */
#define MTU_MC53_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064512u)	/* Error Track53ng Register 0 */
#define MTU_MC53_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064514u)	/* Error Track53ng Register 1 */
#define MTU_MC53_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064516u)	/* Error Track53ng Register 2 */
#define MTU_MC53_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064518u)	/* Error Track53ng Register 3 */
#define MTU_MC53_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006451au)	/* Error Track53ng Register 4 */
#define MTU_MC54_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064612u)	/* Error Track54ng Register 0 */
#define MTU_MC54_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064614u)	/* Error Track54ng Register 1 */
#define MTU_MC54_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064616u)	/* Error Track54ng Register 2 */
#define MTU_MC54_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064618u)	/* Error Track54ng Register 3 */
#define MTU_MC54_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006461au)	/* Error Track54ng Register 4 */
#define MTU_MC55_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064712u)	/* Error Track55ng Register 0 */
#define MTU_MC55_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064714u)	/* Error Track55ng Register 1 */
#define MTU_MC55_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064716u)	/* Error Track55ng Register 2 */
#define MTU_MC55_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064718u)	/* Error Track55ng Register 3 */
#define MTU_MC55_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006471au)	/* Error Track55ng Register 4 */
#define MTU_MC56_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064812u)	/* Error Track56ng Register 0 */
#define MTU_MC56_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064814u)	/* Error Track56ng Register 1 */
#define MTU_MC56_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064816u)	/* Error Track56ng Register 2 */
#define MTU_MC56_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064818u)	/* Error Track56ng Register 3 */
#define MTU_MC56_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006481au)	/* Error Track56ng Register 4 */
#define MTU_MC57_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064912u)	/* Error Track57ng Register 0 */
#define MTU_MC57_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064914u)	/* Error Track57ng Register 1 */
#define MTU_MC57_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064916u)	/* Error Track57ng Register 2 */
#define MTU_MC57_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064918u)	/* Error Track57ng Register 3 */
#define MTU_MC57_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006491au)	/* Error Track57ng Register 4 */
#define MTU_MC58_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064a12u)	/* Error Track58ng Register 0 */
#define MTU_MC58_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064a14u)	/* Error Track58ng Register 1 */
#define MTU_MC58_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064a16u)	/* Error Track58ng Register 2 */
#define MTU_MC58_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064a18u)	/* Error Track58ng Register 3 */
#define MTU_MC58_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0064a1au)	/* Error Track58ng Register 4 */
#define MTU_MC59_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064b12u)	/* Error Track59ng Register 0 */
#define MTU_MC59_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064b14u)	/* Error Track59ng Register 1 */
#define MTU_MC59_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064b16u)	/* Error Track59ng Register 2 */
#define MTU_MC59_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064b18u)	/* Error Track59ng Register 3 */
#define MTU_MC59_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0064b1au)	/* Error Track59ng Register 4 */
#define MTU_MC5_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061512u)	/* Error Track5ng Register 0 */
#define MTU_MC5_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061514u)	/* Error Track5ng Register 1 */
#define MTU_MC5_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061516u)	/* Error Track5ng Register 2 */
#define MTU_MC5_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061518u)	/* Error Track5ng Register 3 */
#define MTU_MC5_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006151au)	/* Error Track5ng Register 4 */
#define MTU_MC60_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064c12u)	/* Error Track60ng Register 0 */
#define MTU_MC60_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064c14u)	/* Error Track60ng Register 1 */
#define MTU_MC60_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064c16u)	/* Error Track60ng Register 2 */
#define MTU_MC60_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064c18u)	/* Error Track60ng Register 3 */
#define MTU_MC60_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0064c1au)	/* Error Track60ng Register 4 */
#define MTU_MC61_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064d12u)	/* Error Track61ng Register 0 */
#define MTU_MC61_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064d14u)	/* Error Track61ng Register 1 */
#define MTU_MC61_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064d16u)	/* Error Track61ng Register 2 */
#define MTU_MC61_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064d18u)	/* Error Track61ng Register 3 */
#define MTU_MC61_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0064d1au)	/* Error Track61ng Register 4 */
#define MTU_MC62_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064e12u)	/* Error Track62ng Register 0 */
#define MTU_MC62_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064e14u)	/* Error Track62ng Register 1 */
#define MTU_MC62_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064e16u)	/* Error Track62ng Register 2 */
#define MTU_MC62_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064e18u)	/* Error Track62ng Register 3 */
#define MTU_MC62_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0064e1au)	/* Error Track62ng Register 4 */
#define MTU_MC63_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0064f12u)	/* Error Track63ng Register 0 */
#define MTU_MC63_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0064f14u)	/* Error Track63ng Register 1 */
#define MTU_MC63_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0064f16u)	/* Error Track63ng Register 2 */
#define MTU_MC63_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0064f18u)	/* Error Track63ng Register 3 */
#define MTU_MC63_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0064f1au)	/* Error Track63ng Register 4 */
#define MTU_MC64_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065012u)	/* Error Track64ng Register 0 */
#define MTU_MC64_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065014u)	/* Error Track64ng Register 1 */
#define MTU_MC64_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065016u)	/* Error Track64ng Register 2 */
#define MTU_MC64_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065018u)	/* Error Track64ng Register 3 */
#define MTU_MC64_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006501au)	/* Error Track64ng Register 4 */
#define MTU_MC65_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065112u)	/* Error Track65ng Register 0 */
#define MTU_MC65_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065114u)	/* Error Track65ng Register 1 */
#define MTU_MC65_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065116u)	/* Error Track65ng Register 2 */
#define MTU_MC65_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065118u)	/* Error Track65ng Register 3 */
#define MTU_MC65_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006511au)	/* Error Track65ng Register 4 */
#define MTU_MC66_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065212u)	/* Error Track66ng Register 0 */
#define MTU_MC66_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065214u)	/* Error Track66ng Register 1 */
#define MTU_MC66_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065216u)	/* Error Track66ng Register 2 */
#define MTU_MC66_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065218u)	/* Error Track66ng Register 3 */
#define MTU_MC66_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006521au)	/* Error Track66ng Register 4 */
#define MTU_MC67_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065312u)	/* Error Track67ng Register 0 */
#define MTU_MC67_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065314u)	/* Error Track67ng Register 1 */
#define MTU_MC67_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065316u)	/* Error Track67ng Register 2 */
#define MTU_MC67_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065318u)	/* Error Track67ng Register 3 */
#define MTU_MC67_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006531au)	/* Error Track67ng Register 4 */
#define MTU_MC68_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065412u)	/* Error Track68ng Register 0 */
#define MTU_MC68_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065414u)	/* Error Track68ng Register 1 */
#define MTU_MC68_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065416u)	/* Error Track68ng Register 2 */
#define MTU_MC68_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065418u)	/* Error Track68ng Register 3 */
#define MTU_MC68_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006541au)	/* Error Track68ng Register 4 */
#define MTU_MC69_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065512u)	/* Error Track69ng Register 0 */
#define MTU_MC69_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065514u)	/* Error Track69ng Register 1 */
#define MTU_MC69_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065516u)	/* Error Track69ng Register 2 */
#define MTU_MC69_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065518u)	/* Error Track69ng Register 3 */
#define MTU_MC69_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006551au)	/* Error Track69ng Register 4 */
#define MTU_MC6_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061612u)	/* Error Track6ng Register 0 */
#define MTU_MC6_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061614u)	/* Error Track6ng Register 1 */
#define MTU_MC6_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061616u)	/* Error Track6ng Register 2 */
#define MTU_MC6_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061618u)	/* Error Track6ng Register 3 */
#define MTU_MC6_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006161au)	/* Error Track6ng Register 4 */
#define MTU_MC70_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065612u)	/* Error Track70ng Register 0 */
#define MTU_MC70_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065614u)	/* Error Track70ng Register 1 */
#define MTU_MC70_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065616u)	/* Error Track70ng Register 2 */
#define MTU_MC70_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065618u)	/* Error Track70ng Register 3 */
#define MTU_MC70_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006561au)	/* Error Track70ng Register 4 */
#define MTU_MC71_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065712u)	/* Error Track71ng Register 0 */
#define MTU_MC71_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065714u)	/* Error Track71ng Register 1 */
#define MTU_MC71_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065716u)	/* Error Track71ng Register 2 */
#define MTU_MC71_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065718u)	/* Error Track71ng Register 3 */
#define MTU_MC71_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006571au)	/* Error Track71ng Register 4 */
#define MTU_MC72_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065812u)	/* Error Track72ng Register 0 */
#define MTU_MC72_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065814u)	/* Error Track72ng Register 1 */
#define MTU_MC72_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065816u)	/* Error Track72ng Register 2 */
#define MTU_MC72_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065818u)	/* Error Track72ng Register 3 */
#define MTU_MC72_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006581au)	/* Error Track72ng Register 4 */
#define MTU_MC73_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065912u)	/* Error Track73ng Register 0 */
#define MTU_MC73_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065914u)	/* Error Track73ng Register 1 */
#define MTU_MC73_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065916u)	/* Error Track73ng Register 2 */
#define MTU_MC73_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065918u)	/* Error Track73ng Register 3 */
#define MTU_MC73_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006591au)	/* Error Track73ng Register 4 */
#define MTU_MC74_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065a12u)	/* Error Track74ng Register 0 */
#define MTU_MC74_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065a14u)	/* Error Track74ng Register 1 */
#define MTU_MC74_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065a16u)	/* Error Track74ng Register 2 */
#define MTU_MC74_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065a18u)	/* Error Track74ng Register 3 */
#define MTU_MC74_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0065a1au)	/* Error Track74ng Register 4 */
#define MTU_MC75_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065b12u)	/* Error Track75ng Register 0 */
#define MTU_MC75_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065b14u)	/* Error Track75ng Register 1 */
#define MTU_MC75_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065b16u)	/* Error Track75ng Register 2 */
#define MTU_MC75_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065b18u)	/* Error Track75ng Register 3 */
#define MTU_MC75_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0065b1au)	/* Error Track75ng Register 4 */
#define MTU_MC76_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065c12u)	/* Error Track76ng Register 0 */
#define MTU_MC76_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065c14u)	/* Error Track76ng Register 1 */
#define MTU_MC76_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065c16u)	/* Error Track76ng Register 2 */
#define MTU_MC76_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065c18u)	/* Error Track76ng Register 3 */
#define MTU_MC76_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0065c1au)	/* Error Track76ng Register 4 */
#define MTU_MC77_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065d12u)	/* Error Track77ng Register 0 */
#define MTU_MC77_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065d14u)	/* Error Track77ng Register 1 */
#define MTU_MC77_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065d16u)	/* Error Track77ng Register 2 */
#define MTU_MC77_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065d18u)	/* Error Track77ng Register 3 */
#define MTU_MC77_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0065d1au)	/* Error Track77ng Register 4 */
#define MTU_MC78_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065e12u)	/* Error Track78ng Register 0 */
#define MTU_MC78_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065e14u)	/* Error Track78ng Register 1 */
#define MTU_MC78_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065e16u)	/* Error Track78ng Register 2 */
#define MTU_MC78_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065e18u)	/* Error Track78ng Register 3 */
#define MTU_MC78_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0065e1au)	/* Error Track78ng Register 4 */
#define MTU_MC79_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0065f12u)	/* Error Track79ng Register 0 */
#define MTU_MC79_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0065f14u)	/* Error Track79ng Register 1 */
#define MTU_MC79_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0065f16u)	/* Error Track79ng Register 2 */
#define MTU_MC79_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0065f18u)	/* Error Track79ng Register 3 */
#define MTU_MC79_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0065f1au)	/* Error Track79ng Register 4 */
#define MTU_MC7_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061712u)	/* Error Track7ng Register 0 */
#define MTU_MC7_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061714u)	/* Error Track7ng Register 1 */
#define MTU_MC7_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061716u)	/* Error Track7ng Register 2 */
#define MTU_MC7_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061718u)	/* Error Track7ng Register 3 */
#define MTU_MC7_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006171au)	/* Error Track7ng Register 4 */
#define MTU_MC80_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066012u)	/* Error Track80ng Register 0 */
#define MTU_MC80_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066014u)	/* Error Track80ng Register 1 */
#define MTU_MC80_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066016u)	/* Error Track80ng Register 2 */
#define MTU_MC80_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066018u)	/* Error Track80ng Register 3 */
#define MTU_MC80_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006601au)	/* Error Track80ng Register 4 */
#define MTU_MC81_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066112u)	/* Error Track81ng Register 0 */
#define MTU_MC81_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066114u)	/* Error Track81ng Register 1 */
#define MTU_MC81_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066116u)	/* Error Track81ng Register 2 */
#define MTU_MC81_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066118u)	/* Error Track81ng Register 3 */
#define MTU_MC81_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006611au)	/* Error Track81ng Register 4 */
#define MTU_MC82_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066212u)	/* Error Track82ng Register 0 */
#define MTU_MC82_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066214u)	/* Error Track82ng Register 1 */
#define MTU_MC82_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066216u)	/* Error Track82ng Register 2 */
#define MTU_MC82_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066218u)	/* Error Track82ng Register 3 */
#define MTU_MC82_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006621au)	/* Error Track82ng Register 4 */
#define MTU_MC83_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066312u)	/* Error Track83ng Register 0 */
#define MTU_MC83_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066314u)	/* Error Track83ng Register 1 */
#define MTU_MC83_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066316u)	/* Error Track83ng Register 2 */
#define MTU_MC83_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066318u)	/* Error Track83ng Register 3 */
#define MTU_MC83_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006631au)	/* Error Track83ng Register 4 */
#define MTU_MC84_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066412u)	/* Error Track84ng Register 0 */
#define MTU_MC84_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066414u)	/* Error Track84ng Register 1 */
#define MTU_MC84_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066416u)	/* Error Track84ng Register 2 */
#define MTU_MC84_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066418u)	/* Error Track84ng Register 3 */
#define MTU_MC84_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006641au)	/* Error Track84ng Register 4 */
#define MTU_MC85_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066512u)	/* Error Track85ng Register 0 */
#define MTU_MC85_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066514u)	/* Error Track85ng Register 1 */
#define MTU_MC85_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066516u)	/* Error Track85ng Register 2 */
#define MTU_MC85_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066518u)	/* Error Track85ng Register 3 */
#define MTU_MC85_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006651au)	/* Error Track85ng Register 4 */
#define MTU_MC86_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066612u)	/* Error Track86ng Register 0 */
#define MTU_MC86_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066614u)	/* Error Track86ng Register 1 */
#define MTU_MC86_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066616u)	/* Error Track86ng Register 2 */
#define MTU_MC86_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066618u)	/* Error Track86ng Register 3 */
#define MTU_MC86_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006661au)	/* Error Track86ng Register 4 */
#define MTU_MC87_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066712u)	/* Error Track87ng Register 0 */
#define MTU_MC87_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066714u)	/* Error Track87ng Register 1 */
#define MTU_MC87_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066716u)	/* Error Track87ng Register 2 */
#define MTU_MC87_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066718u)	/* Error Track87ng Register 3 */
#define MTU_MC87_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006671au)	/* Error Track87ng Register 4 */
#define MTU_MC88_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066812u)	/* Error Track88ng Register 0 */
#define MTU_MC88_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066814u)	/* Error Track88ng Register 1 */
#define MTU_MC88_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066816u)	/* Error Track88ng Register 2 */
#define MTU_MC88_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066818u)	/* Error Track88ng Register 3 */
#define MTU_MC88_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006681au)	/* Error Track88ng Register 4 */
#define MTU_MC89_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066912u)	/* Error Track89ng Register 0 */
#define MTU_MC89_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066914u)	/* Error Track89ng Register 1 */
#define MTU_MC89_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066916u)	/* Error Track89ng Register 2 */
#define MTU_MC89_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066918u)	/* Error Track89ng Register 3 */
#define MTU_MC89_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006691au)	/* Error Track89ng Register 4 */
#define MTU_MC8_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061812u)	/* Error Track8ng Register 0 */
#define MTU_MC8_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061814u)	/* Error Track8ng Register 1 */
#define MTU_MC8_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061816u)	/* Error Track8ng Register 2 */
#define MTU_MC8_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061818u)	/* Error Track8ng Register 3 */
#define MTU_MC8_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006181au)	/* Error Track8ng Register 4 */
#define MTU_MC90_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066a12u)	/* Error Track90ng Register 0 */
#define MTU_MC90_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066a14u)	/* Error Track90ng Register 1 */
#define MTU_MC90_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066a16u)	/* Error Track90ng Register 2 */
#define MTU_MC90_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066a18u)	/* Error Track90ng Register 3 */
#define MTU_MC90_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0066a1au)	/* Error Track90ng Register 4 */
#define MTU_MC91_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066b12u)	/* Error Track91ng Register 0 */
#define MTU_MC91_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066b14u)	/* Error Track91ng Register 1 */
#define MTU_MC91_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066b16u)	/* Error Track91ng Register 2 */
#define MTU_MC91_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066b18u)	/* Error Track91ng Register 3 */
#define MTU_MC91_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0066b1au)	/* Error Track91ng Register 4 */
#define MTU_MC92_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066c12u)	/* Error Track92ng Register 0 */
#define MTU_MC92_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066c14u)	/* Error Track92ng Register 1 */
#define MTU_MC92_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066c16u)	/* Error Track92ng Register 2 */
#define MTU_MC92_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066c18u)	/* Error Track92ng Register 3 */
#define MTU_MC92_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0066c1au)	/* Error Track92ng Register 4 */
#define MTU_MC93_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066d12u)	/* Error Track93ng Register 0 */
#define MTU_MC93_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066d14u)	/* Error Track93ng Register 1 */
#define MTU_MC93_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066d16u)	/* Error Track93ng Register 2 */
#define MTU_MC93_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066d18u)	/* Error Track93ng Register 3 */
#define MTU_MC93_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0066d1au)	/* Error Track93ng Register 4 */
#define MTU_MC94_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066e12u)	/* Error Track94ng Register 0 */
#define MTU_MC94_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066e14u)	/* Error Track94ng Register 1 */
#define MTU_MC94_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066e16u)	/* Error Track94ng Register 2 */
#define MTU_MC94_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066e18u)	/* Error Track94ng Register 3 */
#define MTU_MC94_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0066e1au)	/* Error Track94ng Register 4 */
#define MTU_MC95_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0066f12u)	/* Error Track95ng Register 0 */
#define MTU_MC95_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0066f14u)	/* Error Track95ng Register 1 */
#define MTU_MC95_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0066f16u)	/* Error Track95ng Register 2 */
#define MTU_MC95_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0066f18u)	/* Error Track95ng Register 3 */
#define MTU_MC95_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf0066f1au)	/* Error Track95ng Register 4 */
#define MTU_MC9_ETRR0	(*( MTU_MC0_ETRR0_type *) 0xf0061912u)	/* Error Track9ng Register 0 */
#define MTU_MC9_ETRR1	(*( MTU_MC0_ETRR0_type *) 0xf0061914u)	/* Error Track9ng Register 1 */
#define MTU_MC9_ETRR2	(*( MTU_MC0_ETRR0_type *) 0xf0061916u)	/* Error Track9ng Register 2 */
#define MTU_MC9_ETRR3	(*( MTU_MC0_ETRR0_type *) 0xf0061918u)	/* Error Track9ng Register 3 */
#define MTU_MC9_ETRR4	(*( MTU_MC0_ETRR0_type *) 0xf006191au)	/* Error Track9ng Register 4 */

typedef volatile union
{
	struct
	{ 
		unsigned int OPERR          : 6;	/* SSH Critical Operation Error Occured */
		/* const */ unsigned int R6             : 2;	/* Reserved - Res */
		unsigned int MISCERR        : 6;	/* SSH Miscellaneous Error Status- MISCERR */
		/* const */ unsigned int R14            : 2;	/* Reserved - Res */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_FAULTSTS_type;
#define MTU_MC0_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00610f0u)	/* SSH Safety Faults Status Reg0ster */
#define MTU_MC10_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0061af0u)	/* SSH Safety Faults Status Reg10ster */
#define MTU_MC11_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0061bf0u)	/* SSH Safety Faults Status Reg11ster */
#define MTU_MC12_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0061cf0u)	/* SSH Safety Faults Status Reg12ster */
#define MTU_MC13_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0061df0u)	/* SSH Safety Faults Status Reg13ster */
#define MTU_MC14_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0061ef0u)	/* SSH Safety Faults Status Reg14ster */
#define MTU_MC15_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0061ff0u)	/* SSH Safety Faults Status Reg15ster */
#define MTU_MC16_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00620f0u)	/* SSH Safety Faults Status Reg16ster */
#define MTU_MC17_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00621f0u)	/* SSH Safety Faults Status Reg17ster */
#define MTU_MC18_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00622f0u)	/* SSH Safety Faults Status Reg18ster */
#define MTU_MC19_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00623f0u)	/* SSH Safety Faults Status Reg19ster */
#define MTU_MC1_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00611f0u)	/* SSH Safety Faults Status Reg1ster */
#define MTU_MC20_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00624f0u)	/* SSH Safety Faults Status Reg20ster */
#define MTU_MC21_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00625f0u)	/* SSH Safety Faults Status Reg21ster */
#define MTU_MC22_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00626f0u)	/* SSH Safety Faults Status Reg22ster */
#define MTU_MC23_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00627f0u)	/* SSH Safety Faults Status Reg23ster */
#define MTU_MC24_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00628f0u)	/* SSH Safety Faults Status Reg24ster */
#define MTU_MC25_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00629f0u)	/* SSH Safety Faults Status Reg25ster */
#define MTU_MC26_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0062af0u)	/* SSH Safety Faults Status Reg26ster */
#define MTU_MC27_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0062bf0u)	/* SSH Safety Faults Status Reg27ster */
#define MTU_MC28_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0062cf0u)	/* SSH Safety Faults Status Reg28ster */
#define MTU_MC29_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0062df0u)	/* SSH Safety Faults Status Reg29ster */
#define MTU_MC2_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00612f0u)	/* SSH Safety Faults Status Reg2ster */
#define MTU_MC30_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0062ef0u)	/* SSH Safety Faults Status Reg30ster */
#define MTU_MC31_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0062ff0u)	/* SSH Safety Faults Status Reg31ster */
#define MTU_MC32_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00630f0u)	/* SSH Safety Faults Status Reg32ster */
#define MTU_MC33_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00631f0u)	/* SSH Safety Faults Status Reg33ster */
#define MTU_MC34_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00632f0u)	/* SSH Safety Faults Status Reg34ster */
#define MTU_MC35_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00633f0u)	/* SSH Safety Faults Status Reg35ster */
#define MTU_MC36_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00634f0u)	/* SSH Safety Faults Status Reg36ster */
#define MTU_MC37_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00635f0u)	/* SSH Safety Faults Status Reg37ster */
#define MTU_MC38_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00636f0u)	/* SSH Safety Faults Status Reg38ster */
#define MTU_MC39_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00637f0u)	/* SSH Safety Faults Status Reg39ster */
#define MTU_MC3_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00613f0u)	/* SSH Safety Faults Status Reg3ster */
#define MTU_MC40_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00638f0u)	/* SSH Safety Faults Status Reg40ster */
#define MTU_MC41_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00639f0u)	/* SSH Safety Faults Status Reg41ster */
#define MTU_MC42_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0063af0u)	/* SSH Safety Faults Status Reg42ster */
#define MTU_MC43_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0063bf0u)	/* SSH Safety Faults Status Reg43ster */
#define MTU_MC44_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0063cf0u)	/* SSH Safety Faults Status Reg44ster */
#define MTU_MC45_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0063df0u)	/* SSH Safety Faults Status Reg45ster */
#define MTU_MC46_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0063ef0u)	/* SSH Safety Faults Status Reg46ster */
#define MTU_MC47_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0063ff0u)	/* SSH Safety Faults Status Reg47ster */
#define MTU_MC48_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00640f0u)	/* SSH Safety Faults Status Reg48ster */
#define MTU_MC49_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00641f0u)	/* SSH Safety Faults Status Reg49ster */
#define MTU_MC4_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00614f0u)	/* SSH Safety Faults Status Reg4ster */
#define MTU_MC50_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00642f0u)	/* SSH Safety Faults Status Reg50ster */
#define MTU_MC51_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00643f0u)	/* SSH Safety Faults Status Reg51ster */
#define MTU_MC52_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00644f0u)	/* SSH Safety Faults Status Reg52ster */
#define MTU_MC53_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00645f0u)	/* SSH Safety Faults Status Reg53ster */
#define MTU_MC54_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00646f0u)	/* SSH Safety Faults Status Reg54ster */
#define MTU_MC55_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00647f0u)	/* SSH Safety Faults Status Reg55ster */
#define MTU_MC56_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00648f0u)	/* SSH Safety Faults Status Reg56ster */
#define MTU_MC57_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00649f0u)	/* SSH Safety Faults Status Reg57ster */
#define MTU_MC58_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0064af0u)	/* SSH Safety Faults Status Reg58ster */
#define MTU_MC59_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0064bf0u)	/* SSH Safety Faults Status Reg59ster */
#define MTU_MC5_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00615f0u)	/* SSH Safety Faults Status Reg5ster */
#define MTU_MC60_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0064cf0u)	/* SSH Safety Faults Status Reg60ster */
#define MTU_MC61_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0064df0u)	/* SSH Safety Faults Status Reg61ster */
#define MTU_MC62_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0064ef0u)	/* SSH Safety Faults Status Reg62ster */
#define MTU_MC63_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0064ff0u)	/* SSH Safety Faults Status Reg63ster */
#define MTU_MC64_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00650f0u)	/* SSH Safety Faults Status Reg64ster */
#define MTU_MC65_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00651f0u)	/* SSH Safety Faults Status Reg65ster */
#define MTU_MC66_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00652f0u)	/* SSH Safety Faults Status Reg66ster */
#define MTU_MC67_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00653f0u)	/* SSH Safety Faults Status Reg67ster */
#define MTU_MC68_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00654f0u)	/* SSH Safety Faults Status Reg68ster */
#define MTU_MC69_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00655f0u)	/* SSH Safety Faults Status Reg69ster */
#define MTU_MC6_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00616f0u)	/* SSH Safety Faults Status Reg6ster */
#define MTU_MC70_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00656f0u)	/* SSH Safety Faults Status Reg70ster */
#define MTU_MC71_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00657f0u)	/* SSH Safety Faults Status Reg71ster */
#define MTU_MC72_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00658f0u)	/* SSH Safety Faults Status Reg72ster */
#define MTU_MC73_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00659f0u)	/* SSH Safety Faults Status Reg73ster */
#define MTU_MC74_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0065af0u)	/* SSH Safety Faults Status Reg74ster */
#define MTU_MC75_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0065bf0u)	/* SSH Safety Faults Status Reg75ster */
#define MTU_MC76_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0065cf0u)	/* SSH Safety Faults Status Reg76ster */
#define MTU_MC77_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0065df0u)	/* SSH Safety Faults Status Reg77ster */
#define MTU_MC78_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0065ef0u)	/* SSH Safety Faults Status Reg78ster */
#define MTU_MC79_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0065ff0u)	/* SSH Safety Faults Status Reg79ster */
#define MTU_MC7_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00617f0u)	/* SSH Safety Faults Status Reg7ster */
#define MTU_MC80_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00660f0u)	/* SSH Safety Faults Status Reg80ster */
#define MTU_MC81_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00661f0u)	/* SSH Safety Faults Status Reg81ster */
#define MTU_MC82_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00662f0u)	/* SSH Safety Faults Status Reg82ster */
#define MTU_MC83_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00663f0u)	/* SSH Safety Faults Status Reg83ster */
#define MTU_MC84_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00664f0u)	/* SSH Safety Faults Status Reg84ster */
#define MTU_MC85_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00665f0u)	/* SSH Safety Faults Status Reg85ster */
#define MTU_MC86_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00666f0u)	/* SSH Safety Faults Status Reg86ster */
#define MTU_MC87_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00667f0u)	/* SSH Safety Faults Status Reg87ster */
#define MTU_MC88_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00668f0u)	/* SSH Safety Faults Status Reg88ster */
#define MTU_MC89_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00669f0u)	/* SSH Safety Faults Status Reg89ster */
#define MTU_MC8_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00618f0u)	/* SSH Safety Faults Status Reg8ster */
#define MTU_MC90_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0066af0u)	/* SSH Safety Faults Status Reg90ster */
#define MTU_MC91_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0066bf0u)	/* SSH Safety Faults Status Reg91ster */
#define MTU_MC92_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0066cf0u)	/* SSH Safety Faults Status Reg92ster */
#define MTU_MC93_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0066df0u)	/* SSH Safety Faults Status Reg93ster */
#define MTU_MC94_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0066ef0u)	/* SSH Safety Faults Status Reg94ster */
#define MTU_MC95_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf0066ff0u)	/* SSH Safety Faults Status Reg95ster */
#define MTU_MC9_FAULTSTS	(*( MTU_MC0_FAULTSTS_type *) 0xf00619f0u)	/* SSH Safety Faults Status Reg9ster */

typedef volatile union
{
	struct
	{ 
		unsigned int START          : 1;	/* START */
		unsigned int RESUME         : 1;	/* Resume failed test */
		unsigned int ESTF           : 1;	/* Enable Sticky Fail Bit */
		unsigned int DIR            : 1;	/* Direction Select */
		unsigned int DINIT          : 1;	/* Data Initialization Enable */
		unsigned int RCADR          : 1;	/* Fast Row / Fast Column Addressing Scheme Select */
		unsigned int ROWTOG         : 1;	/* Row toggling */
		unsigned int BITTOG         : 1;	/* Bit toggling */
		/* const */ unsigned int R8             : 1;	/* Reserved */
		unsigned int FAILDMP        : 1;	/* Fail bitmap dump */
		unsigned int EN_DESCR       : 1;	/* Enable Descrambling */
		/* const */ unsigned int R11            : 1;	/* Reserved */
		/* const */ unsigned int R12            : 1;	/* Reserved */
		/* const */ unsigned int R13            : 1;	/* Reserved */
		/* const */ unsigned int R14            : 1;	/* Reserved */
		unsigned int SRAM_CLR       : 1;	/* Clear the SRAM */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_MCONTROL_type;
#define MTU_MC0_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061004u)	/* MBIST Control Reg0ster */
#define MTU_MC10_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061a04u)	/* MBIST Control Reg10ster */
#define MTU_MC11_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061b04u)	/* MBIST Control Reg11ster */
#define MTU_MC12_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061c04u)	/* MBIST Control Reg12ster */
#define MTU_MC13_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061d04u)	/* MBIST Control Reg13ster */
#define MTU_MC14_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061e04u)	/* MBIST Control Reg14ster */
#define MTU_MC15_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061f04u)	/* MBIST Control Reg15ster */
#define MTU_MC16_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062004u)	/* MBIST Control Reg16ster */
#define MTU_MC17_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062104u)	/* MBIST Control Reg17ster */
#define MTU_MC18_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062204u)	/* MBIST Control Reg18ster */
#define MTU_MC19_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062304u)	/* MBIST Control Reg19ster */
#define MTU_MC1_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061104u)	/* MBIST Control Reg1ster */
#define MTU_MC20_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062404u)	/* MBIST Control Reg20ster */
#define MTU_MC21_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062504u)	/* MBIST Control Reg21ster */
#define MTU_MC22_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062604u)	/* MBIST Control Reg22ster */
#define MTU_MC23_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062704u)	/* MBIST Control Reg23ster */
#define MTU_MC24_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062804u)	/* MBIST Control Reg24ster */
#define MTU_MC25_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062904u)	/* MBIST Control Reg25ster */
#define MTU_MC26_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062a04u)	/* MBIST Control Reg26ster */
#define MTU_MC27_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062b04u)	/* MBIST Control Reg27ster */
#define MTU_MC28_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062c04u)	/* MBIST Control Reg28ster */
#define MTU_MC29_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062d04u)	/* MBIST Control Reg29ster */
#define MTU_MC2_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061204u)	/* MBIST Control Reg2ster */
#define MTU_MC30_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062e04u)	/* MBIST Control Reg30ster */
#define MTU_MC31_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0062f04u)	/* MBIST Control Reg31ster */
#define MTU_MC32_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063004u)	/* MBIST Control Reg32ster */
#define MTU_MC33_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063104u)	/* MBIST Control Reg33ster */
#define MTU_MC34_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063204u)	/* MBIST Control Reg34ster */
#define MTU_MC35_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063304u)	/* MBIST Control Reg35ster */
#define MTU_MC36_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063404u)	/* MBIST Control Reg36ster */
#define MTU_MC37_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063504u)	/* MBIST Control Reg37ster */
#define MTU_MC38_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063604u)	/* MBIST Control Reg38ster */
#define MTU_MC39_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063704u)	/* MBIST Control Reg39ster */
#define MTU_MC3_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061304u)	/* MBIST Control Reg3ster */
#define MTU_MC40_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063804u)	/* MBIST Control Reg40ster */
#define MTU_MC41_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063904u)	/* MBIST Control Reg41ster */
#define MTU_MC42_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063a04u)	/* MBIST Control Reg42ster */
#define MTU_MC43_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063b04u)	/* MBIST Control Reg43ster */
#define MTU_MC44_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063c04u)	/* MBIST Control Reg44ster */
#define MTU_MC45_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063d04u)	/* MBIST Control Reg45ster */
#define MTU_MC46_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063e04u)	/* MBIST Control Reg46ster */
#define MTU_MC47_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0063f04u)	/* MBIST Control Reg47ster */
#define MTU_MC48_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064004u)	/* MBIST Control Reg48ster */
#define MTU_MC49_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064104u)	/* MBIST Control Reg49ster */
#define MTU_MC4_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061404u)	/* MBIST Control Reg4ster */
#define MTU_MC50_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064204u)	/* MBIST Control Reg50ster */
#define MTU_MC51_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064304u)	/* MBIST Control Reg51ster */
#define MTU_MC52_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064404u)	/* MBIST Control Reg52ster */
#define MTU_MC53_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064504u)	/* MBIST Control Reg53ster */
#define MTU_MC54_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064604u)	/* MBIST Control Reg54ster */
#define MTU_MC55_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064704u)	/* MBIST Control Reg55ster */
#define MTU_MC56_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064804u)	/* MBIST Control Reg56ster */
#define MTU_MC57_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064904u)	/* MBIST Control Reg57ster */
#define MTU_MC58_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064a04u)	/* MBIST Control Reg58ster */
#define MTU_MC59_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064b04u)	/* MBIST Control Reg59ster */
#define MTU_MC5_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061504u)	/* MBIST Control Reg5ster */
#define MTU_MC60_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064c04u)	/* MBIST Control Reg60ster */
#define MTU_MC61_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064d04u)	/* MBIST Control Reg61ster */
#define MTU_MC62_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064e04u)	/* MBIST Control Reg62ster */
#define MTU_MC63_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0064f04u)	/* MBIST Control Reg63ster */
#define MTU_MC64_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065004u)	/* MBIST Control Reg64ster */
#define MTU_MC65_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065104u)	/* MBIST Control Reg65ster */
#define MTU_MC66_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065204u)	/* MBIST Control Reg66ster */
#define MTU_MC67_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065304u)	/* MBIST Control Reg67ster */
#define MTU_MC68_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065404u)	/* MBIST Control Reg68ster */
#define MTU_MC69_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065504u)	/* MBIST Control Reg69ster */
#define MTU_MC6_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061604u)	/* MBIST Control Reg6ster */
#define MTU_MC70_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065604u)	/* MBIST Control Reg70ster */
#define MTU_MC71_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065704u)	/* MBIST Control Reg71ster */
#define MTU_MC72_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065804u)	/* MBIST Control Reg72ster */
#define MTU_MC73_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065904u)	/* MBIST Control Reg73ster */
#define MTU_MC74_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065a04u)	/* MBIST Control Reg74ster */
#define MTU_MC75_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065b04u)	/* MBIST Control Reg75ster */
#define MTU_MC76_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065c04u)	/* MBIST Control Reg76ster */
#define MTU_MC77_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065d04u)	/* MBIST Control Reg77ster */
#define MTU_MC78_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065e04u)	/* MBIST Control Reg78ster */
#define MTU_MC79_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0065f04u)	/* MBIST Control Reg79ster */
#define MTU_MC7_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061704u)	/* MBIST Control Reg7ster */
#define MTU_MC80_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066004u)	/* MBIST Control Reg80ster */
#define MTU_MC81_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066104u)	/* MBIST Control Reg81ster */
#define MTU_MC82_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066204u)	/* MBIST Control Reg82ster */
#define MTU_MC83_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066304u)	/* MBIST Control Reg83ster */
#define MTU_MC84_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066404u)	/* MBIST Control Reg84ster */
#define MTU_MC85_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066504u)	/* MBIST Control Reg85ster */
#define MTU_MC86_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066604u)	/* MBIST Control Reg86ster */
#define MTU_MC87_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066704u)	/* MBIST Control Reg87ster */
#define MTU_MC88_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066804u)	/* MBIST Control Reg88ster */
#define MTU_MC89_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066904u)	/* MBIST Control Reg89ster */
#define MTU_MC8_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061804u)	/* MBIST Control Reg8ster */
#define MTU_MC90_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066a04u)	/* MBIST Control Reg90ster */
#define MTU_MC91_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066b04u)	/* MBIST Control Reg91ster */
#define MTU_MC92_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066c04u)	/* MBIST Control Reg92ster */
#define MTU_MC93_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066d04u)	/* MBIST Control Reg93ster */
#define MTU_MC94_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066e04u)	/* MBIST Control Reg94ster */
#define MTU_MC95_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0066f04u)	/* MBIST Control Reg95ster */
#define MTU_MC9_MCONTROL	(*( MTU_MC0_MCONTROL_type *) 0xf0061904u)	/* MBIST Control Reg9ster */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int DONE           : 1;	/* DONE */
		/* const */ unsigned int FAIL           : 1;	/* FAIL */
		/* const */ unsigned int FDA            : 1;	/* Fail Dump Available */
		/* const */ unsigned int SFAIL          : 1;	/* Sticky Fail Bit */
		/* const */ unsigned int Res4           : 1;	/* Reserved - Res */
		/* const */ unsigned int R4             : 11;	/* Reserved - Res */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_MSTATUS_type;
#define MTU_MC0_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061006u)	/* Status Reg0ster */
#define MTU_MC10_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061a06u)	/* Status Reg10ster */
#define MTU_MC11_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061b06u)	/* Status Reg11ster */
#define MTU_MC12_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061c06u)	/* Status Reg12ster */
#define MTU_MC13_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061d06u)	/* Status Reg13ster */
#define MTU_MC14_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061e06u)	/* Status Reg14ster */
#define MTU_MC15_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061f06u)	/* Status Reg15ster */
#define MTU_MC16_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062006u)	/* Status Reg16ster */
#define MTU_MC17_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062106u)	/* Status Reg17ster */
#define MTU_MC18_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062206u)	/* Status Reg18ster */
#define MTU_MC19_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062306u)	/* Status Reg19ster */
#define MTU_MC1_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061106u)	/* Status Reg1ster */
#define MTU_MC20_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062406u)	/* Status Reg20ster */
#define MTU_MC21_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062506u)	/* Status Reg21ster */
#define MTU_MC22_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062606u)	/* Status Reg22ster */
#define MTU_MC23_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062706u)	/* Status Reg23ster */
#define MTU_MC24_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062806u)	/* Status Reg24ster */
#define MTU_MC25_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062906u)	/* Status Reg25ster */
#define MTU_MC26_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062a06u)	/* Status Reg26ster */
#define MTU_MC27_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062b06u)	/* Status Reg27ster */
#define MTU_MC28_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062c06u)	/* Status Reg28ster */
#define MTU_MC29_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062d06u)	/* Status Reg29ster */
#define MTU_MC2_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061206u)	/* Status Reg2ster */
#define MTU_MC30_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062e06u)	/* Status Reg30ster */
#define MTU_MC31_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0062f06u)	/* Status Reg31ster */
#define MTU_MC32_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063006u)	/* Status Reg32ster */
#define MTU_MC33_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063106u)	/* Status Reg33ster */
#define MTU_MC34_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063206u)	/* Status Reg34ster */
#define MTU_MC35_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063306u)	/* Status Reg35ster */
#define MTU_MC36_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063406u)	/* Status Reg36ster */
#define MTU_MC37_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063506u)	/* Status Reg37ster */
#define MTU_MC38_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063606u)	/* Status Reg38ster */
#define MTU_MC39_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063706u)	/* Status Reg39ster */
#define MTU_MC3_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061306u)	/* Status Reg3ster */
#define MTU_MC40_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063806u)	/* Status Reg40ster */
#define MTU_MC41_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063906u)	/* Status Reg41ster */
#define MTU_MC42_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063a06u)	/* Status Reg42ster */
#define MTU_MC43_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063b06u)	/* Status Reg43ster */
#define MTU_MC44_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063c06u)	/* Status Reg44ster */
#define MTU_MC45_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063d06u)	/* Status Reg45ster */
#define MTU_MC46_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063e06u)	/* Status Reg46ster */
#define MTU_MC47_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0063f06u)	/* Status Reg47ster */
#define MTU_MC48_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064006u)	/* Status Reg48ster */
#define MTU_MC49_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064106u)	/* Status Reg49ster */
#define MTU_MC4_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061406u)	/* Status Reg4ster */
#define MTU_MC50_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064206u)	/* Status Reg50ster */
#define MTU_MC51_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064306u)	/* Status Reg51ster */
#define MTU_MC52_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064406u)	/* Status Reg52ster */
#define MTU_MC53_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064506u)	/* Status Reg53ster */
#define MTU_MC54_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064606u)	/* Status Reg54ster */
#define MTU_MC55_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064706u)	/* Status Reg55ster */
#define MTU_MC56_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064806u)	/* Status Reg56ster */
#define MTU_MC57_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064906u)	/* Status Reg57ster */
#define MTU_MC58_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064a06u)	/* Status Reg58ster */
#define MTU_MC59_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064b06u)	/* Status Reg59ster */
#define MTU_MC5_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061506u)	/* Status Reg5ster */
#define MTU_MC60_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064c06u)	/* Status Reg60ster */
#define MTU_MC61_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064d06u)	/* Status Reg61ster */
#define MTU_MC62_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064e06u)	/* Status Reg62ster */
#define MTU_MC63_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0064f06u)	/* Status Reg63ster */
#define MTU_MC64_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065006u)	/* Status Reg64ster */
#define MTU_MC65_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065106u)	/* Status Reg65ster */
#define MTU_MC66_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065206u)	/* Status Reg66ster */
#define MTU_MC67_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065306u)	/* Status Reg67ster */
#define MTU_MC68_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065406u)	/* Status Reg68ster */
#define MTU_MC69_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065506u)	/* Status Reg69ster */
#define MTU_MC6_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061606u)	/* Status Reg6ster */
#define MTU_MC70_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065606u)	/* Status Reg70ster */
#define MTU_MC71_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065706u)	/* Status Reg71ster */
#define MTU_MC72_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065806u)	/* Status Reg72ster */
#define MTU_MC73_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065906u)	/* Status Reg73ster */
#define MTU_MC74_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065a06u)	/* Status Reg74ster */
#define MTU_MC75_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065b06u)	/* Status Reg75ster */
#define MTU_MC76_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065c06u)	/* Status Reg76ster */
#define MTU_MC77_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065d06u)	/* Status Reg77ster */
#define MTU_MC78_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065e06u)	/* Status Reg78ster */
#define MTU_MC79_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0065f06u)	/* Status Reg79ster */
#define MTU_MC7_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061706u)	/* Status Reg7ster */
#define MTU_MC80_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066006u)	/* Status Reg80ster */
#define MTU_MC81_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066106u)	/* Status Reg81ster */
#define MTU_MC82_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066206u)	/* Status Reg82ster */
#define MTU_MC83_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066306u)	/* Status Reg83ster */
#define MTU_MC84_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066406u)	/* Status Reg84ster */
#define MTU_MC85_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066506u)	/* Status Reg85ster */
#define MTU_MC86_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066606u)	/* Status Reg86ster */
#define MTU_MC87_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066706u)	/* Status Reg87ster */
#define MTU_MC88_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066806u)	/* Status Reg88ster */
#define MTU_MC89_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066906u)	/* Status Reg89ster */
#define MTU_MC8_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061806u)	/* Status Reg8ster */
#define MTU_MC90_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066a06u)	/* Status Reg90ster */
#define MTU_MC91_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066b06u)	/* Status Reg91ster */
#define MTU_MC92_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066c06u)	/* Status Reg92ster */
#define MTU_MC93_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066d06u)	/* Status Reg93ster */
#define MTU_MC94_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066e06u)	/* Status Reg94ster */
#define MTU_MC95_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0066f06u)	/* Status Reg95ster */
#define MTU_MC9_MSTATUS	(*( MTU_MC0_MSTATUS_type *) 0xf0061906u)	/* Status Reg9ster */

typedef volatile union
{
	struct
	{ 
		unsigned int ADDR           : 14;	/* Address */
		unsigned int INJERR         : 1;	/* Inject Error */
		unsigned int RAEN           : 1;	/* Range Enable */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_RANGE_type;
#define MTU_MC0_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061008u)	/* Range Reg0ster, single address mode */
#define MTU_MC10_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061a08u)	/* Range Reg10ster, single address mode */
#define MTU_MC11_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061b08u)	/* Range Reg11ster, single address mode */
#define MTU_MC12_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061c08u)	/* Range Reg12ster, single address mode */
#define MTU_MC13_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061d08u)	/* Range Reg13ster, single address mode */
#define MTU_MC14_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061e08u)	/* Range Reg14ster, single address mode */
#define MTU_MC15_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061f08u)	/* Range Reg15ster, single address mode */
#define MTU_MC16_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062008u)	/* Range Reg16ster, single address mode */
#define MTU_MC17_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062108u)	/* Range Reg17ster, single address mode */
#define MTU_MC18_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062208u)	/* Range Reg18ster, single address mode */
#define MTU_MC19_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062308u)	/* Range Reg19ster, single address mode */
#define MTU_MC1_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061108u)	/* Range Reg1ster, single address mode */
#define MTU_MC20_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062408u)	/* Range Reg20ster, single address mode */
#define MTU_MC21_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062508u)	/* Range Reg21ster, single address mode */
#define MTU_MC22_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062608u)	/* Range Reg22ster, single address mode */
#define MTU_MC23_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062708u)	/* Range Reg23ster, single address mode */
#define MTU_MC24_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062808u)	/* Range Reg24ster, single address mode */
#define MTU_MC25_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062908u)	/* Range Reg25ster, single address mode */
#define MTU_MC26_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062a08u)	/* Range Reg26ster, single address mode */
#define MTU_MC27_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062b08u)	/* Range Reg27ster, single address mode */
#define MTU_MC28_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062c08u)	/* Range Reg28ster, single address mode */
#define MTU_MC29_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062d08u)	/* Range Reg29ster, single address mode */
#define MTU_MC2_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061208u)	/* Range Reg2ster, single address mode */
#define MTU_MC30_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062e08u)	/* Range Reg30ster, single address mode */
#define MTU_MC31_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0062f08u)	/* Range Reg31ster, single address mode */
#define MTU_MC32_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063008u)	/* Range Reg32ster, single address mode */
#define MTU_MC33_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063108u)	/* Range Reg33ster, single address mode */
#define MTU_MC34_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063208u)	/* Range Reg34ster, single address mode */
#define MTU_MC35_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063308u)	/* Range Reg35ster, single address mode */
#define MTU_MC36_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063408u)	/* Range Reg36ster, single address mode */
#define MTU_MC37_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063508u)	/* Range Reg37ster, single address mode */
#define MTU_MC38_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063608u)	/* Range Reg38ster, single address mode */
#define MTU_MC39_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063708u)	/* Range Reg39ster, single address mode */
#define MTU_MC3_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061308u)	/* Range Reg3ster, single address mode */
#define MTU_MC40_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063808u)	/* Range Reg40ster, single address mode */
#define MTU_MC41_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063908u)	/* Range Reg41ster, single address mode */
#define MTU_MC42_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063a08u)	/* Range Reg42ster, single address mode */
#define MTU_MC43_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063b08u)	/* Range Reg43ster, single address mode */
#define MTU_MC44_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063c08u)	/* Range Reg44ster, single address mode */
#define MTU_MC45_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063d08u)	/* Range Reg45ster, single address mode */
#define MTU_MC46_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063e08u)	/* Range Reg46ster, single address mode */
#define MTU_MC47_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0063f08u)	/* Range Reg47ster, single address mode */
#define MTU_MC48_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064008u)	/* Range Reg48ster, single address mode */
#define MTU_MC49_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064108u)	/* Range Reg49ster, single address mode */
#define MTU_MC4_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061408u)	/* Range Reg4ster, single address mode */
#define MTU_MC50_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064208u)	/* Range Reg50ster, single address mode */
#define MTU_MC51_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064308u)	/* Range Reg51ster, single address mode */
#define MTU_MC52_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064408u)	/* Range Reg52ster, single address mode */
#define MTU_MC53_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064508u)	/* Range Reg53ster, single address mode */
#define MTU_MC54_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064608u)	/* Range Reg54ster, single address mode */
#define MTU_MC55_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064708u)	/* Range Reg55ster, single address mode */
#define MTU_MC56_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064808u)	/* Range Reg56ster, single address mode */
#define MTU_MC57_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064908u)	/* Range Reg57ster, single address mode */
#define MTU_MC58_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064a08u)	/* Range Reg58ster, single address mode */
#define MTU_MC59_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064b08u)	/* Range Reg59ster, single address mode */
#define MTU_MC5_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061508u)	/* Range Reg5ster, single address mode */
#define MTU_MC60_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064c08u)	/* Range Reg60ster, single address mode */
#define MTU_MC61_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064d08u)	/* Range Reg61ster, single address mode */
#define MTU_MC62_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064e08u)	/* Range Reg62ster, single address mode */
#define MTU_MC63_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0064f08u)	/* Range Reg63ster, single address mode */
#define MTU_MC64_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065008u)	/* Range Reg64ster, single address mode */
#define MTU_MC65_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065108u)	/* Range Reg65ster, single address mode */
#define MTU_MC66_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065208u)	/* Range Reg66ster, single address mode */
#define MTU_MC67_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065308u)	/* Range Reg67ster, single address mode */
#define MTU_MC68_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065408u)	/* Range Reg68ster, single address mode */
#define MTU_MC69_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065508u)	/* Range Reg69ster, single address mode */
#define MTU_MC6_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061608u)	/* Range Reg6ster, single address mode */
#define MTU_MC70_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065608u)	/* Range Reg70ster, single address mode */
#define MTU_MC71_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065708u)	/* Range Reg71ster, single address mode */
#define MTU_MC72_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065808u)	/* Range Reg72ster, single address mode */
#define MTU_MC73_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065908u)	/* Range Reg73ster, single address mode */
#define MTU_MC74_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065a08u)	/* Range Reg74ster, single address mode */
#define MTU_MC75_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065b08u)	/* Range Reg75ster, single address mode */
#define MTU_MC76_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065c08u)	/* Range Reg76ster, single address mode */
#define MTU_MC77_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065d08u)	/* Range Reg77ster, single address mode */
#define MTU_MC78_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065e08u)	/* Range Reg78ster, single address mode */
#define MTU_MC79_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0065f08u)	/* Range Reg79ster, single address mode */
#define MTU_MC7_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061708u)	/* Range Reg7ster, single address mode */
#define MTU_MC80_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066008u)	/* Range Reg80ster, single address mode */
#define MTU_MC81_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066108u)	/* Range Reg81ster, single address mode */
#define MTU_MC82_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066208u)	/* Range Reg82ster, single address mode */
#define MTU_MC83_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066308u)	/* Range Reg83ster, single address mode */
#define MTU_MC84_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066408u)	/* Range Reg84ster, single address mode */
#define MTU_MC85_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066508u)	/* Range Reg85ster, single address mode */
#define MTU_MC86_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066608u)	/* Range Reg86ster, single address mode */
#define MTU_MC87_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066708u)	/* Range Reg87ster, single address mode */
#define MTU_MC88_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066808u)	/* Range Reg88ster, single address mode */
#define MTU_MC89_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066908u)	/* Range Reg89ster, single address mode */
#define MTU_MC8_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061808u)	/* Range Reg8ster, single address mode */
#define MTU_MC90_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066a08u)	/* Range Reg90ster, single address mode */
#define MTU_MC91_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066b08u)	/* Range Reg91ster, single address mode */
#define MTU_MC92_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066c08u)	/* Range Reg92ster, single address mode */
#define MTU_MC93_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066d08u)	/* Range Reg93ster, single address mode */
#define MTU_MC94_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066e08u)	/* Range Reg94ster, single address mode */
#define MTU_MC95_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0066f08u)	/* Range Reg95ster, single address mode */
#define MTU_MC9_RANGE	(*( MTU_MC0_RANGE_type *) 0xf0061908u)	/* Range Reg9ster, single address mode */

typedef volatile union
{
	struct
	{ 
		unsigned int WDATA          : 16;	/* Word Data */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_RDBFL0_type;
#define MTU_MC0_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061060u)	/* Read Data and B0t Flip Register 0 */
#define MTU_MC0_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061062u)	/* Read Data and B0t Flip Register 1 */
#define MTU_MC0_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061074u)	/* Read Data and B0t Flip Register 10 */
#define MTU_MC0_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061076u)	/* Read Data and B0t Flip Register 11 */
#define MTU_MC0_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061078u)	/* Read Data and B0t Flip Register 12 */
#define MTU_MC0_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006107au)	/* Read Data and B0t Flip Register 13 */
#define MTU_MC0_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006107cu)	/* Read Data and B0t Flip Register 14 */
#define MTU_MC0_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006107eu)	/* Read Data and B0t Flip Register 15 */
#define MTU_MC0_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061080u)	/* Read Data and B0t Flip Register 16 */
#define MTU_MC0_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061082u)	/* Read Data and B0t Flip Register 17 */
#define MTU_MC0_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061084u)	/* Read Data and B0t Flip Register 18 */
#define MTU_MC0_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061086u)	/* Read Data and B0t Flip Register 19 */
#define MTU_MC0_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061064u)	/* Read Data and B0t Flip Register 2 */
#define MTU_MC0_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061088u)	/* Read Data and B0t Flip Register 20 */
#define MTU_MC0_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006108au)	/* Read Data and B0t Flip Register 21 */
#define MTU_MC0_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006108cu)	/* Read Data and B0t Flip Register 22 */
#define MTU_MC0_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006108eu)	/* Read Data and B0t Flip Register 23 */
#define MTU_MC0_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061090u)	/* Read Data and B0t Flip Register 24 */
#define MTU_MC0_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061092u)	/* Read Data and B0t Flip Register 25 */
#define MTU_MC0_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061094u)	/* Read Data and B0t Flip Register 26 */
#define MTU_MC0_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061096u)	/* Read Data and B0t Flip Register 27 */
#define MTU_MC0_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061098u)	/* Read Data and B0t Flip Register 28 */
#define MTU_MC0_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006109au)	/* Read Data and B0t Flip Register 29 */
#define MTU_MC0_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061066u)	/* Read Data and B0t Flip Register 3 */
#define MTU_MC0_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006109cu)	/* Read Data and B0t Flip Register 30 */
#define MTU_MC0_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006109eu)	/* Read Data and B0t Flip Register 31 */
#define MTU_MC0_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00610a0u)	/* Read Data and B0t Flip Register 32 */
#define MTU_MC0_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00610a2u)	/* Read Data and B0t Flip Register 33 */
#define MTU_MC0_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00610a4u)	/* Read Data and B0t Flip Register 34 */
#define MTU_MC0_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00610a6u)	/* Read Data and B0t Flip Register 35 */
#define MTU_MC0_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00610a8u)	/* Read Data and B0t Flip Register 36 */
#define MTU_MC0_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00610aau)	/* Read Data and B0t Flip Register 37 */
#define MTU_MC0_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00610acu)	/* Read Data and B0t Flip Register 38 */
#define MTU_MC0_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00610aeu)	/* Read Data and B0t Flip Register 39 */
#define MTU_MC0_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061068u)	/* Read Data and B0t Flip Register 4 */
#define MTU_MC0_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00610b0u)	/* Read Data and B0t Flip Register 40 */
#define MTU_MC0_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00610b2u)	/* Read Data and B0t Flip Register 41 */
#define MTU_MC0_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00610b4u)	/* Read Data and B0t Flip Register 42 */
#define MTU_MC0_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00610b6u)	/* Read Data and B0t Flip Register 43 */
#define MTU_MC0_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00610b8u)	/* Read Data and B0t Flip Register 44 */
#define MTU_MC0_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00610bau)	/* Read Data and B0t Flip Register 45 */
#define MTU_MC0_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00610bcu)	/* Read Data and B0t Flip Register 46 */
#define MTU_MC0_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00610beu)	/* Read Data and B0t Flip Register 47 */
#define MTU_MC0_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00610c0u)	/* Read Data and B0t Flip Register 48 */
#define MTU_MC0_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00610c2u)	/* Read Data and B0t Flip Register 49 */
#define MTU_MC0_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006106au)	/* Read Data and B0t Flip Register 5 */
#define MTU_MC0_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00610c4u)	/* Read Data and B0t Flip Register 50 */
#define MTU_MC0_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00610c6u)	/* Read Data and B0t Flip Register 51 */
#define MTU_MC0_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00610c8u)	/* Read Data and B0t Flip Register 52 */
#define MTU_MC0_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00610cau)	/* Read Data and B0t Flip Register 53 */
#define MTU_MC0_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00610ccu)	/* Read Data and B0t Flip Register 54 */
#define MTU_MC0_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00610ceu)	/* Read Data and B0t Flip Register 55 */
#define MTU_MC0_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00610d0u)	/* Read Data and B0t Flip Register 56 */
#define MTU_MC0_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00610d2u)	/* Read Data and B0t Flip Register 57 */
#define MTU_MC0_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00610d4u)	/* Read Data and B0t Flip Register 58 */
#define MTU_MC0_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00610d6u)	/* Read Data and B0t Flip Register 59 */
#define MTU_MC0_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006106cu)	/* Read Data and B0t Flip Register 6 */
#define MTU_MC0_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00610d8u)	/* Read Data and B0t Flip Register 60 */
#define MTU_MC0_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00610dau)	/* Read Data and B0t Flip Register 61 */
#define MTU_MC0_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00610dcu)	/* Read Data and B0t Flip Register 62 */
#define MTU_MC0_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00610deu)	/* Read Data and B0t Flip Register 63 */
#define MTU_MC0_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00610e0u)	/* Read Data and B0t Flip Register 64 */
#define MTU_MC0_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00610e2u)	/* Read Data and B0t Flip Register 65 */
#define MTU_MC0_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00610e4u)	/* Read Data and B0t Flip Register 66 */
#define MTU_MC0_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006106eu)	/* Read Data and B0t Flip Register 7 */
#define MTU_MC0_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061070u)	/* Read Data and B0t Flip Register 8 */
#define MTU_MC0_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061072u)	/* Read Data and B0t Flip Register 9 */
#define MTU_MC10_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061a60u)	/* Read Data and B10t Flip Register 0 */
#define MTU_MC10_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061a62u)	/* Read Data and B10t Flip Register 1 */
#define MTU_MC10_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061a74u)	/* Read Data and B10t Flip Register 10 */
#define MTU_MC10_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061a76u)	/* Read Data and B10t Flip Register 11 */
#define MTU_MC10_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061a78u)	/* Read Data and B10t Flip Register 12 */
#define MTU_MC10_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0061a7au)	/* Read Data and B10t Flip Register 13 */
#define MTU_MC10_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0061a7cu)	/* Read Data and B10t Flip Register 14 */
#define MTU_MC10_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0061a7eu)	/* Read Data and B10t Flip Register 15 */
#define MTU_MC10_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061a80u)	/* Read Data and B10t Flip Register 16 */
#define MTU_MC10_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061a82u)	/* Read Data and B10t Flip Register 17 */
#define MTU_MC10_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061a84u)	/* Read Data and B10t Flip Register 18 */
#define MTU_MC10_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061a86u)	/* Read Data and B10t Flip Register 19 */
#define MTU_MC10_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061a64u)	/* Read Data and B10t Flip Register 2 */
#define MTU_MC10_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061a88u)	/* Read Data and B10t Flip Register 20 */
#define MTU_MC10_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0061a8au)	/* Read Data and B10t Flip Register 21 */
#define MTU_MC10_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0061a8cu)	/* Read Data and B10t Flip Register 22 */
#define MTU_MC10_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0061a8eu)	/* Read Data and B10t Flip Register 23 */
#define MTU_MC10_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061a90u)	/* Read Data and B10t Flip Register 24 */
#define MTU_MC10_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061a92u)	/* Read Data and B10t Flip Register 25 */
#define MTU_MC10_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061a94u)	/* Read Data and B10t Flip Register 26 */
#define MTU_MC10_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061a96u)	/* Read Data and B10t Flip Register 27 */
#define MTU_MC10_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061a98u)	/* Read Data and B10t Flip Register 28 */
#define MTU_MC10_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0061a9au)	/* Read Data and B10t Flip Register 29 */
#define MTU_MC10_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061a66u)	/* Read Data and B10t Flip Register 3 */
#define MTU_MC10_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0061a9cu)	/* Read Data and B10t Flip Register 30 */
#define MTU_MC10_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0061a9eu)	/* Read Data and B10t Flip Register 31 */
#define MTU_MC10_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0061aa0u)	/* Read Data and B10t Flip Register 32 */
#define MTU_MC10_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0061aa2u)	/* Read Data and B10t Flip Register 33 */
#define MTU_MC10_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0061aa4u)	/* Read Data and B10t Flip Register 34 */
#define MTU_MC10_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0061aa6u)	/* Read Data and B10t Flip Register 35 */
#define MTU_MC10_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0061aa8u)	/* Read Data and B10t Flip Register 36 */
#define MTU_MC10_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0061aaau)	/* Read Data and B10t Flip Register 37 */
#define MTU_MC10_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0061aacu)	/* Read Data and B10t Flip Register 38 */
#define MTU_MC10_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0061aaeu)	/* Read Data and B10t Flip Register 39 */
#define MTU_MC10_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061a68u)	/* Read Data and B10t Flip Register 4 */
#define MTU_MC10_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0061ab0u)	/* Read Data and B10t Flip Register 40 */
#define MTU_MC10_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0061ab2u)	/* Read Data and B10t Flip Register 41 */
#define MTU_MC10_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0061ab4u)	/* Read Data and B10t Flip Register 42 */
#define MTU_MC10_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0061ab6u)	/* Read Data and B10t Flip Register 43 */
#define MTU_MC10_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0061ab8u)	/* Read Data and B10t Flip Register 44 */
#define MTU_MC10_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0061abau)	/* Read Data and B10t Flip Register 45 */
#define MTU_MC10_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0061abcu)	/* Read Data and B10t Flip Register 46 */
#define MTU_MC10_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0061abeu)	/* Read Data and B10t Flip Register 47 */
#define MTU_MC10_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0061ac0u)	/* Read Data and B10t Flip Register 48 */
#define MTU_MC10_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0061ac2u)	/* Read Data and B10t Flip Register 49 */
#define MTU_MC10_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0061a6au)	/* Read Data and B10t Flip Register 5 */
#define MTU_MC10_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0061ac4u)	/* Read Data and B10t Flip Register 50 */
#define MTU_MC10_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0061ac6u)	/* Read Data and B10t Flip Register 51 */
#define MTU_MC10_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0061ac8u)	/* Read Data and B10t Flip Register 52 */
#define MTU_MC10_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0061acau)	/* Read Data and B10t Flip Register 53 */
#define MTU_MC10_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0061accu)	/* Read Data and B10t Flip Register 54 */
#define MTU_MC10_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0061aceu)	/* Read Data and B10t Flip Register 55 */
#define MTU_MC10_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0061ad0u)	/* Read Data and B10t Flip Register 56 */
#define MTU_MC10_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0061ad2u)	/* Read Data and B10t Flip Register 57 */
#define MTU_MC10_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0061ad4u)	/* Read Data and B10t Flip Register 58 */
#define MTU_MC10_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0061ad6u)	/* Read Data and B10t Flip Register 59 */
#define MTU_MC10_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0061a6cu)	/* Read Data and B10t Flip Register 6 */
#define MTU_MC10_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0061ad8u)	/* Read Data and B10t Flip Register 60 */
#define MTU_MC10_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0061adau)	/* Read Data and B10t Flip Register 61 */
#define MTU_MC10_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0061adcu)	/* Read Data and B10t Flip Register 62 */
#define MTU_MC10_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0061adeu)	/* Read Data and B10t Flip Register 63 */
#define MTU_MC10_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0061ae0u)	/* Read Data and B10t Flip Register 64 */
#define MTU_MC10_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0061ae2u)	/* Read Data and B10t Flip Register 65 */
#define MTU_MC10_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0061ae4u)	/* Read Data and B10t Flip Register 66 */
#define MTU_MC10_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0061a6eu)	/* Read Data and B10t Flip Register 7 */
#define MTU_MC10_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061a70u)	/* Read Data and B10t Flip Register 8 */
#define MTU_MC10_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061a72u)	/* Read Data and B10t Flip Register 9 */
#define MTU_MC11_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061b60u)	/* Read Data and B11t Flip Register 0 */
#define MTU_MC11_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061b62u)	/* Read Data and B11t Flip Register 1 */
#define MTU_MC11_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061b74u)	/* Read Data and B11t Flip Register 10 */
#define MTU_MC11_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061b76u)	/* Read Data and B11t Flip Register 11 */
#define MTU_MC11_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061b78u)	/* Read Data and B11t Flip Register 12 */
#define MTU_MC11_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0061b7au)	/* Read Data and B11t Flip Register 13 */
#define MTU_MC11_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0061b7cu)	/* Read Data and B11t Flip Register 14 */
#define MTU_MC11_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0061b7eu)	/* Read Data and B11t Flip Register 15 */
#define MTU_MC11_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061b80u)	/* Read Data and B11t Flip Register 16 */
#define MTU_MC11_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061b82u)	/* Read Data and B11t Flip Register 17 */
#define MTU_MC11_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061b84u)	/* Read Data and B11t Flip Register 18 */
#define MTU_MC11_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061b86u)	/* Read Data and B11t Flip Register 19 */
#define MTU_MC11_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061b64u)	/* Read Data and B11t Flip Register 2 */
#define MTU_MC11_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061b88u)	/* Read Data and B11t Flip Register 20 */
#define MTU_MC11_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0061b8au)	/* Read Data and B11t Flip Register 21 */
#define MTU_MC11_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0061b8cu)	/* Read Data and B11t Flip Register 22 */
#define MTU_MC11_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0061b8eu)	/* Read Data and B11t Flip Register 23 */
#define MTU_MC11_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061b90u)	/* Read Data and B11t Flip Register 24 */
#define MTU_MC11_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061b92u)	/* Read Data and B11t Flip Register 25 */
#define MTU_MC11_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061b94u)	/* Read Data and B11t Flip Register 26 */
#define MTU_MC11_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061b96u)	/* Read Data and B11t Flip Register 27 */
#define MTU_MC11_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061b98u)	/* Read Data and B11t Flip Register 28 */
#define MTU_MC11_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0061b9au)	/* Read Data and B11t Flip Register 29 */
#define MTU_MC11_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061b66u)	/* Read Data and B11t Flip Register 3 */
#define MTU_MC11_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0061b9cu)	/* Read Data and B11t Flip Register 30 */
#define MTU_MC11_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0061b9eu)	/* Read Data and B11t Flip Register 31 */
#define MTU_MC11_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0061ba0u)	/* Read Data and B11t Flip Register 32 */
#define MTU_MC11_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0061ba2u)	/* Read Data and B11t Flip Register 33 */
#define MTU_MC11_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0061ba4u)	/* Read Data and B11t Flip Register 34 */
#define MTU_MC11_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0061ba6u)	/* Read Data and B11t Flip Register 35 */
#define MTU_MC11_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0061ba8u)	/* Read Data and B11t Flip Register 36 */
#define MTU_MC11_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0061baau)	/* Read Data and B11t Flip Register 37 */
#define MTU_MC11_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0061bacu)	/* Read Data and B11t Flip Register 38 */
#define MTU_MC11_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0061baeu)	/* Read Data and B11t Flip Register 39 */
#define MTU_MC11_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061b68u)	/* Read Data and B11t Flip Register 4 */
#define MTU_MC11_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0061bb0u)	/* Read Data and B11t Flip Register 40 */
#define MTU_MC11_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0061bb2u)	/* Read Data and B11t Flip Register 41 */
#define MTU_MC11_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0061bb4u)	/* Read Data and B11t Flip Register 42 */
#define MTU_MC11_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0061bb6u)	/* Read Data and B11t Flip Register 43 */
#define MTU_MC11_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0061bb8u)	/* Read Data and B11t Flip Register 44 */
#define MTU_MC11_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0061bbau)	/* Read Data and B11t Flip Register 45 */
#define MTU_MC11_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0061bbcu)	/* Read Data and B11t Flip Register 46 */
#define MTU_MC11_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0061bbeu)	/* Read Data and B11t Flip Register 47 */
#define MTU_MC11_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0061bc0u)	/* Read Data and B11t Flip Register 48 */
#define MTU_MC11_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0061bc2u)	/* Read Data and B11t Flip Register 49 */
#define MTU_MC11_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0061b6au)	/* Read Data and B11t Flip Register 5 */
#define MTU_MC11_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0061bc4u)	/* Read Data and B11t Flip Register 50 */
#define MTU_MC11_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0061bc6u)	/* Read Data and B11t Flip Register 51 */
#define MTU_MC11_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0061bc8u)	/* Read Data and B11t Flip Register 52 */
#define MTU_MC11_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0061bcau)	/* Read Data and B11t Flip Register 53 */
#define MTU_MC11_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0061bccu)	/* Read Data and B11t Flip Register 54 */
#define MTU_MC11_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0061bceu)	/* Read Data and B11t Flip Register 55 */
#define MTU_MC11_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0061bd0u)	/* Read Data and B11t Flip Register 56 */
#define MTU_MC11_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0061bd2u)	/* Read Data and B11t Flip Register 57 */
#define MTU_MC11_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0061bd4u)	/* Read Data and B11t Flip Register 58 */
#define MTU_MC11_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0061bd6u)	/* Read Data and B11t Flip Register 59 */
#define MTU_MC11_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0061b6cu)	/* Read Data and B11t Flip Register 6 */
#define MTU_MC11_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0061bd8u)	/* Read Data and B11t Flip Register 60 */
#define MTU_MC11_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0061bdau)	/* Read Data and B11t Flip Register 61 */
#define MTU_MC11_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0061bdcu)	/* Read Data and B11t Flip Register 62 */
#define MTU_MC11_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0061bdeu)	/* Read Data and B11t Flip Register 63 */
#define MTU_MC11_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0061be0u)	/* Read Data and B11t Flip Register 64 */
#define MTU_MC11_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0061be2u)	/* Read Data and B11t Flip Register 65 */
#define MTU_MC11_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0061be4u)	/* Read Data and B11t Flip Register 66 */
#define MTU_MC11_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0061b6eu)	/* Read Data and B11t Flip Register 7 */
#define MTU_MC11_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061b70u)	/* Read Data and B11t Flip Register 8 */
#define MTU_MC11_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061b72u)	/* Read Data and B11t Flip Register 9 */
#define MTU_MC12_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061c60u)	/* Read Data and B12t Flip Register 0 */
#define MTU_MC12_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061c62u)	/* Read Data and B12t Flip Register 1 */
#define MTU_MC12_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061c74u)	/* Read Data and B12t Flip Register 10 */
#define MTU_MC12_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061c76u)	/* Read Data and B12t Flip Register 11 */
#define MTU_MC12_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061c78u)	/* Read Data and B12t Flip Register 12 */
#define MTU_MC12_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0061c7au)	/* Read Data and B12t Flip Register 13 */
#define MTU_MC12_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0061c7cu)	/* Read Data and B12t Flip Register 14 */
#define MTU_MC12_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0061c7eu)	/* Read Data and B12t Flip Register 15 */
#define MTU_MC12_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061c80u)	/* Read Data and B12t Flip Register 16 */
#define MTU_MC12_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061c82u)	/* Read Data and B12t Flip Register 17 */
#define MTU_MC12_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061c84u)	/* Read Data and B12t Flip Register 18 */
#define MTU_MC12_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061c86u)	/* Read Data and B12t Flip Register 19 */
#define MTU_MC12_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061c64u)	/* Read Data and B12t Flip Register 2 */
#define MTU_MC12_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061c88u)	/* Read Data and B12t Flip Register 20 */
#define MTU_MC12_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0061c8au)	/* Read Data and B12t Flip Register 21 */
#define MTU_MC12_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0061c8cu)	/* Read Data and B12t Flip Register 22 */
#define MTU_MC12_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0061c8eu)	/* Read Data and B12t Flip Register 23 */
#define MTU_MC12_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061c90u)	/* Read Data and B12t Flip Register 24 */
#define MTU_MC12_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061c92u)	/* Read Data and B12t Flip Register 25 */
#define MTU_MC12_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061c94u)	/* Read Data and B12t Flip Register 26 */
#define MTU_MC12_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061c96u)	/* Read Data and B12t Flip Register 27 */
#define MTU_MC12_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061c98u)	/* Read Data and B12t Flip Register 28 */
#define MTU_MC12_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0061c9au)	/* Read Data and B12t Flip Register 29 */
#define MTU_MC12_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061c66u)	/* Read Data and B12t Flip Register 3 */
#define MTU_MC12_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0061c9cu)	/* Read Data and B12t Flip Register 30 */
#define MTU_MC12_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0061c9eu)	/* Read Data and B12t Flip Register 31 */
#define MTU_MC12_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0061ca0u)	/* Read Data and B12t Flip Register 32 */
#define MTU_MC12_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0061ca2u)	/* Read Data and B12t Flip Register 33 */
#define MTU_MC12_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0061ca4u)	/* Read Data and B12t Flip Register 34 */
#define MTU_MC12_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0061ca6u)	/* Read Data and B12t Flip Register 35 */
#define MTU_MC12_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0061ca8u)	/* Read Data and B12t Flip Register 36 */
#define MTU_MC12_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0061caau)	/* Read Data and B12t Flip Register 37 */
#define MTU_MC12_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0061cacu)	/* Read Data and B12t Flip Register 38 */
#define MTU_MC12_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0061caeu)	/* Read Data and B12t Flip Register 39 */
#define MTU_MC12_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061c68u)	/* Read Data and B12t Flip Register 4 */
#define MTU_MC12_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0061cb0u)	/* Read Data and B12t Flip Register 40 */
#define MTU_MC12_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0061cb2u)	/* Read Data and B12t Flip Register 41 */
#define MTU_MC12_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0061cb4u)	/* Read Data and B12t Flip Register 42 */
#define MTU_MC12_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0061cb6u)	/* Read Data and B12t Flip Register 43 */
#define MTU_MC12_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0061cb8u)	/* Read Data and B12t Flip Register 44 */
#define MTU_MC12_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0061cbau)	/* Read Data and B12t Flip Register 45 */
#define MTU_MC12_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0061cbcu)	/* Read Data and B12t Flip Register 46 */
#define MTU_MC12_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0061cbeu)	/* Read Data and B12t Flip Register 47 */
#define MTU_MC12_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0061cc0u)	/* Read Data and B12t Flip Register 48 */
#define MTU_MC12_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0061cc2u)	/* Read Data and B12t Flip Register 49 */
#define MTU_MC12_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0061c6au)	/* Read Data and B12t Flip Register 5 */
#define MTU_MC12_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0061cc4u)	/* Read Data and B12t Flip Register 50 */
#define MTU_MC12_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0061cc6u)	/* Read Data and B12t Flip Register 51 */
#define MTU_MC12_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0061cc8u)	/* Read Data and B12t Flip Register 52 */
#define MTU_MC12_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0061ccau)	/* Read Data and B12t Flip Register 53 */
#define MTU_MC12_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0061cccu)	/* Read Data and B12t Flip Register 54 */
#define MTU_MC12_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0061cceu)	/* Read Data and B12t Flip Register 55 */
#define MTU_MC12_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0061cd0u)	/* Read Data and B12t Flip Register 56 */
#define MTU_MC12_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0061cd2u)	/* Read Data and B12t Flip Register 57 */
#define MTU_MC12_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0061cd4u)	/* Read Data and B12t Flip Register 58 */
#define MTU_MC12_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0061cd6u)	/* Read Data and B12t Flip Register 59 */
#define MTU_MC12_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0061c6cu)	/* Read Data and B12t Flip Register 6 */
#define MTU_MC12_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0061cd8u)	/* Read Data and B12t Flip Register 60 */
#define MTU_MC12_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0061cdau)	/* Read Data and B12t Flip Register 61 */
#define MTU_MC12_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0061cdcu)	/* Read Data and B12t Flip Register 62 */
#define MTU_MC12_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0061cdeu)	/* Read Data and B12t Flip Register 63 */
#define MTU_MC12_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0061ce0u)	/* Read Data and B12t Flip Register 64 */
#define MTU_MC12_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0061ce2u)	/* Read Data and B12t Flip Register 65 */
#define MTU_MC12_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0061ce4u)	/* Read Data and B12t Flip Register 66 */
#define MTU_MC12_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0061c6eu)	/* Read Data and B12t Flip Register 7 */
#define MTU_MC12_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061c70u)	/* Read Data and B12t Flip Register 8 */
#define MTU_MC12_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061c72u)	/* Read Data and B12t Flip Register 9 */
#define MTU_MC13_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061d60u)	/* Read Data and B13t Flip Register 0 */
#define MTU_MC13_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061d62u)	/* Read Data and B13t Flip Register 1 */
#define MTU_MC13_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061d74u)	/* Read Data and B13t Flip Register 10 */
#define MTU_MC13_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061d76u)	/* Read Data and B13t Flip Register 11 */
#define MTU_MC13_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061d78u)	/* Read Data and B13t Flip Register 12 */
#define MTU_MC13_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0061d7au)	/* Read Data and B13t Flip Register 13 */
#define MTU_MC13_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0061d7cu)	/* Read Data and B13t Flip Register 14 */
#define MTU_MC13_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0061d7eu)	/* Read Data and B13t Flip Register 15 */
#define MTU_MC13_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061d80u)	/* Read Data and B13t Flip Register 16 */
#define MTU_MC13_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061d82u)	/* Read Data and B13t Flip Register 17 */
#define MTU_MC13_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061d84u)	/* Read Data and B13t Flip Register 18 */
#define MTU_MC13_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061d86u)	/* Read Data and B13t Flip Register 19 */
#define MTU_MC13_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061d64u)	/* Read Data and B13t Flip Register 2 */
#define MTU_MC13_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061d88u)	/* Read Data and B13t Flip Register 20 */
#define MTU_MC13_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0061d8au)	/* Read Data and B13t Flip Register 21 */
#define MTU_MC13_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0061d8cu)	/* Read Data and B13t Flip Register 22 */
#define MTU_MC13_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0061d8eu)	/* Read Data and B13t Flip Register 23 */
#define MTU_MC13_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061d90u)	/* Read Data and B13t Flip Register 24 */
#define MTU_MC13_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061d92u)	/* Read Data and B13t Flip Register 25 */
#define MTU_MC13_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061d94u)	/* Read Data and B13t Flip Register 26 */
#define MTU_MC13_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061d96u)	/* Read Data and B13t Flip Register 27 */
#define MTU_MC13_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061d98u)	/* Read Data and B13t Flip Register 28 */
#define MTU_MC13_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0061d9au)	/* Read Data and B13t Flip Register 29 */
#define MTU_MC13_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061d66u)	/* Read Data and B13t Flip Register 3 */
#define MTU_MC13_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0061d9cu)	/* Read Data and B13t Flip Register 30 */
#define MTU_MC13_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0061d9eu)	/* Read Data and B13t Flip Register 31 */
#define MTU_MC13_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0061da0u)	/* Read Data and B13t Flip Register 32 */
#define MTU_MC13_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0061da2u)	/* Read Data and B13t Flip Register 33 */
#define MTU_MC13_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0061da4u)	/* Read Data and B13t Flip Register 34 */
#define MTU_MC13_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0061da6u)	/* Read Data and B13t Flip Register 35 */
#define MTU_MC13_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0061da8u)	/* Read Data and B13t Flip Register 36 */
#define MTU_MC13_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0061daau)	/* Read Data and B13t Flip Register 37 */
#define MTU_MC13_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0061dacu)	/* Read Data and B13t Flip Register 38 */
#define MTU_MC13_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0061daeu)	/* Read Data and B13t Flip Register 39 */
#define MTU_MC13_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061d68u)	/* Read Data and B13t Flip Register 4 */
#define MTU_MC13_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0061db0u)	/* Read Data and B13t Flip Register 40 */
#define MTU_MC13_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0061db2u)	/* Read Data and B13t Flip Register 41 */
#define MTU_MC13_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0061db4u)	/* Read Data and B13t Flip Register 42 */
#define MTU_MC13_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0061db6u)	/* Read Data and B13t Flip Register 43 */
#define MTU_MC13_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0061db8u)	/* Read Data and B13t Flip Register 44 */
#define MTU_MC13_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0061dbau)	/* Read Data and B13t Flip Register 45 */
#define MTU_MC13_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0061dbcu)	/* Read Data and B13t Flip Register 46 */
#define MTU_MC13_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0061dbeu)	/* Read Data and B13t Flip Register 47 */
#define MTU_MC13_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0061dc0u)	/* Read Data and B13t Flip Register 48 */
#define MTU_MC13_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0061dc2u)	/* Read Data and B13t Flip Register 49 */
#define MTU_MC13_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0061d6au)	/* Read Data and B13t Flip Register 5 */
#define MTU_MC13_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0061dc4u)	/* Read Data and B13t Flip Register 50 */
#define MTU_MC13_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0061dc6u)	/* Read Data and B13t Flip Register 51 */
#define MTU_MC13_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0061dc8u)	/* Read Data and B13t Flip Register 52 */
#define MTU_MC13_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0061dcau)	/* Read Data and B13t Flip Register 53 */
#define MTU_MC13_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0061dccu)	/* Read Data and B13t Flip Register 54 */
#define MTU_MC13_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0061dceu)	/* Read Data and B13t Flip Register 55 */
#define MTU_MC13_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0061dd0u)	/* Read Data and B13t Flip Register 56 */
#define MTU_MC13_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0061dd2u)	/* Read Data and B13t Flip Register 57 */
#define MTU_MC13_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0061dd4u)	/* Read Data and B13t Flip Register 58 */
#define MTU_MC13_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0061dd6u)	/* Read Data and B13t Flip Register 59 */
#define MTU_MC13_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0061d6cu)	/* Read Data and B13t Flip Register 6 */
#define MTU_MC13_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0061dd8u)	/* Read Data and B13t Flip Register 60 */
#define MTU_MC13_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0061ddau)	/* Read Data and B13t Flip Register 61 */
#define MTU_MC13_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0061ddcu)	/* Read Data and B13t Flip Register 62 */
#define MTU_MC13_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0061ddeu)	/* Read Data and B13t Flip Register 63 */
#define MTU_MC13_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0061de0u)	/* Read Data and B13t Flip Register 64 */
#define MTU_MC13_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0061de2u)	/* Read Data and B13t Flip Register 65 */
#define MTU_MC13_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0061de4u)	/* Read Data and B13t Flip Register 66 */
#define MTU_MC13_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0061d6eu)	/* Read Data and B13t Flip Register 7 */
#define MTU_MC13_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061d70u)	/* Read Data and B13t Flip Register 8 */
#define MTU_MC13_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061d72u)	/* Read Data and B13t Flip Register 9 */
#define MTU_MC14_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061e60u)	/* Read Data and B14t Flip Register 0 */
#define MTU_MC14_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061e62u)	/* Read Data and B14t Flip Register 1 */
#define MTU_MC14_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061e74u)	/* Read Data and B14t Flip Register 10 */
#define MTU_MC14_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061e76u)	/* Read Data and B14t Flip Register 11 */
#define MTU_MC14_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061e78u)	/* Read Data and B14t Flip Register 12 */
#define MTU_MC14_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0061e7au)	/* Read Data and B14t Flip Register 13 */
#define MTU_MC14_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0061e7cu)	/* Read Data and B14t Flip Register 14 */
#define MTU_MC14_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0061e7eu)	/* Read Data and B14t Flip Register 15 */
#define MTU_MC14_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061e80u)	/* Read Data and B14t Flip Register 16 */
#define MTU_MC14_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061e82u)	/* Read Data and B14t Flip Register 17 */
#define MTU_MC14_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061e84u)	/* Read Data and B14t Flip Register 18 */
#define MTU_MC14_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061e86u)	/* Read Data and B14t Flip Register 19 */
#define MTU_MC14_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061e64u)	/* Read Data and B14t Flip Register 2 */
#define MTU_MC14_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061e88u)	/* Read Data and B14t Flip Register 20 */
#define MTU_MC14_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0061e8au)	/* Read Data and B14t Flip Register 21 */
#define MTU_MC14_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0061e8cu)	/* Read Data and B14t Flip Register 22 */
#define MTU_MC14_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0061e8eu)	/* Read Data and B14t Flip Register 23 */
#define MTU_MC14_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061e90u)	/* Read Data and B14t Flip Register 24 */
#define MTU_MC14_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061e92u)	/* Read Data and B14t Flip Register 25 */
#define MTU_MC14_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061e94u)	/* Read Data and B14t Flip Register 26 */
#define MTU_MC14_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061e96u)	/* Read Data and B14t Flip Register 27 */
#define MTU_MC14_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061e98u)	/* Read Data and B14t Flip Register 28 */
#define MTU_MC14_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0061e9au)	/* Read Data and B14t Flip Register 29 */
#define MTU_MC14_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061e66u)	/* Read Data and B14t Flip Register 3 */
#define MTU_MC14_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0061e9cu)	/* Read Data and B14t Flip Register 30 */
#define MTU_MC14_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0061e9eu)	/* Read Data and B14t Flip Register 31 */
#define MTU_MC14_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0061ea0u)	/* Read Data and B14t Flip Register 32 */
#define MTU_MC14_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0061ea2u)	/* Read Data and B14t Flip Register 33 */
#define MTU_MC14_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0061ea4u)	/* Read Data and B14t Flip Register 34 */
#define MTU_MC14_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0061ea6u)	/* Read Data and B14t Flip Register 35 */
#define MTU_MC14_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0061ea8u)	/* Read Data and B14t Flip Register 36 */
#define MTU_MC14_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0061eaau)	/* Read Data and B14t Flip Register 37 */
#define MTU_MC14_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0061eacu)	/* Read Data and B14t Flip Register 38 */
#define MTU_MC14_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0061eaeu)	/* Read Data and B14t Flip Register 39 */
#define MTU_MC14_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061e68u)	/* Read Data and B14t Flip Register 4 */
#define MTU_MC14_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0061eb0u)	/* Read Data and B14t Flip Register 40 */
#define MTU_MC14_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0061eb2u)	/* Read Data and B14t Flip Register 41 */
#define MTU_MC14_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0061eb4u)	/* Read Data and B14t Flip Register 42 */
#define MTU_MC14_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0061eb6u)	/* Read Data and B14t Flip Register 43 */
#define MTU_MC14_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0061eb8u)	/* Read Data and B14t Flip Register 44 */
#define MTU_MC14_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0061ebau)	/* Read Data and B14t Flip Register 45 */
#define MTU_MC14_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0061ebcu)	/* Read Data and B14t Flip Register 46 */
#define MTU_MC14_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0061ebeu)	/* Read Data and B14t Flip Register 47 */
#define MTU_MC14_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0061ec0u)	/* Read Data and B14t Flip Register 48 */
#define MTU_MC14_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0061ec2u)	/* Read Data and B14t Flip Register 49 */
#define MTU_MC14_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0061e6au)	/* Read Data and B14t Flip Register 5 */
#define MTU_MC14_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0061ec4u)	/* Read Data and B14t Flip Register 50 */
#define MTU_MC14_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0061ec6u)	/* Read Data and B14t Flip Register 51 */
#define MTU_MC14_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0061ec8u)	/* Read Data and B14t Flip Register 52 */
#define MTU_MC14_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0061ecau)	/* Read Data and B14t Flip Register 53 */
#define MTU_MC14_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0061eccu)	/* Read Data and B14t Flip Register 54 */
#define MTU_MC14_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0061eceu)	/* Read Data and B14t Flip Register 55 */
#define MTU_MC14_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0061ed0u)	/* Read Data and B14t Flip Register 56 */
#define MTU_MC14_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0061ed2u)	/* Read Data and B14t Flip Register 57 */
#define MTU_MC14_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0061ed4u)	/* Read Data and B14t Flip Register 58 */
#define MTU_MC14_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0061ed6u)	/* Read Data and B14t Flip Register 59 */
#define MTU_MC14_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0061e6cu)	/* Read Data and B14t Flip Register 6 */
#define MTU_MC14_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0061ed8u)	/* Read Data and B14t Flip Register 60 */
#define MTU_MC14_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0061edau)	/* Read Data and B14t Flip Register 61 */
#define MTU_MC14_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0061edcu)	/* Read Data and B14t Flip Register 62 */
#define MTU_MC14_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0061edeu)	/* Read Data and B14t Flip Register 63 */
#define MTU_MC14_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0061ee0u)	/* Read Data and B14t Flip Register 64 */
#define MTU_MC14_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0061ee2u)	/* Read Data and B14t Flip Register 65 */
#define MTU_MC14_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0061ee4u)	/* Read Data and B14t Flip Register 66 */
#define MTU_MC14_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0061e6eu)	/* Read Data and B14t Flip Register 7 */
#define MTU_MC14_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061e70u)	/* Read Data and B14t Flip Register 8 */
#define MTU_MC14_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061e72u)	/* Read Data and B14t Flip Register 9 */
#define MTU_MC15_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061f60u)	/* Read Data and B15t Flip Register 0 */
#define MTU_MC15_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061f62u)	/* Read Data and B15t Flip Register 1 */
#define MTU_MC15_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061f74u)	/* Read Data and B15t Flip Register 10 */
#define MTU_MC15_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061f76u)	/* Read Data and B15t Flip Register 11 */
#define MTU_MC15_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061f78u)	/* Read Data and B15t Flip Register 12 */
#define MTU_MC15_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0061f7au)	/* Read Data and B15t Flip Register 13 */
#define MTU_MC15_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0061f7cu)	/* Read Data and B15t Flip Register 14 */
#define MTU_MC15_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0061f7eu)	/* Read Data and B15t Flip Register 15 */
#define MTU_MC15_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061f80u)	/* Read Data and B15t Flip Register 16 */
#define MTU_MC15_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061f82u)	/* Read Data and B15t Flip Register 17 */
#define MTU_MC15_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061f84u)	/* Read Data and B15t Flip Register 18 */
#define MTU_MC15_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061f86u)	/* Read Data and B15t Flip Register 19 */
#define MTU_MC15_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061f64u)	/* Read Data and B15t Flip Register 2 */
#define MTU_MC15_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061f88u)	/* Read Data and B15t Flip Register 20 */
#define MTU_MC15_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0061f8au)	/* Read Data and B15t Flip Register 21 */
#define MTU_MC15_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0061f8cu)	/* Read Data and B15t Flip Register 22 */
#define MTU_MC15_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0061f8eu)	/* Read Data and B15t Flip Register 23 */
#define MTU_MC15_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061f90u)	/* Read Data and B15t Flip Register 24 */
#define MTU_MC15_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061f92u)	/* Read Data and B15t Flip Register 25 */
#define MTU_MC15_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061f94u)	/* Read Data and B15t Flip Register 26 */
#define MTU_MC15_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061f96u)	/* Read Data and B15t Flip Register 27 */
#define MTU_MC15_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061f98u)	/* Read Data and B15t Flip Register 28 */
#define MTU_MC15_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0061f9au)	/* Read Data and B15t Flip Register 29 */
#define MTU_MC15_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061f66u)	/* Read Data and B15t Flip Register 3 */
#define MTU_MC15_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0061f9cu)	/* Read Data and B15t Flip Register 30 */
#define MTU_MC15_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0061f9eu)	/* Read Data and B15t Flip Register 31 */
#define MTU_MC15_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0061fa0u)	/* Read Data and B15t Flip Register 32 */
#define MTU_MC15_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0061fa2u)	/* Read Data and B15t Flip Register 33 */
#define MTU_MC15_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0061fa4u)	/* Read Data and B15t Flip Register 34 */
#define MTU_MC15_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0061fa6u)	/* Read Data and B15t Flip Register 35 */
#define MTU_MC15_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0061fa8u)	/* Read Data and B15t Flip Register 36 */
#define MTU_MC15_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0061faau)	/* Read Data and B15t Flip Register 37 */
#define MTU_MC15_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0061facu)	/* Read Data and B15t Flip Register 38 */
#define MTU_MC15_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0061faeu)	/* Read Data and B15t Flip Register 39 */
#define MTU_MC15_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061f68u)	/* Read Data and B15t Flip Register 4 */
#define MTU_MC15_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0061fb0u)	/* Read Data and B15t Flip Register 40 */
#define MTU_MC15_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0061fb2u)	/* Read Data and B15t Flip Register 41 */
#define MTU_MC15_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0061fb4u)	/* Read Data and B15t Flip Register 42 */
#define MTU_MC15_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0061fb6u)	/* Read Data and B15t Flip Register 43 */
#define MTU_MC15_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0061fb8u)	/* Read Data and B15t Flip Register 44 */
#define MTU_MC15_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0061fbau)	/* Read Data and B15t Flip Register 45 */
#define MTU_MC15_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0061fbcu)	/* Read Data and B15t Flip Register 46 */
#define MTU_MC15_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0061fbeu)	/* Read Data and B15t Flip Register 47 */
#define MTU_MC15_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0061fc0u)	/* Read Data and B15t Flip Register 48 */
#define MTU_MC15_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0061fc2u)	/* Read Data and B15t Flip Register 49 */
#define MTU_MC15_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0061f6au)	/* Read Data and B15t Flip Register 5 */
#define MTU_MC15_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0061fc4u)	/* Read Data and B15t Flip Register 50 */
#define MTU_MC15_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0061fc6u)	/* Read Data and B15t Flip Register 51 */
#define MTU_MC15_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0061fc8u)	/* Read Data and B15t Flip Register 52 */
#define MTU_MC15_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0061fcau)	/* Read Data and B15t Flip Register 53 */
#define MTU_MC15_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0061fccu)	/* Read Data and B15t Flip Register 54 */
#define MTU_MC15_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0061fceu)	/* Read Data and B15t Flip Register 55 */
#define MTU_MC15_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0061fd0u)	/* Read Data and B15t Flip Register 56 */
#define MTU_MC15_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0061fd2u)	/* Read Data and B15t Flip Register 57 */
#define MTU_MC15_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0061fd4u)	/* Read Data and B15t Flip Register 58 */
#define MTU_MC15_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0061fd6u)	/* Read Data and B15t Flip Register 59 */
#define MTU_MC15_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0061f6cu)	/* Read Data and B15t Flip Register 6 */
#define MTU_MC15_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0061fd8u)	/* Read Data and B15t Flip Register 60 */
#define MTU_MC15_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0061fdau)	/* Read Data and B15t Flip Register 61 */
#define MTU_MC15_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0061fdcu)	/* Read Data and B15t Flip Register 62 */
#define MTU_MC15_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0061fdeu)	/* Read Data and B15t Flip Register 63 */
#define MTU_MC15_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0061fe0u)	/* Read Data and B15t Flip Register 64 */
#define MTU_MC15_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0061fe2u)	/* Read Data and B15t Flip Register 65 */
#define MTU_MC15_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0061fe4u)	/* Read Data and B15t Flip Register 66 */
#define MTU_MC15_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0061f6eu)	/* Read Data and B15t Flip Register 7 */
#define MTU_MC15_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061f70u)	/* Read Data and B15t Flip Register 8 */
#define MTU_MC15_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061f72u)	/* Read Data and B15t Flip Register 9 */
#define MTU_MC16_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062060u)	/* Read Data and B16t Flip Register 0 */
#define MTU_MC16_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062062u)	/* Read Data and B16t Flip Register 1 */
#define MTU_MC16_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062074u)	/* Read Data and B16t Flip Register 10 */
#define MTU_MC16_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062076u)	/* Read Data and B16t Flip Register 11 */
#define MTU_MC16_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062078u)	/* Read Data and B16t Flip Register 12 */
#define MTU_MC16_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006207au)	/* Read Data and B16t Flip Register 13 */
#define MTU_MC16_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006207cu)	/* Read Data and B16t Flip Register 14 */
#define MTU_MC16_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006207eu)	/* Read Data and B16t Flip Register 15 */
#define MTU_MC16_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062080u)	/* Read Data and B16t Flip Register 16 */
#define MTU_MC16_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062082u)	/* Read Data and B16t Flip Register 17 */
#define MTU_MC16_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062084u)	/* Read Data and B16t Flip Register 18 */
#define MTU_MC16_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062086u)	/* Read Data and B16t Flip Register 19 */
#define MTU_MC16_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062064u)	/* Read Data and B16t Flip Register 2 */
#define MTU_MC16_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062088u)	/* Read Data and B16t Flip Register 20 */
#define MTU_MC16_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006208au)	/* Read Data and B16t Flip Register 21 */
#define MTU_MC16_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006208cu)	/* Read Data and B16t Flip Register 22 */
#define MTU_MC16_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006208eu)	/* Read Data and B16t Flip Register 23 */
#define MTU_MC16_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062090u)	/* Read Data and B16t Flip Register 24 */
#define MTU_MC16_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062092u)	/* Read Data and B16t Flip Register 25 */
#define MTU_MC16_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062094u)	/* Read Data and B16t Flip Register 26 */
#define MTU_MC16_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062096u)	/* Read Data and B16t Flip Register 27 */
#define MTU_MC16_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062098u)	/* Read Data and B16t Flip Register 28 */
#define MTU_MC16_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006209au)	/* Read Data and B16t Flip Register 29 */
#define MTU_MC16_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062066u)	/* Read Data and B16t Flip Register 3 */
#define MTU_MC16_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006209cu)	/* Read Data and B16t Flip Register 30 */
#define MTU_MC16_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006209eu)	/* Read Data and B16t Flip Register 31 */
#define MTU_MC16_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00620a0u)	/* Read Data and B16t Flip Register 32 */
#define MTU_MC16_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00620a2u)	/* Read Data and B16t Flip Register 33 */
#define MTU_MC16_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00620a4u)	/* Read Data and B16t Flip Register 34 */
#define MTU_MC16_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00620a6u)	/* Read Data and B16t Flip Register 35 */
#define MTU_MC16_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00620a8u)	/* Read Data and B16t Flip Register 36 */
#define MTU_MC16_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00620aau)	/* Read Data and B16t Flip Register 37 */
#define MTU_MC16_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00620acu)	/* Read Data and B16t Flip Register 38 */
#define MTU_MC16_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00620aeu)	/* Read Data and B16t Flip Register 39 */
#define MTU_MC16_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062068u)	/* Read Data and B16t Flip Register 4 */
#define MTU_MC16_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00620b0u)	/* Read Data and B16t Flip Register 40 */
#define MTU_MC16_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00620b2u)	/* Read Data and B16t Flip Register 41 */
#define MTU_MC16_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00620b4u)	/* Read Data and B16t Flip Register 42 */
#define MTU_MC16_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00620b6u)	/* Read Data and B16t Flip Register 43 */
#define MTU_MC16_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00620b8u)	/* Read Data and B16t Flip Register 44 */
#define MTU_MC16_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00620bau)	/* Read Data and B16t Flip Register 45 */
#define MTU_MC16_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00620bcu)	/* Read Data and B16t Flip Register 46 */
#define MTU_MC16_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00620beu)	/* Read Data and B16t Flip Register 47 */
#define MTU_MC16_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00620c0u)	/* Read Data and B16t Flip Register 48 */
#define MTU_MC16_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00620c2u)	/* Read Data and B16t Flip Register 49 */
#define MTU_MC16_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006206au)	/* Read Data and B16t Flip Register 5 */
#define MTU_MC16_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00620c4u)	/* Read Data and B16t Flip Register 50 */
#define MTU_MC16_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00620c6u)	/* Read Data and B16t Flip Register 51 */
#define MTU_MC16_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00620c8u)	/* Read Data and B16t Flip Register 52 */
#define MTU_MC16_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00620cau)	/* Read Data and B16t Flip Register 53 */
#define MTU_MC16_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00620ccu)	/* Read Data and B16t Flip Register 54 */
#define MTU_MC16_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00620ceu)	/* Read Data and B16t Flip Register 55 */
#define MTU_MC16_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00620d0u)	/* Read Data and B16t Flip Register 56 */
#define MTU_MC16_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00620d2u)	/* Read Data and B16t Flip Register 57 */
#define MTU_MC16_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00620d4u)	/* Read Data and B16t Flip Register 58 */
#define MTU_MC16_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00620d6u)	/* Read Data and B16t Flip Register 59 */
#define MTU_MC16_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006206cu)	/* Read Data and B16t Flip Register 6 */
#define MTU_MC16_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00620d8u)	/* Read Data and B16t Flip Register 60 */
#define MTU_MC16_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00620dau)	/* Read Data and B16t Flip Register 61 */
#define MTU_MC16_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00620dcu)	/* Read Data and B16t Flip Register 62 */
#define MTU_MC16_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00620deu)	/* Read Data and B16t Flip Register 63 */
#define MTU_MC16_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00620e0u)	/* Read Data and B16t Flip Register 64 */
#define MTU_MC16_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00620e2u)	/* Read Data and B16t Flip Register 65 */
#define MTU_MC16_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00620e4u)	/* Read Data and B16t Flip Register 66 */
#define MTU_MC16_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006206eu)	/* Read Data and B16t Flip Register 7 */
#define MTU_MC16_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062070u)	/* Read Data and B16t Flip Register 8 */
#define MTU_MC16_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062072u)	/* Read Data and B16t Flip Register 9 */
#define MTU_MC17_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062160u)	/* Read Data and B17t Flip Register 0 */
#define MTU_MC17_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062162u)	/* Read Data and B17t Flip Register 1 */
#define MTU_MC17_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062174u)	/* Read Data and B17t Flip Register 10 */
#define MTU_MC17_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062176u)	/* Read Data and B17t Flip Register 11 */
#define MTU_MC17_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062178u)	/* Read Data and B17t Flip Register 12 */
#define MTU_MC17_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006217au)	/* Read Data and B17t Flip Register 13 */
#define MTU_MC17_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006217cu)	/* Read Data and B17t Flip Register 14 */
#define MTU_MC17_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006217eu)	/* Read Data and B17t Flip Register 15 */
#define MTU_MC17_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062180u)	/* Read Data and B17t Flip Register 16 */
#define MTU_MC17_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062182u)	/* Read Data and B17t Flip Register 17 */
#define MTU_MC17_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062184u)	/* Read Data and B17t Flip Register 18 */
#define MTU_MC17_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062186u)	/* Read Data and B17t Flip Register 19 */
#define MTU_MC17_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062164u)	/* Read Data and B17t Flip Register 2 */
#define MTU_MC17_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062188u)	/* Read Data and B17t Flip Register 20 */
#define MTU_MC17_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006218au)	/* Read Data and B17t Flip Register 21 */
#define MTU_MC17_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006218cu)	/* Read Data and B17t Flip Register 22 */
#define MTU_MC17_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006218eu)	/* Read Data and B17t Flip Register 23 */
#define MTU_MC17_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062190u)	/* Read Data and B17t Flip Register 24 */
#define MTU_MC17_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062192u)	/* Read Data and B17t Flip Register 25 */
#define MTU_MC17_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062194u)	/* Read Data and B17t Flip Register 26 */
#define MTU_MC17_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062196u)	/* Read Data and B17t Flip Register 27 */
#define MTU_MC17_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062198u)	/* Read Data and B17t Flip Register 28 */
#define MTU_MC17_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006219au)	/* Read Data and B17t Flip Register 29 */
#define MTU_MC17_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062166u)	/* Read Data and B17t Flip Register 3 */
#define MTU_MC17_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006219cu)	/* Read Data and B17t Flip Register 30 */
#define MTU_MC17_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006219eu)	/* Read Data and B17t Flip Register 31 */
#define MTU_MC17_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00621a0u)	/* Read Data and B17t Flip Register 32 */
#define MTU_MC17_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00621a2u)	/* Read Data and B17t Flip Register 33 */
#define MTU_MC17_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00621a4u)	/* Read Data and B17t Flip Register 34 */
#define MTU_MC17_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00621a6u)	/* Read Data and B17t Flip Register 35 */
#define MTU_MC17_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00621a8u)	/* Read Data and B17t Flip Register 36 */
#define MTU_MC17_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00621aau)	/* Read Data and B17t Flip Register 37 */
#define MTU_MC17_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00621acu)	/* Read Data and B17t Flip Register 38 */
#define MTU_MC17_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00621aeu)	/* Read Data and B17t Flip Register 39 */
#define MTU_MC17_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062168u)	/* Read Data and B17t Flip Register 4 */
#define MTU_MC17_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00621b0u)	/* Read Data and B17t Flip Register 40 */
#define MTU_MC17_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00621b2u)	/* Read Data and B17t Flip Register 41 */
#define MTU_MC17_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00621b4u)	/* Read Data and B17t Flip Register 42 */
#define MTU_MC17_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00621b6u)	/* Read Data and B17t Flip Register 43 */
#define MTU_MC17_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00621b8u)	/* Read Data and B17t Flip Register 44 */
#define MTU_MC17_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00621bau)	/* Read Data and B17t Flip Register 45 */
#define MTU_MC17_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00621bcu)	/* Read Data and B17t Flip Register 46 */
#define MTU_MC17_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00621beu)	/* Read Data and B17t Flip Register 47 */
#define MTU_MC17_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00621c0u)	/* Read Data and B17t Flip Register 48 */
#define MTU_MC17_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00621c2u)	/* Read Data and B17t Flip Register 49 */
#define MTU_MC17_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006216au)	/* Read Data and B17t Flip Register 5 */
#define MTU_MC17_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00621c4u)	/* Read Data and B17t Flip Register 50 */
#define MTU_MC17_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00621c6u)	/* Read Data and B17t Flip Register 51 */
#define MTU_MC17_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00621c8u)	/* Read Data and B17t Flip Register 52 */
#define MTU_MC17_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00621cau)	/* Read Data and B17t Flip Register 53 */
#define MTU_MC17_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00621ccu)	/* Read Data and B17t Flip Register 54 */
#define MTU_MC17_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00621ceu)	/* Read Data and B17t Flip Register 55 */
#define MTU_MC17_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00621d0u)	/* Read Data and B17t Flip Register 56 */
#define MTU_MC17_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00621d2u)	/* Read Data and B17t Flip Register 57 */
#define MTU_MC17_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00621d4u)	/* Read Data and B17t Flip Register 58 */
#define MTU_MC17_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00621d6u)	/* Read Data and B17t Flip Register 59 */
#define MTU_MC17_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006216cu)	/* Read Data and B17t Flip Register 6 */
#define MTU_MC17_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00621d8u)	/* Read Data and B17t Flip Register 60 */
#define MTU_MC17_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00621dau)	/* Read Data and B17t Flip Register 61 */
#define MTU_MC17_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00621dcu)	/* Read Data and B17t Flip Register 62 */
#define MTU_MC17_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00621deu)	/* Read Data and B17t Flip Register 63 */
#define MTU_MC17_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00621e0u)	/* Read Data and B17t Flip Register 64 */
#define MTU_MC17_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00621e2u)	/* Read Data and B17t Flip Register 65 */
#define MTU_MC17_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00621e4u)	/* Read Data and B17t Flip Register 66 */
#define MTU_MC17_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006216eu)	/* Read Data and B17t Flip Register 7 */
#define MTU_MC17_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062170u)	/* Read Data and B17t Flip Register 8 */
#define MTU_MC17_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062172u)	/* Read Data and B17t Flip Register 9 */
#define MTU_MC18_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062260u)	/* Read Data and B18t Flip Register 0 */
#define MTU_MC18_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062262u)	/* Read Data and B18t Flip Register 1 */
#define MTU_MC18_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062274u)	/* Read Data and B18t Flip Register 10 */
#define MTU_MC18_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062276u)	/* Read Data and B18t Flip Register 11 */
#define MTU_MC18_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062278u)	/* Read Data and B18t Flip Register 12 */
#define MTU_MC18_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006227au)	/* Read Data and B18t Flip Register 13 */
#define MTU_MC18_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006227cu)	/* Read Data and B18t Flip Register 14 */
#define MTU_MC18_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006227eu)	/* Read Data and B18t Flip Register 15 */
#define MTU_MC18_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062280u)	/* Read Data and B18t Flip Register 16 */
#define MTU_MC18_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062282u)	/* Read Data and B18t Flip Register 17 */
#define MTU_MC18_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062284u)	/* Read Data and B18t Flip Register 18 */
#define MTU_MC18_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062286u)	/* Read Data and B18t Flip Register 19 */
#define MTU_MC18_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062264u)	/* Read Data and B18t Flip Register 2 */
#define MTU_MC18_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062288u)	/* Read Data and B18t Flip Register 20 */
#define MTU_MC18_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006228au)	/* Read Data and B18t Flip Register 21 */
#define MTU_MC18_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006228cu)	/* Read Data and B18t Flip Register 22 */
#define MTU_MC18_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006228eu)	/* Read Data and B18t Flip Register 23 */
#define MTU_MC18_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062290u)	/* Read Data and B18t Flip Register 24 */
#define MTU_MC18_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062292u)	/* Read Data and B18t Flip Register 25 */
#define MTU_MC18_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062294u)	/* Read Data and B18t Flip Register 26 */
#define MTU_MC18_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062296u)	/* Read Data and B18t Flip Register 27 */
#define MTU_MC18_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062298u)	/* Read Data and B18t Flip Register 28 */
#define MTU_MC18_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006229au)	/* Read Data and B18t Flip Register 29 */
#define MTU_MC18_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062266u)	/* Read Data and B18t Flip Register 3 */
#define MTU_MC18_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006229cu)	/* Read Data and B18t Flip Register 30 */
#define MTU_MC18_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006229eu)	/* Read Data and B18t Flip Register 31 */
#define MTU_MC18_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00622a0u)	/* Read Data and B18t Flip Register 32 */
#define MTU_MC18_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00622a2u)	/* Read Data and B18t Flip Register 33 */
#define MTU_MC18_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00622a4u)	/* Read Data and B18t Flip Register 34 */
#define MTU_MC18_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00622a6u)	/* Read Data and B18t Flip Register 35 */
#define MTU_MC18_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00622a8u)	/* Read Data and B18t Flip Register 36 */
#define MTU_MC18_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00622aau)	/* Read Data and B18t Flip Register 37 */
#define MTU_MC18_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00622acu)	/* Read Data and B18t Flip Register 38 */
#define MTU_MC18_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00622aeu)	/* Read Data and B18t Flip Register 39 */
#define MTU_MC18_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062268u)	/* Read Data and B18t Flip Register 4 */
#define MTU_MC18_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00622b0u)	/* Read Data and B18t Flip Register 40 */
#define MTU_MC18_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00622b2u)	/* Read Data and B18t Flip Register 41 */
#define MTU_MC18_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00622b4u)	/* Read Data and B18t Flip Register 42 */
#define MTU_MC18_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00622b6u)	/* Read Data and B18t Flip Register 43 */
#define MTU_MC18_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00622b8u)	/* Read Data and B18t Flip Register 44 */
#define MTU_MC18_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00622bau)	/* Read Data and B18t Flip Register 45 */
#define MTU_MC18_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00622bcu)	/* Read Data and B18t Flip Register 46 */
#define MTU_MC18_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00622beu)	/* Read Data and B18t Flip Register 47 */
#define MTU_MC18_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00622c0u)	/* Read Data and B18t Flip Register 48 */
#define MTU_MC18_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00622c2u)	/* Read Data and B18t Flip Register 49 */
#define MTU_MC18_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006226au)	/* Read Data and B18t Flip Register 5 */
#define MTU_MC18_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00622c4u)	/* Read Data and B18t Flip Register 50 */
#define MTU_MC18_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00622c6u)	/* Read Data and B18t Flip Register 51 */
#define MTU_MC18_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00622c8u)	/* Read Data and B18t Flip Register 52 */
#define MTU_MC18_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00622cau)	/* Read Data and B18t Flip Register 53 */
#define MTU_MC18_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00622ccu)	/* Read Data and B18t Flip Register 54 */
#define MTU_MC18_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00622ceu)	/* Read Data and B18t Flip Register 55 */
#define MTU_MC18_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00622d0u)	/* Read Data and B18t Flip Register 56 */
#define MTU_MC18_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00622d2u)	/* Read Data and B18t Flip Register 57 */
#define MTU_MC18_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00622d4u)	/* Read Data and B18t Flip Register 58 */
#define MTU_MC18_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00622d6u)	/* Read Data and B18t Flip Register 59 */
#define MTU_MC18_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006226cu)	/* Read Data and B18t Flip Register 6 */
#define MTU_MC18_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00622d8u)	/* Read Data and B18t Flip Register 60 */
#define MTU_MC18_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00622dau)	/* Read Data and B18t Flip Register 61 */
#define MTU_MC18_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00622dcu)	/* Read Data and B18t Flip Register 62 */
#define MTU_MC18_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00622deu)	/* Read Data and B18t Flip Register 63 */
#define MTU_MC18_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00622e0u)	/* Read Data and B18t Flip Register 64 */
#define MTU_MC18_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00622e2u)	/* Read Data and B18t Flip Register 65 */
#define MTU_MC18_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00622e4u)	/* Read Data and B18t Flip Register 66 */
#define MTU_MC18_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006226eu)	/* Read Data and B18t Flip Register 7 */
#define MTU_MC18_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062270u)	/* Read Data and B18t Flip Register 8 */
#define MTU_MC18_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062272u)	/* Read Data and B18t Flip Register 9 */
#define MTU_MC19_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062360u)	/* Read Data and B19t Flip Register 0 */
#define MTU_MC19_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062362u)	/* Read Data and B19t Flip Register 1 */
#define MTU_MC19_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062374u)	/* Read Data and B19t Flip Register 10 */
#define MTU_MC19_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062376u)	/* Read Data and B19t Flip Register 11 */
#define MTU_MC19_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062378u)	/* Read Data and B19t Flip Register 12 */
#define MTU_MC19_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006237au)	/* Read Data and B19t Flip Register 13 */
#define MTU_MC19_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006237cu)	/* Read Data and B19t Flip Register 14 */
#define MTU_MC19_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006237eu)	/* Read Data and B19t Flip Register 15 */
#define MTU_MC19_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062380u)	/* Read Data and B19t Flip Register 16 */
#define MTU_MC19_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062382u)	/* Read Data and B19t Flip Register 17 */
#define MTU_MC19_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062384u)	/* Read Data and B19t Flip Register 18 */
#define MTU_MC19_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062386u)	/* Read Data and B19t Flip Register 19 */
#define MTU_MC19_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062364u)	/* Read Data and B19t Flip Register 2 */
#define MTU_MC19_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062388u)	/* Read Data and B19t Flip Register 20 */
#define MTU_MC19_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006238au)	/* Read Data and B19t Flip Register 21 */
#define MTU_MC19_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006238cu)	/* Read Data and B19t Flip Register 22 */
#define MTU_MC19_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006238eu)	/* Read Data and B19t Flip Register 23 */
#define MTU_MC19_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062390u)	/* Read Data and B19t Flip Register 24 */
#define MTU_MC19_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062392u)	/* Read Data and B19t Flip Register 25 */
#define MTU_MC19_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062394u)	/* Read Data and B19t Flip Register 26 */
#define MTU_MC19_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062396u)	/* Read Data and B19t Flip Register 27 */
#define MTU_MC19_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062398u)	/* Read Data and B19t Flip Register 28 */
#define MTU_MC19_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006239au)	/* Read Data and B19t Flip Register 29 */
#define MTU_MC19_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062366u)	/* Read Data and B19t Flip Register 3 */
#define MTU_MC19_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006239cu)	/* Read Data and B19t Flip Register 30 */
#define MTU_MC19_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006239eu)	/* Read Data and B19t Flip Register 31 */
#define MTU_MC19_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00623a0u)	/* Read Data and B19t Flip Register 32 */
#define MTU_MC19_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00623a2u)	/* Read Data and B19t Flip Register 33 */
#define MTU_MC19_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00623a4u)	/* Read Data and B19t Flip Register 34 */
#define MTU_MC19_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00623a6u)	/* Read Data and B19t Flip Register 35 */
#define MTU_MC19_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00623a8u)	/* Read Data and B19t Flip Register 36 */
#define MTU_MC19_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00623aau)	/* Read Data and B19t Flip Register 37 */
#define MTU_MC19_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00623acu)	/* Read Data and B19t Flip Register 38 */
#define MTU_MC19_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00623aeu)	/* Read Data and B19t Flip Register 39 */
#define MTU_MC19_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062368u)	/* Read Data and B19t Flip Register 4 */
#define MTU_MC19_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00623b0u)	/* Read Data and B19t Flip Register 40 */
#define MTU_MC19_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00623b2u)	/* Read Data and B19t Flip Register 41 */
#define MTU_MC19_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00623b4u)	/* Read Data and B19t Flip Register 42 */
#define MTU_MC19_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00623b6u)	/* Read Data and B19t Flip Register 43 */
#define MTU_MC19_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00623b8u)	/* Read Data and B19t Flip Register 44 */
#define MTU_MC19_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00623bau)	/* Read Data and B19t Flip Register 45 */
#define MTU_MC19_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00623bcu)	/* Read Data and B19t Flip Register 46 */
#define MTU_MC19_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00623beu)	/* Read Data and B19t Flip Register 47 */
#define MTU_MC19_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00623c0u)	/* Read Data and B19t Flip Register 48 */
#define MTU_MC19_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00623c2u)	/* Read Data and B19t Flip Register 49 */
#define MTU_MC19_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006236au)	/* Read Data and B19t Flip Register 5 */
#define MTU_MC19_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00623c4u)	/* Read Data and B19t Flip Register 50 */
#define MTU_MC19_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00623c6u)	/* Read Data and B19t Flip Register 51 */
#define MTU_MC19_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00623c8u)	/* Read Data and B19t Flip Register 52 */
#define MTU_MC19_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00623cau)	/* Read Data and B19t Flip Register 53 */
#define MTU_MC19_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00623ccu)	/* Read Data and B19t Flip Register 54 */
#define MTU_MC19_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00623ceu)	/* Read Data and B19t Flip Register 55 */
#define MTU_MC19_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00623d0u)	/* Read Data and B19t Flip Register 56 */
#define MTU_MC19_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00623d2u)	/* Read Data and B19t Flip Register 57 */
#define MTU_MC19_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00623d4u)	/* Read Data and B19t Flip Register 58 */
#define MTU_MC19_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00623d6u)	/* Read Data and B19t Flip Register 59 */
#define MTU_MC19_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006236cu)	/* Read Data and B19t Flip Register 6 */
#define MTU_MC19_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00623d8u)	/* Read Data and B19t Flip Register 60 */
#define MTU_MC19_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00623dau)	/* Read Data and B19t Flip Register 61 */
#define MTU_MC19_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00623dcu)	/* Read Data and B19t Flip Register 62 */
#define MTU_MC19_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00623deu)	/* Read Data and B19t Flip Register 63 */
#define MTU_MC19_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00623e0u)	/* Read Data and B19t Flip Register 64 */
#define MTU_MC19_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00623e2u)	/* Read Data and B19t Flip Register 65 */
#define MTU_MC19_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00623e4u)	/* Read Data and B19t Flip Register 66 */
#define MTU_MC19_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006236eu)	/* Read Data and B19t Flip Register 7 */
#define MTU_MC19_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062370u)	/* Read Data and B19t Flip Register 8 */
#define MTU_MC19_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062372u)	/* Read Data and B19t Flip Register 9 */
#define MTU_MC1_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061160u)	/* Read Data and B1t Flip Register 0 */
#define MTU_MC1_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061162u)	/* Read Data and B1t Flip Register 1 */
#define MTU_MC1_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061174u)	/* Read Data and B1t Flip Register 10 */
#define MTU_MC1_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061176u)	/* Read Data and B1t Flip Register 11 */
#define MTU_MC1_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061178u)	/* Read Data and B1t Flip Register 12 */
#define MTU_MC1_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006117au)	/* Read Data and B1t Flip Register 13 */
#define MTU_MC1_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006117cu)	/* Read Data and B1t Flip Register 14 */
#define MTU_MC1_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006117eu)	/* Read Data and B1t Flip Register 15 */
#define MTU_MC1_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061180u)	/* Read Data and B1t Flip Register 16 */
#define MTU_MC1_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061182u)	/* Read Data and B1t Flip Register 17 */
#define MTU_MC1_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061184u)	/* Read Data and B1t Flip Register 18 */
#define MTU_MC1_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061186u)	/* Read Data and B1t Flip Register 19 */
#define MTU_MC1_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061164u)	/* Read Data and B1t Flip Register 2 */
#define MTU_MC1_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061188u)	/* Read Data and B1t Flip Register 20 */
#define MTU_MC1_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006118au)	/* Read Data and B1t Flip Register 21 */
#define MTU_MC1_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006118cu)	/* Read Data and B1t Flip Register 22 */
#define MTU_MC1_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006118eu)	/* Read Data and B1t Flip Register 23 */
#define MTU_MC1_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061190u)	/* Read Data and B1t Flip Register 24 */
#define MTU_MC1_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061192u)	/* Read Data and B1t Flip Register 25 */
#define MTU_MC1_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061194u)	/* Read Data and B1t Flip Register 26 */
#define MTU_MC1_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061196u)	/* Read Data and B1t Flip Register 27 */
#define MTU_MC1_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061198u)	/* Read Data and B1t Flip Register 28 */
#define MTU_MC1_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006119au)	/* Read Data and B1t Flip Register 29 */
#define MTU_MC1_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061166u)	/* Read Data and B1t Flip Register 3 */
#define MTU_MC1_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006119cu)	/* Read Data and B1t Flip Register 30 */
#define MTU_MC1_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006119eu)	/* Read Data and B1t Flip Register 31 */
#define MTU_MC1_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00611a0u)	/* Read Data and B1t Flip Register 32 */
#define MTU_MC1_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00611a2u)	/* Read Data and B1t Flip Register 33 */
#define MTU_MC1_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00611a4u)	/* Read Data and B1t Flip Register 34 */
#define MTU_MC1_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00611a6u)	/* Read Data and B1t Flip Register 35 */
#define MTU_MC1_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00611a8u)	/* Read Data and B1t Flip Register 36 */
#define MTU_MC1_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00611aau)	/* Read Data and B1t Flip Register 37 */
#define MTU_MC1_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00611acu)	/* Read Data and B1t Flip Register 38 */
#define MTU_MC1_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00611aeu)	/* Read Data and B1t Flip Register 39 */
#define MTU_MC1_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061168u)	/* Read Data and B1t Flip Register 4 */
#define MTU_MC1_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00611b0u)	/* Read Data and B1t Flip Register 40 */
#define MTU_MC1_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00611b2u)	/* Read Data and B1t Flip Register 41 */
#define MTU_MC1_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00611b4u)	/* Read Data and B1t Flip Register 42 */
#define MTU_MC1_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00611b6u)	/* Read Data and B1t Flip Register 43 */
#define MTU_MC1_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00611b8u)	/* Read Data and B1t Flip Register 44 */
#define MTU_MC1_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00611bau)	/* Read Data and B1t Flip Register 45 */
#define MTU_MC1_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00611bcu)	/* Read Data and B1t Flip Register 46 */
#define MTU_MC1_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00611beu)	/* Read Data and B1t Flip Register 47 */
#define MTU_MC1_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00611c0u)	/* Read Data and B1t Flip Register 48 */
#define MTU_MC1_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00611c2u)	/* Read Data and B1t Flip Register 49 */
#define MTU_MC1_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006116au)	/* Read Data and B1t Flip Register 5 */
#define MTU_MC1_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00611c4u)	/* Read Data and B1t Flip Register 50 */
#define MTU_MC1_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00611c6u)	/* Read Data and B1t Flip Register 51 */
#define MTU_MC1_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00611c8u)	/* Read Data and B1t Flip Register 52 */
#define MTU_MC1_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00611cau)	/* Read Data and B1t Flip Register 53 */
#define MTU_MC1_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00611ccu)	/* Read Data and B1t Flip Register 54 */
#define MTU_MC1_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00611ceu)	/* Read Data and B1t Flip Register 55 */
#define MTU_MC1_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00611d0u)	/* Read Data and B1t Flip Register 56 */
#define MTU_MC1_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00611d2u)	/* Read Data and B1t Flip Register 57 */
#define MTU_MC1_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00611d4u)	/* Read Data and B1t Flip Register 58 */
#define MTU_MC1_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00611d6u)	/* Read Data and B1t Flip Register 59 */
#define MTU_MC1_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006116cu)	/* Read Data and B1t Flip Register 6 */
#define MTU_MC1_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00611d8u)	/* Read Data and B1t Flip Register 60 */
#define MTU_MC1_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00611dau)	/* Read Data and B1t Flip Register 61 */
#define MTU_MC1_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00611dcu)	/* Read Data and B1t Flip Register 62 */
#define MTU_MC1_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00611deu)	/* Read Data and B1t Flip Register 63 */
#define MTU_MC1_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00611e0u)	/* Read Data and B1t Flip Register 64 */
#define MTU_MC1_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00611e2u)	/* Read Data and B1t Flip Register 65 */
#define MTU_MC1_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00611e4u)	/* Read Data and B1t Flip Register 66 */
#define MTU_MC1_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006116eu)	/* Read Data and B1t Flip Register 7 */
#define MTU_MC1_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061170u)	/* Read Data and B1t Flip Register 8 */
#define MTU_MC1_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061172u)	/* Read Data and B1t Flip Register 9 */
#define MTU_MC20_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062460u)	/* Read Data and B20t Flip Register 0 */
#define MTU_MC20_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062462u)	/* Read Data and B20t Flip Register 1 */
#define MTU_MC20_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062474u)	/* Read Data and B20t Flip Register 10 */
#define MTU_MC20_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062476u)	/* Read Data and B20t Flip Register 11 */
#define MTU_MC20_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062478u)	/* Read Data and B20t Flip Register 12 */
#define MTU_MC20_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006247au)	/* Read Data and B20t Flip Register 13 */
#define MTU_MC20_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006247cu)	/* Read Data and B20t Flip Register 14 */
#define MTU_MC20_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006247eu)	/* Read Data and B20t Flip Register 15 */
#define MTU_MC20_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062480u)	/* Read Data and B20t Flip Register 16 */
#define MTU_MC20_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062482u)	/* Read Data and B20t Flip Register 17 */
#define MTU_MC20_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062484u)	/* Read Data and B20t Flip Register 18 */
#define MTU_MC20_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062486u)	/* Read Data and B20t Flip Register 19 */
#define MTU_MC20_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062464u)	/* Read Data and B20t Flip Register 2 */
#define MTU_MC20_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062488u)	/* Read Data and B20t Flip Register 20 */
#define MTU_MC20_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006248au)	/* Read Data and B20t Flip Register 21 */
#define MTU_MC20_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006248cu)	/* Read Data and B20t Flip Register 22 */
#define MTU_MC20_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006248eu)	/* Read Data and B20t Flip Register 23 */
#define MTU_MC20_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062490u)	/* Read Data and B20t Flip Register 24 */
#define MTU_MC20_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062492u)	/* Read Data and B20t Flip Register 25 */
#define MTU_MC20_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062494u)	/* Read Data and B20t Flip Register 26 */
#define MTU_MC20_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062496u)	/* Read Data and B20t Flip Register 27 */
#define MTU_MC20_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062498u)	/* Read Data and B20t Flip Register 28 */
#define MTU_MC20_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006249au)	/* Read Data and B20t Flip Register 29 */
#define MTU_MC20_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062466u)	/* Read Data and B20t Flip Register 3 */
#define MTU_MC20_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006249cu)	/* Read Data and B20t Flip Register 30 */
#define MTU_MC20_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006249eu)	/* Read Data and B20t Flip Register 31 */
#define MTU_MC20_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00624a0u)	/* Read Data and B20t Flip Register 32 */
#define MTU_MC20_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00624a2u)	/* Read Data and B20t Flip Register 33 */
#define MTU_MC20_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00624a4u)	/* Read Data and B20t Flip Register 34 */
#define MTU_MC20_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00624a6u)	/* Read Data and B20t Flip Register 35 */
#define MTU_MC20_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00624a8u)	/* Read Data and B20t Flip Register 36 */
#define MTU_MC20_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00624aau)	/* Read Data and B20t Flip Register 37 */
#define MTU_MC20_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00624acu)	/* Read Data and B20t Flip Register 38 */
#define MTU_MC20_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00624aeu)	/* Read Data and B20t Flip Register 39 */
#define MTU_MC20_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062468u)	/* Read Data and B20t Flip Register 4 */
#define MTU_MC20_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00624b0u)	/* Read Data and B20t Flip Register 40 */
#define MTU_MC20_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00624b2u)	/* Read Data and B20t Flip Register 41 */
#define MTU_MC20_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00624b4u)	/* Read Data and B20t Flip Register 42 */
#define MTU_MC20_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00624b6u)	/* Read Data and B20t Flip Register 43 */
#define MTU_MC20_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00624b8u)	/* Read Data and B20t Flip Register 44 */
#define MTU_MC20_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00624bau)	/* Read Data and B20t Flip Register 45 */
#define MTU_MC20_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00624bcu)	/* Read Data and B20t Flip Register 46 */
#define MTU_MC20_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00624beu)	/* Read Data and B20t Flip Register 47 */
#define MTU_MC20_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00624c0u)	/* Read Data and B20t Flip Register 48 */
#define MTU_MC20_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00624c2u)	/* Read Data and B20t Flip Register 49 */
#define MTU_MC20_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006246au)	/* Read Data and B20t Flip Register 5 */
#define MTU_MC20_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00624c4u)	/* Read Data and B20t Flip Register 50 */
#define MTU_MC20_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00624c6u)	/* Read Data and B20t Flip Register 51 */
#define MTU_MC20_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00624c8u)	/* Read Data and B20t Flip Register 52 */
#define MTU_MC20_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00624cau)	/* Read Data and B20t Flip Register 53 */
#define MTU_MC20_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00624ccu)	/* Read Data and B20t Flip Register 54 */
#define MTU_MC20_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00624ceu)	/* Read Data and B20t Flip Register 55 */
#define MTU_MC20_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00624d0u)	/* Read Data and B20t Flip Register 56 */
#define MTU_MC20_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00624d2u)	/* Read Data and B20t Flip Register 57 */
#define MTU_MC20_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00624d4u)	/* Read Data and B20t Flip Register 58 */
#define MTU_MC20_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00624d6u)	/* Read Data and B20t Flip Register 59 */
#define MTU_MC20_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006246cu)	/* Read Data and B20t Flip Register 6 */
#define MTU_MC20_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00624d8u)	/* Read Data and B20t Flip Register 60 */
#define MTU_MC20_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00624dau)	/* Read Data and B20t Flip Register 61 */
#define MTU_MC20_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00624dcu)	/* Read Data and B20t Flip Register 62 */
#define MTU_MC20_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00624deu)	/* Read Data and B20t Flip Register 63 */
#define MTU_MC20_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00624e0u)	/* Read Data and B20t Flip Register 64 */
#define MTU_MC20_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00624e2u)	/* Read Data and B20t Flip Register 65 */
#define MTU_MC20_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00624e4u)	/* Read Data and B20t Flip Register 66 */
#define MTU_MC20_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006246eu)	/* Read Data and B20t Flip Register 7 */
#define MTU_MC20_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062470u)	/* Read Data and B20t Flip Register 8 */
#define MTU_MC20_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062472u)	/* Read Data and B20t Flip Register 9 */
#define MTU_MC21_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062560u)	/* Read Data and B21t Flip Register 0 */
#define MTU_MC21_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062562u)	/* Read Data and B21t Flip Register 1 */
#define MTU_MC21_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062574u)	/* Read Data and B21t Flip Register 10 */
#define MTU_MC21_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062576u)	/* Read Data and B21t Flip Register 11 */
#define MTU_MC21_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062578u)	/* Read Data and B21t Flip Register 12 */
#define MTU_MC21_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006257au)	/* Read Data and B21t Flip Register 13 */
#define MTU_MC21_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006257cu)	/* Read Data and B21t Flip Register 14 */
#define MTU_MC21_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006257eu)	/* Read Data and B21t Flip Register 15 */
#define MTU_MC21_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062580u)	/* Read Data and B21t Flip Register 16 */
#define MTU_MC21_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062582u)	/* Read Data and B21t Flip Register 17 */
#define MTU_MC21_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062584u)	/* Read Data and B21t Flip Register 18 */
#define MTU_MC21_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062586u)	/* Read Data and B21t Flip Register 19 */
#define MTU_MC21_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062564u)	/* Read Data and B21t Flip Register 2 */
#define MTU_MC21_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062588u)	/* Read Data and B21t Flip Register 20 */
#define MTU_MC21_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006258au)	/* Read Data and B21t Flip Register 21 */
#define MTU_MC21_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006258cu)	/* Read Data and B21t Flip Register 22 */
#define MTU_MC21_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006258eu)	/* Read Data and B21t Flip Register 23 */
#define MTU_MC21_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062590u)	/* Read Data and B21t Flip Register 24 */
#define MTU_MC21_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062592u)	/* Read Data and B21t Flip Register 25 */
#define MTU_MC21_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062594u)	/* Read Data and B21t Flip Register 26 */
#define MTU_MC21_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062596u)	/* Read Data and B21t Flip Register 27 */
#define MTU_MC21_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062598u)	/* Read Data and B21t Flip Register 28 */
#define MTU_MC21_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006259au)	/* Read Data and B21t Flip Register 29 */
#define MTU_MC21_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062566u)	/* Read Data and B21t Flip Register 3 */
#define MTU_MC21_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006259cu)	/* Read Data and B21t Flip Register 30 */
#define MTU_MC21_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006259eu)	/* Read Data and B21t Flip Register 31 */
#define MTU_MC21_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00625a0u)	/* Read Data and B21t Flip Register 32 */
#define MTU_MC21_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00625a2u)	/* Read Data and B21t Flip Register 33 */
#define MTU_MC21_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00625a4u)	/* Read Data and B21t Flip Register 34 */
#define MTU_MC21_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00625a6u)	/* Read Data and B21t Flip Register 35 */
#define MTU_MC21_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00625a8u)	/* Read Data and B21t Flip Register 36 */
#define MTU_MC21_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00625aau)	/* Read Data and B21t Flip Register 37 */
#define MTU_MC21_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00625acu)	/* Read Data and B21t Flip Register 38 */
#define MTU_MC21_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00625aeu)	/* Read Data and B21t Flip Register 39 */
#define MTU_MC21_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062568u)	/* Read Data and B21t Flip Register 4 */
#define MTU_MC21_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00625b0u)	/* Read Data and B21t Flip Register 40 */
#define MTU_MC21_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00625b2u)	/* Read Data and B21t Flip Register 41 */
#define MTU_MC21_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00625b4u)	/* Read Data and B21t Flip Register 42 */
#define MTU_MC21_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00625b6u)	/* Read Data and B21t Flip Register 43 */
#define MTU_MC21_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00625b8u)	/* Read Data and B21t Flip Register 44 */
#define MTU_MC21_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00625bau)	/* Read Data and B21t Flip Register 45 */
#define MTU_MC21_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00625bcu)	/* Read Data and B21t Flip Register 46 */
#define MTU_MC21_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00625beu)	/* Read Data and B21t Flip Register 47 */
#define MTU_MC21_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00625c0u)	/* Read Data and B21t Flip Register 48 */
#define MTU_MC21_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00625c2u)	/* Read Data and B21t Flip Register 49 */
#define MTU_MC21_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006256au)	/* Read Data and B21t Flip Register 5 */
#define MTU_MC21_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00625c4u)	/* Read Data and B21t Flip Register 50 */
#define MTU_MC21_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00625c6u)	/* Read Data and B21t Flip Register 51 */
#define MTU_MC21_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00625c8u)	/* Read Data and B21t Flip Register 52 */
#define MTU_MC21_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00625cau)	/* Read Data and B21t Flip Register 53 */
#define MTU_MC21_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00625ccu)	/* Read Data and B21t Flip Register 54 */
#define MTU_MC21_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00625ceu)	/* Read Data and B21t Flip Register 55 */
#define MTU_MC21_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00625d0u)	/* Read Data and B21t Flip Register 56 */
#define MTU_MC21_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00625d2u)	/* Read Data and B21t Flip Register 57 */
#define MTU_MC21_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00625d4u)	/* Read Data and B21t Flip Register 58 */
#define MTU_MC21_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00625d6u)	/* Read Data and B21t Flip Register 59 */
#define MTU_MC21_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006256cu)	/* Read Data and B21t Flip Register 6 */
#define MTU_MC21_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00625d8u)	/* Read Data and B21t Flip Register 60 */
#define MTU_MC21_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00625dau)	/* Read Data and B21t Flip Register 61 */
#define MTU_MC21_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00625dcu)	/* Read Data and B21t Flip Register 62 */
#define MTU_MC21_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00625deu)	/* Read Data and B21t Flip Register 63 */
#define MTU_MC21_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00625e0u)	/* Read Data and B21t Flip Register 64 */
#define MTU_MC21_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00625e2u)	/* Read Data and B21t Flip Register 65 */
#define MTU_MC21_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00625e4u)	/* Read Data and B21t Flip Register 66 */
#define MTU_MC21_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006256eu)	/* Read Data and B21t Flip Register 7 */
#define MTU_MC21_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062570u)	/* Read Data and B21t Flip Register 8 */
#define MTU_MC21_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062572u)	/* Read Data and B21t Flip Register 9 */
#define MTU_MC22_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062660u)	/* Read Data and B22t Flip Register 0 */
#define MTU_MC22_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062662u)	/* Read Data and B22t Flip Register 1 */
#define MTU_MC22_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062674u)	/* Read Data and B22t Flip Register 10 */
#define MTU_MC22_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062676u)	/* Read Data and B22t Flip Register 11 */
#define MTU_MC22_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062678u)	/* Read Data and B22t Flip Register 12 */
#define MTU_MC22_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006267au)	/* Read Data and B22t Flip Register 13 */
#define MTU_MC22_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006267cu)	/* Read Data and B22t Flip Register 14 */
#define MTU_MC22_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006267eu)	/* Read Data and B22t Flip Register 15 */
#define MTU_MC22_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062680u)	/* Read Data and B22t Flip Register 16 */
#define MTU_MC22_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062682u)	/* Read Data and B22t Flip Register 17 */
#define MTU_MC22_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062684u)	/* Read Data and B22t Flip Register 18 */
#define MTU_MC22_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062686u)	/* Read Data and B22t Flip Register 19 */
#define MTU_MC22_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062664u)	/* Read Data and B22t Flip Register 2 */
#define MTU_MC22_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062688u)	/* Read Data and B22t Flip Register 20 */
#define MTU_MC22_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006268au)	/* Read Data and B22t Flip Register 21 */
#define MTU_MC22_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006268cu)	/* Read Data and B22t Flip Register 22 */
#define MTU_MC22_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006268eu)	/* Read Data and B22t Flip Register 23 */
#define MTU_MC22_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062690u)	/* Read Data and B22t Flip Register 24 */
#define MTU_MC22_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062692u)	/* Read Data and B22t Flip Register 25 */
#define MTU_MC22_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062694u)	/* Read Data and B22t Flip Register 26 */
#define MTU_MC22_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062696u)	/* Read Data and B22t Flip Register 27 */
#define MTU_MC22_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062698u)	/* Read Data and B22t Flip Register 28 */
#define MTU_MC22_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006269au)	/* Read Data and B22t Flip Register 29 */
#define MTU_MC22_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062666u)	/* Read Data and B22t Flip Register 3 */
#define MTU_MC22_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006269cu)	/* Read Data and B22t Flip Register 30 */
#define MTU_MC22_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006269eu)	/* Read Data and B22t Flip Register 31 */
#define MTU_MC22_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00626a0u)	/* Read Data and B22t Flip Register 32 */
#define MTU_MC22_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00626a2u)	/* Read Data and B22t Flip Register 33 */
#define MTU_MC22_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00626a4u)	/* Read Data and B22t Flip Register 34 */
#define MTU_MC22_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00626a6u)	/* Read Data and B22t Flip Register 35 */
#define MTU_MC22_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00626a8u)	/* Read Data and B22t Flip Register 36 */
#define MTU_MC22_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00626aau)	/* Read Data and B22t Flip Register 37 */
#define MTU_MC22_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00626acu)	/* Read Data and B22t Flip Register 38 */
#define MTU_MC22_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00626aeu)	/* Read Data and B22t Flip Register 39 */
#define MTU_MC22_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062668u)	/* Read Data and B22t Flip Register 4 */
#define MTU_MC22_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00626b0u)	/* Read Data and B22t Flip Register 40 */
#define MTU_MC22_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00626b2u)	/* Read Data and B22t Flip Register 41 */
#define MTU_MC22_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00626b4u)	/* Read Data and B22t Flip Register 42 */
#define MTU_MC22_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00626b6u)	/* Read Data and B22t Flip Register 43 */
#define MTU_MC22_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00626b8u)	/* Read Data and B22t Flip Register 44 */
#define MTU_MC22_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00626bau)	/* Read Data and B22t Flip Register 45 */
#define MTU_MC22_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00626bcu)	/* Read Data and B22t Flip Register 46 */
#define MTU_MC22_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00626beu)	/* Read Data and B22t Flip Register 47 */
#define MTU_MC22_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00626c0u)	/* Read Data and B22t Flip Register 48 */
#define MTU_MC22_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00626c2u)	/* Read Data and B22t Flip Register 49 */
#define MTU_MC22_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006266au)	/* Read Data and B22t Flip Register 5 */
#define MTU_MC22_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00626c4u)	/* Read Data and B22t Flip Register 50 */
#define MTU_MC22_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00626c6u)	/* Read Data and B22t Flip Register 51 */
#define MTU_MC22_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00626c8u)	/* Read Data and B22t Flip Register 52 */
#define MTU_MC22_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00626cau)	/* Read Data and B22t Flip Register 53 */
#define MTU_MC22_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00626ccu)	/* Read Data and B22t Flip Register 54 */
#define MTU_MC22_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00626ceu)	/* Read Data and B22t Flip Register 55 */
#define MTU_MC22_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00626d0u)	/* Read Data and B22t Flip Register 56 */
#define MTU_MC22_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00626d2u)	/* Read Data and B22t Flip Register 57 */
#define MTU_MC22_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00626d4u)	/* Read Data and B22t Flip Register 58 */
#define MTU_MC22_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00626d6u)	/* Read Data and B22t Flip Register 59 */
#define MTU_MC22_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006266cu)	/* Read Data and B22t Flip Register 6 */
#define MTU_MC22_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00626d8u)	/* Read Data and B22t Flip Register 60 */
#define MTU_MC22_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00626dau)	/* Read Data and B22t Flip Register 61 */
#define MTU_MC22_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00626dcu)	/* Read Data and B22t Flip Register 62 */
#define MTU_MC22_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00626deu)	/* Read Data and B22t Flip Register 63 */
#define MTU_MC22_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00626e0u)	/* Read Data and B22t Flip Register 64 */
#define MTU_MC22_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00626e2u)	/* Read Data and B22t Flip Register 65 */
#define MTU_MC22_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00626e4u)	/* Read Data and B22t Flip Register 66 */
#define MTU_MC22_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006266eu)	/* Read Data and B22t Flip Register 7 */
#define MTU_MC22_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062670u)	/* Read Data and B22t Flip Register 8 */
#define MTU_MC22_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062672u)	/* Read Data and B22t Flip Register 9 */
#define MTU_MC23_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062760u)	/* Read Data and B23t Flip Register 0 */
#define MTU_MC23_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062762u)	/* Read Data and B23t Flip Register 1 */
#define MTU_MC23_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062774u)	/* Read Data and B23t Flip Register 10 */
#define MTU_MC23_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062776u)	/* Read Data and B23t Flip Register 11 */
#define MTU_MC23_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062778u)	/* Read Data and B23t Flip Register 12 */
#define MTU_MC23_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006277au)	/* Read Data and B23t Flip Register 13 */
#define MTU_MC23_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006277cu)	/* Read Data and B23t Flip Register 14 */
#define MTU_MC23_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006277eu)	/* Read Data and B23t Flip Register 15 */
#define MTU_MC23_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062780u)	/* Read Data and B23t Flip Register 16 */
#define MTU_MC23_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062782u)	/* Read Data and B23t Flip Register 17 */
#define MTU_MC23_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062784u)	/* Read Data and B23t Flip Register 18 */
#define MTU_MC23_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062786u)	/* Read Data and B23t Flip Register 19 */
#define MTU_MC23_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062764u)	/* Read Data and B23t Flip Register 2 */
#define MTU_MC23_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062788u)	/* Read Data and B23t Flip Register 20 */
#define MTU_MC23_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006278au)	/* Read Data and B23t Flip Register 21 */
#define MTU_MC23_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006278cu)	/* Read Data and B23t Flip Register 22 */
#define MTU_MC23_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006278eu)	/* Read Data and B23t Flip Register 23 */
#define MTU_MC23_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062790u)	/* Read Data and B23t Flip Register 24 */
#define MTU_MC23_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062792u)	/* Read Data and B23t Flip Register 25 */
#define MTU_MC23_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062794u)	/* Read Data and B23t Flip Register 26 */
#define MTU_MC23_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062796u)	/* Read Data and B23t Flip Register 27 */
#define MTU_MC23_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062798u)	/* Read Data and B23t Flip Register 28 */
#define MTU_MC23_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006279au)	/* Read Data and B23t Flip Register 29 */
#define MTU_MC23_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062766u)	/* Read Data and B23t Flip Register 3 */
#define MTU_MC23_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006279cu)	/* Read Data and B23t Flip Register 30 */
#define MTU_MC23_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006279eu)	/* Read Data and B23t Flip Register 31 */
#define MTU_MC23_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00627a0u)	/* Read Data and B23t Flip Register 32 */
#define MTU_MC23_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00627a2u)	/* Read Data and B23t Flip Register 33 */
#define MTU_MC23_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00627a4u)	/* Read Data and B23t Flip Register 34 */
#define MTU_MC23_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00627a6u)	/* Read Data and B23t Flip Register 35 */
#define MTU_MC23_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00627a8u)	/* Read Data and B23t Flip Register 36 */
#define MTU_MC23_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00627aau)	/* Read Data and B23t Flip Register 37 */
#define MTU_MC23_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00627acu)	/* Read Data and B23t Flip Register 38 */
#define MTU_MC23_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00627aeu)	/* Read Data and B23t Flip Register 39 */
#define MTU_MC23_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062768u)	/* Read Data and B23t Flip Register 4 */
#define MTU_MC23_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00627b0u)	/* Read Data and B23t Flip Register 40 */
#define MTU_MC23_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00627b2u)	/* Read Data and B23t Flip Register 41 */
#define MTU_MC23_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00627b4u)	/* Read Data and B23t Flip Register 42 */
#define MTU_MC23_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00627b6u)	/* Read Data and B23t Flip Register 43 */
#define MTU_MC23_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00627b8u)	/* Read Data and B23t Flip Register 44 */
#define MTU_MC23_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00627bau)	/* Read Data and B23t Flip Register 45 */
#define MTU_MC23_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00627bcu)	/* Read Data and B23t Flip Register 46 */
#define MTU_MC23_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00627beu)	/* Read Data and B23t Flip Register 47 */
#define MTU_MC23_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00627c0u)	/* Read Data and B23t Flip Register 48 */
#define MTU_MC23_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00627c2u)	/* Read Data and B23t Flip Register 49 */
#define MTU_MC23_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006276au)	/* Read Data and B23t Flip Register 5 */
#define MTU_MC23_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00627c4u)	/* Read Data and B23t Flip Register 50 */
#define MTU_MC23_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00627c6u)	/* Read Data and B23t Flip Register 51 */
#define MTU_MC23_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00627c8u)	/* Read Data and B23t Flip Register 52 */
#define MTU_MC23_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00627cau)	/* Read Data and B23t Flip Register 53 */
#define MTU_MC23_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00627ccu)	/* Read Data and B23t Flip Register 54 */
#define MTU_MC23_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00627ceu)	/* Read Data and B23t Flip Register 55 */
#define MTU_MC23_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00627d0u)	/* Read Data and B23t Flip Register 56 */
#define MTU_MC23_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00627d2u)	/* Read Data and B23t Flip Register 57 */
#define MTU_MC23_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00627d4u)	/* Read Data and B23t Flip Register 58 */
#define MTU_MC23_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00627d6u)	/* Read Data and B23t Flip Register 59 */
#define MTU_MC23_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006276cu)	/* Read Data and B23t Flip Register 6 */
#define MTU_MC23_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00627d8u)	/* Read Data and B23t Flip Register 60 */
#define MTU_MC23_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00627dau)	/* Read Data and B23t Flip Register 61 */
#define MTU_MC23_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00627dcu)	/* Read Data and B23t Flip Register 62 */
#define MTU_MC23_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00627deu)	/* Read Data and B23t Flip Register 63 */
#define MTU_MC23_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00627e0u)	/* Read Data and B23t Flip Register 64 */
#define MTU_MC23_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00627e2u)	/* Read Data and B23t Flip Register 65 */
#define MTU_MC23_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00627e4u)	/* Read Data and B23t Flip Register 66 */
#define MTU_MC23_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006276eu)	/* Read Data and B23t Flip Register 7 */
#define MTU_MC23_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062770u)	/* Read Data and B23t Flip Register 8 */
#define MTU_MC23_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062772u)	/* Read Data and B23t Flip Register 9 */
#define MTU_MC24_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062860u)	/* Read Data and B24t Flip Register 0 */
#define MTU_MC24_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062862u)	/* Read Data and B24t Flip Register 1 */
#define MTU_MC24_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062874u)	/* Read Data and B24t Flip Register 10 */
#define MTU_MC24_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062876u)	/* Read Data and B24t Flip Register 11 */
#define MTU_MC24_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062878u)	/* Read Data and B24t Flip Register 12 */
#define MTU_MC24_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006287au)	/* Read Data and B24t Flip Register 13 */
#define MTU_MC24_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006287cu)	/* Read Data and B24t Flip Register 14 */
#define MTU_MC24_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006287eu)	/* Read Data and B24t Flip Register 15 */
#define MTU_MC24_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062880u)	/* Read Data and B24t Flip Register 16 */
#define MTU_MC24_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062882u)	/* Read Data and B24t Flip Register 17 */
#define MTU_MC24_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062884u)	/* Read Data and B24t Flip Register 18 */
#define MTU_MC24_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062886u)	/* Read Data and B24t Flip Register 19 */
#define MTU_MC24_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062864u)	/* Read Data and B24t Flip Register 2 */
#define MTU_MC24_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062888u)	/* Read Data and B24t Flip Register 20 */
#define MTU_MC24_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006288au)	/* Read Data and B24t Flip Register 21 */
#define MTU_MC24_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006288cu)	/* Read Data and B24t Flip Register 22 */
#define MTU_MC24_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006288eu)	/* Read Data and B24t Flip Register 23 */
#define MTU_MC24_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062890u)	/* Read Data and B24t Flip Register 24 */
#define MTU_MC24_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062892u)	/* Read Data and B24t Flip Register 25 */
#define MTU_MC24_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062894u)	/* Read Data and B24t Flip Register 26 */
#define MTU_MC24_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062896u)	/* Read Data and B24t Flip Register 27 */
#define MTU_MC24_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062898u)	/* Read Data and B24t Flip Register 28 */
#define MTU_MC24_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006289au)	/* Read Data and B24t Flip Register 29 */
#define MTU_MC24_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062866u)	/* Read Data and B24t Flip Register 3 */
#define MTU_MC24_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006289cu)	/* Read Data and B24t Flip Register 30 */
#define MTU_MC24_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006289eu)	/* Read Data and B24t Flip Register 31 */
#define MTU_MC24_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00628a0u)	/* Read Data and B24t Flip Register 32 */
#define MTU_MC24_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00628a2u)	/* Read Data and B24t Flip Register 33 */
#define MTU_MC24_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00628a4u)	/* Read Data and B24t Flip Register 34 */
#define MTU_MC24_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00628a6u)	/* Read Data and B24t Flip Register 35 */
#define MTU_MC24_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00628a8u)	/* Read Data and B24t Flip Register 36 */
#define MTU_MC24_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00628aau)	/* Read Data and B24t Flip Register 37 */
#define MTU_MC24_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00628acu)	/* Read Data and B24t Flip Register 38 */
#define MTU_MC24_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00628aeu)	/* Read Data and B24t Flip Register 39 */
#define MTU_MC24_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062868u)	/* Read Data and B24t Flip Register 4 */
#define MTU_MC24_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00628b0u)	/* Read Data and B24t Flip Register 40 */
#define MTU_MC24_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00628b2u)	/* Read Data and B24t Flip Register 41 */
#define MTU_MC24_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00628b4u)	/* Read Data and B24t Flip Register 42 */
#define MTU_MC24_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00628b6u)	/* Read Data and B24t Flip Register 43 */
#define MTU_MC24_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00628b8u)	/* Read Data and B24t Flip Register 44 */
#define MTU_MC24_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00628bau)	/* Read Data and B24t Flip Register 45 */
#define MTU_MC24_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00628bcu)	/* Read Data and B24t Flip Register 46 */
#define MTU_MC24_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00628beu)	/* Read Data and B24t Flip Register 47 */
#define MTU_MC24_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00628c0u)	/* Read Data and B24t Flip Register 48 */
#define MTU_MC24_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00628c2u)	/* Read Data and B24t Flip Register 49 */
#define MTU_MC24_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006286au)	/* Read Data and B24t Flip Register 5 */
#define MTU_MC24_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00628c4u)	/* Read Data and B24t Flip Register 50 */
#define MTU_MC24_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00628c6u)	/* Read Data and B24t Flip Register 51 */
#define MTU_MC24_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00628c8u)	/* Read Data and B24t Flip Register 52 */
#define MTU_MC24_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00628cau)	/* Read Data and B24t Flip Register 53 */
#define MTU_MC24_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00628ccu)	/* Read Data and B24t Flip Register 54 */
#define MTU_MC24_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00628ceu)	/* Read Data and B24t Flip Register 55 */
#define MTU_MC24_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00628d0u)	/* Read Data and B24t Flip Register 56 */
#define MTU_MC24_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00628d2u)	/* Read Data and B24t Flip Register 57 */
#define MTU_MC24_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00628d4u)	/* Read Data and B24t Flip Register 58 */
#define MTU_MC24_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00628d6u)	/* Read Data and B24t Flip Register 59 */
#define MTU_MC24_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006286cu)	/* Read Data and B24t Flip Register 6 */
#define MTU_MC24_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00628d8u)	/* Read Data and B24t Flip Register 60 */
#define MTU_MC24_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00628dau)	/* Read Data and B24t Flip Register 61 */
#define MTU_MC24_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00628dcu)	/* Read Data and B24t Flip Register 62 */
#define MTU_MC24_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00628deu)	/* Read Data and B24t Flip Register 63 */
#define MTU_MC24_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00628e0u)	/* Read Data and B24t Flip Register 64 */
#define MTU_MC24_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00628e2u)	/* Read Data and B24t Flip Register 65 */
#define MTU_MC24_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00628e4u)	/* Read Data and B24t Flip Register 66 */
#define MTU_MC24_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006286eu)	/* Read Data and B24t Flip Register 7 */
#define MTU_MC24_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062870u)	/* Read Data and B24t Flip Register 8 */
#define MTU_MC24_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062872u)	/* Read Data and B24t Flip Register 9 */
#define MTU_MC25_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062960u)	/* Read Data and B25t Flip Register 0 */
#define MTU_MC25_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062962u)	/* Read Data and B25t Flip Register 1 */
#define MTU_MC25_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062974u)	/* Read Data and B25t Flip Register 10 */
#define MTU_MC25_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062976u)	/* Read Data and B25t Flip Register 11 */
#define MTU_MC25_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062978u)	/* Read Data and B25t Flip Register 12 */
#define MTU_MC25_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006297au)	/* Read Data and B25t Flip Register 13 */
#define MTU_MC25_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006297cu)	/* Read Data and B25t Flip Register 14 */
#define MTU_MC25_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006297eu)	/* Read Data and B25t Flip Register 15 */
#define MTU_MC25_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062980u)	/* Read Data and B25t Flip Register 16 */
#define MTU_MC25_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062982u)	/* Read Data and B25t Flip Register 17 */
#define MTU_MC25_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062984u)	/* Read Data and B25t Flip Register 18 */
#define MTU_MC25_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062986u)	/* Read Data and B25t Flip Register 19 */
#define MTU_MC25_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062964u)	/* Read Data and B25t Flip Register 2 */
#define MTU_MC25_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062988u)	/* Read Data and B25t Flip Register 20 */
#define MTU_MC25_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006298au)	/* Read Data and B25t Flip Register 21 */
#define MTU_MC25_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006298cu)	/* Read Data and B25t Flip Register 22 */
#define MTU_MC25_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006298eu)	/* Read Data and B25t Flip Register 23 */
#define MTU_MC25_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062990u)	/* Read Data and B25t Flip Register 24 */
#define MTU_MC25_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062992u)	/* Read Data and B25t Flip Register 25 */
#define MTU_MC25_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062994u)	/* Read Data and B25t Flip Register 26 */
#define MTU_MC25_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062996u)	/* Read Data and B25t Flip Register 27 */
#define MTU_MC25_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062998u)	/* Read Data and B25t Flip Register 28 */
#define MTU_MC25_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006299au)	/* Read Data and B25t Flip Register 29 */
#define MTU_MC25_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062966u)	/* Read Data and B25t Flip Register 3 */
#define MTU_MC25_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006299cu)	/* Read Data and B25t Flip Register 30 */
#define MTU_MC25_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006299eu)	/* Read Data and B25t Flip Register 31 */
#define MTU_MC25_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00629a0u)	/* Read Data and B25t Flip Register 32 */
#define MTU_MC25_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00629a2u)	/* Read Data and B25t Flip Register 33 */
#define MTU_MC25_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00629a4u)	/* Read Data and B25t Flip Register 34 */
#define MTU_MC25_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00629a6u)	/* Read Data and B25t Flip Register 35 */
#define MTU_MC25_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00629a8u)	/* Read Data and B25t Flip Register 36 */
#define MTU_MC25_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00629aau)	/* Read Data and B25t Flip Register 37 */
#define MTU_MC25_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00629acu)	/* Read Data and B25t Flip Register 38 */
#define MTU_MC25_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00629aeu)	/* Read Data and B25t Flip Register 39 */
#define MTU_MC25_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062968u)	/* Read Data and B25t Flip Register 4 */
#define MTU_MC25_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00629b0u)	/* Read Data and B25t Flip Register 40 */
#define MTU_MC25_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00629b2u)	/* Read Data and B25t Flip Register 41 */
#define MTU_MC25_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00629b4u)	/* Read Data and B25t Flip Register 42 */
#define MTU_MC25_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00629b6u)	/* Read Data and B25t Flip Register 43 */
#define MTU_MC25_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00629b8u)	/* Read Data and B25t Flip Register 44 */
#define MTU_MC25_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00629bau)	/* Read Data and B25t Flip Register 45 */
#define MTU_MC25_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00629bcu)	/* Read Data and B25t Flip Register 46 */
#define MTU_MC25_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00629beu)	/* Read Data and B25t Flip Register 47 */
#define MTU_MC25_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00629c0u)	/* Read Data and B25t Flip Register 48 */
#define MTU_MC25_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00629c2u)	/* Read Data and B25t Flip Register 49 */
#define MTU_MC25_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006296au)	/* Read Data and B25t Flip Register 5 */
#define MTU_MC25_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00629c4u)	/* Read Data and B25t Flip Register 50 */
#define MTU_MC25_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00629c6u)	/* Read Data and B25t Flip Register 51 */
#define MTU_MC25_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00629c8u)	/* Read Data and B25t Flip Register 52 */
#define MTU_MC25_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00629cau)	/* Read Data and B25t Flip Register 53 */
#define MTU_MC25_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00629ccu)	/* Read Data and B25t Flip Register 54 */
#define MTU_MC25_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00629ceu)	/* Read Data and B25t Flip Register 55 */
#define MTU_MC25_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00629d0u)	/* Read Data and B25t Flip Register 56 */
#define MTU_MC25_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00629d2u)	/* Read Data and B25t Flip Register 57 */
#define MTU_MC25_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00629d4u)	/* Read Data and B25t Flip Register 58 */
#define MTU_MC25_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00629d6u)	/* Read Data and B25t Flip Register 59 */
#define MTU_MC25_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006296cu)	/* Read Data and B25t Flip Register 6 */
#define MTU_MC25_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00629d8u)	/* Read Data and B25t Flip Register 60 */
#define MTU_MC25_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00629dau)	/* Read Data and B25t Flip Register 61 */
#define MTU_MC25_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00629dcu)	/* Read Data and B25t Flip Register 62 */
#define MTU_MC25_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00629deu)	/* Read Data and B25t Flip Register 63 */
#define MTU_MC25_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00629e0u)	/* Read Data and B25t Flip Register 64 */
#define MTU_MC25_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00629e2u)	/* Read Data and B25t Flip Register 65 */
#define MTU_MC25_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00629e4u)	/* Read Data and B25t Flip Register 66 */
#define MTU_MC25_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006296eu)	/* Read Data and B25t Flip Register 7 */
#define MTU_MC25_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062970u)	/* Read Data and B25t Flip Register 8 */
#define MTU_MC25_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062972u)	/* Read Data and B25t Flip Register 9 */
#define MTU_MC26_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062a60u)	/* Read Data and B26t Flip Register 0 */
#define MTU_MC26_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062a62u)	/* Read Data and B26t Flip Register 1 */
#define MTU_MC26_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062a74u)	/* Read Data and B26t Flip Register 10 */
#define MTU_MC26_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062a76u)	/* Read Data and B26t Flip Register 11 */
#define MTU_MC26_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062a78u)	/* Read Data and B26t Flip Register 12 */
#define MTU_MC26_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0062a7au)	/* Read Data and B26t Flip Register 13 */
#define MTU_MC26_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0062a7cu)	/* Read Data and B26t Flip Register 14 */
#define MTU_MC26_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0062a7eu)	/* Read Data and B26t Flip Register 15 */
#define MTU_MC26_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062a80u)	/* Read Data and B26t Flip Register 16 */
#define MTU_MC26_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062a82u)	/* Read Data and B26t Flip Register 17 */
#define MTU_MC26_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062a84u)	/* Read Data and B26t Flip Register 18 */
#define MTU_MC26_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062a86u)	/* Read Data and B26t Flip Register 19 */
#define MTU_MC26_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062a64u)	/* Read Data and B26t Flip Register 2 */
#define MTU_MC26_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062a88u)	/* Read Data and B26t Flip Register 20 */
#define MTU_MC26_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0062a8au)	/* Read Data and B26t Flip Register 21 */
#define MTU_MC26_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0062a8cu)	/* Read Data and B26t Flip Register 22 */
#define MTU_MC26_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0062a8eu)	/* Read Data and B26t Flip Register 23 */
#define MTU_MC26_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062a90u)	/* Read Data and B26t Flip Register 24 */
#define MTU_MC26_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062a92u)	/* Read Data and B26t Flip Register 25 */
#define MTU_MC26_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062a94u)	/* Read Data and B26t Flip Register 26 */
#define MTU_MC26_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062a96u)	/* Read Data and B26t Flip Register 27 */
#define MTU_MC26_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062a98u)	/* Read Data and B26t Flip Register 28 */
#define MTU_MC26_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0062a9au)	/* Read Data and B26t Flip Register 29 */
#define MTU_MC26_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062a66u)	/* Read Data and B26t Flip Register 3 */
#define MTU_MC26_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0062a9cu)	/* Read Data and B26t Flip Register 30 */
#define MTU_MC26_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0062a9eu)	/* Read Data and B26t Flip Register 31 */
#define MTU_MC26_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0062aa0u)	/* Read Data and B26t Flip Register 32 */
#define MTU_MC26_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0062aa2u)	/* Read Data and B26t Flip Register 33 */
#define MTU_MC26_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0062aa4u)	/* Read Data and B26t Flip Register 34 */
#define MTU_MC26_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0062aa6u)	/* Read Data and B26t Flip Register 35 */
#define MTU_MC26_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0062aa8u)	/* Read Data and B26t Flip Register 36 */
#define MTU_MC26_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0062aaau)	/* Read Data and B26t Flip Register 37 */
#define MTU_MC26_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0062aacu)	/* Read Data and B26t Flip Register 38 */
#define MTU_MC26_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0062aaeu)	/* Read Data and B26t Flip Register 39 */
#define MTU_MC26_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062a68u)	/* Read Data and B26t Flip Register 4 */
#define MTU_MC26_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0062ab0u)	/* Read Data and B26t Flip Register 40 */
#define MTU_MC26_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0062ab2u)	/* Read Data and B26t Flip Register 41 */
#define MTU_MC26_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0062ab4u)	/* Read Data and B26t Flip Register 42 */
#define MTU_MC26_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0062ab6u)	/* Read Data and B26t Flip Register 43 */
#define MTU_MC26_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0062ab8u)	/* Read Data and B26t Flip Register 44 */
#define MTU_MC26_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0062abau)	/* Read Data and B26t Flip Register 45 */
#define MTU_MC26_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0062abcu)	/* Read Data and B26t Flip Register 46 */
#define MTU_MC26_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0062abeu)	/* Read Data and B26t Flip Register 47 */
#define MTU_MC26_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0062ac0u)	/* Read Data and B26t Flip Register 48 */
#define MTU_MC26_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0062ac2u)	/* Read Data and B26t Flip Register 49 */
#define MTU_MC26_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0062a6au)	/* Read Data and B26t Flip Register 5 */
#define MTU_MC26_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0062ac4u)	/* Read Data and B26t Flip Register 50 */
#define MTU_MC26_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0062ac6u)	/* Read Data and B26t Flip Register 51 */
#define MTU_MC26_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0062ac8u)	/* Read Data and B26t Flip Register 52 */
#define MTU_MC26_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0062acau)	/* Read Data and B26t Flip Register 53 */
#define MTU_MC26_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0062accu)	/* Read Data and B26t Flip Register 54 */
#define MTU_MC26_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0062aceu)	/* Read Data and B26t Flip Register 55 */
#define MTU_MC26_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0062ad0u)	/* Read Data and B26t Flip Register 56 */
#define MTU_MC26_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0062ad2u)	/* Read Data and B26t Flip Register 57 */
#define MTU_MC26_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0062ad4u)	/* Read Data and B26t Flip Register 58 */
#define MTU_MC26_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0062ad6u)	/* Read Data and B26t Flip Register 59 */
#define MTU_MC26_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0062a6cu)	/* Read Data and B26t Flip Register 6 */
#define MTU_MC26_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0062ad8u)	/* Read Data and B26t Flip Register 60 */
#define MTU_MC26_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0062adau)	/* Read Data and B26t Flip Register 61 */
#define MTU_MC26_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0062adcu)	/* Read Data and B26t Flip Register 62 */
#define MTU_MC26_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0062adeu)	/* Read Data and B26t Flip Register 63 */
#define MTU_MC26_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0062ae0u)	/* Read Data and B26t Flip Register 64 */
#define MTU_MC26_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0062ae2u)	/* Read Data and B26t Flip Register 65 */
#define MTU_MC26_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0062ae4u)	/* Read Data and B26t Flip Register 66 */
#define MTU_MC26_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0062a6eu)	/* Read Data and B26t Flip Register 7 */
#define MTU_MC26_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062a70u)	/* Read Data and B26t Flip Register 8 */
#define MTU_MC26_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062a72u)	/* Read Data and B26t Flip Register 9 */
#define MTU_MC27_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062b60u)	/* Read Data and B27t Flip Register 0 */
#define MTU_MC27_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062b62u)	/* Read Data and B27t Flip Register 1 */
#define MTU_MC27_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062b74u)	/* Read Data and B27t Flip Register 10 */
#define MTU_MC27_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062b76u)	/* Read Data and B27t Flip Register 11 */
#define MTU_MC27_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062b78u)	/* Read Data and B27t Flip Register 12 */
#define MTU_MC27_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0062b7au)	/* Read Data and B27t Flip Register 13 */
#define MTU_MC27_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0062b7cu)	/* Read Data and B27t Flip Register 14 */
#define MTU_MC27_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0062b7eu)	/* Read Data and B27t Flip Register 15 */
#define MTU_MC27_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062b80u)	/* Read Data and B27t Flip Register 16 */
#define MTU_MC27_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062b82u)	/* Read Data and B27t Flip Register 17 */
#define MTU_MC27_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062b84u)	/* Read Data and B27t Flip Register 18 */
#define MTU_MC27_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062b86u)	/* Read Data and B27t Flip Register 19 */
#define MTU_MC27_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062b64u)	/* Read Data and B27t Flip Register 2 */
#define MTU_MC27_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062b88u)	/* Read Data and B27t Flip Register 20 */
#define MTU_MC27_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0062b8au)	/* Read Data and B27t Flip Register 21 */
#define MTU_MC27_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0062b8cu)	/* Read Data and B27t Flip Register 22 */
#define MTU_MC27_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0062b8eu)	/* Read Data and B27t Flip Register 23 */
#define MTU_MC27_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062b90u)	/* Read Data and B27t Flip Register 24 */
#define MTU_MC27_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062b92u)	/* Read Data and B27t Flip Register 25 */
#define MTU_MC27_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062b94u)	/* Read Data and B27t Flip Register 26 */
#define MTU_MC27_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062b96u)	/* Read Data and B27t Flip Register 27 */
#define MTU_MC27_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062b98u)	/* Read Data and B27t Flip Register 28 */
#define MTU_MC27_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0062b9au)	/* Read Data and B27t Flip Register 29 */
#define MTU_MC27_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062b66u)	/* Read Data and B27t Flip Register 3 */
#define MTU_MC27_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0062b9cu)	/* Read Data and B27t Flip Register 30 */
#define MTU_MC27_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0062b9eu)	/* Read Data and B27t Flip Register 31 */
#define MTU_MC27_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0062ba0u)	/* Read Data and B27t Flip Register 32 */
#define MTU_MC27_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0062ba2u)	/* Read Data and B27t Flip Register 33 */
#define MTU_MC27_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0062ba4u)	/* Read Data and B27t Flip Register 34 */
#define MTU_MC27_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0062ba6u)	/* Read Data and B27t Flip Register 35 */
#define MTU_MC27_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0062ba8u)	/* Read Data and B27t Flip Register 36 */
#define MTU_MC27_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0062baau)	/* Read Data and B27t Flip Register 37 */
#define MTU_MC27_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0062bacu)	/* Read Data and B27t Flip Register 38 */
#define MTU_MC27_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0062baeu)	/* Read Data and B27t Flip Register 39 */
#define MTU_MC27_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062b68u)	/* Read Data and B27t Flip Register 4 */
#define MTU_MC27_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0062bb0u)	/* Read Data and B27t Flip Register 40 */
#define MTU_MC27_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0062bb2u)	/* Read Data and B27t Flip Register 41 */
#define MTU_MC27_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0062bb4u)	/* Read Data and B27t Flip Register 42 */
#define MTU_MC27_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0062bb6u)	/* Read Data and B27t Flip Register 43 */
#define MTU_MC27_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0062bb8u)	/* Read Data and B27t Flip Register 44 */
#define MTU_MC27_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0062bbau)	/* Read Data and B27t Flip Register 45 */
#define MTU_MC27_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0062bbcu)	/* Read Data and B27t Flip Register 46 */
#define MTU_MC27_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0062bbeu)	/* Read Data and B27t Flip Register 47 */
#define MTU_MC27_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0062bc0u)	/* Read Data and B27t Flip Register 48 */
#define MTU_MC27_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0062bc2u)	/* Read Data and B27t Flip Register 49 */
#define MTU_MC27_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0062b6au)	/* Read Data and B27t Flip Register 5 */
#define MTU_MC27_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0062bc4u)	/* Read Data and B27t Flip Register 50 */
#define MTU_MC27_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0062bc6u)	/* Read Data and B27t Flip Register 51 */
#define MTU_MC27_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0062bc8u)	/* Read Data and B27t Flip Register 52 */
#define MTU_MC27_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0062bcau)	/* Read Data and B27t Flip Register 53 */
#define MTU_MC27_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0062bccu)	/* Read Data and B27t Flip Register 54 */
#define MTU_MC27_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0062bceu)	/* Read Data and B27t Flip Register 55 */
#define MTU_MC27_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0062bd0u)	/* Read Data and B27t Flip Register 56 */
#define MTU_MC27_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0062bd2u)	/* Read Data and B27t Flip Register 57 */
#define MTU_MC27_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0062bd4u)	/* Read Data and B27t Flip Register 58 */
#define MTU_MC27_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0062bd6u)	/* Read Data and B27t Flip Register 59 */
#define MTU_MC27_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0062b6cu)	/* Read Data and B27t Flip Register 6 */
#define MTU_MC27_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0062bd8u)	/* Read Data and B27t Flip Register 60 */
#define MTU_MC27_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0062bdau)	/* Read Data and B27t Flip Register 61 */
#define MTU_MC27_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0062bdcu)	/* Read Data and B27t Flip Register 62 */
#define MTU_MC27_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0062bdeu)	/* Read Data and B27t Flip Register 63 */
#define MTU_MC27_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0062be0u)	/* Read Data and B27t Flip Register 64 */
#define MTU_MC27_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0062be2u)	/* Read Data and B27t Flip Register 65 */
#define MTU_MC27_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0062be4u)	/* Read Data and B27t Flip Register 66 */
#define MTU_MC27_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0062b6eu)	/* Read Data and B27t Flip Register 7 */
#define MTU_MC27_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062b70u)	/* Read Data and B27t Flip Register 8 */
#define MTU_MC27_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062b72u)	/* Read Data and B27t Flip Register 9 */
#define MTU_MC28_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062c60u)	/* Read Data and B28t Flip Register 0 */
#define MTU_MC28_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062c62u)	/* Read Data and B28t Flip Register 1 */
#define MTU_MC28_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062c74u)	/* Read Data and B28t Flip Register 10 */
#define MTU_MC28_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062c76u)	/* Read Data and B28t Flip Register 11 */
#define MTU_MC28_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062c78u)	/* Read Data and B28t Flip Register 12 */
#define MTU_MC28_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0062c7au)	/* Read Data and B28t Flip Register 13 */
#define MTU_MC28_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0062c7cu)	/* Read Data and B28t Flip Register 14 */
#define MTU_MC28_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0062c7eu)	/* Read Data and B28t Flip Register 15 */
#define MTU_MC28_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062c80u)	/* Read Data and B28t Flip Register 16 */
#define MTU_MC28_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062c82u)	/* Read Data and B28t Flip Register 17 */
#define MTU_MC28_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062c84u)	/* Read Data and B28t Flip Register 18 */
#define MTU_MC28_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062c86u)	/* Read Data and B28t Flip Register 19 */
#define MTU_MC28_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062c64u)	/* Read Data and B28t Flip Register 2 */
#define MTU_MC28_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062c88u)	/* Read Data and B28t Flip Register 20 */
#define MTU_MC28_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0062c8au)	/* Read Data and B28t Flip Register 21 */
#define MTU_MC28_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0062c8cu)	/* Read Data and B28t Flip Register 22 */
#define MTU_MC28_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0062c8eu)	/* Read Data and B28t Flip Register 23 */
#define MTU_MC28_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062c90u)	/* Read Data and B28t Flip Register 24 */
#define MTU_MC28_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062c92u)	/* Read Data and B28t Flip Register 25 */
#define MTU_MC28_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062c94u)	/* Read Data and B28t Flip Register 26 */
#define MTU_MC28_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062c96u)	/* Read Data and B28t Flip Register 27 */
#define MTU_MC28_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062c98u)	/* Read Data and B28t Flip Register 28 */
#define MTU_MC28_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0062c9au)	/* Read Data and B28t Flip Register 29 */
#define MTU_MC28_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062c66u)	/* Read Data and B28t Flip Register 3 */
#define MTU_MC28_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0062c9cu)	/* Read Data and B28t Flip Register 30 */
#define MTU_MC28_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0062c9eu)	/* Read Data and B28t Flip Register 31 */
#define MTU_MC28_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0062ca0u)	/* Read Data and B28t Flip Register 32 */
#define MTU_MC28_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0062ca2u)	/* Read Data and B28t Flip Register 33 */
#define MTU_MC28_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0062ca4u)	/* Read Data and B28t Flip Register 34 */
#define MTU_MC28_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0062ca6u)	/* Read Data and B28t Flip Register 35 */
#define MTU_MC28_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0062ca8u)	/* Read Data and B28t Flip Register 36 */
#define MTU_MC28_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0062caau)	/* Read Data and B28t Flip Register 37 */
#define MTU_MC28_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0062cacu)	/* Read Data and B28t Flip Register 38 */
#define MTU_MC28_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0062caeu)	/* Read Data and B28t Flip Register 39 */
#define MTU_MC28_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062c68u)	/* Read Data and B28t Flip Register 4 */
#define MTU_MC28_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0062cb0u)	/* Read Data and B28t Flip Register 40 */
#define MTU_MC28_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0062cb2u)	/* Read Data and B28t Flip Register 41 */
#define MTU_MC28_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0062cb4u)	/* Read Data and B28t Flip Register 42 */
#define MTU_MC28_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0062cb6u)	/* Read Data and B28t Flip Register 43 */
#define MTU_MC28_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0062cb8u)	/* Read Data and B28t Flip Register 44 */
#define MTU_MC28_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0062cbau)	/* Read Data and B28t Flip Register 45 */
#define MTU_MC28_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0062cbcu)	/* Read Data and B28t Flip Register 46 */
#define MTU_MC28_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0062cbeu)	/* Read Data and B28t Flip Register 47 */
#define MTU_MC28_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0062cc0u)	/* Read Data and B28t Flip Register 48 */
#define MTU_MC28_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0062cc2u)	/* Read Data and B28t Flip Register 49 */
#define MTU_MC28_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0062c6au)	/* Read Data and B28t Flip Register 5 */
#define MTU_MC28_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0062cc4u)	/* Read Data and B28t Flip Register 50 */
#define MTU_MC28_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0062cc6u)	/* Read Data and B28t Flip Register 51 */
#define MTU_MC28_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0062cc8u)	/* Read Data and B28t Flip Register 52 */
#define MTU_MC28_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0062ccau)	/* Read Data and B28t Flip Register 53 */
#define MTU_MC28_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0062cccu)	/* Read Data and B28t Flip Register 54 */
#define MTU_MC28_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0062cceu)	/* Read Data and B28t Flip Register 55 */
#define MTU_MC28_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0062cd0u)	/* Read Data and B28t Flip Register 56 */
#define MTU_MC28_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0062cd2u)	/* Read Data and B28t Flip Register 57 */
#define MTU_MC28_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0062cd4u)	/* Read Data and B28t Flip Register 58 */
#define MTU_MC28_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0062cd6u)	/* Read Data and B28t Flip Register 59 */
#define MTU_MC28_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0062c6cu)	/* Read Data and B28t Flip Register 6 */
#define MTU_MC28_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0062cd8u)	/* Read Data and B28t Flip Register 60 */
#define MTU_MC28_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0062cdau)	/* Read Data and B28t Flip Register 61 */
#define MTU_MC28_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0062cdcu)	/* Read Data and B28t Flip Register 62 */
#define MTU_MC28_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0062cdeu)	/* Read Data and B28t Flip Register 63 */
#define MTU_MC28_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0062ce0u)	/* Read Data and B28t Flip Register 64 */
#define MTU_MC28_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0062ce2u)	/* Read Data and B28t Flip Register 65 */
#define MTU_MC28_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0062ce4u)	/* Read Data and B28t Flip Register 66 */
#define MTU_MC28_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0062c6eu)	/* Read Data and B28t Flip Register 7 */
#define MTU_MC28_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062c70u)	/* Read Data and B28t Flip Register 8 */
#define MTU_MC28_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062c72u)	/* Read Data and B28t Flip Register 9 */
#define MTU_MC29_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062d60u)	/* Read Data and B29t Flip Register 0 */
#define MTU_MC29_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062d62u)	/* Read Data and B29t Flip Register 1 */
#define MTU_MC29_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062d74u)	/* Read Data and B29t Flip Register 10 */
#define MTU_MC29_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062d76u)	/* Read Data and B29t Flip Register 11 */
#define MTU_MC29_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062d78u)	/* Read Data and B29t Flip Register 12 */
#define MTU_MC29_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0062d7au)	/* Read Data and B29t Flip Register 13 */
#define MTU_MC29_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0062d7cu)	/* Read Data and B29t Flip Register 14 */
#define MTU_MC29_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0062d7eu)	/* Read Data and B29t Flip Register 15 */
#define MTU_MC29_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062d80u)	/* Read Data and B29t Flip Register 16 */
#define MTU_MC29_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062d82u)	/* Read Data and B29t Flip Register 17 */
#define MTU_MC29_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062d84u)	/* Read Data and B29t Flip Register 18 */
#define MTU_MC29_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062d86u)	/* Read Data and B29t Flip Register 19 */
#define MTU_MC29_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062d64u)	/* Read Data and B29t Flip Register 2 */
#define MTU_MC29_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062d88u)	/* Read Data and B29t Flip Register 20 */
#define MTU_MC29_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0062d8au)	/* Read Data and B29t Flip Register 21 */
#define MTU_MC29_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0062d8cu)	/* Read Data and B29t Flip Register 22 */
#define MTU_MC29_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0062d8eu)	/* Read Data and B29t Flip Register 23 */
#define MTU_MC29_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062d90u)	/* Read Data and B29t Flip Register 24 */
#define MTU_MC29_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062d92u)	/* Read Data and B29t Flip Register 25 */
#define MTU_MC29_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062d94u)	/* Read Data and B29t Flip Register 26 */
#define MTU_MC29_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062d96u)	/* Read Data and B29t Flip Register 27 */
#define MTU_MC29_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062d98u)	/* Read Data and B29t Flip Register 28 */
#define MTU_MC29_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0062d9au)	/* Read Data and B29t Flip Register 29 */
#define MTU_MC29_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062d66u)	/* Read Data and B29t Flip Register 3 */
#define MTU_MC29_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0062d9cu)	/* Read Data and B29t Flip Register 30 */
#define MTU_MC29_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0062d9eu)	/* Read Data and B29t Flip Register 31 */
#define MTU_MC29_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0062da0u)	/* Read Data and B29t Flip Register 32 */
#define MTU_MC29_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0062da2u)	/* Read Data and B29t Flip Register 33 */
#define MTU_MC29_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0062da4u)	/* Read Data and B29t Flip Register 34 */
#define MTU_MC29_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0062da6u)	/* Read Data and B29t Flip Register 35 */
#define MTU_MC29_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0062da8u)	/* Read Data and B29t Flip Register 36 */
#define MTU_MC29_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0062daau)	/* Read Data and B29t Flip Register 37 */
#define MTU_MC29_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0062dacu)	/* Read Data and B29t Flip Register 38 */
#define MTU_MC29_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0062daeu)	/* Read Data and B29t Flip Register 39 */
#define MTU_MC29_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062d68u)	/* Read Data and B29t Flip Register 4 */
#define MTU_MC29_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0062db0u)	/* Read Data and B29t Flip Register 40 */
#define MTU_MC29_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0062db2u)	/* Read Data and B29t Flip Register 41 */
#define MTU_MC29_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0062db4u)	/* Read Data and B29t Flip Register 42 */
#define MTU_MC29_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0062db6u)	/* Read Data and B29t Flip Register 43 */
#define MTU_MC29_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0062db8u)	/* Read Data and B29t Flip Register 44 */
#define MTU_MC29_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0062dbau)	/* Read Data and B29t Flip Register 45 */
#define MTU_MC29_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0062dbcu)	/* Read Data and B29t Flip Register 46 */
#define MTU_MC29_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0062dbeu)	/* Read Data and B29t Flip Register 47 */
#define MTU_MC29_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0062dc0u)	/* Read Data and B29t Flip Register 48 */
#define MTU_MC29_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0062dc2u)	/* Read Data and B29t Flip Register 49 */
#define MTU_MC29_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0062d6au)	/* Read Data and B29t Flip Register 5 */
#define MTU_MC29_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0062dc4u)	/* Read Data and B29t Flip Register 50 */
#define MTU_MC29_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0062dc6u)	/* Read Data and B29t Flip Register 51 */
#define MTU_MC29_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0062dc8u)	/* Read Data and B29t Flip Register 52 */
#define MTU_MC29_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0062dcau)	/* Read Data and B29t Flip Register 53 */
#define MTU_MC29_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0062dccu)	/* Read Data and B29t Flip Register 54 */
#define MTU_MC29_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0062dceu)	/* Read Data and B29t Flip Register 55 */
#define MTU_MC29_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0062dd0u)	/* Read Data and B29t Flip Register 56 */
#define MTU_MC29_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0062dd2u)	/* Read Data and B29t Flip Register 57 */
#define MTU_MC29_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0062dd4u)	/* Read Data and B29t Flip Register 58 */
#define MTU_MC29_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0062dd6u)	/* Read Data and B29t Flip Register 59 */
#define MTU_MC29_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0062d6cu)	/* Read Data and B29t Flip Register 6 */
#define MTU_MC29_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0062dd8u)	/* Read Data and B29t Flip Register 60 */
#define MTU_MC29_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0062ddau)	/* Read Data and B29t Flip Register 61 */
#define MTU_MC29_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0062ddcu)	/* Read Data and B29t Flip Register 62 */
#define MTU_MC29_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0062ddeu)	/* Read Data and B29t Flip Register 63 */
#define MTU_MC29_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0062de0u)	/* Read Data and B29t Flip Register 64 */
#define MTU_MC29_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0062de2u)	/* Read Data and B29t Flip Register 65 */
#define MTU_MC29_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0062de4u)	/* Read Data and B29t Flip Register 66 */
#define MTU_MC29_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0062d6eu)	/* Read Data and B29t Flip Register 7 */
#define MTU_MC29_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062d70u)	/* Read Data and B29t Flip Register 8 */
#define MTU_MC29_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062d72u)	/* Read Data and B29t Flip Register 9 */
#define MTU_MC2_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061260u)	/* Read Data and B2t Flip Register 0 */
#define MTU_MC2_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061262u)	/* Read Data and B2t Flip Register 1 */
#define MTU_MC2_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061274u)	/* Read Data and B2t Flip Register 10 */
#define MTU_MC2_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061276u)	/* Read Data and B2t Flip Register 11 */
#define MTU_MC2_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061278u)	/* Read Data and B2t Flip Register 12 */
#define MTU_MC2_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006127au)	/* Read Data and B2t Flip Register 13 */
#define MTU_MC2_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006127cu)	/* Read Data and B2t Flip Register 14 */
#define MTU_MC2_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006127eu)	/* Read Data and B2t Flip Register 15 */
#define MTU_MC2_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061280u)	/* Read Data and B2t Flip Register 16 */
#define MTU_MC2_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061282u)	/* Read Data and B2t Flip Register 17 */
#define MTU_MC2_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061284u)	/* Read Data and B2t Flip Register 18 */
#define MTU_MC2_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061286u)	/* Read Data and B2t Flip Register 19 */
#define MTU_MC2_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061264u)	/* Read Data and B2t Flip Register 2 */
#define MTU_MC2_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061288u)	/* Read Data and B2t Flip Register 20 */
#define MTU_MC2_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006128au)	/* Read Data and B2t Flip Register 21 */
#define MTU_MC2_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006128cu)	/* Read Data and B2t Flip Register 22 */
#define MTU_MC2_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006128eu)	/* Read Data and B2t Flip Register 23 */
#define MTU_MC2_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061290u)	/* Read Data and B2t Flip Register 24 */
#define MTU_MC2_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061292u)	/* Read Data and B2t Flip Register 25 */
#define MTU_MC2_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061294u)	/* Read Data and B2t Flip Register 26 */
#define MTU_MC2_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061296u)	/* Read Data and B2t Flip Register 27 */
#define MTU_MC2_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061298u)	/* Read Data and B2t Flip Register 28 */
#define MTU_MC2_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006129au)	/* Read Data and B2t Flip Register 29 */
#define MTU_MC2_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061266u)	/* Read Data and B2t Flip Register 3 */
#define MTU_MC2_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006129cu)	/* Read Data and B2t Flip Register 30 */
#define MTU_MC2_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006129eu)	/* Read Data and B2t Flip Register 31 */
#define MTU_MC2_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00612a0u)	/* Read Data and B2t Flip Register 32 */
#define MTU_MC2_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00612a2u)	/* Read Data and B2t Flip Register 33 */
#define MTU_MC2_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00612a4u)	/* Read Data and B2t Flip Register 34 */
#define MTU_MC2_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00612a6u)	/* Read Data and B2t Flip Register 35 */
#define MTU_MC2_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00612a8u)	/* Read Data and B2t Flip Register 36 */
#define MTU_MC2_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00612aau)	/* Read Data and B2t Flip Register 37 */
#define MTU_MC2_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00612acu)	/* Read Data and B2t Flip Register 38 */
#define MTU_MC2_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00612aeu)	/* Read Data and B2t Flip Register 39 */
#define MTU_MC2_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061268u)	/* Read Data and B2t Flip Register 4 */
#define MTU_MC2_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00612b0u)	/* Read Data and B2t Flip Register 40 */
#define MTU_MC2_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00612b2u)	/* Read Data and B2t Flip Register 41 */
#define MTU_MC2_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00612b4u)	/* Read Data and B2t Flip Register 42 */
#define MTU_MC2_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00612b6u)	/* Read Data and B2t Flip Register 43 */
#define MTU_MC2_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00612b8u)	/* Read Data and B2t Flip Register 44 */
#define MTU_MC2_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00612bau)	/* Read Data and B2t Flip Register 45 */
#define MTU_MC2_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00612bcu)	/* Read Data and B2t Flip Register 46 */
#define MTU_MC2_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00612beu)	/* Read Data and B2t Flip Register 47 */
#define MTU_MC2_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00612c0u)	/* Read Data and B2t Flip Register 48 */
#define MTU_MC2_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00612c2u)	/* Read Data and B2t Flip Register 49 */
#define MTU_MC2_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006126au)	/* Read Data and B2t Flip Register 5 */
#define MTU_MC2_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00612c4u)	/* Read Data and B2t Flip Register 50 */
#define MTU_MC2_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00612c6u)	/* Read Data and B2t Flip Register 51 */
#define MTU_MC2_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00612c8u)	/* Read Data and B2t Flip Register 52 */
#define MTU_MC2_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00612cau)	/* Read Data and B2t Flip Register 53 */
#define MTU_MC2_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00612ccu)	/* Read Data and B2t Flip Register 54 */
#define MTU_MC2_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00612ceu)	/* Read Data and B2t Flip Register 55 */
#define MTU_MC2_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00612d0u)	/* Read Data and B2t Flip Register 56 */
#define MTU_MC2_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00612d2u)	/* Read Data and B2t Flip Register 57 */
#define MTU_MC2_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00612d4u)	/* Read Data and B2t Flip Register 58 */
#define MTU_MC2_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00612d6u)	/* Read Data and B2t Flip Register 59 */
#define MTU_MC2_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006126cu)	/* Read Data and B2t Flip Register 6 */
#define MTU_MC2_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00612d8u)	/* Read Data and B2t Flip Register 60 */
#define MTU_MC2_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00612dau)	/* Read Data and B2t Flip Register 61 */
#define MTU_MC2_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00612dcu)	/* Read Data and B2t Flip Register 62 */
#define MTU_MC2_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00612deu)	/* Read Data and B2t Flip Register 63 */
#define MTU_MC2_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00612e0u)	/* Read Data and B2t Flip Register 64 */
#define MTU_MC2_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00612e2u)	/* Read Data and B2t Flip Register 65 */
#define MTU_MC2_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00612e4u)	/* Read Data and B2t Flip Register 66 */
#define MTU_MC2_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006126eu)	/* Read Data and B2t Flip Register 7 */
#define MTU_MC2_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061270u)	/* Read Data and B2t Flip Register 8 */
#define MTU_MC2_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061272u)	/* Read Data and B2t Flip Register 9 */
#define MTU_MC30_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062e60u)	/* Read Data and B30t Flip Register 0 */
#define MTU_MC30_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062e62u)	/* Read Data and B30t Flip Register 1 */
#define MTU_MC30_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062e74u)	/* Read Data and B30t Flip Register 10 */
#define MTU_MC30_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062e76u)	/* Read Data and B30t Flip Register 11 */
#define MTU_MC30_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062e78u)	/* Read Data and B30t Flip Register 12 */
#define MTU_MC30_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0062e7au)	/* Read Data and B30t Flip Register 13 */
#define MTU_MC30_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0062e7cu)	/* Read Data and B30t Flip Register 14 */
#define MTU_MC30_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0062e7eu)	/* Read Data and B30t Flip Register 15 */
#define MTU_MC30_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062e80u)	/* Read Data and B30t Flip Register 16 */
#define MTU_MC30_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062e82u)	/* Read Data and B30t Flip Register 17 */
#define MTU_MC30_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062e84u)	/* Read Data and B30t Flip Register 18 */
#define MTU_MC30_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062e86u)	/* Read Data and B30t Flip Register 19 */
#define MTU_MC30_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062e64u)	/* Read Data and B30t Flip Register 2 */
#define MTU_MC30_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062e88u)	/* Read Data and B30t Flip Register 20 */
#define MTU_MC30_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0062e8au)	/* Read Data and B30t Flip Register 21 */
#define MTU_MC30_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0062e8cu)	/* Read Data and B30t Flip Register 22 */
#define MTU_MC30_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0062e8eu)	/* Read Data and B30t Flip Register 23 */
#define MTU_MC30_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062e90u)	/* Read Data and B30t Flip Register 24 */
#define MTU_MC30_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062e92u)	/* Read Data and B30t Flip Register 25 */
#define MTU_MC30_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062e94u)	/* Read Data and B30t Flip Register 26 */
#define MTU_MC30_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062e96u)	/* Read Data and B30t Flip Register 27 */
#define MTU_MC30_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062e98u)	/* Read Data and B30t Flip Register 28 */
#define MTU_MC30_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0062e9au)	/* Read Data and B30t Flip Register 29 */
#define MTU_MC30_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062e66u)	/* Read Data and B30t Flip Register 3 */
#define MTU_MC30_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0062e9cu)	/* Read Data and B30t Flip Register 30 */
#define MTU_MC30_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0062e9eu)	/* Read Data and B30t Flip Register 31 */
#define MTU_MC30_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0062ea0u)	/* Read Data and B30t Flip Register 32 */
#define MTU_MC30_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0062ea2u)	/* Read Data and B30t Flip Register 33 */
#define MTU_MC30_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0062ea4u)	/* Read Data and B30t Flip Register 34 */
#define MTU_MC30_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0062ea6u)	/* Read Data and B30t Flip Register 35 */
#define MTU_MC30_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0062ea8u)	/* Read Data and B30t Flip Register 36 */
#define MTU_MC30_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0062eaau)	/* Read Data and B30t Flip Register 37 */
#define MTU_MC30_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0062eacu)	/* Read Data and B30t Flip Register 38 */
#define MTU_MC30_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0062eaeu)	/* Read Data and B30t Flip Register 39 */
#define MTU_MC30_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062e68u)	/* Read Data and B30t Flip Register 4 */
#define MTU_MC30_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0062eb0u)	/* Read Data and B30t Flip Register 40 */
#define MTU_MC30_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0062eb2u)	/* Read Data and B30t Flip Register 41 */
#define MTU_MC30_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0062eb4u)	/* Read Data and B30t Flip Register 42 */
#define MTU_MC30_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0062eb6u)	/* Read Data and B30t Flip Register 43 */
#define MTU_MC30_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0062eb8u)	/* Read Data and B30t Flip Register 44 */
#define MTU_MC30_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0062ebau)	/* Read Data and B30t Flip Register 45 */
#define MTU_MC30_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0062ebcu)	/* Read Data and B30t Flip Register 46 */
#define MTU_MC30_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0062ebeu)	/* Read Data and B30t Flip Register 47 */
#define MTU_MC30_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0062ec0u)	/* Read Data and B30t Flip Register 48 */
#define MTU_MC30_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0062ec2u)	/* Read Data and B30t Flip Register 49 */
#define MTU_MC30_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0062e6au)	/* Read Data and B30t Flip Register 5 */
#define MTU_MC30_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0062ec4u)	/* Read Data and B30t Flip Register 50 */
#define MTU_MC30_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0062ec6u)	/* Read Data and B30t Flip Register 51 */
#define MTU_MC30_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0062ec8u)	/* Read Data and B30t Flip Register 52 */
#define MTU_MC30_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0062ecau)	/* Read Data and B30t Flip Register 53 */
#define MTU_MC30_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0062eccu)	/* Read Data and B30t Flip Register 54 */
#define MTU_MC30_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0062eceu)	/* Read Data and B30t Flip Register 55 */
#define MTU_MC30_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0062ed0u)	/* Read Data and B30t Flip Register 56 */
#define MTU_MC30_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0062ed2u)	/* Read Data and B30t Flip Register 57 */
#define MTU_MC30_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0062ed4u)	/* Read Data and B30t Flip Register 58 */
#define MTU_MC30_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0062ed6u)	/* Read Data and B30t Flip Register 59 */
#define MTU_MC30_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0062e6cu)	/* Read Data and B30t Flip Register 6 */
#define MTU_MC30_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0062ed8u)	/* Read Data and B30t Flip Register 60 */
#define MTU_MC30_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0062edau)	/* Read Data and B30t Flip Register 61 */
#define MTU_MC30_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0062edcu)	/* Read Data and B30t Flip Register 62 */
#define MTU_MC30_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0062edeu)	/* Read Data and B30t Flip Register 63 */
#define MTU_MC30_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0062ee0u)	/* Read Data and B30t Flip Register 64 */
#define MTU_MC30_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0062ee2u)	/* Read Data and B30t Flip Register 65 */
#define MTU_MC30_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0062ee4u)	/* Read Data and B30t Flip Register 66 */
#define MTU_MC30_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0062e6eu)	/* Read Data and B30t Flip Register 7 */
#define MTU_MC30_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062e70u)	/* Read Data and B30t Flip Register 8 */
#define MTU_MC30_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062e72u)	/* Read Data and B30t Flip Register 9 */
#define MTU_MC31_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0062f60u)	/* Read Data and B31t Flip Register 0 */
#define MTU_MC31_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0062f62u)	/* Read Data and B31t Flip Register 1 */
#define MTU_MC31_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0062f74u)	/* Read Data and B31t Flip Register 10 */
#define MTU_MC31_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0062f76u)	/* Read Data and B31t Flip Register 11 */
#define MTU_MC31_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0062f78u)	/* Read Data and B31t Flip Register 12 */
#define MTU_MC31_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0062f7au)	/* Read Data and B31t Flip Register 13 */
#define MTU_MC31_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0062f7cu)	/* Read Data and B31t Flip Register 14 */
#define MTU_MC31_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0062f7eu)	/* Read Data and B31t Flip Register 15 */
#define MTU_MC31_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0062f80u)	/* Read Data and B31t Flip Register 16 */
#define MTU_MC31_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0062f82u)	/* Read Data and B31t Flip Register 17 */
#define MTU_MC31_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0062f84u)	/* Read Data and B31t Flip Register 18 */
#define MTU_MC31_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0062f86u)	/* Read Data and B31t Flip Register 19 */
#define MTU_MC31_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0062f64u)	/* Read Data and B31t Flip Register 2 */
#define MTU_MC31_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0062f88u)	/* Read Data and B31t Flip Register 20 */
#define MTU_MC31_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0062f8au)	/* Read Data and B31t Flip Register 21 */
#define MTU_MC31_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0062f8cu)	/* Read Data and B31t Flip Register 22 */
#define MTU_MC31_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0062f8eu)	/* Read Data and B31t Flip Register 23 */
#define MTU_MC31_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0062f90u)	/* Read Data and B31t Flip Register 24 */
#define MTU_MC31_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0062f92u)	/* Read Data and B31t Flip Register 25 */
#define MTU_MC31_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0062f94u)	/* Read Data and B31t Flip Register 26 */
#define MTU_MC31_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0062f96u)	/* Read Data and B31t Flip Register 27 */
#define MTU_MC31_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0062f98u)	/* Read Data and B31t Flip Register 28 */
#define MTU_MC31_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0062f9au)	/* Read Data and B31t Flip Register 29 */
#define MTU_MC31_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0062f66u)	/* Read Data and B31t Flip Register 3 */
#define MTU_MC31_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0062f9cu)	/* Read Data and B31t Flip Register 30 */
#define MTU_MC31_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0062f9eu)	/* Read Data and B31t Flip Register 31 */
#define MTU_MC31_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0062fa0u)	/* Read Data and B31t Flip Register 32 */
#define MTU_MC31_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0062fa2u)	/* Read Data and B31t Flip Register 33 */
#define MTU_MC31_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0062fa4u)	/* Read Data and B31t Flip Register 34 */
#define MTU_MC31_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0062fa6u)	/* Read Data and B31t Flip Register 35 */
#define MTU_MC31_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0062fa8u)	/* Read Data and B31t Flip Register 36 */
#define MTU_MC31_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0062faau)	/* Read Data and B31t Flip Register 37 */
#define MTU_MC31_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0062facu)	/* Read Data and B31t Flip Register 38 */
#define MTU_MC31_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0062faeu)	/* Read Data and B31t Flip Register 39 */
#define MTU_MC31_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0062f68u)	/* Read Data and B31t Flip Register 4 */
#define MTU_MC31_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0062fb0u)	/* Read Data and B31t Flip Register 40 */
#define MTU_MC31_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0062fb2u)	/* Read Data and B31t Flip Register 41 */
#define MTU_MC31_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0062fb4u)	/* Read Data and B31t Flip Register 42 */
#define MTU_MC31_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0062fb6u)	/* Read Data and B31t Flip Register 43 */
#define MTU_MC31_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0062fb8u)	/* Read Data and B31t Flip Register 44 */
#define MTU_MC31_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0062fbau)	/* Read Data and B31t Flip Register 45 */
#define MTU_MC31_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0062fbcu)	/* Read Data and B31t Flip Register 46 */
#define MTU_MC31_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0062fbeu)	/* Read Data and B31t Flip Register 47 */
#define MTU_MC31_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0062fc0u)	/* Read Data and B31t Flip Register 48 */
#define MTU_MC31_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0062fc2u)	/* Read Data and B31t Flip Register 49 */
#define MTU_MC31_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0062f6au)	/* Read Data and B31t Flip Register 5 */
#define MTU_MC31_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0062fc4u)	/* Read Data and B31t Flip Register 50 */
#define MTU_MC31_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0062fc6u)	/* Read Data and B31t Flip Register 51 */
#define MTU_MC31_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0062fc8u)	/* Read Data and B31t Flip Register 52 */
#define MTU_MC31_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0062fcau)	/* Read Data and B31t Flip Register 53 */
#define MTU_MC31_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0062fccu)	/* Read Data and B31t Flip Register 54 */
#define MTU_MC31_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0062fceu)	/* Read Data and B31t Flip Register 55 */
#define MTU_MC31_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0062fd0u)	/* Read Data and B31t Flip Register 56 */
#define MTU_MC31_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0062fd2u)	/* Read Data and B31t Flip Register 57 */
#define MTU_MC31_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0062fd4u)	/* Read Data and B31t Flip Register 58 */
#define MTU_MC31_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0062fd6u)	/* Read Data and B31t Flip Register 59 */
#define MTU_MC31_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0062f6cu)	/* Read Data and B31t Flip Register 6 */
#define MTU_MC31_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0062fd8u)	/* Read Data and B31t Flip Register 60 */
#define MTU_MC31_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0062fdau)	/* Read Data and B31t Flip Register 61 */
#define MTU_MC31_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0062fdcu)	/* Read Data and B31t Flip Register 62 */
#define MTU_MC31_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0062fdeu)	/* Read Data and B31t Flip Register 63 */
#define MTU_MC31_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0062fe0u)	/* Read Data and B31t Flip Register 64 */
#define MTU_MC31_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0062fe2u)	/* Read Data and B31t Flip Register 65 */
#define MTU_MC31_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0062fe4u)	/* Read Data and B31t Flip Register 66 */
#define MTU_MC31_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0062f6eu)	/* Read Data and B31t Flip Register 7 */
#define MTU_MC31_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0062f70u)	/* Read Data and B31t Flip Register 8 */
#define MTU_MC31_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0062f72u)	/* Read Data and B31t Flip Register 9 */
#define MTU_MC32_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063060u)	/* Read Data and B32t Flip Register 0 */
#define MTU_MC32_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063062u)	/* Read Data and B32t Flip Register 1 */
#define MTU_MC32_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063074u)	/* Read Data and B32t Flip Register 10 */
#define MTU_MC32_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063076u)	/* Read Data and B32t Flip Register 11 */
#define MTU_MC32_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063078u)	/* Read Data and B32t Flip Register 12 */
#define MTU_MC32_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006307au)	/* Read Data and B32t Flip Register 13 */
#define MTU_MC32_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006307cu)	/* Read Data and B32t Flip Register 14 */
#define MTU_MC32_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006307eu)	/* Read Data and B32t Flip Register 15 */
#define MTU_MC32_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063080u)	/* Read Data and B32t Flip Register 16 */
#define MTU_MC32_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063082u)	/* Read Data and B32t Flip Register 17 */
#define MTU_MC32_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063084u)	/* Read Data and B32t Flip Register 18 */
#define MTU_MC32_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063086u)	/* Read Data and B32t Flip Register 19 */
#define MTU_MC32_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063064u)	/* Read Data and B32t Flip Register 2 */
#define MTU_MC32_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063088u)	/* Read Data and B32t Flip Register 20 */
#define MTU_MC32_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006308au)	/* Read Data and B32t Flip Register 21 */
#define MTU_MC32_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006308cu)	/* Read Data and B32t Flip Register 22 */
#define MTU_MC32_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006308eu)	/* Read Data and B32t Flip Register 23 */
#define MTU_MC32_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063090u)	/* Read Data and B32t Flip Register 24 */
#define MTU_MC32_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063092u)	/* Read Data and B32t Flip Register 25 */
#define MTU_MC32_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063094u)	/* Read Data and B32t Flip Register 26 */
#define MTU_MC32_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063096u)	/* Read Data and B32t Flip Register 27 */
#define MTU_MC32_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063098u)	/* Read Data and B32t Flip Register 28 */
#define MTU_MC32_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006309au)	/* Read Data and B32t Flip Register 29 */
#define MTU_MC32_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063066u)	/* Read Data and B32t Flip Register 3 */
#define MTU_MC32_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006309cu)	/* Read Data and B32t Flip Register 30 */
#define MTU_MC32_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006309eu)	/* Read Data and B32t Flip Register 31 */
#define MTU_MC32_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00630a0u)	/* Read Data and B32t Flip Register 32 */
#define MTU_MC32_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00630a2u)	/* Read Data and B32t Flip Register 33 */
#define MTU_MC32_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00630a4u)	/* Read Data and B32t Flip Register 34 */
#define MTU_MC32_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00630a6u)	/* Read Data and B32t Flip Register 35 */
#define MTU_MC32_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00630a8u)	/* Read Data and B32t Flip Register 36 */
#define MTU_MC32_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00630aau)	/* Read Data and B32t Flip Register 37 */
#define MTU_MC32_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00630acu)	/* Read Data and B32t Flip Register 38 */
#define MTU_MC32_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00630aeu)	/* Read Data and B32t Flip Register 39 */
#define MTU_MC32_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063068u)	/* Read Data and B32t Flip Register 4 */
#define MTU_MC32_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00630b0u)	/* Read Data and B32t Flip Register 40 */
#define MTU_MC32_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00630b2u)	/* Read Data and B32t Flip Register 41 */
#define MTU_MC32_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00630b4u)	/* Read Data and B32t Flip Register 42 */
#define MTU_MC32_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00630b6u)	/* Read Data and B32t Flip Register 43 */
#define MTU_MC32_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00630b8u)	/* Read Data and B32t Flip Register 44 */
#define MTU_MC32_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00630bau)	/* Read Data and B32t Flip Register 45 */
#define MTU_MC32_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00630bcu)	/* Read Data and B32t Flip Register 46 */
#define MTU_MC32_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00630beu)	/* Read Data and B32t Flip Register 47 */
#define MTU_MC32_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00630c0u)	/* Read Data and B32t Flip Register 48 */
#define MTU_MC32_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00630c2u)	/* Read Data and B32t Flip Register 49 */
#define MTU_MC32_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006306au)	/* Read Data and B32t Flip Register 5 */
#define MTU_MC32_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00630c4u)	/* Read Data and B32t Flip Register 50 */
#define MTU_MC32_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00630c6u)	/* Read Data and B32t Flip Register 51 */
#define MTU_MC32_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00630c8u)	/* Read Data and B32t Flip Register 52 */
#define MTU_MC32_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00630cau)	/* Read Data and B32t Flip Register 53 */
#define MTU_MC32_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00630ccu)	/* Read Data and B32t Flip Register 54 */
#define MTU_MC32_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00630ceu)	/* Read Data and B32t Flip Register 55 */
#define MTU_MC32_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00630d0u)	/* Read Data and B32t Flip Register 56 */
#define MTU_MC32_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00630d2u)	/* Read Data and B32t Flip Register 57 */
#define MTU_MC32_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00630d4u)	/* Read Data and B32t Flip Register 58 */
#define MTU_MC32_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00630d6u)	/* Read Data and B32t Flip Register 59 */
#define MTU_MC32_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006306cu)	/* Read Data and B32t Flip Register 6 */
#define MTU_MC32_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00630d8u)	/* Read Data and B32t Flip Register 60 */
#define MTU_MC32_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00630dau)	/* Read Data and B32t Flip Register 61 */
#define MTU_MC32_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00630dcu)	/* Read Data and B32t Flip Register 62 */
#define MTU_MC32_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00630deu)	/* Read Data and B32t Flip Register 63 */
#define MTU_MC32_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00630e0u)	/* Read Data and B32t Flip Register 64 */
#define MTU_MC32_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00630e2u)	/* Read Data and B32t Flip Register 65 */
#define MTU_MC32_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00630e4u)	/* Read Data and B32t Flip Register 66 */
#define MTU_MC32_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006306eu)	/* Read Data and B32t Flip Register 7 */
#define MTU_MC32_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063070u)	/* Read Data and B32t Flip Register 8 */
#define MTU_MC32_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063072u)	/* Read Data and B32t Flip Register 9 */
#define MTU_MC33_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063160u)	/* Read Data and B33t Flip Register 0 */
#define MTU_MC33_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063162u)	/* Read Data and B33t Flip Register 1 */
#define MTU_MC33_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063174u)	/* Read Data and B33t Flip Register 10 */
#define MTU_MC33_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063176u)	/* Read Data and B33t Flip Register 11 */
#define MTU_MC33_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063178u)	/* Read Data and B33t Flip Register 12 */
#define MTU_MC33_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006317au)	/* Read Data and B33t Flip Register 13 */
#define MTU_MC33_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006317cu)	/* Read Data and B33t Flip Register 14 */
#define MTU_MC33_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006317eu)	/* Read Data and B33t Flip Register 15 */
#define MTU_MC33_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063180u)	/* Read Data and B33t Flip Register 16 */
#define MTU_MC33_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063182u)	/* Read Data and B33t Flip Register 17 */
#define MTU_MC33_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063184u)	/* Read Data and B33t Flip Register 18 */
#define MTU_MC33_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063186u)	/* Read Data and B33t Flip Register 19 */
#define MTU_MC33_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063164u)	/* Read Data and B33t Flip Register 2 */
#define MTU_MC33_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063188u)	/* Read Data and B33t Flip Register 20 */
#define MTU_MC33_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006318au)	/* Read Data and B33t Flip Register 21 */
#define MTU_MC33_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006318cu)	/* Read Data and B33t Flip Register 22 */
#define MTU_MC33_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006318eu)	/* Read Data and B33t Flip Register 23 */
#define MTU_MC33_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063190u)	/* Read Data and B33t Flip Register 24 */
#define MTU_MC33_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063192u)	/* Read Data and B33t Flip Register 25 */
#define MTU_MC33_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063194u)	/* Read Data and B33t Flip Register 26 */
#define MTU_MC33_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063196u)	/* Read Data and B33t Flip Register 27 */
#define MTU_MC33_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063198u)	/* Read Data and B33t Flip Register 28 */
#define MTU_MC33_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006319au)	/* Read Data and B33t Flip Register 29 */
#define MTU_MC33_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063166u)	/* Read Data and B33t Flip Register 3 */
#define MTU_MC33_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006319cu)	/* Read Data and B33t Flip Register 30 */
#define MTU_MC33_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006319eu)	/* Read Data and B33t Flip Register 31 */
#define MTU_MC33_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00631a0u)	/* Read Data and B33t Flip Register 32 */
#define MTU_MC33_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00631a2u)	/* Read Data and B33t Flip Register 33 */
#define MTU_MC33_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00631a4u)	/* Read Data and B33t Flip Register 34 */
#define MTU_MC33_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00631a6u)	/* Read Data and B33t Flip Register 35 */
#define MTU_MC33_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00631a8u)	/* Read Data and B33t Flip Register 36 */
#define MTU_MC33_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00631aau)	/* Read Data and B33t Flip Register 37 */
#define MTU_MC33_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00631acu)	/* Read Data and B33t Flip Register 38 */
#define MTU_MC33_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00631aeu)	/* Read Data and B33t Flip Register 39 */
#define MTU_MC33_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063168u)	/* Read Data and B33t Flip Register 4 */
#define MTU_MC33_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00631b0u)	/* Read Data and B33t Flip Register 40 */
#define MTU_MC33_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00631b2u)	/* Read Data and B33t Flip Register 41 */
#define MTU_MC33_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00631b4u)	/* Read Data and B33t Flip Register 42 */
#define MTU_MC33_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00631b6u)	/* Read Data and B33t Flip Register 43 */
#define MTU_MC33_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00631b8u)	/* Read Data and B33t Flip Register 44 */
#define MTU_MC33_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00631bau)	/* Read Data and B33t Flip Register 45 */
#define MTU_MC33_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00631bcu)	/* Read Data and B33t Flip Register 46 */
#define MTU_MC33_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00631beu)	/* Read Data and B33t Flip Register 47 */
#define MTU_MC33_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00631c0u)	/* Read Data and B33t Flip Register 48 */
#define MTU_MC33_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00631c2u)	/* Read Data and B33t Flip Register 49 */
#define MTU_MC33_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006316au)	/* Read Data and B33t Flip Register 5 */
#define MTU_MC33_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00631c4u)	/* Read Data and B33t Flip Register 50 */
#define MTU_MC33_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00631c6u)	/* Read Data and B33t Flip Register 51 */
#define MTU_MC33_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00631c8u)	/* Read Data and B33t Flip Register 52 */
#define MTU_MC33_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00631cau)	/* Read Data and B33t Flip Register 53 */
#define MTU_MC33_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00631ccu)	/* Read Data and B33t Flip Register 54 */
#define MTU_MC33_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00631ceu)	/* Read Data and B33t Flip Register 55 */
#define MTU_MC33_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00631d0u)	/* Read Data and B33t Flip Register 56 */
#define MTU_MC33_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00631d2u)	/* Read Data and B33t Flip Register 57 */
#define MTU_MC33_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00631d4u)	/* Read Data and B33t Flip Register 58 */
#define MTU_MC33_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00631d6u)	/* Read Data and B33t Flip Register 59 */
#define MTU_MC33_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006316cu)	/* Read Data and B33t Flip Register 6 */
#define MTU_MC33_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00631d8u)	/* Read Data and B33t Flip Register 60 */
#define MTU_MC33_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00631dau)	/* Read Data and B33t Flip Register 61 */
#define MTU_MC33_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00631dcu)	/* Read Data and B33t Flip Register 62 */
#define MTU_MC33_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00631deu)	/* Read Data and B33t Flip Register 63 */
#define MTU_MC33_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00631e0u)	/* Read Data and B33t Flip Register 64 */
#define MTU_MC33_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00631e2u)	/* Read Data and B33t Flip Register 65 */
#define MTU_MC33_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00631e4u)	/* Read Data and B33t Flip Register 66 */
#define MTU_MC33_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006316eu)	/* Read Data and B33t Flip Register 7 */
#define MTU_MC33_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063170u)	/* Read Data and B33t Flip Register 8 */
#define MTU_MC33_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063172u)	/* Read Data and B33t Flip Register 9 */
#define MTU_MC34_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063260u)	/* Read Data and B34t Flip Register 0 */
#define MTU_MC34_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063262u)	/* Read Data and B34t Flip Register 1 */
#define MTU_MC34_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063274u)	/* Read Data and B34t Flip Register 10 */
#define MTU_MC34_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063276u)	/* Read Data and B34t Flip Register 11 */
#define MTU_MC34_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063278u)	/* Read Data and B34t Flip Register 12 */
#define MTU_MC34_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006327au)	/* Read Data and B34t Flip Register 13 */
#define MTU_MC34_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006327cu)	/* Read Data and B34t Flip Register 14 */
#define MTU_MC34_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006327eu)	/* Read Data and B34t Flip Register 15 */
#define MTU_MC34_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063280u)	/* Read Data and B34t Flip Register 16 */
#define MTU_MC34_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063282u)	/* Read Data and B34t Flip Register 17 */
#define MTU_MC34_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063284u)	/* Read Data and B34t Flip Register 18 */
#define MTU_MC34_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063286u)	/* Read Data and B34t Flip Register 19 */
#define MTU_MC34_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063264u)	/* Read Data and B34t Flip Register 2 */
#define MTU_MC34_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063288u)	/* Read Data and B34t Flip Register 20 */
#define MTU_MC34_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006328au)	/* Read Data and B34t Flip Register 21 */
#define MTU_MC34_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006328cu)	/* Read Data and B34t Flip Register 22 */
#define MTU_MC34_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006328eu)	/* Read Data and B34t Flip Register 23 */
#define MTU_MC34_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063290u)	/* Read Data and B34t Flip Register 24 */
#define MTU_MC34_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063292u)	/* Read Data and B34t Flip Register 25 */
#define MTU_MC34_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063294u)	/* Read Data and B34t Flip Register 26 */
#define MTU_MC34_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063296u)	/* Read Data and B34t Flip Register 27 */
#define MTU_MC34_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063298u)	/* Read Data and B34t Flip Register 28 */
#define MTU_MC34_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006329au)	/* Read Data and B34t Flip Register 29 */
#define MTU_MC34_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063266u)	/* Read Data and B34t Flip Register 3 */
#define MTU_MC34_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006329cu)	/* Read Data and B34t Flip Register 30 */
#define MTU_MC34_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006329eu)	/* Read Data and B34t Flip Register 31 */
#define MTU_MC34_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00632a0u)	/* Read Data and B34t Flip Register 32 */
#define MTU_MC34_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00632a2u)	/* Read Data and B34t Flip Register 33 */
#define MTU_MC34_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00632a4u)	/* Read Data and B34t Flip Register 34 */
#define MTU_MC34_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00632a6u)	/* Read Data and B34t Flip Register 35 */
#define MTU_MC34_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00632a8u)	/* Read Data and B34t Flip Register 36 */
#define MTU_MC34_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00632aau)	/* Read Data and B34t Flip Register 37 */
#define MTU_MC34_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00632acu)	/* Read Data and B34t Flip Register 38 */
#define MTU_MC34_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00632aeu)	/* Read Data and B34t Flip Register 39 */
#define MTU_MC34_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063268u)	/* Read Data and B34t Flip Register 4 */
#define MTU_MC34_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00632b0u)	/* Read Data and B34t Flip Register 40 */
#define MTU_MC34_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00632b2u)	/* Read Data and B34t Flip Register 41 */
#define MTU_MC34_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00632b4u)	/* Read Data and B34t Flip Register 42 */
#define MTU_MC34_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00632b6u)	/* Read Data and B34t Flip Register 43 */
#define MTU_MC34_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00632b8u)	/* Read Data and B34t Flip Register 44 */
#define MTU_MC34_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00632bau)	/* Read Data and B34t Flip Register 45 */
#define MTU_MC34_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00632bcu)	/* Read Data and B34t Flip Register 46 */
#define MTU_MC34_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00632beu)	/* Read Data and B34t Flip Register 47 */
#define MTU_MC34_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00632c0u)	/* Read Data and B34t Flip Register 48 */
#define MTU_MC34_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00632c2u)	/* Read Data and B34t Flip Register 49 */
#define MTU_MC34_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006326au)	/* Read Data and B34t Flip Register 5 */
#define MTU_MC34_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00632c4u)	/* Read Data and B34t Flip Register 50 */
#define MTU_MC34_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00632c6u)	/* Read Data and B34t Flip Register 51 */
#define MTU_MC34_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00632c8u)	/* Read Data and B34t Flip Register 52 */
#define MTU_MC34_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00632cau)	/* Read Data and B34t Flip Register 53 */
#define MTU_MC34_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00632ccu)	/* Read Data and B34t Flip Register 54 */
#define MTU_MC34_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00632ceu)	/* Read Data and B34t Flip Register 55 */
#define MTU_MC34_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00632d0u)	/* Read Data and B34t Flip Register 56 */
#define MTU_MC34_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00632d2u)	/* Read Data and B34t Flip Register 57 */
#define MTU_MC34_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00632d4u)	/* Read Data and B34t Flip Register 58 */
#define MTU_MC34_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00632d6u)	/* Read Data and B34t Flip Register 59 */
#define MTU_MC34_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006326cu)	/* Read Data and B34t Flip Register 6 */
#define MTU_MC34_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00632d8u)	/* Read Data and B34t Flip Register 60 */
#define MTU_MC34_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00632dau)	/* Read Data and B34t Flip Register 61 */
#define MTU_MC34_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00632dcu)	/* Read Data and B34t Flip Register 62 */
#define MTU_MC34_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00632deu)	/* Read Data and B34t Flip Register 63 */
#define MTU_MC34_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00632e0u)	/* Read Data and B34t Flip Register 64 */
#define MTU_MC34_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00632e2u)	/* Read Data and B34t Flip Register 65 */
#define MTU_MC34_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00632e4u)	/* Read Data and B34t Flip Register 66 */
#define MTU_MC34_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006326eu)	/* Read Data and B34t Flip Register 7 */
#define MTU_MC34_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063270u)	/* Read Data and B34t Flip Register 8 */
#define MTU_MC34_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063272u)	/* Read Data and B34t Flip Register 9 */
#define MTU_MC35_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063360u)	/* Read Data and B35t Flip Register 0 */
#define MTU_MC35_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063362u)	/* Read Data and B35t Flip Register 1 */
#define MTU_MC35_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063374u)	/* Read Data and B35t Flip Register 10 */
#define MTU_MC35_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063376u)	/* Read Data and B35t Flip Register 11 */
#define MTU_MC35_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063378u)	/* Read Data and B35t Flip Register 12 */
#define MTU_MC35_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006337au)	/* Read Data and B35t Flip Register 13 */
#define MTU_MC35_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006337cu)	/* Read Data and B35t Flip Register 14 */
#define MTU_MC35_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006337eu)	/* Read Data and B35t Flip Register 15 */
#define MTU_MC35_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063380u)	/* Read Data and B35t Flip Register 16 */
#define MTU_MC35_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063382u)	/* Read Data and B35t Flip Register 17 */
#define MTU_MC35_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063384u)	/* Read Data and B35t Flip Register 18 */
#define MTU_MC35_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063386u)	/* Read Data and B35t Flip Register 19 */
#define MTU_MC35_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063364u)	/* Read Data and B35t Flip Register 2 */
#define MTU_MC35_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063388u)	/* Read Data and B35t Flip Register 20 */
#define MTU_MC35_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006338au)	/* Read Data and B35t Flip Register 21 */
#define MTU_MC35_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006338cu)	/* Read Data and B35t Flip Register 22 */
#define MTU_MC35_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006338eu)	/* Read Data and B35t Flip Register 23 */
#define MTU_MC35_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063390u)	/* Read Data and B35t Flip Register 24 */
#define MTU_MC35_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063392u)	/* Read Data and B35t Flip Register 25 */
#define MTU_MC35_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063394u)	/* Read Data and B35t Flip Register 26 */
#define MTU_MC35_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063396u)	/* Read Data and B35t Flip Register 27 */
#define MTU_MC35_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063398u)	/* Read Data and B35t Flip Register 28 */
#define MTU_MC35_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006339au)	/* Read Data and B35t Flip Register 29 */
#define MTU_MC35_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063366u)	/* Read Data and B35t Flip Register 3 */
#define MTU_MC35_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006339cu)	/* Read Data and B35t Flip Register 30 */
#define MTU_MC35_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006339eu)	/* Read Data and B35t Flip Register 31 */
#define MTU_MC35_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00633a0u)	/* Read Data and B35t Flip Register 32 */
#define MTU_MC35_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00633a2u)	/* Read Data and B35t Flip Register 33 */
#define MTU_MC35_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00633a4u)	/* Read Data and B35t Flip Register 34 */
#define MTU_MC35_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00633a6u)	/* Read Data and B35t Flip Register 35 */
#define MTU_MC35_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00633a8u)	/* Read Data and B35t Flip Register 36 */
#define MTU_MC35_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00633aau)	/* Read Data and B35t Flip Register 37 */
#define MTU_MC35_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00633acu)	/* Read Data and B35t Flip Register 38 */
#define MTU_MC35_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00633aeu)	/* Read Data and B35t Flip Register 39 */
#define MTU_MC35_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063368u)	/* Read Data and B35t Flip Register 4 */
#define MTU_MC35_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00633b0u)	/* Read Data and B35t Flip Register 40 */
#define MTU_MC35_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00633b2u)	/* Read Data and B35t Flip Register 41 */
#define MTU_MC35_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00633b4u)	/* Read Data and B35t Flip Register 42 */
#define MTU_MC35_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00633b6u)	/* Read Data and B35t Flip Register 43 */
#define MTU_MC35_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00633b8u)	/* Read Data and B35t Flip Register 44 */
#define MTU_MC35_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00633bau)	/* Read Data and B35t Flip Register 45 */
#define MTU_MC35_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00633bcu)	/* Read Data and B35t Flip Register 46 */
#define MTU_MC35_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00633beu)	/* Read Data and B35t Flip Register 47 */
#define MTU_MC35_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00633c0u)	/* Read Data and B35t Flip Register 48 */
#define MTU_MC35_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00633c2u)	/* Read Data and B35t Flip Register 49 */
#define MTU_MC35_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006336au)	/* Read Data and B35t Flip Register 5 */
#define MTU_MC35_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00633c4u)	/* Read Data and B35t Flip Register 50 */
#define MTU_MC35_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00633c6u)	/* Read Data and B35t Flip Register 51 */
#define MTU_MC35_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00633c8u)	/* Read Data and B35t Flip Register 52 */
#define MTU_MC35_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00633cau)	/* Read Data and B35t Flip Register 53 */
#define MTU_MC35_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00633ccu)	/* Read Data and B35t Flip Register 54 */
#define MTU_MC35_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00633ceu)	/* Read Data and B35t Flip Register 55 */
#define MTU_MC35_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00633d0u)	/* Read Data and B35t Flip Register 56 */
#define MTU_MC35_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00633d2u)	/* Read Data and B35t Flip Register 57 */
#define MTU_MC35_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00633d4u)	/* Read Data and B35t Flip Register 58 */
#define MTU_MC35_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00633d6u)	/* Read Data and B35t Flip Register 59 */
#define MTU_MC35_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006336cu)	/* Read Data and B35t Flip Register 6 */
#define MTU_MC35_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00633d8u)	/* Read Data and B35t Flip Register 60 */
#define MTU_MC35_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00633dau)	/* Read Data and B35t Flip Register 61 */
#define MTU_MC35_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00633dcu)	/* Read Data and B35t Flip Register 62 */
#define MTU_MC35_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00633deu)	/* Read Data and B35t Flip Register 63 */
#define MTU_MC35_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00633e0u)	/* Read Data and B35t Flip Register 64 */
#define MTU_MC35_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00633e2u)	/* Read Data and B35t Flip Register 65 */
#define MTU_MC35_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00633e4u)	/* Read Data and B35t Flip Register 66 */
#define MTU_MC35_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006336eu)	/* Read Data and B35t Flip Register 7 */
#define MTU_MC35_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063370u)	/* Read Data and B35t Flip Register 8 */
#define MTU_MC35_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063372u)	/* Read Data and B35t Flip Register 9 */
#define MTU_MC36_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063460u)	/* Read Data and B36t Flip Register 0 */
#define MTU_MC36_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063462u)	/* Read Data and B36t Flip Register 1 */
#define MTU_MC36_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063474u)	/* Read Data and B36t Flip Register 10 */
#define MTU_MC36_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063476u)	/* Read Data and B36t Flip Register 11 */
#define MTU_MC36_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063478u)	/* Read Data and B36t Flip Register 12 */
#define MTU_MC36_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006347au)	/* Read Data and B36t Flip Register 13 */
#define MTU_MC36_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006347cu)	/* Read Data and B36t Flip Register 14 */
#define MTU_MC36_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006347eu)	/* Read Data and B36t Flip Register 15 */
#define MTU_MC36_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063480u)	/* Read Data and B36t Flip Register 16 */
#define MTU_MC36_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063482u)	/* Read Data and B36t Flip Register 17 */
#define MTU_MC36_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063484u)	/* Read Data and B36t Flip Register 18 */
#define MTU_MC36_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063486u)	/* Read Data and B36t Flip Register 19 */
#define MTU_MC36_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063464u)	/* Read Data and B36t Flip Register 2 */
#define MTU_MC36_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063488u)	/* Read Data and B36t Flip Register 20 */
#define MTU_MC36_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006348au)	/* Read Data and B36t Flip Register 21 */
#define MTU_MC36_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006348cu)	/* Read Data and B36t Flip Register 22 */
#define MTU_MC36_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006348eu)	/* Read Data and B36t Flip Register 23 */
#define MTU_MC36_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063490u)	/* Read Data and B36t Flip Register 24 */
#define MTU_MC36_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063492u)	/* Read Data and B36t Flip Register 25 */
#define MTU_MC36_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063494u)	/* Read Data and B36t Flip Register 26 */
#define MTU_MC36_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063496u)	/* Read Data and B36t Flip Register 27 */
#define MTU_MC36_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063498u)	/* Read Data and B36t Flip Register 28 */
#define MTU_MC36_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006349au)	/* Read Data and B36t Flip Register 29 */
#define MTU_MC36_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063466u)	/* Read Data and B36t Flip Register 3 */
#define MTU_MC36_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006349cu)	/* Read Data and B36t Flip Register 30 */
#define MTU_MC36_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006349eu)	/* Read Data and B36t Flip Register 31 */
#define MTU_MC36_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00634a0u)	/* Read Data and B36t Flip Register 32 */
#define MTU_MC36_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00634a2u)	/* Read Data and B36t Flip Register 33 */
#define MTU_MC36_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00634a4u)	/* Read Data and B36t Flip Register 34 */
#define MTU_MC36_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00634a6u)	/* Read Data and B36t Flip Register 35 */
#define MTU_MC36_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00634a8u)	/* Read Data and B36t Flip Register 36 */
#define MTU_MC36_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00634aau)	/* Read Data and B36t Flip Register 37 */
#define MTU_MC36_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00634acu)	/* Read Data and B36t Flip Register 38 */
#define MTU_MC36_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00634aeu)	/* Read Data and B36t Flip Register 39 */
#define MTU_MC36_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063468u)	/* Read Data and B36t Flip Register 4 */
#define MTU_MC36_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00634b0u)	/* Read Data and B36t Flip Register 40 */
#define MTU_MC36_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00634b2u)	/* Read Data and B36t Flip Register 41 */
#define MTU_MC36_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00634b4u)	/* Read Data and B36t Flip Register 42 */
#define MTU_MC36_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00634b6u)	/* Read Data and B36t Flip Register 43 */
#define MTU_MC36_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00634b8u)	/* Read Data and B36t Flip Register 44 */
#define MTU_MC36_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00634bau)	/* Read Data and B36t Flip Register 45 */
#define MTU_MC36_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00634bcu)	/* Read Data and B36t Flip Register 46 */
#define MTU_MC36_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00634beu)	/* Read Data and B36t Flip Register 47 */
#define MTU_MC36_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00634c0u)	/* Read Data and B36t Flip Register 48 */
#define MTU_MC36_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00634c2u)	/* Read Data and B36t Flip Register 49 */
#define MTU_MC36_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006346au)	/* Read Data and B36t Flip Register 5 */
#define MTU_MC36_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00634c4u)	/* Read Data and B36t Flip Register 50 */
#define MTU_MC36_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00634c6u)	/* Read Data and B36t Flip Register 51 */
#define MTU_MC36_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00634c8u)	/* Read Data and B36t Flip Register 52 */
#define MTU_MC36_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00634cau)	/* Read Data and B36t Flip Register 53 */
#define MTU_MC36_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00634ccu)	/* Read Data and B36t Flip Register 54 */
#define MTU_MC36_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00634ceu)	/* Read Data and B36t Flip Register 55 */
#define MTU_MC36_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00634d0u)	/* Read Data and B36t Flip Register 56 */
#define MTU_MC36_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00634d2u)	/* Read Data and B36t Flip Register 57 */
#define MTU_MC36_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00634d4u)	/* Read Data and B36t Flip Register 58 */
#define MTU_MC36_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00634d6u)	/* Read Data and B36t Flip Register 59 */
#define MTU_MC36_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006346cu)	/* Read Data and B36t Flip Register 6 */
#define MTU_MC36_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00634d8u)	/* Read Data and B36t Flip Register 60 */
#define MTU_MC36_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00634dau)	/* Read Data and B36t Flip Register 61 */
#define MTU_MC36_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00634dcu)	/* Read Data and B36t Flip Register 62 */
#define MTU_MC36_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00634deu)	/* Read Data and B36t Flip Register 63 */
#define MTU_MC36_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00634e0u)	/* Read Data and B36t Flip Register 64 */
#define MTU_MC36_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00634e2u)	/* Read Data and B36t Flip Register 65 */
#define MTU_MC36_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00634e4u)	/* Read Data and B36t Flip Register 66 */
#define MTU_MC36_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006346eu)	/* Read Data and B36t Flip Register 7 */
#define MTU_MC36_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063470u)	/* Read Data and B36t Flip Register 8 */
#define MTU_MC36_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063472u)	/* Read Data and B36t Flip Register 9 */
#define MTU_MC37_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063560u)	/* Read Data and B37t Flip Register 0 */
#define MTU_MC37_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063562u)	/* Read Data and B37t Flip Register 1 */
#define MTU_MC37_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063574u)	/* Read Data and B37t Flip Register 10 */
#define MTU_MC37_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063576u)	/* Read Data and B37t Flip Register 11 */
#define MTU_MC37_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063578u)	/* Read Data and B37t Flip Register 12 */
#define MTU_MC37_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006357au)	/* Read Data and B37t Flip Register 13 */
#define MTU_MC37_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006357cu)	/* Read Data and B37t Flip Register 14 */
#define MTU_MC37_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006357eu)	/* Read Data and B37t Flip Register 15 */
#define MTU_MC37_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063580u)	/* Read Data and B37t Flip Register 16 */
#define MTU_MC37_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063582u)	/* Read Data and B37t Flip Register 17 */
#define MTU_MC37_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063584u)	/* Read Data and B37t Flip Register 18 */
#define MTU_MC37_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063586u)	/* Read Data and B37t Flip Register 19 */
#define MTU_MC37_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063564u)	/* Read Data and B37t Flip Register 2 */
#define MTU_MC37_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063588u)	/* Read Data and B37t Flip Register 20 */
#define MTU_MC37_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006358au)	/* Read Data and B37t Flip Register 21 */
#define MTU_MC37_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006358cu)	/* Read Data and B37t Flip Register 22 */
#define MTU_MC37_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006358eu)	/* Read Data and B37t Flip Register 23 */
#define MTU_MC37_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063590u)	/* Read Data and B37t Flip Register 24 */
#define MTU_MC37_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063592u)	/* Read Data and B37t Flip Register 25 */
#define MTU_MC37_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063594u)	/* Read Data and B37t Flip Register 26 */
#define MTU_MC37_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063596u)	/* Read Data and B37t Flip Register 27 */
#define MTU_MC37_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063598u)	/* Read Data and B37t Flip Register 28 */
#define MTU_MC37_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006359au)	/* Read Data and B37t Flip Register 29 */
#define MTU_MC37_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063566u)	/* Read Data and B37t Flip Register 3 */
#define MTU_MC37_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006359cu)	/* Read Data and B37t Flip Register 30 */
#define MTU_MC37_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006359eu)	/* Read Data and B37t Flip Register 31 */
#define MTU_MC37_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00635a0u)	/* Read Data and B37t Flip Register 32 */
#define MTU_MC37_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00635a2u)	/* Read Data and B37t Flip Register 33 */
#define MTU_MC37_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00635a4u)	/* Read Data and B37t Flip Register 34 */
#define MTU_MC37_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00635a6u)	/* Read Data and B37t Flip Register 35 */
#define MTU_MC37_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00635a8u)	/* Read Data and B37t Flip Register 36 */
#define MTU_MC37_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00635aau)	/* Read Data and B37t Flip Register 37 */
#define MTU_MC37_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00635acu)	/* Read Data and B37t Flip Register 38 */
#define MTU_MC37_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00635aeu)	/* Read Data and B37t Flip Register 39 */
#define MTU_MC37_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063568u)	/* Read Data and B37t Flip Register 4 */
#define MTU_MC37_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00635b0u)	/* Read Data and B37t Flip Register 40 */
#define MTU_MC37_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00635b2u)	/* Read Data and B37t Flip Register 41 */
#define MTU_MC37_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00635b4u)	/* Read Data and B37t Flip Register 42 */
#define MTU_MC37_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00635b6u)	/* Read Data and B37t Flip Register 43 */
#define MTU_MC37_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00635b8u)	/* Read Data and B37t Flip Register 44 */
#define MTU_MC37_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00635bau)	/* Read Data and B37t Flip Register 45 */
#define MTU_MC37_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00635bcu)	/* Read Data and B37t Flip Register 46 */
#define MTU_MC37_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00635beu)	/* Read Data and B37t Flip Register 47 */
#define MTU_MC37_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00635c0u)	/* Read Data and B37t Flip Register 48 */
#define MTU_MC37_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00635c2u)	/* Read Data and B37t Flip Register 49 */
#define MTU_MC37_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006356au)	/* Read Data and B37t Flip Register 5 */
#define MTU_MC37_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00635c4u)	/* Read Data and B37t Flip Register 50 */
#define MTU_MC37_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00635c6u)	/* Read Data and B37t Flip Register 51 */
#define MTU_MC37_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00635c8u)	/* Read Data and B37t Flip Register 52 */
#define MTU_MC37_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00635cau)	/* Read Data and B37t Flip Register 53 */
#define MTU_MC37_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00635ccu)	/* Read Data and B37t Flip Register 54 */
#define MTU_MC37_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00635ceu)	/* Read Data and B37t Flip Register 55 */
#define MTU_MC37_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00635d0u)	/* Read Data and B37t Flip Register 56 */
#define MTU_MC37_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00635d2u)	/* Read Data and B37t Flip Register 57 */
#define MTU_MC37_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00635d4u)	/* Read Data and B37t Flip Register 58 */
#define MTU_MC37_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00635d6u)	/* Read Data and B37t Flip Register 59 */
#define MTU_MC37_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006356cu)	/* Read Data and B37t Flip Register 6 */
#define MTU_MC37_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00635d8u)	/* Read Data and B37t Flip Register 60 */
#define MTU_MC37_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00635dau)	/* Read Data and B37t Flip Register 61 */
#define MTU_MC37_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00635dcu)	/* Read Data and B37t Flip Register 62 */
#define MTU_MC37_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00635deu)	/* Read Data and B37t Flip Register 63 */
#define MTU_MC37_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00635e0u)	/* Read Data and B37t Flip Register 64 */
#define MTU_MC37_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00635e2u)	/* Read Data and B37t Flip Register 65 */
#define MTU_MC37_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00635e4u)	/* Read Data and B37t Flip Register 66 */
#define MTU_MC37_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006356eu)	/* Read Data and B37t Flip Register 7 */
#define MTU_MC37_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063570u)	/* Read Data and B37t Flip Register 8 */
#define MTU_MC37_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063572u)	/* Read Data and B37t Flip Register 9 */
#define MTU_MC38_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063660u)	/* Read Data and B38t Flip Register 0 */
#define MTU_MC38_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063662u)	/* Read Data and B38t Flip Register 1 */
#define MTU_MC38_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063674u)	/* Read Data and B38t Flip Register 10 */
#define MTU_MC38_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063676u)	/* Read Data and B38t Flip Register 11 */
#define MTU_MC38_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063678u)	/* Read Data and B38t Flip Register 12 */
#define MTU_MC38_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006367au)	/* Read Data and B38t Flip Register 13 */
#define MTU_MC38_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006367cu)	/* Read Data and B38t Flip Register 14 */
#define MTU_MC38_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006367eu)	/* Read Data and B38t Flip Register 15 */
#define MTU_MC38_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063680u)	/* Read Data and B38t Flip Register 16 */
#define MTU_MC38_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063682u)	/* Read Data and B38t Flip Register 17 */
#define MTU_MC38_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063684u)	/* Read Data and B38t Flip Register 18 */
#define MTU_MC38_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063686u)	/* Read Data and B38t Flip Register 19 */
#define MTU_MC38_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063664u)	/* Read Data and B38t Flip Register 2 */
#define MTU_MC38_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063688u)	/* Read Data and B38t Flip Register 20 */
#define MTU_MC38_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006368au)	/* Read Data and B38t Flip Register 21 */
#define MTU_MC38_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006368cu)	/* Read Data and B38t Flip Register 22 */
#define MTU_MC38_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006368eu)	/* Read Data and B38t Flip Register 23 */
#define MTU_MC38_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063690u)	/* Read Data and B38t Flip Register 24 */
#define MTU_MC38_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063692u)	/* Read Data and B38t Flip Register 25 */
#define MTU_MC38_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063694u)	/* Read Data and B38t Flip Register 26 */
#define MTU_MC38_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063696u)	/* Read Data and B38t Flip Register 27 */
#define MTU_MC38_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063698u)	/* Read Data and B38t Flip Register 28 */
#define MTU_MC38_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006369au)	/* Read Data and B38t Flip Register 29 */
#define MTU_MC38_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063666u)	/* Read Data and B38t Flip Register 3 */
#define MTU_MC38_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006369cu)	/* Read Data and B38t Flip Register 30 */
#define MTU_MC38_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006369eu)	/* Read Data and B38t Flip Register 31 */
#define MTU_MC38_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00636a0u)	/* Read Data and B38t Flip Register 32 */
#define MTU_MC38_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00636a2u)	/* Read Data and B38t Flip Register 33 */
#define MTU_MC38_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00636a4u)	/* Read Data and B38t Flip Register 34 */
#define MTU_MC38_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00636a6u)	/* Read Data and B38t Flip Register 35 */
#define MTU_MC38_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00636a8u)	/* Read Data and B38t Flip Register 36 */
#define MTU_MC38_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00636aau)	/* Read Data and B38t Flip Register 37 */
#define MTU_MC38_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00636acu)	/* Read Data and B38t Flip Register 38 */
#define MTU_MC38_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00636aeu)	/* Read Data and B38t Flip Register 39 */
#define MTU_MC38_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063668u)	/* Read Data and B38t Flip Register 4 */
#define MTU_MC38_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00636b0u)	/* Read Data and B38t Flip Register 40 */
#define MTU_MC38_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00636b2u)	/* Read Data and B38t Flip Register 41 */
#define MTU_MC38_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00636b4u)	/* Read Data and B38t Flip Register 42 */
#define MTU_MC38_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00636b6u)	/* Read Data and B38t Flip Register 43 */
#define MTU_MC38_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00636b8u)	/* Read Data and B38t Flip Register 44 */
#define MTU_MC38_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00636bau)	/* Read Data and B38t Flip Register 45 */
#define MTU_MC38_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00636bcu)	/* Read Data and B38t Flip Register 46 */
#define MTU_MC38_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00636beu)	/* Read Data and B38t Flip Register 47 */
#define MTU_MC38_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00636c0u)	/* Read Data and B38t Flip Register 48 */
#define MTU_MC38_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00636c2u)	/* Read Data and B38t Flip Register 49 */
#define MTU_MC38_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006366au)	/* Read Data and B38t Flip Register 5 */
#define MTU_MC38_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00636c4u)	/* Read Data and B38t Flip Register 50 */
#define MTU_MC38_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00636c6u)	/* Read Data and B38t Flip Register 51 */
#define MTU_MC38_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00636c8u)	/* Read Data and B38t Flip Register 52 */
#define MTU_MC38_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00636cau)	/* Read Data and B38t Flip Register 53 */
#define MTU_MC38_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00636ccu)	/* Read Data and B38t Flip Register 54 */
#define MTU_MC38_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00636ceu)	/* Read Data and B38t Flip Register 55 */
#define MTU_MC38_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00636d0u)	/* Read Data and B38t Flip Register 56 */
#define MTU_MC38_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00636d2u)	/* Read Data and B38t Flip Register 57 */
#define MTU_MC38_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00636d4u)	/* Read Data and B38t Flip Register 58 */
#define MTU_MC38_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00636d6u)	/* Read Data and B38t Flip Register 59 */
#define MTU_MC38_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006366cu)	/* Read Data and B38t Flip Register 6 */
#define MTU_MC38_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00636d8u)	/* Read Data and B38t Flip Register 60 */
#define MTU_MC38_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00636dau)	/* Read Data and B38t Flip Register 61 */
#define MTU_MC38_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00636dcu)	/* Read Data and B38t Flip Register 62 */
#define MTU_MC38_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00636deu)	/* Read Data and B38t Flip Register 63 */
#define MTU_MC38_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00636e0u)	/* Read Data and B38t Flip Register 64 */
#define MTU_MC38_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00636e2u)	/* Read Data and B38t Flip Register 65 */
#define MTU_MC38_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00636e4u)	/* Read Data and B38t Flip Register 66 */
#define MTU_MC38_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006366eu)	/* Read Data and B38t Flip Register 7 */
#define MTU_MC38_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063670u)	/* Read Data and B38t Flip Register 8 */
#define MTU_MC38_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063672u)	/* Read Data and B38t Flip Register 9 */
#define MTU_MC39_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063760u)	/* Read Data and B39t Flip Register 0 */
#define MTU_MC39_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063762u)	/* Read Data and B39t Flip Register 1 */
#define MTU_MC39_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063774u)	/* Read Data and B39t Flip Register 10 */
#define MTU_MC39_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063776u)	/* Read Data and B39t Flip Register 11 */
#define MTU_MC39_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063778u)	/* Read Data and B39t Flip Register 12 */
#define MTU_MC39_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006377au)	/* Read Data and B39t Flip Register 13 */
#define MTU_MC39_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006377cu)	/* Read Data and B39t Flip Register 14 */
#define MTU_MC39_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006377eu)	/* Read Data and B39t Flip Register 15 */
#define MTU_MC39_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063780u)	/* Read Data and B39t Flip Register 16 */
#define MTU_MC39_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063782u)	/* Read Data and B39t Flip Register 17 */
#define MTU_MC39_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063784u)	/* Read Data and B39t Flip Register 18 */
#define MTU_MC39_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063786u)	/* Read Data and B39t Flip Register 19 */
#define MTU_MC39_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063764u)	/* Read Data and B39t Flip Register 2 */
#define MTU_MC39_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063788u)	/* Read Data and B39t Flip Register 20 */
#define MTU_MC39_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006378au)	/* Read Data and B39t Flip Register 21 */
#define MTU_MC39_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006378cu)	/* Read Data and B39t Flip Register 22 */
#define MTU_MC39_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006378eu)	/* Read Data and B39t Flip Register 23 */
#define MTU_MC39_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063790u)	/* Read Data and B39t Flip Register 24 */
#define MTU_MC39_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063792u)	/* Read Data and B39t Flip Register 25 */
#define MTU_MC39_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063794u)	/* Read Data and B39t Flip Register 26 */
#define MTU_MC39_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063796u)	/* Read Data and B39t Flip Register 27 */
#define MTU_MC39_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063798u)	/* Read Data and B39t Flip Register 28 */
#define MTU_MC39_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006379au)	/* Read Data and B39t Flip Register 29 */
#define MTU_MC39_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063766u)	/* Read Data and B39t Flip Register 3 */
#define MTU_MC39_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006379cu)	/* Read Data and B39t Flip Register 30 */
#define MTU_MC39_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006379eu)	/* Read Data and B39t Flip Register 31 */
#define MTU_MC39_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00637a0u)	/* Read Data and B39t Flip Register 32 */
#define MTU_MC39_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00637a2u)	/* Read Data and B39t Flip Register 33 */
#define MTU_MC39_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00637a4u)	/* Read Data and B39t Flip Register 34 */
#define MTU_MC39_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00637a6u)	/* Read Data and B39t Flip Register 35 */
#define MTU_MC39_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00637a8u)	/* Read Data and B39t Flip Register 36 */
#define MTU_MC39_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00637aau)	/* Read Data and B39t Flip Register 37 */
#define MTU_MC39_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00637acu)	/* Read Data and B39t Flip Register 38 */
#define MTU_MC39_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00637aeu)	/* Read Data and B39t Flip Register 39 */
#define MTU_MC39_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063768u)	/* Read Data and B39t Flip Register 4 */
#define MTU_MC39_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00637b0u)	/* Read Data and B39t Flip Register 40 */
#define MTU_MC39_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00637b2u)	/* Read Data and B39t Flip Register 41 */
#define MTU_MC39_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00637b4u)	/* Read Data and B39t Flip Register 42 */
#define MTU_MC39_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00637b6u)	/* Read Data and B39t Flip Register 43 */
#define MTU_MC39_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00637b8u)	/* Read Data and B39t Flip Register 44 */
#define MTU_MC39_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00637bau)	/* Read Data and B39t Flip Register 45 */
#define MTU_MC39_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00637bcu)	/* Read Data and B39t Flip Register 46 */
#define MTU_MC39_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00637beu)	/* Read Data and B39t Flip Register 47 */
#define MTU_MC39_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00637c0u)	/* Read Data and B39t Flip Register 48 */
#define MTU_MC39_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00637c2u)	/* Read Data and B39t Flip Register 49 */
#define MTU_MC39_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006376au)	/* Read Data and B39t Flip Register 5 */
#define MTU_MC39_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00637c4u)	/* Read Data and B39t Flip Register 50 */
#define MTU_MC39_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00637c6u)	/* Read Data and B39t Flip Register 51 */
#define MTU_MC39_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00637c8u)	/* Read Data and B39t Flip Register 52 */
#define MTU_MC39_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00637cau)	/* Read Data and B39t Flip Register 53 */
#define MTU_MC39_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00637ccu)	/* Read Data and B39t Flip Register 54 */
#define MTU_MC39_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00637ceu)	/* Read Data and B39t Flip Register 55 */
#define MTU_MC39_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00637d0u)	/* Read Data and B39t Flip Register 56 */
#define MTU_MC39_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00637d2u)	/* Read Data and B39t Flip Register 57 */
#define MTU_MC39_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00637d4u)	/* Read Data and B39t Flip Register 58 */
#define MTU_MC39_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00637d6u)	/* Read Data and B39t Flip Register 59 */
#define MTU_MC39_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006376cu)	/* Read Data and B39t Flip Register 6 */
#define MTU_MC39_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00637d8u)	/* Read Data and B39t Flip Register 60 */
#define MTU_MC39_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00637dau)	/* Read Data and B39t Flip Register 61 */
#define MTU_MC39_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00637dcu)	/* Read Data and B39t Flip Register 62 */
#define MTU_MC39_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00637deu)	/* Read Data and B39t Flip Register 63 */
#define MTU_MC39_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00637e0u)	/* Read Data and B39t Flip Register 64 */
#define MTU_MC39_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00637e2u)	/* Read Data and B39t Flip Register 65 */
#define MTU_MC39_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00637e4u)	/* Read Data and B39t Flip Register 66 */
#define MTU_MC39_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006376eu)	/* Read Data and B39t Flip Register 7 */
#define MTU_MC39_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063770u)	/* Read Data and B39t Flip Register 8 */
#define MTU_MC39_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063772u)	/* Read Data and B39t Flip Register 9 */
#define MTU_MC3_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061360u)	/* Read Data and B3t Flip Register 0 */
#define MTU_MC3_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061362u)	/* Read Data and B3t Flip Register 1 */
#define MTU_MC3_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061374u)	/* Read Data and B3t Flip Register 10 */
#define MTU_MC3_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061376u)	/* Read Data and B3t Flip Register 11 */
#define MTU_MC3_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061378u)	/* Read Data and B3t Flip Register 12 */
#define MTU_MC3_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006137au)	/* Read Data and B3t Flip Register 13 */
#define MTU_MC3_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006137cu)	/* Read Data and B3t Flip Register 14 */
#define MTU_MC3_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006137eu)	/* Read Data and B3t Flip Register 15 */
#define MTU_MC3_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061380u)	/* Read Data and B3t Flip Register 16 */
#define MTU_MC3_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061382u)	/* Read Data and B3t Flip Register 17 */
#define MTU_MC3_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061384u)	/* Read Data and B3t Flip Register 18 */
#define MTU_MC3_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061386u)	/* Read Data and B3t Flip Register 19 */
#define MTU_MC3_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061364u)	/* Read Data and B3t Flip Register 2 */
#define MTU_MC3_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061388u)	/* Read Data and B3t Flip Register 20 */
#define MTU_MC3_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006138au)	/* Read Data and B3t Flip Register 21 */
#define MTU_MC3_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006138cu)	/* Read Data and B3t Flip Register 22 */
#define MTU_MC3_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006138eu)	/* Read Data and B3t Flip Register 23 */
#define MTU_MC3_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061390u)	/* Read Data and B3t Flip Register 24 */
#define MTU_MC3_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061392u)	/* Read Data and B3t Flip Register 25 */
#define MTU_MC3_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061394u)	/* Read Data and B3t Flip Register 26 */
#define MTU_MC3_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061396u)	/* Read Data and B3t Flip Register 27 */
#define MTU_MC3_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061398u)	/* Read Data and B3t Flip Register 28 */
#define MTU_MC3_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006139au)	/* Read Data and B3t Flip Register 29 */
#define MTU_MC3_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061366u)	/* Read Data and B3t Flip Register 3 */
#define MTU_MC3_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006139cu)	/* Read Data and B3t Flip Register 30 */
#define MTU_MC3_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006139eu)	/* Read Data and B3t Flip Register 31 */
#define MTU_MC3_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00613a0u)	/* Read Data and B3t Flip Register 32 */
#define MTU_MC3_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00613a2u)	/* Read Data and B3t Flip Register 33 */
#define MTU_MC3_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00613a4u)	/* Read Data and B3t Flip Register 34 */
#define MTU_MC3_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00613a6u)	/* Read Data and B3t Flip Register 35 */
#define MTU_MC3_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00613a8u)	/* Read Data and B3t Flip Register 36 */
#define MTU_MC3_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00613aau)	/* Read Data and B3t Flip Register 37 */
#define MTU_MC3_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00613acu)	/* Read Data and B3t Flip Register 38 */
#define MTU_MC3_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00613aeu)	/* Read Data and B3t Flip Register 39 */
#define MTU_MC3_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061368u)	/* Read Data and B3t Flip Register 4 */
#define MTU_MC3_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00613b0u)	/* Read Data and B3t Flip Register 40 */
#define MTU_MC3_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00613b2u)	/* Read Data and B3t Flip Register 41 */
#define MTU_MC3_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00613b4u)	/* Read Data and B3t Flip Register 42 */
#define MTU_MC3_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00613b6u)	/* Read Data and B3t Flip Register 43 */
#define MTU_MC3_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00613b8u)	/* Read Data and B3t Flip Register 44 */
#define MTU_MC3_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00613bau)	/* Read Data and B3t Flip Register 45 */
#define MTU_MC3_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00613bcu)	/* Read Data and B3t Flip Register 46 */
#define MTU_MC3_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00613beu)	/* Read Data and B3t Flip Register 47 */
#define MTU_MC3_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00613c0u)	/* Read Data and B3t Flip Register 48 */
#define MTU_MC3_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00613c2u)	/* Read Data and B3t Flip Register 49 */
#define MTU_MC3_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006136au)	/* Read Data and B3t Flip Register 5 */
#define MTU_MC3_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00613c4u)	/* Read Data and B3t Flip Register 50 */
#define MTU_MC3_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00613c6u)	/* Read Data and B3t Flip Register 51 */
#define MTU_MC3_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00613c8u)	/* Read Data and B3t Flip Register 52 */
#define MTU_MC3_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00613cau)	/* Read Data and B3t Flip Register 53 */
#define MTU_MC3_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00613ccu)	/* Read Data and B3t Flip Register 54 */
#define MTU_MC3_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00613ceu)	/* Read Data and B3t Flip Register 55 */
#define MTU_MC3_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00613d0u)	/* Read Data and B3t Flip Register 56 */
#define MTU_MC3_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00613d2u)	/* Read Data and B3t Flip Register 57 */
#define MTU_MC3_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00613d4u)	/* Read Data and B3t Flip Register 58 */
#define MTU_MC3_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00613d6u)	/* Read Data and B3t Flip Register 59 */
#define MTU_MC3_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006136cu)	/* Read Data and B3t Flip Register 6 */
#define MTU_MC3_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00613d8u)	/* Read Data and B3t Flip Register 60 */
#define MTU_MC3_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00613dau)	/* Read Data and B3t Flip Register 61 */
#define MTU_MC3_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00613dcu)	/* Read Data and B3t Flip Register 62 */
#define MTU_MC3_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00613deu)	/* Read Data and B3t Flip Register 63 */
#define MTU_MC3_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00613e0u)	/* Read Data and B3t Flip Register 64 */
#define MTU_MC3_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00613e2u)	/* Read Data and B3t Flip Register 65 */
#define MTU_MC3_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00613e4u)	/* Read Data and B3t Flip Register 66 */
#define MTU_MC3_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006136eu)	/* Read Data and B3t Flip Register 7 */
#define MTU_MC3_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061370u)	/* Read Data and B3t Flip Register 8 */
#define MTU_MC3_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061372u)	/* Read Data and B3t Flip Register 9 */
#define MTU_MC40_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063860u)	/* Read Data and B40t Flip Register 0 */
#define MTU_MC40_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063862u)	/* Read Data and B40t Flip Register 1 */
#define MTU_MC40_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063874u)	/* Read Data and B40t Flip Register 10 */
#define MTU_MC40_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063876u)	/* Read Data and B40t Flip Register 11 */
#define MTU_MC40_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063878u)	/* Read Data and B40t Flip Register 12 */
#define MTU_MC40_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006387au)	/* Read Data and B40t Flip Register 13 */
#define MTU_MC40_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006387cu)	/* Read Data and B40t Flip Register 14 */
#define MTU_MC40_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006387eu)	/* Read Data and B40t Flip Register 15 */
#define MTU_MC40_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063880u)	/* Read Data and B40t Flip Register 16 */
#define MTU_MC40_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063882u)	/* Read Data and B40t Flip Register 17 */
#define MTU_MC40_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063884u)	/* Read Data and B40t Flip Register 18 */
#define MTU_MC40_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063886u)	/* Read Data and B40t Flip Register 19 */
#define MTU_MC40_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063864u)	/* Read Data and B40t Flip Register 2 */
#define MTU_MC40_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063888u)	/* Read Data and B40t Flip Register 20 */
#define MTU_MC40_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006388au)	/* Read Data and B40t Flip Register 21 */
#define MTU_MC40_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006388cu)	/* Read Data and B40t Flip Register 22 */
#define MTU_MC40_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006388eu)	/* Read Data and B40t Flip Register 23 */
#define MTU_MC40_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063890u)	/* Read Data and B40t Flip Register 24 */
#define MTU_MC40_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063892u)	/* Read Data and B40t Flip Register 25 */
#define MTU_MC40_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063894u)	/* Read Data and B40t Flip Register 26 */
#define MTU_MC40_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063896u)	/* Read Data and B40t Flip Register 27 */
#define MTU_MC40_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063898u)	/* Read Data and B40t Flip Register 28 */
#define MTU_MC40_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006389au)	/* Read Data and B40t Flip Register 29 */
#define MTU_MC40_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063866u)	/* Read Data and B40t Flip Register 3 */
#define MTU_MC40_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006389cu)	/* Read Data and B40t Flip Register 30 */
#define MTU_MC40_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006389eu)	/* Read Data and B40t Flip Register 31 */
#define MTU_MC40_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00638a0u)	/* Read Data and B40t Flip Register 32 */
#define MTU_MC40_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00638a2u)	/* Read Data and B40t Flip Register 33 */
#define MTU_MC40_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00638a4u)	/* Read Data and B40t Flip Register 34 */
#define MTU_MC40_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00638a6u)	/* Read Data and B40t Flip Register 35 */
#define MTU_MC40_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00638a8u)	/* Read Data and B40t Flip Register 36 */
#define MTU_MC40_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00638aau)	/* Read Data and B40t Flip Register 37 */
#define MTU_MC40_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00638acu)	/* Read Data and B40t Flip Register 38 */
#define MTU_MC40_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00638aeu)	/* Read Data and B40t Flip Register 39 */
#define MTU_MC40_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063868u)	/* Read Data and B40t Flip Register 4 */
#define MTU_MC40_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00638b0u)	/* Read Data and B40t Flip Register 40 */
#define MTU_MC40_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00638b2u)	/* Read Data and B40t Flip Register 41 */
#define MTU_MC40_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00638b4u)	/* Read Data and B40t Flip Register 42 */
#define MTU_MC40_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00638b6u)	/* Read Data and B40t Flip Register 43 */
#define MTU_MC40_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00638b8u)	/* Read Data and B40t Flip Register 44 */
#define MTU_MC40_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00638bau)	/* Read Data and B40t Flip Register 45 */
#define MTU_MC40_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00638bcu)	/* Read Data and B40t Flip Register 46 */
#define MTU_MC40_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00638beu)	/* Read Data and B40t Flip Register 47 */
#define MTU_MC40_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00638c0u)	/* Read Data and B40t Flip Register 48 */
#define MTU_MC40_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00638c2u)	/* Read Data and B40t Flip Register 49 */
#define MTU_MC40_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006386au)	/* Read Data and B40t Flip Register 5 */
#define MTU_MC40_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00638c4u)	/* Read Data and B40t Flip Register 50 */
#define MTU_MC40_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00638c6u)	/* Read Data and B40t Flip Register 51 */
#define MTU_MC40_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00638c8u)	/* Read Data and B40t Flip Register 52 */
#define MTU_MC40_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00638cau)	/* Read Data and B40t Flip Register 53 */
#define MTU_MC40_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00638ccu)	/* Read Data and B40t Flip Register 54 */
#define MTU_MC40_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00638ceu)	/* Read Data and B40t Flip Register 55 */
#define MTU_MC40_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00638d0u)	/* Read Data and B40t Flip Register 56 */
#define MTU_MC40_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00638d2u)	/* Read Data and B40t Flip Register 57 */
#define MTU_MC40_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00638d4u)	/* Read Data and B40t Flip Register 58 */
#define MTU_MC40_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00638d6u)	/* Read Data and B40t Flip Register 59 */
#define MTU_MC40_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006386cu)	/* Read Data and B40t Flip Register 6 */
#define MTU_MC40_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00638d8u)	/* Read Data and B40t Flip Register 60 */
#define MTU_MC40_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00638dau)	/* Read Data and B40t Flip Register 61 */
#define MTU_MC40_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00638dcu)	/* Read Data and B40t Flip Register 62 */
#define MTU_MC40_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00638deu)	/* Read Data and B40t Flip Register 63 */
#define MTU_MC40_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00638e0u)	/* Read Data and B40t Flip Register 64 */
#define MTU_MC40_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00638e2u)	/* Read Data and B40t Flip Register 65 */
#define MTU_MC40_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00638e4u)	/* Read Data and B40t Flip Register 66 */
#define MTU_MC40_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006386eu)	/* Read Data and B40t Flip Register 7 */
#define MTU_MC40_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063870u)	/* Read Data and B40t Flip Register 8 */
#define MTU_MC40_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063872u)	/* Read Data and B40t Flip Register 9 */
#define MTU_MC41_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063960u)	/* Read Data and B41t Flip Register 0 */
#define MTU_MC41_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063962u)	/* Read Data and B41t Flip Register 1 */
#define MTU_MC41_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063974u)	/* Read Data and B41t Flip Register 10 */
#define MTU_MC41_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063976u)	/* Read Data and B41t Flip Register 11 */
#define MTU_MC41_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063978u)	/* Read Data and B41t Flip Register 12 */
#define MTU_MC41_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006397au)	/* Read Data and B41t Flip Register 13 */
#define MTU_MC41_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006397cu)	/* Read Data and B41t Flip Register 14 */
#define MTU_MC41_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006397eu)	/* Read Data and B41t Flip Register 15 */
#define MTU_MC41_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063980u)	/* Read Data and B41t Flip Register 16 */
#define MTU_MC41_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063982u)	/* Read Data and B41t Flip Register 17 */
#define MTU_MC41_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063984u)	/* Read Data and B41t Flip Register 18 */
#define MTU_MC41_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063986u)	/* Read Data and B41t Flip Register 19 */
#define MTU_MC41_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063964u)	/* Read Data and B41t Flip Register 2 */
#define MTU_MC41_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063988u)	/* Read Data and B41t Flip Register 20 */
#define MTU_MC41_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006398au)	/* Read Data and B41t Flip Register 21 */
#define MTU_MC41_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006398cu)	/* Read Data and B41t Flip Register 22 */
#define MTU_MC41_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006398eu)	/* Read Data and B41t Flip Register 23 */
#define MTU_MC41_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063990u)	/* Read Data and B41t Flip Register 24 */
#define MTU_MC41_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063992u)	/* Read Data and B41t Flip Register 25 */
#define MTU_MC41_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063994u)	/* Read Data and B41t Flip Register 26 */
#define MTU_MC41_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063996u)	/* Read Data and B41t Flip Register 27 */
#define MTU_MC41_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063998u)	/* Read Data and B41t Flip Register 28 */
#define MTU_MC41_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006399au)	/* Read Data and B41t Flip Register 29 */
#define MTU_MC41_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063966u)	/* Read Data and B41t Flip Register 3 */
#define MTU_MC41_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006399cu)	/* Read Data and B41t Flip Register 30 */
#define MTU_MC41_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006399eu)	/* Read Data and B41t Flip Register 31 */
#define MTU_MC41_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00639a0u)	/* Read Data and B41t Flip Register 32 */
#define MTU_MC41_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00639a2u)	/* Read Data and B41t Flip Register 33 */
#define MTU_MC41_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00639a4u)	/* Read Data and B41t Flip Register 34 */
#define MTU_MC41_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00639a6u)	/* Read Data and B41t Flip Register 35 */
#define MTU_MC41_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00639a8u)	/* Read Data and B41t Flip Register 36 */
#define MTU_MC41_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00639aau)	/* Read Data and B41t Flip Register 37 */
#define MTU_MC41_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00639acu)	/* Read Data and B41t Flip Register 38 */
#define MTU_MC41_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00639aeu)	/* Read Data and B41t Flip Register 39 */
#define MTU_MC41_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063968u)	/* Read Data and B41t Flip Register 4 */
#define MTU_MC41_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00639b0u)	/* Read Data and B41t Flip Register 40 */
#define MTU_MC41_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00639b2u)	/* Read Data and B41t Flip Register 41 */
#define MTU_MC41_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00639b4u)	/* Read Data and B41t Flip Register 42 */
#define MTU_MC41_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00639b6u)	/* Read Data and B41t Flip Register 43 */
#define MTU_MC41_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00639b8u)	/* Read Data and B41t Flip Register 44 */
#define MTU_MC41_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00639bau)	/* Read Data and B41t Flip Register 45 */
#define MTU_MC41_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00639bcu)	/* Read Data and B41t Flip Register 46 */
#define MTU_MC41_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00639beu)	/* Read Data and B41t Flip Register 47 */
#define MTU_MC41_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00639c0u)	/* Read Data and B41t Flip Register 48 */
#define MTU_MC41_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00639c2u)	/* Read Data and B41t Flip Register 49 */
#define MTU_MC41_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006396au)	/* Read Data and B41t Flip Register 5 */
#define MTU_MC41_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00639c4u)	/* Read Data and B41t Flip Register 50 */
#define MTU_MC41_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00639c6u)	/* Read Data and B41t Flip Register 51 */
#define MTU_MC41_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00639c8u)	/* Read Data and B41t Flip Register 52 */
#define MTU_MC41_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00639cau)	/* Read Data and B41t Flip Register 53 */
#define MTU_MC41_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00639ccu)	/* Read Data and B41t Flip Register 54 */
#define MTU_MC41_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00639ceu)	/* Read Data and B41t Flip Register 55 */
#define MTU_MC41_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00639d0u)	/* Read Data and B41t Flip Register 56 */
#define MTU_MC41_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00639d2u)	/* Read Data and B41t Flip Register 57 */
#define MTU_MC41_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00639d4u)	/* Read Data and B41t Flip Register 58 */
#define MTU_MC41_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00639d6u)	/* Read Data and B41t Flip Register 59 */
#define MTU_MC41_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006396cu)	/* Read Data and B41t Flip Register 6 */
#define MTU_MC41_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00639d8u)	/* Read Data and B41t Flip Register 60 */
#define MTU_MC41_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00639dau)	/* Read Data and B41t Flip Register 61 */
#define MTU_MC41_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00639dcu)	/* Read Data and B41t Flip Register 62 */
#define MTU_MC41_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00639deu)	/* Read Data and B41t Flip Register 63 */
#define MTU_MC41_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00639e0u)	/* Read Data and B41t Flip Register 64 */
#define MTU_MC41_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00639e2u)	/* Read Data and B41t Flip Register 65 */
#define MTU_MC41_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00639e4u)	/* Read Data and B41t Flip Register 66 */
#define MTU_MC41_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006396eu)	/* Read Data and B41t Flip Register 7 */
#define MTU_MC41_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063970u)	/* Read Data and B41t Flip Register 8 */
#define MTU_MC41_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063972u)	/* Read Data and B41t Flip Register 9 */
#define MTU_MC42_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063a60u)	/* Read Data and B42t Flip Register 0 */
#define MTU_MC42_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063a62u)	/* Read Data and B42t Flip Register 1 */
#define MTU_MC42_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063a74u)	/* Read Data and B42t Flip Register 10 */
#define MTU_MC42_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063a76u)	/* Read Data and B42t Flip Register 11 */
#define MTU_MC42_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063a78u)	/* Read Data and B42t Flip Register 12 */
#define MTU_MC42_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0063a7au)	/* Read Data and B42t Flip Register 13 */
#define MTU_MC42_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0063a7cu)	/* Read Data and B42t Flip Register 14 */
#define MTU_MC42_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0063a7eu)	/* Read Data and B42t Flip Register 15 */
#define MTU_MC42_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063a80u)	/* Read Data and B42t Flip Register 16 */
#define MTU_MC42_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063a82u)	/* Read Data and B42t Flip Register 17 */
#define MTU_MC42_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063a84u)	/* Read Data and B42t Flip Register 18 */
#define MTU_MC42_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063a86u)	/* Read Data and B42t Flip Register 19 */
#define MTU_MC42_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063a64u)	/* Read Data and B42t Flip Register 2 */
#define MTU_MC42_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063a88u)	/* Read Data and B42t Flip Register 20 */
#define MTU_MC42_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0063a8au)	/* Read Data and B42t Flip Register 21 */
#define MTU_MC42_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0063a8cu)	/* Read Data and B42t Flip Register 22 */
#define MTU_MC42_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0063a8eu)	/* Read Data and B42t Flip Register 23 */
#define MTU_MC42_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063a90u)	/* Read Data and B42t Flip Register 24 */
#define MTU_MC42_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063a92u)	/* Read Data and B42t Flip Register 25 */
#define MTU_MC42_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063a94u)	/* Read Data and B42t Flip Register 26 */
#define MTU_MC42_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063a96u)	/* Read Data and B42t Flip Register 27 */
#define MTU_MC42_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063a98u)	/* Read Data and B42t Flip Register 28 */
#define MTU_MC42_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0063a9au)	/* Read Data and B42t Flip Register 29 */
#define MTU_MC42_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063a66u)	/* Read Data and B42t Flip Register 3 */
#define MTU_MC42_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0063a9cu)	/* Read Data and B42t Flip Register 30 */
#define MTU_MC42_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0063a9eu)	/* Read Data and B42t Flip Register 31 */
#define MTU_MC42_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0063aa0u)	/* Read Data and B42t Flip Register 32 */
#define MTU_MC42_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0063aa2u)	/* Read Data and B42t Flip Register 33 */
#define MTU_MC42_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0063aa4u)	/* Read Data and B42t Flip Register 34 */
#define MTU_MC42_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0063aa6u)	/* Read Data and B42t Flip Register 35 */
#define MTU_MC42_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0063aa8u)	/* Read Data and B42t Flip Register 36 */
#define MTU_MC42_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0063aaau)	/* Read Data and B42t Flip Register 37 */
#define MTU_MC42_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0063aacu)	/* Read Data and B42t Flip Register 38 */
#define MTU_MC42_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0063aaeu)	/* Read Data and B42t Flip Register 39 */
#define MTU_MC42_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063a68u)	/* Read Data and B42t Flip Register 4 */
#define MTU_MC42_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0063ab0u)	/* Read Data and B42t Flip Register 40 */
#define MTU_MC42_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0063ab2u)	/* Read Data and B42t Flip Register 41 */
#define MTU_MC42_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0063ab4u)	/* Read Data and B42t Flip Register 42 */
#define MTU_MC42_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0063ab6u)	/* Read Data and B42t Flip Register 43 */
#define MTU_MC42_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0063ab8u)	/* Read Data and B42t Flip Register 44 */
#define MTU_MC42_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0063abau)	/* Read Data and B42t Flip Register 45 */
#define MTU_MC42_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0063abcu)	/* Read Data and B42t Flip Register 46 */
#define MTU_MC42_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0063abeu)	/* Read Data and B42t Flip Register 47 */
#define MTU_MC42_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0063ac0u)	/* Read Data and B42t Flip Register 48 */
#define MTU_MC42_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0063ac2u)	/* Read Data and B42t Flip Register 49 */
#define MTU_MC42_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0063a6au)	/* Read Data and B42t Flip Register 5 */
#define MTU_MC42_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0063ac4u)	/* Read Data and B42t Flip Register 50 */
#define MTU_MC42_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0063ac6u)	/* Read Data and B42t Flip Register 51 */
#define MTU_MC42_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0063ac8u)	/* Read Data and B42t Flip Register 52 */
#define MTU_MC42_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0063acau)	/* Read Data and B42t Flip Register 53 */
#define MTU_MC42_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0063accu)	/* Read Data and B42t Flip Register 54 */
#define MTU_MC42_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0063aceu)	/* Read Data and B42t Flip Register 55 */
#define MTU_MC42_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0063ad0u)	/* Read Data and B42t Flip Register 56 */
#define MTU_MC42_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0063ad2u)	/* Read Data and B42t Flip Register 57 */
#define MTU_MC42_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0063ad4u)	/* Read Data and B42t Flip Register 58 */
#define MTU_MC42_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0063ad6u)	/* Read Data and B42t Flip Register 59 */
#define MTU_MC42_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0063a6cu)	/* Read Data and B42t Flip Register 6 */
#define MTU_MC42_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0063ad8u)	/* Read Data and B42t Flip Register 60 */
#define MTU_MC42_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0063adau)	/* Read Data and B42t Flip Register 61 */
#define MTU_MC42_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0063adcu)	/* Read Data and B42t Flip Register 62 */
#define MTU_MC42_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0063adeu)	/* Read Data and B42t Flip Register 63 */
#define MTU_MC42_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0063ae0u)	/* Read Data and B42t Flip Register 64 */
#define MTU_MC42_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0063ae2u)	/* Read Data and B42t Flip Register 65 */
#define MTU_MC42_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0063ae4u)	/* Read Data and B42t Flip Register 66 */
#define MTU_MC42_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0063a6eu)	/* Read Data and B42t Flip Register 7 */
#define MTU_MC42_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063a70u)	/* Read Data and B42t Flip Register 8 */
#define MTU_MC42_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063a72u)	/* Read Data and B42t Flip Register 9 */
#define MTU_MC43_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063b60u)	/* Read Data and B43t Flip Register 0 */
#define MTU_MC43_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063b62u)	/* Read Data and B43t Flip Register 1 */
#define MTU_MC43_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063b74u)	/* Read Data and B43t Flip Register 10 */
#define MTU_MC43_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063b76u)	/* Read Data and B43t Flip Register 11 */
#define MTU_MC43_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063b78u)	/* Read Data and B43t Flip Register 12 */
#define MTU_MC43_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0063b7au)	/* Read Data and B43t Flip Register 13 */
#define MTU_MC43_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0063b7cu)	/* Read Data and B43t Flip Register 14 */
#define MTU_MC43_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0063b7eu)	/* Read Data and B43t Flip Register 15 */
#define MTU_MC43_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063b80u)	/* Read Data and B43t Flip Register 16 */
#define MTU_MC43_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063b82u)	/* Read Data and B43t Flip Register 17 */
#define MTU_MC43_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063b84u)	/* Read Data and B43t Flip Register 18 */
#define MTU_MC43_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063b86u)	/* Read Data and B43t Flip Register 19 */
#define MTU_MC43_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063b64u)	/* Read Data and B43t Flip Register 2 */
#define MTU_MC43_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063b88u)	/* Read Data and B43t Flip Register 20 */
#define MTU_MC43_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0063b8au)	/* Read Data and B43t Flip Register 21 */
#define MTU_MC43_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0063b8cu)	/* Read Data and B43t Flip Register 22 */
#define MTU_MC43_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0063b8eu)	/* Read Data and B43t Flip Register 23 */
#define MTU_MC43_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063b90u)	/* Read Data and B43t Flip Register 24 */
#define MTU_MC43_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063b92u)	/* Read Data and B43t Flip Register 25 */
#define MTU_MC43_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063b94u)	/* Read Data and B43t Flip Register 26 */
#define MTU_MC43_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063b96u)	/* Read Data and B43t Flip Register 27 */
#define MTU_MC43_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063b98u)	/* Read Data and B43t Flip Register 28 */
#define MTU_MC43_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0063b9au)	/* Read Data and B43t Flip Register 29 */
#define MTU_MC43_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063b66u)	/* Read Data and B43t Flip Register 3 */
#define MTU_MC43_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0063b9cu)	/* Read Data and B43t Flip Register 30 */
#define MTU_MC43_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0063b9eu)	/* Read Data and B43t Flip Register 31 */
#define MTU_MC43_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0063ba0u)	/* Read Data and B43t Flip Register 32 */
#define MTU_MC43_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0063ba2u)	/* Read Data and B43t Flip Register 33 */
#define MTU_MC43_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0063ba4u)	/* Read Data and B43t Flip Register 34 */
#define MTU_MC43_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0063ba6u)	/* Read Data and B43t Flip Register 35 */
#define MTU_MC43_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0063ba8u)	/* Read Data and B43t Flip Register 36 */
#define MTU_MC43_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0063baau)	/* Read Data and B43t Flip Register 37 */
#define MTU_MC43_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0063bacu)	/* Read Data and B43t Flip Register 38 */
#define MTU_MC43_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0063baeu)	/* Read Data and B43t Flip Register 39 */
#define MTU_MC43_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063b68u)	/* Read Data and B43t Flip Register 4 */
#define MTU_MC43_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0063bb0u)	/* Read Data and B43t Flip Register 40 */
#define MTU_MC43_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0063bb2u)	/* Read Data and B43t Flip Register 41 */
#define MTU_MC43_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0063bb4u)	/* Read Data and B43t Flip Register 42 */
#define MTU_MC43_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0063bb6u)	/* Read Data and B43t Flip Register 43 */
#define MTU_MC43_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0063bb8u)	/* Read Data and B43t Flip Register 44 */
#define MTU_MC43_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0063bbau)	/* Read Data and B43t Flip Register 45 */
#define MTU_MC43_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0063bbcu)	/* Read Data and B43t Flip Register 46 */
#define MTU_MC43_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0063bbeu)	/* Read Data and B43t Flip Register 47 */
#define MTU_MC43_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0063bc0u)	/* Read Data and B43t Flip Register 48 */
#define MTU_MC43_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0063bc2u)	/* Read Data and B43t Flip Register 49 */
#define MTU_MC43_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0063b6au)	/* Read Data and B43t Flip Register 5 */
#define MTU_MC43_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0063bc4u)	/* Read Data and B43t Flip Register 50 */
#define MTU_MC43_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0063bc6u)	/* Read Data and B43t Flip Register 51 */
#define MTU_MC43_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0063bc8u)	/* Read Data and B43t Flip Register 52 */
#define MTU_MC43_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0063bcau)	/* Read Data and B43t Flip Register 53 */
#define MTU_MC43_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0063bccu)	/* Read Data and B43t Flip Register 54 */
#define MTU_MC43_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0063bceu)	/* Read Data and B43t Flip Register 55 */
#define MTU_MC43_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0063bd0u)	/* Read Data and B43t Flip Register 56 */
#define MTU_MC43_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0063bd2u)	/* Read Data and B43t Flip Register 57 */
#define MTU_MC43_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0063bd4u)	/* Read Data and B43t Flip Register 58 */
#define MTU_MC43_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0063bd6u)	/* Read Data and B43t Flip Register 59 */
#define MTU_MC43_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0063b6cu)	/* Read Data and B43t Flip Register 6 */
#define MTU_MC43_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0063bd8u)	/* Read Data and B43t Flip Register 60 */
#define MTU_MC43_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0063bdau)	/* Read Data and B43t Flip Register 61 */
#define MTU_MC43_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0063bdcu)	/* Read Data and B43t Flip Register 62 */
#define MTU_MC43_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0063bdeu)	/* Read Data and B43t Flip Register 63 */
#define MTU_MC43_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0063be0u)	/* Read Data and B43t Flip Register 64 */
#define MTU_MC43_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0063be2u)	/* Read Data and B43t Flip Register 65 */
#define MTU_MC43_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0063be4u)	/* Read Data and B43t Flip Register 66 */
#define MTU_MC43_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0063b6eu)	/* Read Data and B43t Flip Register 7 */
#define MTU_MC43_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063b70u)	/* Read Data and B43t Flip Register 8 */
#define MTU_MC43_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063b72u)	/* Read Data and B43t Flip Register 9 */
#define MTU_MC44_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063c60u)	/* Read Data and B44t Flip Register 0 */
#define MTU_MC44_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063c62u)	/* Read Data and B44t Flip Register 1 */
#define MTU_MC44_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063c74u)	/* Read Data and B44t Flip Register 10 */
#define MTU_MC44_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063c76u)	/* Read Data and B44t Flip Register 11 */
#define MTU_MC44_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063c78u)	/* Read Data and B44t Flip Register 12 */
#define MTU_MC44_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0063c7au)	/* Read Data and B44t Flip Register 13 */
#define MTU_MC44_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0063c7cu)	/* Read Data and B44t Flip Register 14 */
#define MTU_MC44_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0063c7eu)	/* Read Data and B44t Flip Register 15 */
#define MTU_MC44_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063c80u)	/* Read Data and B44t Flip Register 16 */
#define MTU_MC44_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063c82u)	/* Read Data and B44t Flip Register 17 */
#define MTU_MC44_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063c84u)	/* Read Data and B44t Flip Register 18 */
#define MTU_MC44_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063c86u)	/* Read Data and B44t Flip Register 19 */
#define MTU_MC44_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063c64u)	/* Read Data and B44t Flip Register 2 */
#define MTU_MC44_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063c88u)	/* Read Data and B44t Flip Register 20 */
#define MTU_MC44_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0063c8au)	/* Read Data and B44t Flip Register 21 */
#define MTU_MC44_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0063c8cu)	/* Read Data and B44t Flip Register 22 */
#define MTU_MC44_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0063c8eu)	/* Read Data and B44t Flip Register 23 */
#define MTU_MC44_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063c90u)	/* Read Data and B44t Flip Register 24 */
#define MTU_MC44_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063c92u)	/* Read Data and B44t Flip Register 25 */
#define MTU_MC44_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063c94u)	/* Read Data and B44t Flip Register 26 */
#define MTU_MC44_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063c96u)	/* Read Data and B44t Flip Register 27 */
#define MTU_MC44_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063c98u)	/* Read Data and B44t Flip Register 28 */
#define MTU_MC44_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0063c9au)	/* Read Data and B44t Flip Register 29 */
#define MTU_MC44_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063c66u)	/* Read Data and B44t Flip Register 3 */
#define MTU_MC44_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0063c9cu)	/* Read Data and B44t Flip Register 30 */
#define MTU_MC44_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0063c9eu)	/* Read Data and B44t Flip Register 31 */
#define MTU_MC44_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0063ca0u)	/* Read Data and B44t Flip Register 32 */
#define MTU_MC44_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0063ca2u)	/* Read Data and B44t Flip Register 33 */
#define MTU_MC44_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0063ca4u)	/* Read Data and B44t Flip Register 34 */
#define MTU_MC44_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0063ca6u)	/* Read Data and B44t Flip Register 35 */
#define MTU_MC44_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0063ca8u)	/* Read Data and B44t Flip Register 36 */
#define MTU_MC44_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0063caau)	/* Read Data and B44t Flip Register 37 */
#define MTU_MC44_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0063cacu)	/* Read Data and B44t Flip Register 38 */
#define MTU_MC44_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0063caeu)	/* Read Data and B44t Flip Register 39 */
#define MTU_MC44_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063c68u)	/* Read Data and B44t Flip Register 4 */
#define MTU_MC44_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0063cb0u)	/* Read Data and B44t Flip Register 40 */
#define MTU_MC44_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0063cb2u)	/* Read Data and B44t Flip Register 41 */
#define MTU_MC44_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0063cb4u)	/* Read Data and B44t Flip Register 42 */
#define MTU_MC44_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0063cb6u)	/* Read Data and B44t Flip Register 43 */
#define MTU_MC44_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0063cb8u)	/* Read Data and B44t Flip Register 44 */
#define MTU_MC44_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0063cbau)	/* Read Data and B44t Flip Register 45 */
#define MTU_MC44_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0063cbcu)	/* Read Data and B44t Flip Register 46 */
#define MTU_MC44_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0063cbeu)	/* Read Data and B44t Flip Register 47 */
#define MTU_MC44_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0063cc0u)	/* Read Data and B44t Flip Register 48 */
#define MTU_MC44_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0063cc2u)	/* Read Data and B44t Flip Register 49 */
#define MTU_MC44_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0063c6au)	/* Read Data and B44t Flip Register 5 */
#define MTU_MC44_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0063cc4u)	/* Read Data and B44t Flip Register 50 */
#define MTU_MC44_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0063cc6u)	/* Read Data and B44t Flip Register 51 */
#define MTU_MC44_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0063cc8u)	/* Read Data and B44t Flip Register 52 */
#define MTU_MC44_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0063ccau)	/* Read Data and B44t Flip Register 53 */
#define MTU_MC44_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0063cccu)	/* Read Data and B44t Flip Register 54 */
#define MTU_MC44_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0063cceu)	/* Read Data and B44t Flip Register 55 */
#define MTU_MC44_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0063cd0u)	/* Read Data and B44t Flip Register 56 */
#define MTU_MC44_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0063cd2u)	/* Read Data and B44t Flip Register 57 */
#define MTU_MC44_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0063cd4u)	/* Read Data and B44t Flip Register 58 */
#define MTU_MC44_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0063cd6u)	/* Read Data and B44t Flip Register 59 */
#define MTU_MC44_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0063c6cu)	/* Read Data and B44t Flip Register 6 */
#define MTU_MC44_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0063cd8u)	/* Read Data and B44t Flip Register 60 */
#define MTU_MC44_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0063cdau)	/* Read Data and B44t Flip Register 61 */
#define MTU_MC44_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0063cdcu)	/* Read Data and B44t Flip Register 62 */
#define MTU_MC44_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0063cdeu)	/* Read Data and B44t Flip Register 63 */
#define MTU_MC44_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0063ce0u)	/* Read Data and B44t Flip Register 64 */
#define MTU_MC44_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0063ce2u)	/* Read Data and B44t Flip Register 65 */
#define MTU_MC44_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0063ce4u)	/* Read Data and B44t Flip Register 66 */
#define MTU_MC44_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0063c6eu)	/* Read Data and B44t Flip Register 7 */
#define MTU_MC44_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063c70u)	/* Read Data and B44t Flip Register 8 */
#define MTU_MC44_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063c72u)	/* Read Data and B44t Flip Register 9 */
#define MTU_MC45_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063d60u)	/* Read Data and B45t Flip Register 0 */
#define MTU_MC45_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063d62u)	/* Read Data and B45t Flip Register 1 */
#define MTU_MC45_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063d74u)	/* Read Data and B45t Flip Register 10 */
#define MTU_MC45_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063d76u)	/* Read Data and B45t Flip Register 11 */
#define MTU_MC45_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063d78u)	/* Read Data and B45t Flip Register 12 */
#define MTU_MC45_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0063d7au)	/* Read Data and B45t Flip Register 13 */
#define MTU_MC45_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0063d7cu)	/* Read Data and B45t Flip Register 14 */
#define MTU_MC45_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0063d7eu)	/* Read Data and B45t Flip Register 15 */
#define MTU_MC45_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063d80u)	/* Read Data and B45t Flip Register 16 */
#define MTU_MC45_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063d82u)	/* Read Data and B45t Flip Register 17 */
#define MTU_MC45_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063d84u)	/* Read Data and B45t Flip Register 18 */
#define MTU_MC45_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063d86u)	/* Read Data and B45t Flip Register 19 */
#define MTU_MC45_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063d64u)	/* Read Data and B45t Flip Register 2 */
#define MTU_MC45_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063d88u)	/* Read Data and B45t Flip Register 20 */
#define MTU_MC45_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0063d8au)	/* Read Data and B45t Flip Register 21 */
#define MTU_MC45_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0063d8cu)	/* Read Data and B45t Flip Register 22 */
#define MTU_MC45_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0063d8eu)	/* Read Data and B45t Flip Register 23 */
#define MTU_MC45_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063d90u)	/* Read Data and B45t Flip Register 24 */
#define MTU_MC45_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063d92u)	/* Read Data and B45t Flip Register 25 */
#define MTU_MC45_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063d94u)	/* Read Data and B45t Flip Register 26 */
#define MTU_MC45_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063d96u)	/* Read Data and B45t Flip Register 27 */
#define MTU_MC45_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063d98u)	/* Read Data and B45t Flip Register 28 */
#define MTU_MC45_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0063d9au)	/* Read Data and B45t Flip Register 29 */
#define MTU_MC45_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063d66u)	/* Read Data and B45t Flip Register 3 */
#define MTU_MC45_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0063d9cu)	/* Read Data and B45t Flip Register 30 */
#define MTU_MC45_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0063d9eu)	/* Read Data and B45t Flip Register 31 */
#define MTU_MC45_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0063da0u)	/* Read Data and B45t Flip Register 32 */
#define MTU_MC45_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0063da2u)	/* Read Data and B45t Flip Register 33 */
#define MTU_MC45_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0063da4u)	/* Read Data and B45t Flip Register 34 */
#define MTU_MC45_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0063da6u)	/* Read Data and B45t Flip Register 35 */
#define MTU_MC45_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0063da8u)	/* Read Data and B45t Flip Register 36 */
#define MTU_MC45_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0063daau)	/* Read Data and B45t Flip Register 37 */
#define MTU_MC45_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0063dacu)	/* Read Data and B45t Flip Register 38 */
#define MTU_MC45_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0063daeu)	/* Read Data and B45t Flip Register 39 */
#define MTU_MC45_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063d68u)	/* Read Data and B45t Flip Register 4 */
#define MTU_MC45_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0063db0u)	/* Read Data and B45t Flip Register 40 */
#define MTU_MC45_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0063db2u)	/* Read Data and B45t Flip Register 41 */
#define MTU_MC45_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0063db4u)	/* Read Data and B45t Flip Register 42 */
#define MTU_MC45_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0063db6u)	/* Read Data and B45t Flip Register 43 */
#define MTU_MC45_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0063db8u)	/* Read Data and B45t Flip Register 44 */
#define MTU_MC45_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0063dbau)	/* Read Data and B45t Flip Register 45 */
#define MTU_MC45_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0063dbcu)	/* Read Data and B45t Flip Register 46 */
#define MTU_MC45_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0063dbeu)	/* Read Data and B45t Flip Register 47 */
#define MTU_MC45_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0063dc0u)	/* Read Data and B45t Flip Register 48 */
#define MTU_MC45_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0063dc2u)	/* Read Data and B45t Flip Register 49 */
#define MTU_MC45_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0063d6au)	/* Read Data and B45t Flip Register 5 */
#define MTU_MC45_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0063dc4u)	/* Read Data and B45t Flip Register 50 */
#define MTU_MC45_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0063dc6u)	/* Read Data and B45t Flip Register 51 */
#define MTU_MC45_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0063dc8u)	/* Read Data and B45t Flip Register 52 */
#define MTU_MC45_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0063dcau)	/* Read Data and B45t Flip Register 53 */
#define MTU_MC45_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0063dccu)	/* Read Data and B45t Flip Register 54 */
#define MTU_MC45_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0063dceu)	/* Read Data and B45t Flip Register 55 */
#define MTU_MC45_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0063dd0u)	/* Read Data and B45t Flip Register 56 */
#define MTU_MC45_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0063dd2u)	/* Read Data and B45t Flip Register 57 */
#define MTU_MC45_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0063dd4u)	/* Read Data and B45t Flip Register 58 */
#define MTU_MC45_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0063dd6u)	/* Read Data and B45t Flip Register 59 */
#define MTU_MC45_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0063d6cu)	/* Read Data and B45t Flip Register 6 */
#define MTU_MC45_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0063dd8u)	/* Read Data and B45t Flip Register 60 */
#define MTU_MC45_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0063ddau)	/* Read Data and B45t Flip Register 61 */
#define MTU_MC45_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0063ddcu)	/* Read Data and B45t Flip Register 62 */
#define MTU_MC45_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0063ddeu)	/* Read Data and B45t Flip Register 63 */
#define MTU_MC45_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0063de0u)	/* Read Data and B45t Flip Register 64 */
#define MTU_MC45_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0063de2u)	/* Read Data and B45t Flip Register 65 */
#define MTU_MC45_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0063de4u)	/* Read Data and B45t Flip Register 66 */
#define MTU_MC45_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0063d6eu)	/* Read Data and B45t Flip Register 7 */
#define MTU_MC45_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063d70u)	/* Read Data and B45t Flip Register 8 */
#define MTU_MC45_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063d72u)	/* Read Data and B45t Flip Register 9 */
#define MTU_MC46_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063e60u)	/* Read Data and B46t Flip Register 0 */
#define MTU_MC46_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063e62u)	/* Read Data and B46t Flip Register 1 */
#define MTU_MC46_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063e74u)	/* Read Data and B46t Flip Register 10 */
#define MTU_MC46_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063e76u)	/* Read Data and B46t Flip Register 11 */
#define MTU_MC46_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063e78u)	/* Read Data and B46t Flip Register 12 */
#define MTU_MC46_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0063e7au)	/* Read Data and B46t Flip Register 13 */
#define MTU_MC46_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0063e7cu)	/* Read Data and B46t Flip Register 14 */
#define MTU_MC46_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0063e7eu)	/* Read Data and B46t Flip Register 15 */
#define MTU_MC46_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063e80u)	/* Read Data and B46t Flip Register 16 */
#define MTU_MC46_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063e82u)	/* Read Data and B46t Flip Register 17 */
#define MTU_MC46_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063e84u)	/* Read Data and B46t Flip Register 18 */
#define MTU_MC46_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063e86u)	/* Read Data and B46t Flip Register 19 */
#define MTU_MC46_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063e64u)	/* Read Data and B46t Flip Register 2 */
#define MTU_MC46_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063e88u)	/* Read Data and B46t Flip Register 20 */
#define MTU_MC46_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0063e8au)	/* Read Data and B46t Flip Register 21 */
#define MTU_MC46_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0063e8cu)	/* Read Data and B46t Flip Register 22 */
#define MTU_MC46_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0063e8eu)	/* Read Data and B46t Flip Register 23 */
#define MTU_MC46_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063e90u)	/* Read Data and B46t Flip Register 24 */
#define MTU_MC46_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063e92u)	/* Read Data and B46t Flip Register 25 */
#define MTU_MC46_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063e94u)	/* Read Data and B46t Flip Register 26 */
#define MTU_MC46_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063e96u)	/* Read Data and B46t Flip Register 27 */
#define MTU_MC46_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063e98u)	/* Read Data and B46t Flip Register 28 */
#define MTU_MC46_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0063e9au)	/* Read Data and B46t Flip Register 29 */
#define MTU_MC46_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063e66u)	/* Read Data and B46t Flip Register 3 */
#define MTU_MC46_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0063e9cu)	/* Read Data and B46t Flip Register 30 */
#define MTU_MC46_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0063e9eu)	/* Read Data and B46t Flip Register 31 */
#define MTU_MC46_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0063ea0u)	/* Read Data and B46t Flip Register 32 */
#define MTU_MC46_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0063ea2u)	/* Read Data and B46t Flip Register 33 */
#define MTU_MC46_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0063ea4u)	/* Read Data and B46t Flip Register 34 */
#define MTU_MC46_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0063ea6u)	/* Read Data and B46t Flip Register 35 */
#define MTU_MC46_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0063ea8u)	/* Read Data and B46t Flip Register 36 */
#define MTU_MC46_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0063eaau)	/* Read Data and B46t Flip Register 37 */
#define MTU_MC46_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0063eacu)	/* Read Data and B46t Flip Register 38 */
#define MTU_MC46_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0063eaeu)	/* Read Data and B46t Flip Register 39 */
#define MTU_MC46_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063e68u)	/* Read Data and B46t Flip Register 4 */
#define MTU_MC46_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0063eb0u)	/* Read Data and B46t Flip Register 40 */
#define MTU_MC46_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0063eb2u)	/* Read Data and B46t Flip Register 41 */
#define MTU_MC46_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0063eb4u)	/* Read Data and B46t Flip Register 42 */
#define MTU_MC46_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0063eb6u)	/* Read Data and B46t Flip Register 43 */
#define MTU_MC46_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0063eb8u)	/* Read Data and B46t Flip Register 44 */
#define MTU_MC46_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0063ebau)	/* Read Data and B46t Flip Register 45 */
#define MTU_MC46_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0063ebcu)	/* Read Data and B46t Flip Register 46 */
#define MTU_MC46_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0063ebeu)	/* Read Data and B46t Flip Register 47 */
#define MTU_MC46_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0063ec0u)	/* Read Data and B46t Flip Register 48 */
#define MTU_MC46_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0063ec2u)	/* Read Data and B46t Flip Register 49 */
#define MTU_MC46_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0063e6au)	/* Read Data and B46t Flip Register 5 */
#define MTU_MC46_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0063ec4u)	/* Read Data and B46t Flip Register 50 */
#define MTU_MC46_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0063ec6u)	/* Read Data and B46t Flip Register 51 */
#define MTU_MC46_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0063ec8u)	/* Read Data and B46t Flip Register 52 */
#define MTU_MC46_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0063ecau)	/* Read Data and B46t Flip Register 53 */
#define MTU_MC46_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0063eccu)	/* Read Data and B46t Flip Register 54 */
#define MTU_MC46_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0063eceu)	/* Read Data and B46t Flip Register 55 */
#define MTU_MC46_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0063ed0u)	/* Read Data and B46t Flip Register 56 */
#define MTU_MC46_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0063ed2u)	/* Read Data and B46t Flip Register 57 */
#define MTU_MC46_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0063ed4u)	/* Read Data and B46t Flip Register 58 */
#define MTU_MC46_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0063ed6u)	/* Read Data and B46t Flip Register 59 */
#define MTU_MC46_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0063e6cu)	/* Read Data and B46t Flip Register 6 */
#define MTU_MC46_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0063ed8u)	/* Read Data and B46t Flip Register 60 */
#define MTU_MC46_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0063edau)	/* Read Data and B46t Flip Register 61 */
#define MTU_MC46_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0063edcu)	/* Read Data and B46t Flip Register 62 */
#define MTU_MC46_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0063edeu)	/* Read Data and B46t Flip Register 63 */
#define MTU_MC46_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0063ee0u)	/* Read Data and B46t Flip Register 64 */
#define MTU_MC46_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0063ee2u)	/* Read Data and B46t Flip Register 65 */
#define MTU_MC46_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0063ee4u)	/* Read Data and B46t Flip Register 66 */
#define MTU_MC46_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0063e6eu)	/* Read Data and B46t Flip Register 7 */
#define MTU_MC46_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063e70u)	/* Read Data and B46t Flip Register 8 */
#define MTU_MC46_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063e72u)	/* Read Data and B46t Flip Register 9 */
#define MTU_MC47_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0063f60u)	/* Read Data and B47t Flip Register 0 */
#define MTU_MC47_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0063f62u)	/* Read Data and B47t Flip Register 1 */
#define MTU_MC47_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0063f74u)	/* Read Data and B47t Flip Register 10 */
#define MTU_MC47_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0063f76u)	/* Read Data and B47t Flip Register 11 */
#define MTU_MC47_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0063f78u)	/* Read Data and B47t Flip Register 12 */
#define MTU_MC47_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0063f7au)	/* Read Data and B47t Flip Register 13 */
#define MTU_MC47_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0063f7cu)	/* Read Data and B47t Flip Register 14 */
#define MTU_MC47_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0063f7eu)	/* Read Data and B47t Flip Register 15 */
#define MTU_MC47_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0063f80u)	/* Read Data and B47t Flip Register 16 */
#define MTU_MC47_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0063f82u)	/* Read Data and B47t Flip Register 17 */
#define MTU_MC47_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0063f84u)	/* Read Data and B47t Flip Register 18 */
#define MTU_MC47_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0063f86u)	/* Read Data and B47t Flip Register 19 */
#define MTU_MC47_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0063f64u)	/* Read Data and B47t Flip Register 2 */
#define MTU_MC47_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0063f88u)	/* Read Data and B47t Flip Register 20 */
#define MTU_MC47_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0063f8au)	/* Read Data and B47t Flip Register 21 */
#define MTU_MC47_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0063f8cu)	/* Read Data and B47t Flip Register 22 */
#define MTU_MC47_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0063f8eu)	/* Read Data and B47t Flip Register 23 */
#define MTU_MC47_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0063f90u)	/* Read Data and B47t Flip Register 24 */
#define MTU_MC47_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0063f92u)	/* Read Data and B47t Flip Register 25 */
#define MTU_MC47_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0063f94u)	/* Read Data and B47t Flip Register 26 */
#define MTU_MC47_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0063f96u)	/* Read Data and B47t Flip Register 27 */
#define MTU_MC47_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0063f98u)	/* Read Data and B47t Flip Register 28 */
#define MTU_MC47_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0063f9au)	/* Read Data and B47t Flip Register 29 */
#define MTU_MC47_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0063f66u)	/* Read Data and B47t Flip Register 3 */
#define MTU_MC47_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0063f9cu)	/* Read Data and B47t Flip Register 30 */
#define MTU_MC47_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0063f9eu)	/* Read Data and B47t Flip Register 31 */
#define MTU_MC47_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0063fa0u)	/* Read Data and B47t Flip Register 32 */
#define MTU_MC47_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0063fa2u)	/* Read Data and B47t Flip Register 33 */
#define MTU_MC47_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0063fa4u)	/* Read Data and B47t Flip Register 34 */
#define MTU_MC47_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0063fa6u)	/* Read Data and B47t Flip Register 35 */
#define MTU_MC47_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0063fa8u)	/* Read Data and B47t Flip Register 36 */
#define MTU_MC47_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0063faau)	/* Read Data and B47t Flip Register 37 */
#define MTU_MC47_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0063facu)	/* Read Data and B47t Flip Register 38 */
#define MTU_MC47_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0063faeu)	/* Read Data and B47t Flip Register 39 */
#define MTU_MC47_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0063f68u)	/* Read Data and B47t Flip Register 4 */
#define MTU_MC47_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0063fb0u)	/* Read Data and B47t Flip Register 40 */
#define MTU_MC47_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0063fb2u)	/* Read Data and B47t Flip Register 41 */
#define MTU_MC47_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0063fb4u)	/* Read Data and B47t Flip Register 42 */
#define MTU_MC47_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0063fb6u)	/* Read Data and B47t Flip Register 43 */
#define MTU_MC47_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0063fb8u)	/* Read Data and B47t Flip Register 44 */
#define MTU_MC47_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0063fbau)	/* Read Data and B47t Flip Register 45 */
#define MTU_MC47_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0063fbcu)	/* Read Data and B47t Flip Register 46 */
#define MTU_MC47_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0063fbeu)	/* Read Data and B47t Flip Register 47 */
#define MTU_MC47_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0063fc0u)	/* Read Data and B47t Flip Register 48 */
#define MTU_MC47_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0063fc2u)	/* Read Data and B47t Flip Register 49 */
#define MTU_MC47_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0063f6au)	/* Read Data and B47t Flip Register 5 */
#define MTU_MC47_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0063fc4u)	/* Read Data and B47t Flip Register 50 */
#define MTU_MC47_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0063fc6u)	/* Read Data and B47t Flip Register 51 */
#define MTU_MC47_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0063fc8u)	/* Read Data and B47t Flip Register 52 */
#define MTU_MC47_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0063fcau)	/* Read Data and B47t Flip Register 53 */
#define MTU_MC47_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0063fccu)	/* Read Data and B47t Flip Register 54 */
#define MTU_MC47_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0063fceu)	/* Read Data and B47t Flip Register 55 */
#define MTU_MC47_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0063fd0u)	/* Read Data and B47t Flip Register 56 */
#define MTU_MC47_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0063fd2u)	/* Read Data and B47t Flip Register 57 */
#define MTU_MC47_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0063fd4u)	/* Read Data and B47t Flip Register 58 */
#define MTU_MC47_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0063fd6u)	/* Read Data and B47t Flip Register 59 */
#define MTU_MC47_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0063f6cu)	/* Read Data and B47t Flip Register 6 */
#define MTU_MC47_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0063fd8u)	/* Read Data and B47t Flip Register 60 */
#define MTU_MC47_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0063fdau)	/* Read Data and B47t Flip Register 61 */
#define MTU_MC47_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0063fdcu)	/* Read Data and B47t Flip Register 62 */
#define MTU_MC47_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0063fdeu)	/* Read Data and B47t Flip Register 63 */
#define MTU_MC47_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0063fe0u)	/* Read Data and B47t Flip Register 64 */
#define MTU_MC47_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0063fe2u)	/* Read Data and B47t Flip Register 65 */
#define MTU_MC47_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0063fe4u)	/* Read Data and B47t Flip Register 66 */
#define MTU_MC47_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0063f6eu)	/* Read Data and B47t Flip Register 7 */
#define MTU_MC47_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0063f70u)	/* Read Data and B47t Flip Register 8 */
#define MTU_MC47_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0063f72u)	/* Read Data and B47t Flip Register 9 */
#define MTU_MC48_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064060u)	/* Read Data and B48t Flip Register 0 */
#define MTU_MC48_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064062u)	/* Read Data and B48t Flip Register 1 */
#define MTU_MC48_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064074u)	/* Read Data and B48t Flip Register 10 */
#define MTU_MC48_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064076u)	/* Read Data and B48t Flip Register 11 */
#define MTU_MC48_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064078u)	/* Read Data and B48t Flip Register 12 */
#define MTU_MC48_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006407au)	/* Read Data and B48t Flip Register 13 */
#define MTU_MC48_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006407cu)	/* Read Data and B48t Flip Register 14 */
#define MTU_MC48_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006407eu)	/* Read Data and B48t Flip Register 15 */
#define MTU_MC48_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064080u)	/* Read Data and B48t Flip Register 16 */
#define MTU_MC48_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064082u)	/* Read Data and B48t Flip Register 17 */
#define MTU_MC48_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064084u)	/* Read Data and B48t Flip Register 18 */
#define MTU_MC48_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064086u)	/* Read Data and B48t Flip Register 19 */
#define MTU_MC48_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064064u)	/* Read Data and B48t Flip Register 2 */
#define MTU_MC48_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064088u)	/* Read Data and B48t Flip Register 20 */
#define MTU_MC48_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006408au)	/* Read Data and B48t Flip Register 21 */
#define MTU_MC48_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006408cu)	/* Read Data and B48t Flip Register 22 */
#define MTU_MC48_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006408eu)	/* Read Data and B48t Flip Register 23 */
#define MTU_MC48_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064090u)	/* Read Data and B48t Flip Register 24 */
#define MTU_MC48_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064092u)	/* Read Data and B48t Flip Register 25 */
#define MTU_MC48_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064094u)	/* Read Data and B48t Flip Register 26 */
#define MTU_MC48_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064096u)	/* Read Data and B48t Flip Register 27 */
#define MTU_MC48_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064098u)	/* Read Data and B48t Flip Register 28 */
#define MTU_MC48_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006409au)	/* Read Data and B48t Flip Register 29 */
#define MTU_MC48_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064066u)	/* Read Data and B48t Flip Register 3 */
#define MTU_MC48_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006409cu)	/* Read Data and B48t Flip Register 30 */
#define MTU_MC48_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006409eu)	/* Read Data and B48t Flip Register 31 */
#define MTU_MC48_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00640a0u)	/* Read Data and B48t Flip Register 32 */
#define MTU_MC48_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00640a2u)	/* Read Data and B48t Flip Register 33 */
#define MTU_MC48_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00640a4u)	/* Read Data and B48t Flip Register 34 */
#define MTU_MC48_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00640a6u)	/* Read Data and B48t Flip Register 35 */
#define MTU_MC48_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00640a8u)	/* Read Data and B48t Flip Register 36 */
#define MTU_MC48_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00640aau)	/* Read Data and B48t Flip Register 37 */
#define MTU_MC48_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00640acu)	/* Read Data and B48t Flip Register 38 */
#define MTU_MC48_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00640aeu)	/* Read Data and B48t Flip Register 39 */
#define MTU_MC48_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064068u)	/* Read Data and B48t Flip Register 4 */
#define MTU_MC48_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00640b0u)	/* Read Data and B48t Flip Register 40 */
#define MTU_MC48_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00640b2u)	/* Read Data and B48t Flip Register 41 */
#define MTU_MC48_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00640b4u)	/* Read Data and B48t Flip Register 42 */
#define MTU_MC48_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00640b6u)	/* Read Data and B48t Flip Register 43 */
#define MTU_MC48_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00640b8u)	/* Read Data and B48t Flip Register 44 */
#define MTU_MC48_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00640bau)	/* Read Data and B48t Flip Register 45 */
#define MTU_MC48_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00640bcu)	/* Read Data and B48t Flip Register 46 */
#define MTU_MC48_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00640beu)	/* Read Data and B48t Flip Register 47 */
#define MTU_MC48_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00640c0u)	/* Read Data and B48t Flip Register 48 */
#define MTU_MC48_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00640c2u)	/* Read Data and B48t Flip Register 49 */
#define MTU_MC48_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006406au)	/* Read Data and B48t Flip Register 5 */
#define MTU_MC48_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00640c4u)	/* Read Data and B48t Flip Register 50 */
#define MTU_MC48_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00640c6u)	/* Read Data and B48t Flip Register 51 */
#define MTU_MC48_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00640c8u)	/* Read Data and B48t Flip Register 52 */
#define MTU_MC48_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00640cau)	/* Read Data and B48t Flip Register 53 */
#define MTU_MC48_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00640ccu)	/* Read Data and B48t Flip Register 54 */
#define MTU_MC48_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00640ceu)	/* Read Data and B48t Flip Register 55 */
#define MTU_MC48_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00640d0u)	/* Read Data and B48t Flip Register 56 */
#define MTU_MC48_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00640d2u)	/* Read Data and B48t Flip Register 57 */
#define MTU_MC48_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00640d4u)	/* Read Data and B48t Flip Register 58 */
#define MTU_MC48_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00640d6u)	/* Read Data and B48t Flip Register 59 */
#define MTU_MC48_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006406cu)	/* Read Data and B48t Flip Register 6 */
#define MTU_MC48_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00640d8u)	/* Read Data and B48t Flip Register 60 */
#define MTU_MC48_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00640dau)	/* Read Data and B48t Flip Register 61 */
#define MTU_MC48_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00640dcu)	/* Read Data and B48t Flip Register 62 */
#define MTU_MC48_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00640deu)	/* Read Data and B48t Flip Register 63 */
#define MTU_MC48_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00640e0u)	/* Read Data and B48t Flip Register 64 */
#define MTU_MC48_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00640e2u)	/* Read Data and B48t Flip Register 65 */
#define MTU_MC48_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00640e4u)	/* Read Data and B48t Flip Register 66 */
#define MTU_MC48_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006406eu)	/* Read Data and B48t Flip Register 7 */
#define MTU_MC48_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064070u)	/* Read Data and B48t Flip Register 8 */
#define MTU_MC48_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064072u)	/* Read Data and B48t Flip Register 9 */
#define MTU_MC49_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064160u)	/* Read Data and B49t Flip Register 0 */
#define MTU_MC49_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064162u)	/* Read Data and B49t Flip Register 1 */
#define MTU_MC49_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064174u)	/* Read Data and B49t Flip Register 10 */
#define MTU_MC49_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064176u)	/* Read Data and B49t Flip Register 11 */
#define MTU_MC49_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064178u)	/* Read Data and B49t Flip Register 12 */
#define MTU_MC49_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006417au)	/* Read Data and B49t Flip Register 13 */
#define MTU_MC49_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006417cu)	/* Read Data and B49t Flip Register 14 */
#define MTU_MC49_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006417eu)	/* Read Data and B49t Flip Register 15 */
#define MTU_MC49_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064180u)	/* Read Data and B49t Flip Register 16 */
#define MTU_MC49_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064182u)	/* Read Data and B49t Flip Register 17 */
#define MTU_MC49_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064184u)	/* Read Data and B49t Flip Register 18 */
#define MTU_MC49_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064186u)	/* Read Data and B49t Flip Register 19 */
#define MTU_MC49_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064164u)	/* Read Data and B49t Flip Register 2 */
#define MTU_MC49_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064188u)	/* Read Data and B49t Flip Register 20 */
#define MTU_MC49_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006418au)	/* Read Data and B49t Flip Register 21 */
#define MTU_MC49_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006418cu)	/* Read Data and B49t Flip Register 22 */
#define MTU_MC49_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006418eu)	/* Read Data and B49t Flip Register 23 */
#define MTU_MC49_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064190u)	/* Read Data and B49t Flip Register 24 */
#define MTU_MC49_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064192u)	/* Read Data and B49t Flip Register 25 */
#define MTU_MC49_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064194u)	/* Read Data and B49t Flip Register 26 */
#define MTU_MC49_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064196u)	/* Read Data and B49t Flip Register 27 */
#define MTU_MC49_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064198u)	/* Read Data and B49t Flip Register 28 */
#define MTU_MC49_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006419au)	/* Read Data and B49t Flip Register 29 */
#define MTU_MC49_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064166u)	/* Read Data and B49t Flip Register 3 */
#define MTU_MC49_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006419cu)	/* Read Data and B49t Flip Register 30 */
#define MTU_MC49_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006419eu)	/* Read Data and B49t Flip Register 31 */
#define MTU_MC49_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00641a0u)	/* Read Data and B49t Flip Register 32 */
#define MTU_MC49_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00641a2u)	/* Read Data and B49t Flip Register 33 */
#define MTU_MC49_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00641a4u)	/* Read Data and B49t Flip Register 34 */
#define MTU_MC49_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00641a6u)	/* Read Data and B49t Flip Register 35 */
#define MTU_MC49_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00641a8u)	/* Read Data and B49t Flip Register 36 */
#define MTU_MC49_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00641aau)	/* Read Data and B49t Flip Register 37 */
#define MTU_MC49_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00641acu)	/* Read Data and B49t Flip Register 38 */
#define MTU_MC49_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00641aeu)	/* Read Data and B49t Flip Register 39 */
#define MTU_MC49_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064168u)	/* Read Data and B49t Flip Register 4 */
#define MTU_MC49_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00641b0u)	/* Read Data and B49t Flip Register 40 */
#define MTU_MC49_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00641b2u)	/* Read Data and B49t Flip Register 41 */
#define MTU_MC49_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00641b4u)	/* Read Data and B49t Flip Register 42 */
#define MTU_MC49_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00641b6u)	/* Read Data and B49t Flip Register 43 */
#define MTU_MC49_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00641b8u)	/* Read Data and B49t Flip Register 44 */
#define MTU_MC49_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00641bau)	/* Read Data and B49t Flip Register 45 */
#define MTU_MC49_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00641bcu)	/* Read Data and B49t Flip Register 46 */
#define MTU_MC49_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00641beu)	/* Read Data and B49t Flip Register 47 */
#define MTU_MC49_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00641c0u)	/* Read Data and B49t Flip Register 48 */
#define MTU_MC49_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00641c2u)	/* Read Data and B49t Flip Register 49 */
#define MTU_MC49_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006416au)	/* Read Data and B49t Flip Register 5 */
#define MTU_MC49_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00641c4u)	/* Read Data and B49t Flip Register 50 */
#define MTU_MC49_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00641c6u)	/* Read Data and B49t Flip Register 51 */
#define MTU_MC49_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00641c8u)	/* Read Data and B49t Flip Register 52 */
#define MTU_MC49_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00641cau)	/* Read Data and B49t Flip Register 53 */
#define MTU_MC49_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00641ccu)	/* Read Data and B49t Flip Register 54 */
#define MTU_MC49_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00641ceu)	/* Read Data and B49t Flip Register 55 */
#define MTU_MC49_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00641d0u)	/* Read Data and B49t Flip Register 56 */
#define MTU_MC49_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00641d2u)	/* Read Data and B49t Flip Register 57 */
#define MTU_MC49_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00641d4u)	/* Read Data and B49t Flip Register 58 */
#define MTU_MC49_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00641d6u)	/* Read Data and B49t Flip Register 59 */
#define MTU_MC49_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006416cu)	/* Read Data and B49t Flip Register 6 */
#define MTU_MC49_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00641d8u)	/* Read Data and B49t Flip Register 60 */
#define MTU_MC49_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00641dau)	/* Read Data and B49t Flip Register 61 */
#define MTU_MC49_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00641dcu)	/* Read Data and B49t Flip Register 62 */
#define MTU_MC49_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00641deu)	/* Read Data and B49t Flip Register 63 */
#define MTU_MC49_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00641e0u)	/* Read Data and B49t Flip Register 64 */
#define MTU_MC49_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00641e2u)	/* Read Data and B49t Flip Register 65 */
#define MTU_MC49_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00641e4u)	/* Read Data and B49t Flip Register 66 */
#define MTU_MC49_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006416eu)	/* Read Data and B49t Flip Register 7 */
#define MTU_MC49_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064170u)	/* Read Data and B49t Flip Register 8 */
#define MTU_MC49_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064172u)	/* Read Data and B49t Flip Register 9 */
#define MTU_MC4_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061460u)	/* Read Data and B4t Flip Register 0 */
#define MTU_MC4_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061462u)	/* Read Data and B4t Flip Register 1 */
#define MTU_MC4_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061474u)	/* Read Data and B4t Flip Register 10 */
#define MTU_MC4_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061476u)	/* Read Data and B4t Flip Register 11 */
#define MTU_MC4_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061478u)	/* Read Data and B4t Flip Register 12 */
#define MTU_MC4_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006147au)	/* Read Data and B4t Flip Register 13 */
#define MTU_MC4_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006147cu)	/* Read Data and B4t Flip Register 14 */
#define MTU_MC4_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006147eu)	/* Read Data and B4t Flip Register 15 */
#define MTU_MC4_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061480u)	/* Read Data and B4t Flip Register 16 */
#define MTU_MC4_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061482u)	/* Read Data and B4t Flip Register 17 */
#define MTU_MC4_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061484u)	/* Read Data and B4t Flip Register 18 */
#define MTU_MC4_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061486u)	/* Read Data and B4t Flip Register 19 */
#define MTU_MC4_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061464u)	/* Read Data and B4t Flip Register 2 */
#define MTU_MC4_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061488u)	/* Read Data and B4t Flip Register 20 */
#define MTU_MC4_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006148au)	/* Read Data and B4t Flip Register 21 */
#define MTU_MC4_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006148cu)	/* Read Data and B4t Flip Register 22 */
#define MTU_MC4_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006148eu)	/* Read Data and B4t Flip Register 23 */
#define MTU_MC4_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061490u)	/* Read Data and B4t Flip Register 24 */
#define MTU_MC4_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061492u)	/* Read Data and B4t Flip Register 25 */
#define MTU_MC4_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061494u)	/* Read Data and B4t Flip Register 26 */
#define MTU_MC4_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061496u)	/* Read Data and B4t Flip Register 27 */
#define MTU_MC4_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061498u)	/* Read Data and B4t Flip Register 28 */
#define MTU_MC4_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006149au)	/* Read Data and B4t Flip Register 29 */
#define MTU_MC4_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061466u)	/* Read Data and B4t Flip Register 3 */
#define MTU_MC4_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006149cu)	/* Read Data and B4t Flip Register 30 */
#define MTU_MC4_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006149eu)	/* Read Data and B4t Flip Register 31 */
#define MTU_MC4_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00614a0u)	/* Read Data and B4t Flip Register 32 */
#define MTU_MC4_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00614a2u)	/* Read Data and B4t Flip Register 33 */
#define MTU_MC4_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00614a4u)	/* Read Data and B4t Flip Register 34 */
#define MTU_MC4_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00614a6u)	/* Read Data and B4t Flip Register 35 */
#define MTU_MC4_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00614a8u)	/* Read Data and B4t Flip Register 36 */
#define MTU_MC4_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00614aau)	/* Read Data and B4t Flip Register 37 */
#define MTU_MC4_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00614acu)	/* Read Data and B4t Flip Register 38 */
#define MTU_MC4_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00614aeu)	/* Read Data and B4t Flip Register 39 */
#define MTU_MC4_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061468u)	/* Read Data and B4t Flip Register 4 */
#define MTU_MC4_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00614b0u)	/* Read Data and B4t Flip Register 40 */
#define MTU_MC4_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00614b2u)	/* Read Data and B4t Flip Register 41 */
#define MTU_MC4_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00614b4u)	/* Read Data and B4t Flip Register 42 */
#define MTU_MC4_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00614b6u)	/* Read Data and B4t Flip Register 43 */
#define MTU_MC4_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00614b8u)	/* Read Data and B4t Flip Register 44 */
#define MTU_MC4_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00614bau)	/* Read Data and B4t Flip Register 45 */
#define MTU_MC4_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00614bcu)	/* Read Data and B4t Flip Register 46 */
#define MTU_MC4_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00614beu)	/* Read Data and B4t Flip Register 47 */
#define MTU_MC4_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00614c0u)	/* Read Data and B4t Flip Register 48 */
#define MTU_MC4_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00614c2u)	/* Read Data and B4t Flip Register 49 */
#define MTU_MC4_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006146au)	/* Read Data and B4t Flip Register 5 */
#define MTU_MC4_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00614c4u)	/* Read Data and B4t Flip Register 50 */
#define MTU_MC4_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00614c6u)	/* Read Data and B4t Flip Register 51 */
#define MTU_MC4_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00614c8u)	/* Read Data and B4t Flip Register 52 */
#define MTU_MC4_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00614cau)	/* Read Data and B4t Flip Register 53 */
#define MTU_MC4_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00614ccu)	/* Read Data and B4t Flip Register 54 */
#define MTU_MC4_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00614ceu)	/* Read Data and B4t Flip Register 55 */
#define MTU_MC4_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00614d0u)	/* Read Data and B4t Flip Register 56 */
#define MTU_MC4_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00614d2u)	/* Read Data and B4t Flip Register 57 */
#define MTU_MC4_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00614d4u)	/* Read Data and B4t Flip Register 58 */
#define MTU_MC4_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00614d6u)	/* Read Data and B4t Flip Register 59 */
#define MTU_MC4_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006146cu)	/* Read Data and B4t Flip Register 6 */
#define MTU_MC4_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00614d8u)	/* Read Data and B4t Flip Register 60 */
#define MTU_MC4_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00614dau)	/* Read Data and B4t Flip Register 61 */
#define MTU_MC4_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00614dcu)	/* Read Data and B4t Flip Register 62 */
#define MTU_MC4_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00614deu)	/* Read Data and B4t Flip Register 63 */
#define MTU_MC4_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00614e0u)	/* Read Data and B4t Flip Register 64 */
#define MTU_MC4_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00614e2u)	/* Read Data and B4t Flip Register 65 */
#define MTU_MC4_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00614e4u)	/* Read Data and B4t Flip Register 66 */
#define MTU_MC4_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006146eu)	/* Read Data and B4t Flip Register 7 */
#define MTU_MC4_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061470u)	/* Read Data and B4t Flip Register 8 */
#define MTU_MC4_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061472u)	/* Read Data and B4t Flip Register 9 */
#define MTU_MC50_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064260u)	/* Read Data and B50t Flip Register 0 */
#define MTU_MC50_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064262u)	/* Read Data and B50t Flip Register 1 */
#define MTU_MC50_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064274u)	/* Read Data and B50t Flip Register 10 */
#define MTU_MC50_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064276u)	/* Read Data and B50t Flip Register 11 */
#define MTU_MC50_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064278u)	/* Read Data and B50t Flip Register 12 */
#define MTU_MC50_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006427au)	/* Read Data and B50t Flip Register 13 */
#define MTU_MC50_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006427cu)	/* Read Data and B50t Flip Register 14 */
#define MTU_MC50_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006427eu)	/* Read Data and B50t Flip Register 15 */
#define MTU_MC50_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064280u)	/* Read Data and B50t Flip Register 16 */
#define MTU_MC50_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064282u)	/* Read Data and B50t Flip Register 17 */
#define MTU_MC50_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064284u)	/* Read Data and B50t Flip Register 18 */
#define MTU_MC50_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064286u)	/* Read Data and B50t Flip Register 19 */
#define MTU_MC50_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064264u)	/* Read Data and B50t Flip Register 2 */
#define MTU_MC50_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064288u)	/* Read Data and B50t Flip Register 20 */
#define MTU_MC50_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006428au)	/* Read Data and B50t Flip Register 21 */
#define MTU_MC50_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006428cu)	/* Read Data and B50t Flip Register 22 */
#define MTU_MC50_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006428eu)	/* Read Data and B50t Flip Register 23 */
#define MTU_MC50_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064290u)	/* Read Data and B50t Flip Register 24 */
#define MTU_MC50_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064292u)	/* Read Data and B50t Flip Register 25 */
#define MTU_MC50_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064294u)	/* Read Data and B50t Flip Register 26 */
#define MTU_MC50_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064296u)	/* Read Data and B50t Flip Register 27 */
#define MTU_MC50_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064298u)	/* Read Data and B50t Flip Register 28 */
#define MTU_MC50_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006429au)	/* Read Data and B50t Flip Register 29 */
#define MTU_MC50_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064266u)	/* Read Data and B50t Flip Register 3 */
#define MTU_MC50_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006429cu)	/* Read Data and B50t Flip Register 30 */
#define MTU_MC50_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006429eu)	/* Read Data and B50t Flip Register 31 */
#define MTU_MC50_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00642a0u)	/* Read Data and B50t Flip Register 32 */
#define MTU_MC50_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00642a2u)	/* Read Data and B50t Flip Register 33 */
#define MTU_MC50_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00642a4u)	/* Read Data and B50t Flip Register 34 */
#define MTU_MC50_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00642a6u)	/* Read Data and B50t Flip Register 35 */
#define MTU_MC50_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00642a8u)	/* Read Data and B50t Flip Register 36 */
#define MTU_MC50_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00642aau)	/* Read Data and B50t Flip Register 37 */
#define MTU_MC50_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00642acu)	/* Read Data and B50t Flip Register 38 */
#define MTU_MC50_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00642aeu)	/* Read Data and B50t Flip Register 39 */
#define MTU_MC50_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064268u)	/* Read Data and B50t Flip Register 4 */
#define MTU_MC50_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00642b0u)	/* Read Data and B50t Flip Register 40 */
#define MTU_MC50_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00642b2u)	/* Read Data and B50t Flip Register 41 */
#define MTU_MC50_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00642b4u)	/* Read Data and B50t Flip Register 42 */
#define MTU_MC50_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00642b6u)	/* Read Data and B50t Flip Register 43 */
#define MTU_MC50_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00642b8u)	/* Read Data and B50t Flip Register 44 */
#define MTU_MC50_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00642bau)	/* Read Data and B50t Flip Register 45 */
#define MTU_MC50_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00642bcu)	/* Read Data and B50t Flip Register 46 */
#define MTU_MC50_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00642beu)	/* Read Data and B50t Flip Register 47 */
#define MTU_MC50_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00642c0u)	/* Read Data and B50t Flip Register 48 */
#define MTU_MC50_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00642c2u)	/* Read Data and B50t Flip Register 49 */
#define MTU_MC50_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006426au)	/* Read Data and B50t Flip Register 5 */
#define MTU_MC50_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00642c4u)	/* Read Data and B50t Flip Register 50 */
#define MTU_MC50_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00642c6u)	/* Read Data and B50t Flip Register 51 */
#define MTU_MC50_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00642c8u)	/* Read Data and B50t Flip Register 52 */
#define MTU_MC50_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00642cau)	/* Read Data and B50t Flip Register 53 */
#define MTU_MC50_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00642ccu)	/* Read Data and B50t Flip Register 54 */
#define MTU_MC50_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00642ceu)	/* Read Data and B50t Flip Register 55 */
#define MTU_MC50_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00642d0u)	/* Read Data and B50t Flip Register 56 */
#define MTU_MC50_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00642d2u)	/* Read Data and B50t Flip Register 57 */
#define MTU_MC50_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00642d4u)	/* Read Data and B50t Flip Register 58 */
#define MTU_MC50_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00642d6u)	/* Read Data and B50t Flip Register 59 */
#define MTU_MC50_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006426cu)	/* Read Data and B50t Flip Register 6 */
#define MTU_MC50_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00642d8u)	/* Read Data and B50t Flip Register 60 */
#define MTU_MC50_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00642dau)	/* Read Data and B50t Flip Register 61 */
#define MTU_MC50_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00642dcu)	/* Read Data and B50t Flip Register 62 */
#define MTU_MC50_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00642deu)	/* Read Data and B50t Flip Register 63 */
#define MTU_MC50_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00642e0u)	/* Read Data and B50t Flip Register 64 */
#define MTU_MC50_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00642e2u)	/* Read Data and B50t Flip Register 65 */
#define MTU_MC50_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00642e4u)	/* Read Data and B50t Flip Register 66 */
#define MTU_MC50_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006426eu)	/* Read Data and B50t Flip Register 7 */
#define MTU_MC50_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064270u)	/* Read Data and B50t Flip Register 8 */
#define MTU_MC50_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064272u)	/* Read Data and B50t Flip Register 9 */
#define MTU_MC51_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064360u)	/* Read Data and B51t Flip Register 0 */
#define MTU_MC51_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064362u)	/* Read Data and B51t Flip Register 1 */
#define MTU_MC51_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064374u)	/* Read Data and B51t Flip Register 10 */
#define MTU_MC51_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064376u)	/* Read Data and B51t Flip Register 11 */
#define MTU_MC51_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064378u)	/* Read Data and B51t Flip Register 12 */
#define MTU_MC51_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006437au)	/* Read Data and B51t Flip Register 13 */
#define MTU_MC51_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006437cu)	/* Read Data and B51t Flip Register 14 */
#define MTU_MC51_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006437eu)	/* Read Data and B51t Flip Register 15 */
#define MTU_MC51_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064380u)	/* Read Data and B51t Flip Register 16 */
#define MTU_MC51_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064382u)	/* Read Data and B51t Flip Register 17 */
#define MTU_MC51_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064384u)	/* Read Data and B51t Flip Register 18 */
#define MTU_MC51_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064386u)	/* Read Data and B51t Flip Register 19 */
#define MTU_MC51_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064364u)	/* Read Data and B51t Flip Register 2 */
#define MTU_MC51_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064388u)	/* Read Data and B51t Flip Register 20 */
#define MTU_MC51_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006438au)	/* Read Data and B51t Flip Register 21 */
#define MTU_MC51_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006438cu)	/* Read Data and B51t Flip Register 22 */
#define MTU_MC51_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006438eu)	/* Read Data and B51t Flip Register 23 */
#define MTU_MC51_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064390u)	/* Read Data and B51t Flip Register 24 */
#define MTU_MC51_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064392u)	/* Read Data and B51t Flip Register 25 */
#define MTU_MC51_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064394u)	/* Read Data and B51t Flip Register 26 */
#define MTU_MC51_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064396u)	/* Read Data and B51t Flip Register 27 */
#define MTU_MC51_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064398u)	/* Read Data and B51t Flip Register 28 */
#define MTU_MC51_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006439au)	/* Read Data and B51t Flip Register 29 */
#define MTU_MC51_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064366u)	/* Read Data and B51t Flip Register 3 */
#define MTU_MC51_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006439cu)	/* Read Data and B51t Flip Register 30 */
#define MTU_MC51_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006439eu)	/* Read Data and B51t Flip Register 31 */
#define MTU_MC51_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00643a0u)	/* Read Data and B51t Flip Register 32 */
#define MTU_MC51_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00643a2u)	/* Read Data and B51t Flip Register 33 */
#define MTU_MC51_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00643a4u)	/* Read Data and B51t Flip Register 34 */
#define MTU_MC51_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00643a6u)	/* Read Data and B51t Flip Register 35 */
#define MTU_MC51_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00643a8u)	/* Read Data and B51t Flip Register 36 */
#define MTU_MC51_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00643aau)	/* Read Data and B51t Flip Register 37 */
#define MTU_MC51_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00643acu)	/* Read Data and B51t Flip Register 38 */
#define MTU_MC51_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00643aeu)	/* Read Data and B51t Flip Register 39 */
#define MTU_MC51_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064368u)	/* Read Data and B51t Flip Register 4 */
#define MTU_MC51_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00643b0u)	/* Read Data and B51t Flip Register 40 */
#define MTU_MC51_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00643b2u)	/* Read Data and B51t Flip Register 41 */
#define MTU_MC51_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00643b4u)	/* Read Data and B51t Flip Register 42 */
#define MTU_MC51_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00643b6u)	/* Read Data and B51t Flip Register 43 */
#define MTU_MC51_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00643b8u)	/* Read Data and B51t Flip Register 44 */
#define MTU_MC51_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00643bau)	/* Read Data and B51t Flip Register 45 */
#define MTU_MC51_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00643bcu)	/* Read Data and B51t Flip Register 46 */
#define MTU_MC51_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00643beu)	/* Read Data and B51t Flip Register 47 */
#define MTU_MC51_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00643c0u)	/* Read Data and B51t Flip Register 48 */
#define MTU_MC51_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00643c2u)	/* Read Data and B51t Flip Register 49 */
#define MTU_MC51_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006436au)	/* Read Data and B51t Flip Register 5 */
#define MTU_MC51_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00643c4u)	/* Read Data and B51t Flip Register 50 */
#define MTU_MC51_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00643c6u)	/* Read Data and B51t Flip Register 51 */
#define MTU_MC51_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00643c8u)	/* Read Data and B51t Flip Register 52 */
#define MTU_MC51_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00643cau)	/* Read Data and B51t Flip Register 53 */
#define MTU_MC51_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00643ccu)	/* Read Data and B51t Flip Register 54 */
#define MTU_MC51_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00643ceu)	/* Read Data and B51t Flip Register 55 */
#define MTU_MC51_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00643d0u)	/* Read Data and B51t Flip Register 56 */
#define MTU_MC51_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00643d2u)	/* Read Data and B51t Flip Register 57 */
#define MTU_MC51_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00643d4u)	/* Read Data and B51t Flip Register 58 */
#define MTU_MC51_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00643d6u)	/* Read Data and B51t Flip Register 59 */
#define MTU_MC51_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006436cu)	/* Read Data and B51t Flip Register 6 */
#define MTU_MC51_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00643d8u)	/* Read Data and B51t Flip Register 60 */
#define MTU_MC51_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00643dau)	/* Read Data and B51t Flip Register 61 */
#define MTU_MC51_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00643dcu)	/* Read Data and B51t Flip Register 62 */
#define MTU_MC51_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00643deu)	/* Read Data and B51t Flip Register 63 */
#define MTU_MC51_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00643e0u)	/* Read Data and B51t Flip Register 64 */
#define MTU_MC51_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00643e2u)	/* Read Data and B51t Flip Register 65 */
#define MTU_MC51_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00643e4u)	/* Read Data and B51t Flip Register 66 */
#define MTU_MC51_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006436eu)	/* Read Data and B51t Flip Register 7 */
#define MTU_MC51_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064370u)	/* Read Data and B51t Flip Register 8 */
#define MTU_MC51_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064372u)	/* Read Data and B51t Flip Register 9 */
#define MTU_MC52_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064460u)	/* Read Data and B52t Flip Register 0 */
#define MTU_MC52_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064462u)	/* Read Data and B52t Flip Register 1 */
#define MTU_MC52_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064474u)	/* Read Data and B52t Flip Register 10 */
#define MTU_MC52_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064476u)	/* Read Data and B52t Flip Register 11 */
#define MTU_MC52_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064478u)	/* Read Data and B52t Flip Register 12 */
#define MTU_MC52_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006447au)	/* Read Data and B52t Flip Register 13 */
#define MTU_MC52_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006447cu)	/* Read Data and B52t Flip Register 14 */
#define MTU_MC52_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006447eu)	/* Read Data and B52t Flip Register 15 */
#define MTU_MC52_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064480u)	/* Read Data and B52t Flip Register 16 */
#define MTU_MC52_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064482u)	/* Read Data and B52t Flip Register 17 */
#define MTU_MC52_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064484u)	/* Read Data and B52t Flip Register 18 */
#define MTU_MC52_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064486u)	/* Read Data and B52t Flip Register 19 */
#define MTU_MC52_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064464u)	/* Read Data and B52t Flip Register 2 */
#define MTU_MC52_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064488u)	/* Read Data and B52t Flip Register 20 */
#define MTU_MC52_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006448au)	/* Read Data and B52t Flip Register 21 */
#define MTU_MC52_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006448cu)	/* Read Data and B52t Flip Register 22 */
#define MTU_MC52_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006448eu)	/* Read Data and B52t Flip Register 23 */
#define MTU_MC52_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064490u)	/* Read Data and B52t Flip Register 24 */
#define MTU_MC52_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064492u)	/* Read Data and B52t Flip Register 25 */
#define MTU_MC52_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064494u)	/* Read Data and B52t Flip Register 26 */
#define MTU_MC52_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064496u)	/* Read Data and B52t Flip Register 27 */
#define MTU_MC52_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064498u)	/* Read Data and B52t Flip Register 28 */
#define MTU_MC52_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006449au)	/* Read Data and B52t Flip Register 29 */
#define MTU_MC52_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064466u)	/* Read Data and B52t Flip Register 3 */
#define MTU_MC52_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006449cu)	/* Read Data and B52t Flip Register 30 */
#define MTU_MC52_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006449eu)	/* Read Data and B52t Flip Register 31 */
#define MTU_MC52_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00644a0u)	/* Read Data and B52t Flip Register 32 */
#define MTU_MC52_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00644a2u)	/* Read Data and B52t Flip Register 33 */
#define MTU_MC52_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00644a4u)	/* Read Data and B52t Flip Register 34 */
#define MTU_MC52_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00644a6u)	/* Read Data and B52t Flip Register 35 */
#define MTU_MC52_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00644a8u)	/* Read Data and B52t Flip Register 36 */
#define MTU_MC52_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00644aau)	/* Read Data and B52t Flip Register 37 */
#define MTU_MC52_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00644acu)	/* Read Data and B52t Flip Register 38 */
#define MTU_MC52_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00644aeu)	/* Read Data and B52t Flip Register 39 */
#define MTU_MC52_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064468u)	/* Read Data and B52t Flip Register 4 */
#define MTU_MC52_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00644b0u)	/* Read Data and B52t Flip Register 40 */
#define MTU_MC52_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00644b2u)	/* Read Data and B52t Flip Register 41 */
#define MTU_MC52_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00644b4u)	/* Read Data and B52t Flip Register 42 */
#define MTU_MC52_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00644b6u)	/* Read Data and B52t Flip Register 43 */
#define MTU_MC52_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00644b8u)	/* Read Data and B52t Flip Register 44 */
#define MTU_MC52_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00644bau)	/* Read Data and B52t Flip Register 45 */
#define MTU_MC52_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00644bcu)	/* Read Data and B52t Flip Register 46 */
#define MTU_MC52_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00644beu)	/* Read Data and B52t Flip Register 47 */
#define MTU_MC52_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00644c0u)	/* Read Data and B52t Flip Register 48 */
#define MTU_MC52_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00644c2u)	/* Read Data and B52t Flip Register 49 */
#define MTU_MC52_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006446au)	/* Read Data and B52t Flip Register 5 */
#define MTU_MC52_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00644c4u)	/* Read Data and B52t Flip Register 50 */
#define MTU_MC52_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00644c6u)	/* Read Data and B52t Flip Register 51 */
#define MTU_MC52_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00644c8u)	/* Read Data and B52t Flip Register 52 */
#define MTU_MC52_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00644cau)	/* Read Data and B52t Flip Register 53 */
#define MTU_MC52_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00644ccu)	/* Read Data and B52t Flip Register 54 */
#define MTU_MC52_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00644ceu)	/* Read Data and B52t Flip Register 55 */
#define MTU_MC52_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00644d0u)	/* Read Data and B52t Flip Register 56 */
#define MTU_MC52_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00644d2u)	/* Read Data and B52t Flip Register 57 */
#define MTU_MC52_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00644d4u)	/* Read Data and B52t Flip Register 58 */
#define MTU_MC52_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00644d6u)	/* Read Data and B52t Flip Register 59 */
#define MTU_MC52_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006446cu)	/* Read Data and B52t Flip Register 6 */
#define MTU_MC52_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00644d8u)	/* Read Data and B52t Flip Register 60 */
#define MTU_MC52_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00644dau)	/* Read Data and B52t Flip Register 61 */
#define MTU_MC52_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00644dcu)	/* Read Data and B52t Flip Register 62 */
#define MTU_MC52_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00644deu)	/* Read Data and B52t Flip Register 63 */
#define MTU_MC52_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00644e0u)	/* Read Data and B52t Flip Register 64 */
#define MTU_MC52_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00644e2u)	/* Read Data and B52t Flip Register 65 */
#define MTU_MC52_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00644e4u)	/* Read Data and B52t Flip Register 66 */
#define MTU_MC52_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006446eu)	/* Read Data and B52t Flip Register 7 */
#define MTU_MC52_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064470u)	/* Read Data and B52t Flip Register 8 */
#define MTU_MC52_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064472u)	/* Read Data and B52t Flip Register 9 */
#define MTU_MC53_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064560u)	/* Read Data and B53t Flip Register 0 */
#define MTU_MC53_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064562u)	/* Read Data and B53t Flip Register 1 */
#define MTU_MC53_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064574u)	/* Read Data and B53t Flip Register 10 */
#define MTU_MC53_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064576u)	/* Read Data and B53t Flip Register 11 */
#define MTU_MC53_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064578u)	/* Read Data and B53t Flip Register 12 */
#define MTU_MC53_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006457au)	/* Read Data and B53t Flip Register 13 */
#define MTU_MC53_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006457cu)	/* Read Data and B53t Flip Register 14 */
#define MTU_MC53_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006457eu)	/* Read Data and B53t Flip Register 15 */
#define MTU_MC53_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064580u)	/* Read Data and B53t Flip Register 16 */
#define MTU_MC53_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064582u)	/* Read Data and B53t Flip Register 17 */
#define MTU_MC53_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064584u)	/* Read Data and B53t Flip Register 18 */
#define MTU_MC53_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064586u)	/* Read Data and B53t Flip Register 19 */
#define MTU_MC53_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064564u)	/* Read Data and B53t Flip Register 2 */
#define MTU_MC53_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064588u)	/* Read Data and B53t Flip Register 20 */
#define MTU_MC53_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006458au)	/* Read Data and B53t Flip Register 21 */
#define MTU_MC53_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006458cu)	/* Read Data and B53t Flip Register 22 */
#define MTU_MC53_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006458eu)	/* Read Data and B53t Flip Register 23 */
#define MTU_MC53_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064590u)	/* Read Data and B53t Flip Register 24 */
#define MTU_MC53_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064592u)	/* Read Data and B53t Flip Register 25 */
#define MTU_MC53_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064594u)	/* Read Data and B53t Flip Register 26 */
#define MTU_MC53_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064596u)	/* Read Data and B53t Flip Register 27 */
#define MTU_MC53_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064598u)	/* Read Data and B53t Flip Register 28 */
#define MTU_MC53_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006459au)	/* Read Data and B53t Flip Register 29 */
#define MTU_MC53_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064566u)	/* Read Data and B53t Flip Register 3 */
#define MTU_MC53_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006459cu)	/* Read Data and B53t Flip Register 30 */
#define MTU_MC53_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006459eu)	/* Read Data and B53t Flip Register 31 */
#define MTU_MC53_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00645a0u)	/* Read Data and B53t Flip Register 32 */
#define MTU_MC53_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00645a2u)	/* Read Data and B53t Flip Register 33 */
#define MTU_MC53_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00645a4u)	/* Read Data and B53t Flip Register 34 */
#define MTU_MC53_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00645a6u)	/* Read Data and B53t Flip Register 35 */
#define MTU_MC53_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00645a8u)	/* Read Data and B53t Flip Register 36 */
#define MTU_MC53_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00645aau)	/* Read Data and B53t Flip Register 37 */
#define MTU_MC53_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00645acu)	/* Read Data and B53t Flip Register 38 */
#define MTU_MC53_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00645aeu)	/* Read Data and B53t Flip Register 39 */
#define MTU_MC53_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064568u)	/* Read Data and B53t Flip Register 4 */
#define MTU_MC53_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00645b0u)	/* Read Data and B53t Flip Register 40 */
#define MTU_MC53_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00645b2u)	/* Read Data and B53t Flip Register 41 */
#define MTU_MC53_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00645b4u)	/* Read Data and B53t Flip Register 42 */
#define MTU_MC53_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00645b6u)	/* Read Data and B53t Flip Register 43 */
#define MTU_MC53_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00645b8u)	/* Read Data and B53t Flip Register 44 */
#define MTU_MC53_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00645bau)	/* Read Data and B53t Flip Register 45 */
#define MTU_MC53_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00645bcu)	/* Read Data and B53t Flip Register 46 */
#define MTU_MC53_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00645beu)	/* Read Data and B53t Flip Register 47 */
#define MTU_MC53_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00645c0u)	/* Read Data and B53t Flip Register 48 */
#define MTU_MC53_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00645c2u)	/* Read Data and B53t Flip Register 49 */
#define MTU_MC53_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006456au)	/* Read Data and B53t Flip Register 5 */
#define MTU_MC53_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00645c4u)	/* Read Data and B53t Flip Register 50 */
#define MTU_MC53_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00645c6u)	/* Read Data and B53t Flip Register 51 */
#define MTU_MC53_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00645c8u)	/* Read Data and B53t Flip Register 52 */
#define MTU_MC53_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00645cau)	/* Read Data and B53t Flip Register 53 */
#define MTU_MC53_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00645ccu)	/* Read Data and B53t Flip Register 54 */
#define MTU_MC53_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00645ceu)	/* Read Data and B53t Flip Register 55 */
#define MTU_MC53_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00645d0u)	/* Read Data and B53t Flip Register 56 */
#define MTU_MC53_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00645d2u)	/* Read Data and B53t Flip Register 57 */
#define MTU_MC53_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00645d4u)	/* Read Data and B53t Flip Register 58 */
#define MTU_MC53_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00645d6u)	/* Read Data and B53t Flip Register 59 */
#define MTU_MC53_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006456cu)	/* Read Data and B53t Flip Register 6 */
#define MTU_MC53_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00645d8u)	/* Read Data and B53t Flip Register 60 */
#define MTU_MC53_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00645dau)	/* Read Data and B53t Flip Register 61 */
#define MTU_MC53_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00645dcu)	/* Read Data and B53t Flip Register 62 */
#define MTU_MC53_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00645deu)	/* Read Data and B53t Flip Register 63 */
#define MTU_MC53_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00645e0u)	/* Read Data and B53t Flip Register 64 */
#define MTU_MC53_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00645e2u)	/* Read Data and B53t Flip Register 65 */
#define MTU_MC53_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00645e4u)	/* Read Data and B53t Flip Register 66 */
#define MTU_MC53_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006456eu)	/* Read Data and B53t Flip Register 7 */
#define MTU_MC53_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064570u)	/* Read Data and B53t Flip Register 8 */
#define MTU_MC53_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064572u)	/* Read Data and B53t Flip Register 9 */
#define MTU_MC54_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064660u)	/* Read Data and B54t Flip Register 0 */
#define MTU_MC54_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064662u)	/* Read Data and B54t Flip Register 1 */
#define MTU_MC54_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064674u)	/* Read Data and B54t Flip Register 10 */
#define MTU_MC54_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064676u)	/* Read Data and B54t Flip Register 11 */
#define MTU_MC54_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064678u)	/* Read Data and B54t Flip Register 12 */
#define MTU_MC54_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006467au)	/* Read Data and B54t Flip Register 13 */
#define MTU_MC54_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006467cu)	/* Read Data and B54t Flip Register 14 */
#define MTU_MC54_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006467eu)	/* Read Data and B54t Flip Register 15 */
#define MTU_MC54_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064680u)	/* Read Data and B54t Flip Register 16 */
#define MTU_MC54_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064682u)	/* Read Data and B54t Flip Register 17 */
#define MTU_MC54_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064684u)	/* Read Data and B54t Flip Register 18 */
#define MTU_MC54_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064686u)	/* Read Data and B54t Flip Register 19 */
#define MTU_MC54_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064664u)	/* Read Data and B54t Flip Register 2 */
#define MTU_MC54_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064688u)	/* Read Data and B54t Flip Register 20 */
#define MTU_MC54_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006468au)	/* Read Data and B54t Flip Register 21 */
#define MTU_MC54_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006468cu)	/* Read Data and B54t Flip Register 22 */
#define MTU_MC54_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006468eu)	/* Read Data and B54t Flip Register 23 */
#define MTU_MC54_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064690u)	/* Read Data and B54t Flip Register 24 */
#define MTU_MC54_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064692u)	/* Read Data and B54t Flip Register 25 */
#define MTU_MC54_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064694u)	/* Read Data and B54t Flip Register 26 */
#define MTU_MC54_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064696u)	/* Read Data and B54t Flip Register 27 */
#define MTU_MC54_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064698u)	/* Read Data and B54t Flip Register 28 */
#define MTU_MC54_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006469au)	/* Read Data and B54t Flip Register 29 */
#define MTU_MC54_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064666u)	/* Read Data and B54t Flip Register 3 */
#define MTU_MC54_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006469cu)	/* Read Data and B54t Flip Register 30 */
#define MTU_MC54_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006469eu)	/* Read Data and B54t Flip Register 31 */
#define MTU_MC54_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00646a0u)	/* Read Data and B54t Flip Register 32 */
#define MTU_MC54_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00646a2u)	/* Read Data and B54t Flip Register 33 */
#define MTU_MC54_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00646a4u)	/* Read Data and B54t Flip Register 34 */
#define MTU_MC54_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00646a6u)	/* Read Data and B54t Flip Register 35 */
#define MTU_MC54_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00646a8u)	/* Read Data and B54t Flip Register 36 */
#define MTU_MC54_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00646aau)	/* Read Data and B54t Flip Register 37 */
#define MTU_MC54_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00646acu)	/* Read Data and B54t Flip Register 38 */
#define MTU_MC54_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00646aeu)	/* Read Data and B54t Flip Register 39 */
#define MTU_MC54_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064668u)	/* Read Data and B54t Flip Register 4 */
#define MTU_MC54_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00646b0u)	/* Read Data and B54t Flip Register 40 */
#define MTU_MC54_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00646b2u)	/* Read Data and B54t Flip Register 41 */
#define MTU_MC54_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00646b4u)	/* Read Data and B54t Flip Register 42 */
#define MTU_MC54_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00646b6u)	/* Read Data and B54t Flip Register 43 */
#define MTU_MC54_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00646b8u)	/* Read Data and B54t Flip Register 44 */
#define MTU_MC54_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00646bau)	/* Read Data and B54t Flip Register 45 */
#define MTU_MC54_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00646bcu)	/* Read Data and B54t Flip Register 46 */
#define MTU_MC54_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00646beu)	/* Read Data and B54t Flip Register 47 */
#define MTU_MC54_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00646c0u)	/* Read Data and B54t Flip Register 48 */
#define MTU_MC54_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00646c2u)	/* Read Data and B54t Flip Register 49 */
#define MTU_MC54_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006466au)	/* Read Data and B54t Flip Register 5 */
#define MTU_MC54_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00646c4u)	/* Read Data and B54t Flip Register 50 */
#define MTU_MC54_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00646c6u)	/* Read Data and B54t Flip Register 51 */
#define MTU_MC54_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00646c8u)	/* Read Data and B54t Flip Register 52 */
#define MTU_MC54_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00646cau)	/* Read Data and B54t Flip Register 53 */
#define MTU_MC54_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00646ccu)	/* Read Data and B54t Flip Register 54 */
#define MTU_MC54_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00646ceu)	/* Read Data and B54t Flip Register 55 */
#define MTU_MC54_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00646d0u)	/* Read Data and B54t Flip Register 56 */
#define MTU_MC54_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00646d2u)	/* Read Data and B54t Flip Register 57 */
#define MTU_MC54_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00646d4u)	/* Read Data and B54t Flip Register 58 */
#define MTU_MC54_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00646d6u)	/* Read Data and B54t Flip Register 59 */
#define MTU_MC54_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006466cu)	/* Read Data and B54t Flip Register 6 */
#define MTU_MC54_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00646d8u)	/* Read Data and B54t Flip Register 60 */
#define MTU_MC54_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00646dau)	/* Read Data and B54t Flip Register 61 */
#define MTU_MC54_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00646dcu)	/* Read Data and B54t Flip Register 62 */
#define MTU_MC54_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00646deu)	/* Read Data and B54t Flip Register 63 */
#define MTU_MC54_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00646e0u)	/* Read Data and B54t Flip Register 64 */
#define MTU_MC54_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00646e2u)	/* Read Data and B54t Flip Register 65 */
#define MTU_MC54_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00646e4u)	/* Read Data and B54t Flip Register 66 */
#define MTU_MC54_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006466eu)	/* Read Data and B54t Flip Register 7 */
#define MTU_MC54_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064670u)	/* Read Data and B54t Flip Register 8 */
#define MTU_MC54_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064672u)	/* Read Data and B54t Flip Register 9 */
#define MTU_MC55_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064760u)	/* Read Data and B55t Flip Register 0 */
#define MTU_MC55_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064762u)	/* Read Data and B55t Flip Register 1 */
#define MTU_MC55_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064774u)	/* Read Data and B55t Flip Register 10 */
#define MTU_MC55_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064776u)	/* Read Data and B55t Flip Register 11 */
#define MTU_MC55_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064778u)	/* Read Data and B55t Flip Register 12 */
#define MTU_MC55_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006477au)	/* Read Data and B55t Flip Register 13 */
#define MTU_MC55_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006477cu)	/* Read Data and B55t Flip Register 14 */
#define MTU_MC55_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006477eu)	/* Read Data and B55t Flip Register 15 */
#define MTU_MC55_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064780u)	/* Read Data and B55t Flip Register 16 */
#define MTU_MC55_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064782u)	/* Read Data and B55t Flip Register 17 */
#define MTU_MC55_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064784u)	/* Read Data and B55t Flip Register 18 */
#define MTU_MC55_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064786u)	/* Read Data and B55t Flip Register 19 */
#define MTU_MC55_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064764u)	/* Read Data and B55t Flip Register 2 */
#define MTU_MC55_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064788u)	/* Read Data and B55t Flip Register 20 */
#define MTU_MC55_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006478au)	/* Read Data and B55t Flip Register 21 */
#define MTU_MC55_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006478cu)	/* Read Data and B55t Flip Register 22 */
#define MTU_MC55_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006478eu)	/* Read Data and B55t Flip Register 23 */
#define MTU_MC55_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064790u)	/* Read Data and B55t Flip Register 24 */
#define MTU_MC55_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064792u)	/* Read Data and B55t Flip Register 25 */
#define MTU_MC55_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064794u)	/* Read Data and B55t Flip Register 26 */
#define MTU_MC55_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064796u)	/* Read Data and B55t Flip Register 27 */
#define MTU_MC55_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064798u)	/* Read Data and B55t Flip Register 28 */
#define MTU_MC55_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006479au)	/* Read Data and B55t Flip Register 29 */
#define MTU_MC55_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064766u)	/* Read Data and B55t Flip Register 3 */
#define MTU_MC55_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006479cu)	/* Read Data and B55t Flip Register 30 */
#define MTU_MC55_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006479eu)	/* Read Data and B55t Flip Register 31 */
#define MTU_MC55_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00647a0u)	/* Read Data and B55t Flip Register 32 */
#define MTU_MC55_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00647a2u)	/* Read Data and B55t Flip Register 33 */
#define MTU_MC55_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00647a4u)	/* Read Data and B55t Flip Register 34 */
#define MTU_MC55_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00647a6u)	/* Read Data and B55t Flip Register 35 */
#define MTU_MC55_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00647a8u)	/* Read Data and B55t Flip Register 36 */
#define MTU_MC55_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00647aau)	/* Read Data and B55t Flip Register 37 */
#define MTU_MC55_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00647acu)	/* Read Data and B55t Flip Register 38 */
#define MTU_MC55_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00647aeu)	/* Read Data and B55t Flip Register 39 */
#define MTU_MC55_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064768u)	/* Read Data and B55t Flip Register 4 */
#define MTU_MC55_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00647b0u)	/* Read Data and B55t Flip Register 40 */
#define MTU_MC55_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00647b2u)	/* Read Data and B55t Flip Register 41 */
#define MTU_MC55_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00647b4u)	/* Read Data and B55t Flip Register 42 */
#define MTU_MC55_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00647b6u)	/* Read Data and B55t Flip Register 43 */
#define MTU_MC55_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00647b8u)	/* Read Data and B55t Flip Register 44 */
#define MTU_MC55_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00647bau)	/* Read Data and B55t Flip Register 45 */
#define MTU_MC55_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00647bcu)	/* Read Data and B55t Flip Register 46 */
#define MTU_MC55_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00647beu)	/* Read Data and B55t Flip Register 47 */
#define MTU_MC55_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00647c0u)	/* Read Data and B55t Flip Register 48 */
#define MTU_MC55_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00647c2u)	/* Read Data and B55t Flip Register 49 */
#define MTU_MC55_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006476au)	/* Read Data and B55t Flip Register 5 */
#define MTU_MC55_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00647c4u)	/* Read Data and B55t Flip Register 50 */
#define MTU_MC55_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00647c6u)	/* Read Data and B55t Flip Register 51 */
#define MTU_MC55_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00647c8u)	/* Read Data and B55t Flip Register 52 */
#define MTU_MC55_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00647cau)	/* Read Data and B55t Flip Register 53 */
#define MTU_MC55_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00647ccu)	/* Read Data and B55t Flip Register 54 */
#define MTU_MC55_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00647ceu)	/* Read Data and B55t Flip Register 55 */
#define MTU_MC55_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00647d0u)	/* Read Data and B55t Flip Register 56 */
#define MTU_MC55_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00647d2u)	/* Read Data and B55t Flip Register 57 */
#define MTU_MC55_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00647d4u)	/* Read Data and B55t Flip Register 58 */
#define MTU_MC55_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00647d6u)	/* Read Data and B55t Flip Register 59 */
#define MTU_MC55_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006476cu)	/* Read Data and B55t Flip Register 6 */
#define MTU_MC55_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00647d8u)	/* Read Data and B55t Flip Register 60 */
#define MTU_MC55_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00647dau)	/* Read Data and B55t Flip Register 61 */
#define MTU_MC55_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00647dcu)	/* Read Data and B55t Flip Register 62 */
#define MTU_MC55_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00647deu)	/* Read Data and B55t Flip Register 63 */
#define MTU_MC55_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00647e0u)	/* Read Data and B55t Flip Register 64 */
#define MTU_MC55_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00647e2u)	/* Read Data and B55t Flip Register 65 */
#define MTU_MC55_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00647e4u)	/* Read Data and B55t Flip Register 66 */
#define MTU_MC55_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006476eu)	/* Read Data and B55t Flip Register 7 */
#define MTU_MC55_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064770u)	/* Read Data and B55t Flip Register 8 */
#define MTU_MC55_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064772u)	/* Read Data and B55t Flip Register 9 */
#define MTU_MC56_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064860u)	/* Read Data and B56t Flip Register 0 */
#define MTU_MC56_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064862u)	/* Read Data and B56t Flip Register 1 */
#define MTU_MC56_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064874u)	/* Read Data and B56t Flip Register 10 */
#define MTU_MC56_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064876u)	/* Read Data and B56t Flip Register 11 */
#define MTU_MC56_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064878u)	/* Read Data and B56t Flip Register 12 */
#define MTU_MC56_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006487au)	/* Read Data and B56t Flip Register 13 */
#define MTU_MC56_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006487cu)	/* Read Data and B56t Flip Register 14 */
#define MTU_MC56_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006487eu)	/* Read Data and B56t Flip Register 15 */
#define MTU_MC56_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064880u)	/* Read Data and B56t Flip Register 16 */
#define MTU_MC56_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064882u)	/* Read Data and B56t Flip Register 17 */
#define MTU_MC56_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064884u)	/* Read Data and B56t Flip Register 18 */
#define MTU_MC56_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064886u)	/* Read Data and B56t Flip Register 19 */
#define MTU_MC56_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064864u)	/* Read Data and B56t Flip Register 2 */
#define MTU_MC56_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064888u)	/* Read Data and B56t Flip Register 20 */
#define MTU_MC56_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006488au)	/* Read Data and B56t Flip Register 21 */
#define MTU_MC56_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006488cu)	/* Read Data and B56t Flip Register 22 */
#define MTU_MC56_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006488eu)	/* Read Data and B56t Flip Register 23 */
#define MTU_MC56_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064890u)	/* Read Data and B56t Flip Register 24 */
#define MTU_MC56_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064892u)	/* Read Data and B56t Flip Register 25 */
#define MTU_MC56_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064894u)	/* Read Data and B56t Flip Register 26 */
#define MTU_MC56_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064896u)	/* Read Data and B56t Flip Register 27 */
#define MTU_MC56_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064898u)	/* Read Data and B56t Flip Register 28 */
#define MTU_MC56_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006489au)	/* Read Data and B56t Flip Register 29 */
#define MTU_MC56_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064866u)	/* Read Data and B56t Flip Register 3 */
#define MTU_MC56_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006489cu)	/* Read Data and B56t Flip Register 30 */
#define MTU_MC56_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006489eu)	/* Read Data and B56t Flip Register 31 */
#define MTU_MC56_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00648a0u)	/* Read Data and B56t Flip Register 32 */
#define MTU_MC56_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00648a2u)	/* Read Data and B56t Flip Register 33 */
#define MTU_MC56_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00648a4u)	/* Read Data and B56t Flip Register 34 */
#define MTU_MC56_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00648a6u)	/* Read Data and B56t Flip Register 35 */
#define MTU_MC56_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00648a8u)	/* Read Data and B56t Flip Register 36 */
#define MTU_MC56_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00648aau)	/* Read Data and B56t Flip Register 37 */
#define MTU_MC56_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00648acu)	/* Read Data and B56t Flip Register 38 */
#define MTU_MC56_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00648aeu)	/* Read Data and B56t Flip Register 39 */
#define MTU_MC56_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064868u)	/* Read Data and B56t Flip Register 4 */
#define MTU_MC56_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00648b0u)	/* Read Data and B56t Flip Register 40 */
#define MTU_MC56_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00648b2u)	/* Read Data and B56t Flip Register 41 */
#define MTU_MC56_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00648b4u)	/* Read Data and B56t Flip Register 42 */
#define MTU_MC56_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00648b6u)	/* Read Data and B56t Flip Register 43 */
#define MTU_MC56_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00648b8u)	/* Read Data and B56t Flip Register 44 */
#define MTU_MC56_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00648bau)	/* Read Data and B56t Flip Register 45 */
#define MTU_MC56_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00648bcu)	/* Read Data and B56t Flip Register 46 */
#define MTU_MC56_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00648beu)	/* Read Data and B56t Flip Register 47 */
#define MTU_MC56_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00648c0u)	/* Read Data and B56t Flip Register 48 */
#define MTU_MC56_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00648c2u)	/* Read Data and B56t Flip Register 49 */
#define MTU_MC56_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006486au)	/* Read Data and B56t Flip Register 5 */
#define MTU_MC56_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00648c4u)	/* Read Data and B56t Flip Register 50 */
#define MTU_MC56_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00648c6u)	/* Read Data and B56t Flip Register 51 */
#define MTU_MC56_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00648c8u)	/* Read Data and B56t Flip Register 52 */
#define MTU_MC56_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00648cau)	/* Read Data and B56t Flip Register 53 */
#define MTU_MC56_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00648ccu)	/* Read Data and B56t Flip Register 54 */
#define MTU_MC56_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00648ceu)	/* Read Data and B56t Flip Register 55 */
#define MTU_MC56_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00648d0u)	/* Read Data and B56t Flip Register 56 */
#define MTU_MC56_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00648d2u)	/* Read Data and B56t Flip Register 57 */
#define MTU_MC56_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00648d4u)	/* Read Data and B56t Flip Register 58 */
#define MTU_MC56_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00648d6u)	/* Read Data and B56t Flip Register 59 */
#define MTU_MC56_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006486cu)	/* Read Data and B56t Flip Register 6 */
#define MTU_MC56_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00648d8u)	/* Read Data and B56t Flip Register 60 */
#define MTU_MC56_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00648dau)	/* Read Data and B56t Flip Register 61 */
#define MTU_MC56_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00648dcu)	/* Read Data and B56t Flip Register 62 */
#define MTU_MC56_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00648deu)	/* Read Data and B56t Flip Register 63 */
#define MTU_MC56_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00648e0u)	/* Read Data and B56t Flip Register 64 */
#define MTU_MC56_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00648e2u)	/* Read Data and B56t Flip Register 65 */
#define MTU_MC56_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00648e4u)	/* Read Data and B56t Flip Register 66 */
#define MTU_MC56_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006486eu)	/* Read Data and B56t Flip Register 7 */
#define MTU_MC56_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064870u)	/* Read Data and B56t Flip Register 8 */
#define MTU_MC56_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064872u)	/* Read Data and B56t Flip Register 9 */
#define MTU_MC57_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064960u)	/* Read Data and B57t Flip Register 0 */
#define MTU_MC57_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064962u)	/* Read Data and B57t Flip Register 1 */
#define MTU_MC57_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064974u)	/* Read Data and B57t Flip Register 10 */
#define MTU_MC57_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064976u)	/* Read Data and B57t Flip Register 11 */
#define MTU_MC57_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064978u)	/* Read Data and B57t Flip Register 12 */
#define MTU_MC57_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006497au)	/* Read Data and B57t Flip Register 13 */
#define MTU_MC57_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006497cu)	/* Read Data and B57t Flip Register 14 */
#define MTU_MC57_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006497eu)	/* Read Data and B57t Flip Register 15 */
#define MTU_MC57_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064980u)	/* Read Data and B57t Flip Register 16 */
#define MTU_MC57_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064982u)	/* Read Data and B57t Flip Register 17 */
#define MTU_MC57_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064984u)	/* Read Data and B57t Flip Register 18 */
#define MTU_MC57_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064986u)	/* Read Data and B57t Flip Register 19 */
#define MTU_MC57_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064964u)	/* Read Data and B57t Flip Register 2 */
#define MTU_MC57_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064988u)	/* Read Data and B57t Flip Register 20 */
#define MTU_MC57_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006498au)	/* Read Data and B57t Flip Register 21 */
#define MTU_MC57_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006498cu)	/* Read Data and B57t Flip Register 22 */
#define MTU_MC57_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006498eu)	/* Read Data and B57t Flip Register 23 */
#define MTU_MC57_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064990u)	/* Read Data and B57t Flip Register 24 */
#define MTU_MC57_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064992u)	/* Read Data and B57t Flip Register 25 */
#define MTU_MC57_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064994u)	/* Read Data and B57t Flip Register 26 */
#define MTU_MC57_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064996u)	/* Read Data and B57t Flip Register 27 */
#define MTU_MC57_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064998u)	/* Read Data and B57t Flip Register 28 */
#define MTU_MC57_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006499au)	/* Read Data and B57t Flip Register 29 */
#define MTU_MC57_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064966u)	/* Read Data and B57t Flip Register 3 */
#define MTU_MC57_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006499cu)	/* Read Data and B57t Flip Register 30 */
#define MTU_MC57_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006499eu)	/* Read Data and B57t Flip Register 31 */
#define MTU_MC57_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00649a0u)	/* Read Data and B57t Flip Register 32 */
#define MTU_MC57_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00649a2u)	/* Read Data and B57t Flip Register 33 */
#define MTU_MC57_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00649a4u)	/* Read Data and B57t Flip Register 34 */
#define MTU_MC57_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00649a6u)	/* Read Data and B57t Flip Register 35 */
#define MTU_MC57_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00649a8u)	/* Read Data and B57t Flip Register 36 */
#define MTU_MC57_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00649aau)	/* Read Data and B57t Flip Register 37 */
#define MTU_MC57_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00649acu)	/* Read Data and B57t Flip Register 38 */
#define MTU_MC57_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00649aeu)	/* Read Data and B57t Flip Register 39 */
#define MTU_MC57_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064968u)	/* Read Data and B57t Flip Register 4 */
#define MTU_MC57_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00649b0u)	/* Read Data and B57t Flip Register 40 */
#define MTU_MC57_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00649b2u)	/* Read Data and B57t Flip Register 41 */
#define MTU_MC57_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00649b4u)	/* Read Data and B57t Flip Register 42 */
#define MTU_MC57_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00649b6u)	/* Read Data and B57t Flip Register 43 */
#define MTU_MC57_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00649b8u)	/* Read Data and B57t Flip Register 44 */
#define MTU_MC57_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00649bau)	/* Read Data and B57t Flip Register 45 */
#define MTU_MC57_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00649bcu)	/* Read Data and B57t Flip Register 46 */
#define MTU_MC57_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00649beu)	/* Read Data and B57t Flip Register 47 */
#define MTU_MC57_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00649c0u)	/* Read Data and B57t Flip Register 48 */
#define MTU_MC57_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00649c2u)	/* Read Data and B57t Flip Register 49 */
#define MTU_MC57_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006496au)	/* Read Data and B57t Flip Register 5 */
#define MTU_MC57_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00649c4u)	/* Read Data and B57t Flip Register 50 */
#define MTU_MC57_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00649c6u)	/* Read Data and B57t Flip Register 51 */
#define MTU_MC57_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00649c8u)	/* Read Data and B57t Flip Register 52 */
#define MTU_MC57_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00649cau)	/* Read Data and B57t Flip Register 53 */
#define MTU_MC57_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00649ccu)	/* Read Data and B57t Flip Register 54 */
#define MTU_MC57_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00649ceu)	/* Read Data and B57t Flip Register 55 */
#define MTU_MC57_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00649d0u)	/* Read Data and B57t Flip Register 56 */
#define MTU_MC57_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00649d2u)	/* Read Data and B57t Flip Register 57 */
#define MTU_MC57_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00649d4u)	/* Read Data and B57t Flip Register 58 */
#define MTU_MC57_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00649d6u)	/* Read Data and B57t Flip Register 59 */
#define MTU_MC57_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006496cu)	/* Read Data and B57t Flip Register 6 */
#define MTU_MC57_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00649d8u)	/* Read Data and B57t Flip Register 60 */
#define MTU_MC57_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00649dau)	/* Read Data and B57t Flip Register 61 */
#define MTU_MC57_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00649dcu)	/* Read Data and B57t Flip Register 62 */
#define MTU_MC57_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00649deu)	/* Read Data and B57t Flip Register 63 */
#define MTU_MC57_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00649e0u)	/* Read Data and B57t Flip Register 64 */
#define MTU_MC57_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00649e2u)	/* Read Data and B57t Flip Register 65 */
#define MTU_MC57_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00649e4u)	/* Read Data and B57t Flip Register 66 */
#define MTU_MC57_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006496eu)	/* Read Data and B57t Flip Register 7 */
#define MTU_MC57_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064970u)	/* Read Data and B57t Flip Register 8 */
#define MTU_MC57_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064972u)	/* Read Data and B57t Flip Register 9 */
#define MTU_MC58_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064a60u)	/* Read Data and B58t Flip Register 0 */
#define MTU_MC58_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064a62u)	/* Read Data and B58t Flip Register 1 */
#define MTU_MC58_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064a74u)	/* Read Data and B58t Flip Register 10 */
#define MTU_MC58_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064a76u)	/* Read Data and B58t Flip Register 11 */
#define MTU_MC58_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064a78u)	/* Read Data and B58t Flip Register 12 */
#define MTU_MC58_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0064a7au)	/* Read Data and B58t Flip Register 13 */
#define MTU_MC58_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0064a7cu)	/* Read Data and B58t Flip Register 14 */
#define MTU_MC58_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0064a7eu)	/* Read Data and B58t Flip Register 15 */
#define MTU_MC58_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064a80u)	/* Read Data and B58t Flip Register 16 */
#define MTU_MC58_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064a82u)	/* Read Data and B58t Flip Register 17 */
#define MTU_MC58_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064a84u)	/* Read Data and B58t Flip Register 18 */
#define MTU_MC58_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064a86u)	/* Read Data and B58t Flip Register 19 */
#define MTU_MC58_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064a64u)	/* Read Data and B58t Flip Register 2 */
#define MTU_MC58_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064a88u)	/* Read Data and B58t Flip Register 20 */
#define MTU_MC58_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0064a8au)	/* Read Data and B58t Flip Register 21 */
#define MTU_MC58_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0064a8cu)	/* Read Data and B58t Flip Register 22 */
#define MTU_MC58_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0064a8eu)	/* Read Data and B58t Flip Register 23 */
#define MTU_MC58_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064a90u)	/* Read Data and B58t Flip Register 24 */
#define MTU_MC58_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064a92u)	/* Read Data and B58t Flip Register 25 */
#define MTU_MC58_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064a94u)	/* Read Data and B58t Flip Register 26 */
#define MTU_MC58_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064a96u)	/* Read Data and B58t Flip Register 27 */
#define MTU_MC58_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064a98u)	/* Read Data and B58t Flip Register 28 */
#define MTU_MC58_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0064a9au)	/* Read Data and B58t Flip Register 29 */
#define MTU_MC58_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064a66u)	/* Read Data and B58t Flip Register 3 */
#define MTU_MC58_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0064a9cu)	/* Read Data and B58t Flip Register 30 */
#define MTU_MC58_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0064a9eu)	/* Read Data and B58t Flip Register 31 */
#define MTU_MC58_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0064aa0u)	/* Read Data and B58t Flip Register 32 */
#define MTU_MC58_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0064aa2u)	/* Read Data and B58t Flip Register 33 */
#define MTU_MC58_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0064aa4u)	/* Read Data and B58t Flip Register 34 */
#define MTU_MC58_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0064aa6u)	/* Read Data and B58t Flip Register 35 */
#define MTU_MC58_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0064aa8u)	/* Read Data and B58t Flip Register 36 */
#define MTU_MC58_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0064aaau)	/* Read Data and B58t Flip Register 37 */
#define MTU_MC58_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0064aacu)	/* Read Data and B58t Flip Register 38 */
#define MTU_MC58_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0064aaeu)	/* Read Data and B58t Flip Register 39 */
#define MTU_MC58_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064a68u)	/* Read Data and B58t Flip Register 4 */
#define MTU_MC58_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0064ab0u)	/* Read Data and B58t Flip Register 40 */
#define MTU_MC58_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0064ab2u)	/* Read Data and B58t Flip Register 41 */
#define MTU_MC58_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0064ab4u)	/* Read Data and B58t Flip Register 42 */
#define MTU_MC58_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0064ab6u)	/* Read Data and B58t Flip Register 43 */
#define MTU_MC58_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0064ab8u)	/* Read Data and B58t Flip Register 44 */
#define MTU_MC58_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0064abau)	/* Read Data and B58t Flip Register 45 */
#define MTU_MC58_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0064abcu)	/* Read Data and B58t Flip Register 46 */
#define MTU_MC58_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0064abeu)	/* Read Data and B58t Flip Register 47 */
#define MTU_MC58_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0064ac0u)	/* Read Data and B58t Flip Register 48 */
#define MTU_MC58_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0064ac2u)	/* Read Data and B58t Flip Register 49 */
#define MTU_MC58_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0064a6au)	/* Read Data and B58t Flip Register 5 */
#define MTU_MC58_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0064ac4u)	/* Read Data and B58t Flip Register 50 */
#define MTU_MC58_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0064ac6u)	/* Read Data and B58t Flip Register 51 */
#define MTU_MC58_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0064ac8u)	/* Read Data and B58t Flip Register 52 */
#define MTU_MC58_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0064acau)	/* Read Data and B58t Flip Register 53 */
#define MTU_MC58_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0064accu)	/* Read Data and B58t Flip Register 54 */
#define MTU_MC58_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0064aceu)	/* Read Data and B58t Flip Register 55 */
#define MTU_MC58_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0064ad0u)	/* Read Data and B58t Flip Register 56 */
#define MTU_MC58_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0064ad2u)	/* Read Data and B58t Flip Register 57 */
#define MTU_MC58_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0064ad4u)	/* Read Data and B58t Flip Register 58 */
#define MTU_MC58_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0064ad6u)	/* Read Data and B58t Flip Register 59 */
#define MTU_MC58_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0064a6cu)	/* Read Data and B58t Flip Register 6 */
#define MTU_MC58_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0064ad8u)	/* Read Data and B58t Flip Register 60 */
#define MTU_MC58_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0064adau)	/* Read Data and B58t Flip Register 61 */
#define MTU_MC58_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0064adcu)	/* Read Data and B58t Flip Register 62 */
#define MTU_MC58_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0064adeu)	/* Read Data and B58t Flip Register 63 */
#define MTU_MC58_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0064ae0u)	/* Read Data and B58t Flip Register 64 */
#define MTU_MC58_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0064ae2u)	/* Read Data and B58t Flip Register 65 */
#define MTU_MC58_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0064ae4u)	/* Read Data and B58t Flip Register 66 */
#define MTU_MC58_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0064a6eu)	/* Read Data and B58t Flip Register 7 */
#define MTU_MC58_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064a70u)	/* Read Data and B58t Flip Register 8 */
#define MTU_MC58_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064a72u)	/* Read Data and B58t Flip Register 9 */
#define MTU_MC59_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064b60u)	/* Read Data and B59t Flip Register 0 */
#define MTU_MC59_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064b62u)	/* Read Data and B59t Flip Register 1 */
#define MTU_MC59_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064b74u)	/* Read Data and B59t Flip Register 10 */
#define MTU_MC59_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064b76u)	/* Read Data and B59t Flip Register 11 */
#define MTU_MC59_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064b78u)	/* Read Data and B59t Flip Register 12 */
#define MTU_MC59_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0064b7au)	/* Read Data and B59t Flip Register 13 */
#define MTU_MC59_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0064b7cu)	/* Read Data and B59t Flip Register 14 */
#define MTU_MC59_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0064b7eu)	/* Read Data and B59t Flip Register 15 */
#define MTU_MC59_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064b80u)	/* Read Data and B59t Flip Register 16 */
#define MTU_MC59_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064b82u)	/* Read Data and B59t Flip Register 17 */
#define MTU_MC59_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064b84u)	/* Read Data and B59t Flip Register 18 */
#define MTU_MC59_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064b86u)	/* Read Data and B59t Flip Register 19 */
#define MTU_MC59_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064b64u)	/* Read Data and B59t Flip Register 2 */
#define MTU_MC59_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064b88u)	/* Read Data and B59t Flip Register 20 */
#define MTU_MC59_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0064b8au)	/* Read Data and B59t Flip Register 21 */
#define MTU_MC59_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0064b8cu)	/* Read Data and B59t Flip Register 22 */
#define MTU_MC59_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0064b8eu)	/* Read Data and B59t Flip Register 23 */
#define MTU_MC59_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064b90u)	/* Read Data and B59t Flip Register 24 */
#define MTU_MC59_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064b92u)	/* Read Data and B59t Flip Register 25 */
#define MTU_MC59_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064b94u)	/* Read Data and B59t Flip Register 26 */
#define MTU_MC59_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064b96u)	/* Read Data and B59t Flip Register 27 */
#define MTU_MC59_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064b98u)	/* Read Data and B59t Flip Register 28 */
#define MTU_MC59_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0064b9au)	/* Read Data and B59t Flip Register 29 */
#define MTU_MC59_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064b66u)	/* Read Data and B59t Flip Register 3 */
#define MTU_MC59_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0064b9cu)	/* Read Data and B59t Flip Register 30 */
#define MTU_MC59_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0064b9eu)	/* Read Data and B59t Flip Register 31 */
#define MTU_MC59_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0064ba0u)	/* Read Data and B59t Flip Register 32 */
#define MTU_MC59_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0064ba2u)	/* Read Data and B59t Flip Register 33 */
#define MTU_MC59_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0064ba4u)	/* Read Data and B59t Flip Register 34 */
#define MTU_MC59_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0064ba6u)	/* Read Data and B59t Flip Register 35 */
#define MTU_MC59_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0064ba8u)	/* Read Data and B59t Flip Register 36 */
#define MTU_MC59_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0064baau)	/* Read Data and B59t Flip Register 37 */
#define MTU_MC59_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0064bacu)	/* Read Data and B59t Flip Register 38 */
#define MTU_MC59_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0064baeu)	/* Read Data and B59t Flip Register 39 */
#define MTU_MC59_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064b68u)	/* Read Data and B59t Flip Register 4 */
#define MTU_MC59_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0064bb0u)	/* Read Data and B59t Flip Register 40 */
#define MTU_MC59_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0064bb2u)	/* Read Data and B59t Flip Register 41 */
#define MTU_MC59_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0064bb4u)	/* Read Data and B59t Flip Register 42 */
#define MTU_MC59_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0064bb6u)	/* Read Data and B59t Flip Register 43 */
#define MTU_MC59_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0064bb8u)	/* Read Data and B59t Flip Register 44 */
#define MTU_MC59_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0064bbau)	/* Read Data and B59t Flip Register 45 */
#define MTU_MC59_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0064bbcu)	/* Read Data and B59t Flip Register 46 */
#define MTU_MC59_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0064bbeu)	/* Read Data and B59t Flip Register 47 */
#define MTU_MC59_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0064bc0u)	/* Read Data and B59t Flip Register 48 */
#define MTU_MC59_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0064bc2u)	/* Read Data and B59t Flip Register 49 */
#define MTU_MC59_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0064b6au)	/* Read Data and B59t Flip Register 5 */
#define MTU_MC59_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0064bc4u)	/* Read Data and B59t Flip Register 50 */
#define MTU_MC59_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0064bc6u)	/* Read Data and B59t Flip Register 51 */
#define MTU_MC59_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0064bc8u)	/* Read Data and B59t Flip Register 52 */
#define MTU_MC59_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0064bcau)	/* Read Data and B59t Flip Register 53 */
#define MTU_MC59_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0064bccu)	/* Read Data and B59t Flip Register 54 */
#define MTU_MC59_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0064bceu)	/* Read Data and B59t Flip Register 55 */
#define MTU_MC59_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0064bd0u)	/* Read Data and B59t Flip Register 56 */
#define MTU_MC59_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0064bd2u)	/* Read Data and B59t Flip Register 57 */
#define MTU_MC59_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0064bd4u)	/* Read Data and B59t Flip Register 58 */
#define MTU_MC59_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0064bd6u)	/* Read Data and B59t Flip Register 59 */
#define MTU_MC59_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0064b6cu)	/* Read Data and B59t Flip Register 6 */
#define MTU_MC59_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0064bd8u)	/* Read Data and B59t Flip Register 60 */
#define MTU_MC59_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0064bdau)	/* Read Data and B59t Flip Register 61 */
#define MTU_MC59_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0064bdcu)	/* Read Data and B59t Flip Register 62 */
#define MTU_MC59_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0064bdeu)	/* Read Data and B59t Flip Register 63 */
#define MTU_MC59_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0064be0u)	/* Read Data and B59t Flip Register 64 */
#define MTU_MC59_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0064be2u)	/* Read Data and B59t Flip Register 65 */
#define MTU_MC59_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0064be4u)	/* Read Data and B59t Flip Register 66 */
#define MTU_MC59_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0064b6eu)	/* Read Data and B59t Flip Register 7 */
#define MTU_MC59_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064b70u)	/* Read Data and B59t Flip Register 8 */
#define MTU_MC59_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064b72u)	/* Read Data and B59t Flip Register 9 */
#define MTU_MC5_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061560u)	/* Read Data and B5t Flip Register 0 */
#define MTU_MC5_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061562u)	/* Read Data and B5t Flip Register 1 */
#define MTU_MC5_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061574u)	/* Read Data and B5t Flip Register 10 */
#define MTU_MC5_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061576u)	/* Read Data and B5t Flip Register 11 */
#define MTU_MC5_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061578u)	/* Read Data and B5t Flip Register 12 */
#define MTU_MC5_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006157au)	/* Read Data and B5t Flip Register 13 */
#define MTU_MC5_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006157cu)	/* Read Data and B5t Flip Register 14 */
#define MTU_MC5_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006157eu)	/* Read Data and B5t Flip Register 15 */
#define MTU_MC5_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061580u)	/* Read Data and B5t Flip Register 16 */
#define MTU_MC5_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061582u)	/* Read Data and B5t Flip Register 17 */
#define MTU_MC5_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061584u)	/* Read Data and B5t Flip Register 18 */
#define MTU_MC5_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061586u)	/* Read Data and B5t Flip Register 19 */
#define MTU_MC5_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061564u)	/* Read Data and B5t Flip Register 2 */
#define MTU_MC5_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061588u)	/* Read Data and B5t Flip Register 20 */
#define MTU_MC5_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006158au)	/* Read Data and B5t Flip Register 21 */
#define MTU_MC5_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006158cu)	/* Read Data and B5t Flip Register 22 */
#define MTU_MC5_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006158eu)	/* Read Data and B5t Flip Register 23 */
#define MTU_MC5_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061590u)	/* Read Data and B5t Flip Register 24 */
#define MTU_MC5_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061592u)	/* Read Data and B5t Flip Register 25 */
#define MTU_MC5_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061594u)	/* Read Data and B5t Flip Register 26 */
#define MTU_MC5_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061596u)	/* Read Data and B5t Flip Register 27 */
#define MTU_MC5_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061598u)	/* Read Data and B5t Flip Register 28 */
#define MTU_MC5_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006159au)	/* Read Data and B5t Flip Register 29 */
#define MTU_MC5_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061566u)	/* Read Data and B5t Flip Register 3 */
#define MTU_MC5_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006159cu)	/* Read Data and B5t Flip Register 30 */
#define MTU_MC5_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006159eu)	/* Read Data and B5t Flip Register 31 */
#define MTU_MC5_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00615a0u)	/* Read Data and B5t Flip Register 32 */
#define MTU_MC5_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00615a2u)	/* Read Data and B5t Flip Register 33 */
#define MTU_MC5_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00615a4u)	/* Read Data and B5t Flip Register 34 */
#define MTU_MC5_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00615a6u)	/* Read Data and B5t Flip Register 35 */
#define MTU_MC5_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00615a8u)	/* Read Data and B5t Flip Register 36 */
#define MTU_MC5_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00615aau)	/* Read Data and B5t Flip Register 37 */
#define MTU_MC5_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00615acu)	/* Read Data and B5t Flip Register 38 */
#define MTU_MC5_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00615aeu)	/* Read Data and B5t Flip Register 39 */
#define MTU_MC5_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061568u)	/* Read Data and B5t Flip Register 4 */
#define MTU_MC5_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00615b0u)	/* Read Data and B5t Flip Register 40 */
#define MTU_MC5_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00615b2u)	/* Read Data and B5t Flip Register 41 */
#define MTU_MC5_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00615b4u)	/* Read Data and B5t Flip Register 42 */
#define MTU_MC5_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00615b6u)	/* Read Data and B5t Flip Register 43 */
#define MTU_MC5_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00615b8u)	/* Read Data and B5t Flip Register 44 */
#define MTU_MC5_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00615bau)	/* Read Data and B5t Flip Register 45 */
#define MTU_MC5_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00615bcu)	/* Read Data and B5t Flip Register 46 */
#define MTU_MC5_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00615beu)	/* Read Data and B5t Flip Register 47 */
#define MTU_MC5_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00615c0u)	/* Read Data and B5t Flip Register 48 */
#define MTU_MC5_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00615c2u)	/* Read Data and B5t Flip Register 49 */
#define MTU_MC5_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006156au)	/* Read Data and B5t Flip Register 5 */
#define MTU_MC5_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00615c4u)	/* Read Data and B5t Flip Register 50 */
#define MTU_MC5_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00615c6u)	/* Read Data and B5t Flip Register 51 */
#define MTU_MC5_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00615c8u)	/* Read Data and B5t Flip Register 52 */
#define MTU_MC5_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00615cau)	/* Read Data and B5t Flip Register 53 */
#define MTU_MC5_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00615ccu)	/* Read Data and B5t Flip Register 54 */
#define MTU_MC5_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00615ceu)	/* Read Data and B5t Flip Register 55 */
#define MTU_MC5_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00615d0u)	/* Read Data and B5t Flip Register 56 */
#define MTU_MC5_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00615d2u)	/* Read Data and B5t Flip Register 57 */
#define MTU_MC5_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00615d4u)	/* Read Data and B5t Flip Register 58 */
#define MTU_MC5_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00615d6u)	/* Read Data and B5t Flip Register 59 */
#define MTU_MC5_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006156cu)	/* Read Data and B5t Flip Register 6 */
#define MTU_MC5_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00615d8u)	/* Read Data and B5t Flip Register 60 */
#define MTU_MC5_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00615dau)	/* Read Data and B5t Flip Register 61 */
#define MTU_MC5_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00615dcu)	/* Read Data and B5t Flip Register 62 */
#define MTU_MC5_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00615deu)	/* Read Data and B5t Flip Register 63 */
#define MTU_MC5_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00615e0u)	/* Read Data and B5t Flip Register 64 */
#define MTU_MC5_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00615e2u)	/* Read Data and B5t Flip Register 65 */
#define MTU_MC5_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00615e4u)	/* Read Data and B5t Flip Register 66 */
#define MTU_MC5_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006156eu)	/* Read Data and B5t Flip Register 7 */
#define MTU_MC5_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061570u)	/* Read Data and B5t Flip Register 8 */
#define MTU_MC5_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061572u)	/* Read Data and B5t Flip Register 9 */
#define MTU_MC60_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064c60u)	/* Read Data and B60t Flip Register 0 */
#define MTU_MC60_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064c62u)	/* Read Data and B60t Flip Register 1 */
#define MTU_MC60_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064c74u)	/* Read Data and B60t Flip Register 10 */
#define MTU_MC60_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064c76u)	/* Read Data and B60t Flip Register 11 */
#define MTU_MC60_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064c78u)	/* Read Data and B60t Flip Register 12 */
#define MTU_MC60_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0064c7au)	/* Read Data and B60t Flip Register 13 */
#define MTU_MC60_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0064c7cu)	/* Read Data and B60t Flip Register 14 */
#define MTU_MC60_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0064c7eu)	/* Read Data and B60t Flip Register 15 */
#define MTU_MC60_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064c80u)	/* Read Data and B60t Flip Register 16 */
#define MTU_MC60_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064c82u)	/* Read Data and B60t Flip Register 17 */
#define MTU_MC60_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064c84u)	/* Read Data and B60t Flip Register 18 */
#define MTU_MC60_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064c86u)	/* Read Data and B60t Flip Register 19 */
#define MTU_MC60_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064c64u)	/* Read Data and B60t Flip Register 2 */
#define MTU_MC60_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064c88u)	/* Read Data and B60t Flip Register 20 */
#define MTU_MC60_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0064c8au)	/* Read Data and B60t Flip Register 21 */
#define MTU_MC60_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0064c8cu)	/* Read Data and B60t Flip Register 22 */
#define MTU_MC60_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0064c8eu)	/* Read Data and B60t Flip Register 23 */
#define MTU_MC60_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064c90u)	/* Read Data and B60t Flip Register 24 */
#define MTU_MC60_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064c92u)	/* Read Data and B60t Flip Register 25 */
#define MTU_MC60_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064c94u)	/* Read Data and B60t Flip Register 26 */
#define MTU_MC60_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064c96u)	/* Read Data and B60t Flip Register 27 */
#define MTU_MC60_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064c98u)	/* Read Data and B60t Flip Register 28 */
#define MTU_MC60_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0064c9au)	/* Read Data and B60t Flip Register 29 */
#define MTU_MC60_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064c66u)	/* Read Data and B60t Flip Register 3 */
#define MTU_MC60_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0064c9cu)	/* Read Data and B60t Flip Register 30 */
#define MTU_MC60_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0064c9eu)	/* Read Data and B60t Flip Register 31 */
#define MTU_MC60_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0064ca0u)	/* Read Data and B60t Flip Register 32 */
#define MTU_MC60_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0064ca2u)	/* Read Data and B60t Flip Register 33 */
#define MTU_MC60_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0064ca4u)	/* Read Data and B60t Flip Register 34 */
#define MTU_MC60_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0064ca6u)	/* Read Data and B60t Flip Register 35 */
#define MTU_MC60_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0064ca8u)	/* Read Data and B60t Flip Register 36 */
#define MTU_MC60_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0064caau)	/* Read Data and B60t Flip Register 37 */
#define MTU_MC60_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0064cacu)	/* Read Data and B60t Flip Register 38 */
#define MTU_MC60_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0064caeu)	/* Read Data and B60t Flip Register 39 */
#define MTU_MC60_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064c68u)	/* Read Data and B60t Flip Register 4 */
#define MTU_MC60_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0064cb0u)	/* Read Data and B60t Flip Register 40 */
#define MTU_MC60_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0064cb2u)	/* Read Data and B60t Flip Register 41 */
#define MTU_MC60_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0064cb4u)	/* Read Data and B60t Flip Register 42 */
#define MTU_MC60_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0064cb6u)	/* Read Data and B60t Flip Register 43 */
#define MTU_MC60_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0064cb8u)	/* Read Data and B60t Flip Register 44 */
#define MTU_MC60_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0064cbau)	/* Read Data and B60t Flip Register 45 */
#define MTU_MC60_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0064cbcu)	/* Read Data and B60t Flip Register 46 */
#define MTU_MC60_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0064cbeu)	/* Read Data and B60t Flip Register 47 */
#define MTU_MC60_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0064cc0u)	/* Read Data and B60t Flip Register 48 */
#define MTU_MC60_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0064cc2u)	/* Read Data and B60t Flip Register 49 */
#define MTU_MC60_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0064c6au)	/* Read Data and B60t Flip Register 5 */
#define MTU_MC60_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0064cc4u)	/* Read Data and B60t Flip Register 50 */
#define MTU_MC60_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0064cc6u)	/* Read Data and B60t Flip Register 51 */
#define MTU_MC60_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0064cc8u)	/* Read Data and B60t Flip Register 52 */
#define MTU_MC60_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0064ccau)	/* Read Data and B60t Flip Register 53 */
#define MTU_MC60_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0064cccu)	/* Read Data and B60t Flip Register 54 */
#define MTU_MC60_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0064cceu)	/* Read Data and B60t Flip Register 55 */
#define MTU_MC60_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0064cd0u)	/* Read Data and B60t Flip Register 56 */
#define MTU_MC60_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0064cd2u)	/* Read Data and B60t Flip Register 57 */
#define MTU_MC60_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0064cd4u)	/* Read Data and B60t Flip Register 58 */
#define MTU_MC60_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0064cd6u)	/* Read Data and B60t Flip Register 59 */
#define MTU_MC60_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0064c6cu)	/* Read Data and B60t Flip Register 6 */
#define MTU_MC60_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0064cd8u)	/* Read Data and B60t Flip Register 60 */
#define MTU_MC60_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0064cdau)	/* Read Data and B60t Flip Register 61 */
#define MTU_MC60_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0064cdcu)	/* Read Data and B60t Flip Register 62 */
#define MTU_MC60_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0064cdeu)	/* Read Data and B60t Flip Register 63 */
#define MTU_MC60_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0064ce0u)	/* Read Data and B60t Flip Register 64 */
#define MTU_MC60_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0064ce2u)	/* Read Data and B60t Flip Register 65 */
#define MTU_MC60_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0064ce4u)	/* Read Data and B60t Flip Register 66 */
#define MTU_MC60_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0064c6eu)	/* Read Data and B60t Flip Register 7 */
#define MTU_MC60_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064c70u)	/* Read Data and B60t Flip Register 8 */
#define MTU_MC60_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064c72u)	/* Read Data and B60t Flip Register 9 */
#define MTU_MC61_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064d60u)	/* Read Data and B61t Flip Register 0 */
#define MTU_MC61_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064d62u)	/* Read Data and B61t Flip Register 1 */
#define MTU_MC61_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064d74u)	/* Read Data and B61t Flip Register 10 */
#define MTU_MC61_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064d76u)	/* Read Data and B61t Flip Register 11 */
#define MTU_MC61_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064d78u)	/* Read Data and B61t Flip Register 12 */
#define MTU_MC61_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0064d7au)	/* Read Data and B61t Flip Register 13 */
#define MTU_MC61_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0064d7cu)	/* Read Data and B61t Flip Register 14 */
#define MTU_MC61_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0064d7eu)	/* Read Data and B61t Flip Register 15 */
#define MTU_MC61_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064d80u)	/* Read Data and B61t Flip Register 16 */
#define MTU_MC61_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064d82u)	/* Read Data and B61t Flip Register 17 */
#define MTU_MC61_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064d84u)	/* Read Data and B61t Flip Register 18 */
#define MTU_MC61_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064d86u)	/* Read Data and B61t Flip Register 19 */
#define MTU_MC61_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064d64u)	/* Read Data and B61t Flip Register 2 */
#define MTU_MC61_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064d88u)	/* Read Data and B61t Flip Register 20 */
#define MTU_MC61_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0064d8au)	/* Read Data and B61t Flip Register 21 */
#define MTU_MC61_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0064d8cu)	/* Read Data and B61t Flip Register 22 */
#define MTU_MC61_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0064d8eu)	/* Read Data and B61t Flip Register 23 */
#define MTU_MC61_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064d90u)	/* Read Data and B61t Flip Register 24 */
#define MTU_MC61_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064d92u)	/* Read Data and B61t Flip Register 25 */
#define MTU_MC61_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064d94u)	/* Read Data and B61t Flip Register 26 */
#define MTU_MC61_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064d96u)	/* Read Data and B61t Flip Register 27 */
#define MTU_MC61_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064d98u)	/* Read Data and B61t Flip Register 28 */
#define MTU_MC61_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0064d9au)	/* Read Data and B61t Flip Register 29 */
#define MTU_MC61_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064d66u)	/* Read Data and B61t Flip Register 3 */
#define MTU_MC61_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0064d9cu)	/* Read Data and B61t Flip Register 30 */
#define MTU_MC61_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0064d9eu)	/* Read Data and B61t Flip Register 31 */
#define MTU_MC61_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0064da0u)	/* Read Data and B61t Flip Register 32 */
#define MTU_MC61_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0064da2u)	/* Read Data and B61t Flip Register 33 */
#define MTU_MC61_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0064da4u)	/* Read Data and B61t Flip Register 34 */
#define MTU_MC61_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0064da6u)	/* Read Data and B61t Flip Register 35 */
#define MTU_MC61_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0064da8u)	/* Read Data and B61t Flip Register 36 */
#define MTU_MC61_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0064daau)	/* Read Data and B61t Flip Register 37 */
#define MTU_MC61_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0064dacu)	/* Read Data and B61t Flip Register 38 */
#define MTU_MC61_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0064daeu)	/* Read Data and B61t Flip Register 39 */
#define MTU_MC61_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064d68u)	/* Read Data and B61t Flip Register 4 */
#define MTU_MC61_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0064db0u)	/* Read Data and B61t Flip Register 40 */
#define MTU_MC61_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0064db2u)	/* Read Data and B61t Flip Register 41 */
#define MTU_MC61_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0064db4u)	/* Read Data and B61t Flip Register 42 */
#define MTU_MC61_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0064db6u)	/* Read Data and B61t Flip Register 43 */
#define MTU_MC61_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0064db8u)	/* Read Data and B61t Flip Register 44 */
#define MTU_MC61_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0064dbau)	/* Read Data and B61t Flip Register 45 */
#define MTU_MC61_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0064dbcu)	/* Read Data and B61t Flip Register 46 */
#define MTU_MC61_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0064dbeu)	/* Read Data and B61t Flip Register 47 */
#define MTU_MC61_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0064dc0u)	/* Read Data and B61t Flip Register 48 */
#define MTU_MC61_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0064dc2u)	/* Read Data and B61t Flip Register 49 */
#define MTU_MC61_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0064d6au)	/* Read Data and B61t Flip Register 5 */
#define MTU_MC61_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0064dc4u)	/* Read Data and B61t Flip Register 50 */
#define MTU_MC61_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0064dc6u)	/* Read Data and B61t Flip Register 51 */
#define MTU_MC61_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0064dc8u)	/* Read Data and B61t Flip Register 52 */
#define MTU_MC61_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0064dcau)	/* Read Data and B61t Flip Register 53 */
#define MTU_MC61_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0064dccu)	/* Read Data and B61t Flip Register 54 */
#define MTU_MC61_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0064dceu)	/* Read Data and B61t Flip Register 55 */
#define MTU_MC61_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0064dd0u)	/* Read Data and B61t Flip Register 56 */
#define MTU_MC61_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0064dd2u)	/* Read Data and B61t Flip Register 57 */
#define MTU_MC61_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0064dd4u)	/* Read Data and B61t Flip Register 58 */
#define MTU_MC61_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0064dd6u)	/* Read Data and B61t Flip Register 59 */
#define MTU_MC61_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0064d6cu)	/* Read Data and B61t Flip Register 6 */
#define MTU_MC61_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0064dd8u)	/* Read Data and B61t Flip Register 60 */
#define MTU_MC61_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0064ddau)	/* Read Data and B61t Flip Register 61 */
#define MTU_MC61_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0064ddcu)	/* Read Data and B61t Flip Register 62 */
#define MTU_MC61_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0064ddeu)	/* Read Data and B61t Flip Register 63 */
#define MTU_MC61_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0064de0u)	/* Read Data and B61t Flip Register 64 */
#define MTU_MC61_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0064de2u)	/* Read Data and B61t Flip Register 65 */
#define MTU_MC61_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0064de4u)	/* Read Data and B61t Flip Register 66 */
#define MTU_MC61_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0064d6eu)	/* Read Data and B61t Flip Register 7 */
#define MTU_MC61_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064d70u)	/* Read Data and B61t Flip Register 8 */
#define MTU_MC61_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064d72u)	/* Read Data and B61t Flip Register 9 */
#define MTU_MC62_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064e60u)	/* Read Data and B62t Flip Register 0 */
#define MTU_MC62_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064e62u)	/* Read Data and B62t Flip Register 1 */
#define MTU_MC62_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064e74u)	/* Read Data and B62t Flip Register 10 */
#define MTU_MC62_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064e76u)	/* Read Data and B62t Flip Register 11 */
#define MTU_MC62_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064e78u)	/* Read Data and B62t Flip Register 12 */
#define MTU_MC62_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0064e7au)	/* Read Data and B62t Flip Register 13 */
#define MTU_MC62_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0064e7cu)	/* Read Data and B62t Flip Register 14 */
#define MTU_MC62_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0064e7eu)	/* Read Data and B62t Flip Register 15 */
#define MTU_MC62_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064e80u)	/* Read Data and B62t Flip Register 16 */
#define MTU_MC62_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064e82u)	/* Read Data and B62t Flip Register 17 */
#define MTU_MC62_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064e84u)	/* Read Data and B62t Flip Register 18 */
#define MTU_MC62_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064e86u)	/* Read Data and B62t Flip Register 19 */
#define MTU_MC62_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064e64u)	/* Read Data and B62t Flip Register 2 */
#define MTU_MC62_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064e88u)	/* Read Data and B62t Flip Register 20 */
#define MTU_MC62_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0064e8au)	/* Read Data and B62t Flip Register 21 */
#define MTU_MC62_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0064e8cu)	/* Read Data and B62t Flip Register 22 */
#define MTU_MC62_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0064e8eu)	/* Read Data and B62t Flip Register 23 */
#define MTU_MC62_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064e90u)	/* Read Data and B62t Flip Register 24 */
#define MTU_MC62_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064e92u)	/* Read Data and B62t Flip Register 25 */
#define MTU_MC62_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064e94u)	/* Read Data and B62t Flip Register 26 */
#define MTU_MC62_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064e96u)	/* Read Data and B62t Flip Register 27 */
#define MTU_MC62_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064e98u)	/* Read Data and B62t Flip Register 28 */
#define MTU_MC62_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0064e9au)	/* Read Data and B62t Flip Register 29 */
#define MTU_MC62_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064e66u)	/* Read Data and B62t Flip Register 3 */
#define MTU_MC62_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0064e9cu)	/* Read Data and B62t Flip Register 30 */
#define MTU_MC62_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0064e9eu)	/* Read Data and B62t Flip Register 31 */
#define MTU_MC62_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0064ea0u)	/* Read Data and B62t Flip Register 32 */
#define MTU_MC62_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0064ea2u)	/* Read Data and B62t Flip Register 33 */
#define MTU_MC62_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0064ea4u)	/* Read Data and B62t Flip Register 34 */
#define MTU_MC62_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0064ea6u)	/* Read Data and B62t Flip Register 35 */
#define MTU_MC62_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0064ea8u)	/* Read Data and B62t Flip Register 36 */
#define MTU_MC62_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0064eaau)	/* Read Data and B62t Flip Register 37 */
#define MTU_MC62_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0064eacu)	/* Read Data and B62t Flip Register 38 */
#define MTU_MC62_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0064eaeu)	/* Read Data and B62t Flip Register 39 */
#define MTU_MC62_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064e68u)	/* Read Data and B62t Flip Register 4 */
#define MTU_MC62_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0064eb0u)	/* Read Data and B62t Flip Register 40 */
#define MTU_MC62_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0064eb2u)	/* Read Data and B62t Flip Register 41 */
#define MTU_MC62_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0064eb4u)	/* Read Data and B62t Flip Register 42 */
#define MTU_MC62_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0064eb6u)	/* Read Data and B62t Flip Register 43 */
#define MTU_MC62_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0064eb8u)	/* Read Data and B62t Flip Register 44 */
#define MTU_MC62_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0064ebau)	/* Read Data and B62t Flip Register 45 */
#define MTU_MC62_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0064ebcu)	/* Read Data and B62t Flip Register 46 */
#define MTU_MC62_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0064ebeu)	/* Read Data and B62t Flip Register 47 */
#define MTU_MC62_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0064ec0u)	/* Read Data and B62t Flip Register 48 */
#define MTU_MC62_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0064ec2u)	/* Read Data and B62t Flip Register 49 */
#define MTU_MC62_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0064e6au)	/* Read Data and B62t Flip Register 5 */
#define MTU_MC62_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0064ec4u)	/* Read Data and B62t Flip Register 50 */
#define MTU_MC62_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0064ec6u)	/* Read Data and B62t Flip Register 51 */
#define MTU_MC62_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0064ec8u)	/* Read Data and B62t Flip Register 52 */
#define MTU_MC62_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0064ecau)	/* Read Data and B62t Flip Register 53 */
#define MTU_MC62_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0064eccu)	/* Read Data and B62t Flip Register 54 */
#define MTU_MC62_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0064eceu)	/* Read Data and B62t Flip Register 55 */
#define MTU_MC62_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0064ed0u)	/* Read Data and B62t Flip Register 56 */
#define MTU_MC62_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0064ed2u)	/* Read Data and B62t Flip Register 57 */
#define MTU_MC62_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0064ed4u)	/* Read Data and B62t Flip Register 58 */
#define MTU_MC62_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0064ed6u)	/* Read Data and B62t Flip Register 59 */
#define MTU_MC62_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0064e6cu)	/* Read Data and B62t Flip Register 6 */
#define MTU_MC62_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0064ed8u)	/* Read Data and B62t Flip Register 60 */
#define MTU_MC62_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0064edau)	/* Read Data and B62t Flip Register 61 */
#define MTU_MC62_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0064edcu)	/* Read Data and B62t Flip Register 62 */
#define MTU_MC62_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0064edeu)	/* Read Data and B62t Flip Register 63 */
#define MTU_MC62_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0064ee0u)	/* Read Data and B62t Flip Register 64 */
#define MTU_MC62_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0064ee2u)	/* Read Data and B62t Flip Register 65 */
#define MTU_MC62_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0064ee4u)	/* Read Data and B62t Flip Register 66 */
#define MTU_MC62_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0064e6eu)	/* Read Data and B62t Flip Register 7 */
#define MTU_MC62_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064e70u)	/* Read Data and B62t Flip Register 8 */
#define MTU_MC62_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064e72u)	/* Read Data and B62t Flip Register 9 */
#define MTU_MC63_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0064f60u)	/* Read Data and B63t Flip Register 0 */
#define MTU_MC63_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0064f62u)	/* Read Data and B63t Flip Register 1 */
#define MTU_MC63_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0064f74u)	/* Read Data and B63t Flip Register 10 */
#define MTU_MC63_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0064f76u)	/* Read Data and B63t Flip Register 11 */
#define MTU_MC63_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0064f78u)	/* Read Data and B63t Flip Register 12 */
#define MTU_MC63_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0064f7au)	/* Read Data and B63t Flip Register 13 */
#define MTU_MC63_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0064f7cu)	/* Read Data and B63t Flip Register 14 */
#define MTU_MC63_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0064f7eu)	/* Read Data and B63t Flip Register 15 */
#define MTU_MC63_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0064f80u)	/* Read Data and B63t Flip Register 16 */
#define MTU_MC63_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0064f82u)	/* Read Data and B63t Flip Register 17 */
#define MTU_MC63_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0064f84u)	/* Read Data and B63t Flip Register 18 */
#define MTU_MC63_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0064f86u)	/* Read Data and B63t Flip Register 19 */
#define MTU_MC63_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0064f64u)	/* Read Data and B63t Flip Register 2 */
#define MTU_MC63_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0064f88u)	/* Read Data and B63t Flip Register 20 */
#define MTU_MC63_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0064f8au)	/* Read Data and B63t Flip Register 21 */
#define MTU_MC63_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0064f8cu)	/* Read Data and B63t Flip Register 22 */
#define MTU_MC63_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0064f8eu)	/* Read Data and B63t Flip Register 23 */
#define MTU_MC63_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0064f90u)	/* Read Data and B63t Flip Register 24 */
#define MTU_MC63_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0064f92u)	/* Read Data and B63t Flip Register 25 */
#define MTU_MC63_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0064f94u)	/* Read Data and B63t Flip Register 26 */
#define MTU_MC63_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0064f96u)	/* Read Data and B63t Flip Register 27 */
#define MTU_MC63_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0064f98u)	/* Read Data and B63t Flip Register 28 */
#define MTU_MC63_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0064f9au)	/* Read Data and B63t Flip Register 29 */
#define MTU_MC63_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0064f66u)	/* Read Data and B63t Flip Register 3 */
#define MTU_MC63_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0064f9cu)	/* Read Data and B63t Flip Register 30 */
#define MTU_MC63_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0064f9eu)	/* Read Data and B63t Flip Register 31 */
#define MTU_MC63_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0064fa0u)	/* Read Data and B63t Flip Register 32 */
#define MTU_MC63_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0064fa2u)	/* Read Data and B63t Flip Register 33 */
#define MTU_MC63_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0064fa4u)	/* Read Data and B63t Flip Register 34 */
#define MTU_MC63_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0064fa6u)	/* Read Data and B63t Flip Register 35 */
#define MTU_MC63_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0064fa8u)	/* Read Data and B63t Flip Register 36 */
#define MTU_MC63_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0064faau)	/* Read Data and B63t Flip Register 37 */
#define MTU_MC63_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0064facu)	/* Read Data and B63t Flip Register 38 */
#define MTU_MC63_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0064faeu)	/* Read Data and B63t Flip Register 39 */
#define MTU_MC63_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0064f68u)	/* Read Data and B63t Flip Register 4 */
#define MTU_MC63_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0064fb0u)	/* Read Data and B63t Flip Register 40 */
#define MTU_MC63_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0064fb2u)	/* Read Data and B63t Flip Register 41 */
#define MTU_MC63_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0064fb4u)	/* Read Data and B63t Flip Register 42 */
#define MTU_MC63_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0064fb6u)	/* Read Data and B63t Flip Register 43 */
#define MTU_MC63_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0064fb8u)	/* Read Data and B63t Flip Register 44 */
#define MTU_MC63_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0064fbau)	/* Read Data and B63t Flip Register 45 */
#define MTU_MC63_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0064fbcu)	/* Read Data and B63t Flip Register 46 */
#define MTU_MC63_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0064fbeu)	/* Read Data and B63t Flip Register 47 */
#define MTU_MC63_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0064fc0u)	/* Read Data and B63t Flip Register 48 */
#define MTU_MC63_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0064fc2u)	/* Read Data and B63t Flip Register 49 */
#define MTU_MC63_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0064f6au)	/* Read Data and B63t Flip Register 5 */
#define MTU_MC63_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0064fc4u)	/* Read Data and B63t Flip Register 50 */
#define MTU_MC63_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0064fc6u)	/* Read Data and B63t Flip Register 51 */
#define MTU_MC63_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0064fc8u)	/* Read Data and B63t Flip Register 52 */
#define MTU_MC63_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0064fcau)	/* Read Data and B63t Flip Register 53 */
#define MTU_MC63_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0064fccu)	/* Read Data and B63t Flip Register 54 */
#define MTU_MC63_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0064fceu)	/* Read Data and B63t Flip Register 55 */
#define MTU_MC63_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0064fd0u)	/* Read Data and B63t Flip Register 56 */
#define MTU_MC63_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0064fd2u)	/* Read Data and B63t Flip Register 57 */
#define MTU_MC63_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0064fd4u)	/* Read Data and B63t Flip Register 58 */
#define MTU_MC63_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0064fd6u)	/* Read Data and B63t Flip Register 59 */
#define MTU_MC63_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0064f6cu)	/* Read Data and B63t Flip Register 6 */
#define MTU_MC63_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0064fd8u)	/* Read Data and B63t Flip Register 60 */
#define MTU_MC63_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0064fdau)	/* Read Data and B63t Flip Register 61 */
#define MTU_MC63_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0064fdcu)	/* Read Data and B63t Flip Register 62 */
#define MTU_MC63_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0064fdeu)	/* Read Data and B63t Flip Register 63 */
#define MTU_MC63_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0064fe0u)	/* Read Data and B63t Flip Register 64 */
#define MTU_MC63_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0064fe2u)	/* Read Data and B63t Flip Register 65 */
#define MTU_MC63_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0064fe4u)	/* Read Data and B63t Flip Register 66 */
#define MTU_MC63_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0064f6eu)	/* Read Data and B63t Flip Register 7 */
#define MTU_MC63_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0064f70u)	/* Read Data and B63t Flip Register 8 */
#define MTU_MC63_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0064f72u)	/* Read Data and B63t Flip Register 9 */
#define MTU_MC64_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065060u)	/* Read Data and B64t Flip Register 0 */
#define MTU_MC64_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065062u)	/* Read Data and B64t Flip Register 1 */
#define MTU_MC64_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065074u)	/* Read Data and B64t Flip Register 10 */
#define MTU_MC64_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065076u)	/* Read Data and B64t Flip Register 11 */
#define MTU_MC64_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065078u)	/* Read Data and B64t Flip Register 12 */
#define MTU_MC64_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006507au)	/* Read Data and B64t Flip Register 13 */
#define MTU_MC64_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006507cu)	/* Read Data and B64t Flip Register 14 */
#define MTU_MC64_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006507eu)	/* Read Data and B64t Flip Register 15 */
#define MTU_MC64_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065080u)	/* Read Data and B64t Flip Register 16 */
#define MTU_MC64_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065082u)	/* Read Data and B64t Flip Register 17 */
#define MTU_MC64_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065084u)	/* Read Data and B64t Flip Register 18 */
#define MTU_MC64_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065086u)	/* Read Data and B64t Flip Register 19 */
#define MTU_MC64_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065064u)	/* Read Data and B64t Flip Register 2 */
#define MTU_MC64_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065088u)	/* Read Data and B64t Flip Register 20 */
#define MTU_MC64_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006508au)	/* Read Data and B64t Flip Register 21 */
#define MTU_MC64_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006508cu)	/* Read Data and B64t Flip Register 22 */
#define MTU_MC64_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006508eu)	/* Read Data and B64t Flip Register 23 */
#define MTU_MC64_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065090u)	/* Read Data and B64t Flip Register 24 */
#define MTU_MC64_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065092u)	/* Read Data and B64t Flip Register 25 */
#define MTU_MC64_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065094u)	/* Read Data and B64t Flip Register 26 */
#define MTU_MC64_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065096u)	/* Read Data and B64t Flip Register 27 */
#define MTU_MC64_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065098u)	/* Read Data and B64t Flip Register 28 */
#define MTU_MC64_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006509au)	/* Read Data and B64t Flip Register 29 */
#define MTU_MC64_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065066u)	/* Read Data and B64t Flip Register 3 */
#define MTU_MC64_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006509cu)	/* Read Data and B64t Flip Register 30 */
#define MTU_MC64_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006509eu)	/* Read Data and B64t Flip Register 31 */
#define MTU_MC64_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00650a0u)	/* Read Data and B64t Flip Register 32 */
#define MTU_MC64_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00650a2u)	/* Read Data and B64t Flip Register 33 */
#define MTU_MC64_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00650a4u)	/* Read Data and B64t Flip Register 34 */
#define MTU_MC64_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00650a6u)	/* Read Data and B64t Flip Register 35 */
#define MTU_MC64_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00650a8u)	/* Read Data and B64t Flip Register 36 */
#define MTU_MC64_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00650aau)	/* Read Data and B64t Flip Register 37 */
#define MTU_MC64_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00650acu)	/* Read Data and B64t Flip Register 38 */
#define MTU_MC64_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00650aeu)	/* Read Data and B64t Flip Register 39 */
#define MTU_MC64_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065068u)	/* Read Data and B64t Flip Register 4 */
#define MTU_MC64_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00650b0u)	/* Read Data and B64t Flip Register 40 */
#define MTU_MC64_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00650b2u)	/* Read Data and B64t Flip Register 41 */
#define MTU_MC64_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00650b4u)	/* Read Data and B64t Flip Register 42 */
#define MTU_MC64_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00650b6u)	/* Read Data and B64t Flip Register 43 */
#define MTU_MC64_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00650b8u)	/* Read Data and B64t Flip Register 44 */
#define MTU_MC64_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00650bau)	/* Read Data and B64t Flip Register 45 */
#define MTU_MC64_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00650bcu)	/* Read Data and B64t Flip Register 46 */
#define MTU_MC64_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00650beu)	/* Read Data and B64t Flip Register 47 */
#define MTU_MC64_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00650c0u)	/* Read Data and B64t Flip Register 48 */
#define MTU_MC64_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00650c2u)	/* Read Data and B64t Flip Register 49 */
#define MTU_MC64_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006506au)	/* Read Data and B64t Flip Register 5 */
#define MTU_MC64_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00650c4u)	/* Read Data and B64t Flip Register 50 */
#define MTU_MC64_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00650c6u)	/* Read Data and B64t Flip Register 51 */
#define MTU_MC64_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00650c8u)	/* Read Data and B64t Flip Register 52 */
#define MTU_MC64_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00650cau)	/* Read Data and B64t Flip Register 53 */
#define MTU_MC64_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00650ccu)	/* Read Data and B64t Flip Register 54 */
#define MTU_MC64_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00650ceu)	/* Read Data and B64t Flip Register 55 */
#define MTU_MC64_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00650d0u)	/* Read Data and B64t Flip Register 56 */
#define MTU_MC64_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00650d2u)	/* Read Data and B64t Flip Register 57 */
#define MTU_MC64_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00650d4u)	/* Read Data and B64t Flip Register 58 */
#define MTU_MC64_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00650d6u)	/* Read Data and B64t Flip Register 59 */
#define MTU_MC64_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006506cu)	/* Read Data and B64t Flip Register 6 */
#define MTU_MC64_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00650d8u)	/* Read Data and B64t Flip Register 60 */
#define MTU_MC64_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00650dau)	/* Read Data and B64t Flip Register 61 */
#define MTU_MC64_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00650dcu)	/* Read Data and B64t Flip Register 62 */
#define MTU_MC64_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00650deu)	/* Read Data and B64t Flip Register 63 */
#define MTU_MC64_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00650e0u)	/* Read Data and B64t Flip Register 64 */
#define MTU_MC64_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00650e2u)	/* Read Data and B64t Flip Register 65 */
#define MTU_MC64_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00650e4u)	/* Read Data and B64t Flip Register 66 */
#define MTU_MC64_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006506eu)	/* Read Data and B64t Flip Register 7 */
#define MTU_MC64_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065070u)	/* Read Data and B64t Flip Register 8 */
#define MTU_MC64_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065072u)	/* Read Data and B64t Flip Register 9 */
#define MTU_MC65_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065160u)	/* Read Data and B65t Flip Register 0 */
#define MTU_MC65_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065162u)	/* Read Data and B65t Flip Register 1 */
#define MTU_MC65_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065174u)	/* Read Data and B65t Flip Register 10 */
#define MTU_MC65_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065176u)	/* Read Data and B65t Flip Register 11 */
#define MTU_MC65_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065178u)	/* Read Data and B65t Flip Register 12 */
#define MTU_MC65_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006517au)	/* Read Data and B65t Flip Register 13 */
#define MTU_MC65_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006517cu)	/* Read Data and B65t Flip Register 14 */
#define MTU_MC65_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006517eu)	/* Read Data and B65t Flip Register 15 */
#define MTU_MC65_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065180u)	/* Read Data and B65t Flip Register 16 */
#define MTU_MC65_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065182u)	/* Read Data and B65t Flip Register 17 */
#define MTU_MC65_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065184u)	/* Read Data and B65t Flip Register 18 */
#define MTU_MC65_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065186u)	/* Read Data and B65t Flip Register 19 */
#define MTU_MC65_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065164u)	/* Read Data and B65t Flip Register 2 */
#define MTU_MC65_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065188u)	/* Read Data and B65t Flip Register 20 */
#define MTU_MC65_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006518au)	/* Read Data and B65t Flip Register 21 */
#define MTU_MC65_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006518cu)	/* Read Data and B65t Flip Register 22 */
#define MTU_MC65_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006518eu)	/* Read Data and B65t Flip Register 23 */
#define MTU_MC65_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065190u)	/* Read Data and B65t Flip Register 24 */
#define MTU_MC65_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065192u)	/* Read Data and B65t Flip Register 25 */
#define MTU_MC65_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065194u)	/* Read Data and B65t Flip Register 26 */
#define MTU_MC65_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065196u)	/* Read Data and B65t Flip Register 27 */
#define MTU_MC65_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065198u)	/* Read Data and B65t Flip Register 28 */
#define MTU_MC65_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006519au)	/* Read Data and B65t Flip Register 29 */
#define MTU_MC65_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065166u)	/* Read Data and B65t Flip Register 3 */
#define MTU_MC65_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006519cu)	/* Read Data and B65t Flip Register 30 */
#define MTU_MC65_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006519eu)	/* Read Data and B65t Flip Register 31 */
#define MTU_MC65_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00651a0u)	/* Read Data and B65t Flip Register 32 */
#define MTU_MC65_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00651a2u)	/* Read Data and B65t Flip Register 33 */
#define MTU_MC65_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00651a4u)	/* Read Data and B65t Flip Register 34 */
#define MTU_MC65_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00651a6u)	/* Read Data and B65t Flip Register 35 */
#define MTU_MC65_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00651a8u)	/* Read Data and B65t Flip Register 36 */
#define MTU_MC65_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00651aau)	/* Read Data and B65t Flip Register 37 */
#define MTU_MC65_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00651acu)	/* Read Data and B65t Flip Register 38 */
#define MTU_MC65_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00651aeu)	/* Read Data and B65t Flip Register 39 */
#define MTU_MC65_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065168u)	/* Read Data and B65t Flip Register 4 */
#define MTU_MC65_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00651b0u)	/* Read Data and B65t Flip Register 40 */
#define MTU_MC65_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00651b2u)	/* Read Data and B65t Flip Register 41 */
#define MTU_MC65_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00651b4u)	/* Read Data and B65t Flip Register 42 */
#define MTU_MC65_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00651b6u)	/* Read Data and B65t Flip Register 43 */
#define MTU_MC65_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00651b8u)	/* Read Data and B65t Flip Register 44 */
#define MTU_MC65_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00651bau)	/* Read Data and B65t Flip Register 45 */
#define MTU_MC65_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00651bcu)	/* Read Data and B65t Flip Register 46 */
#define MTU_MC65_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00651beu)	/* Read Data and B65t Flip Register 47 */
#define MTU_MC65_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00651c0u)	/* Read Data and B65t Flip Register 48 */
#define MTU_MC65_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00651c2u)	/* Read Data and B65t Flip Register 49 */
#define MTU_MC65_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006516au)	/* Read Data and B65t Flip Register 5 */
#define MTU_MC65_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00651c4u)	/* Read Data and B65t Flip Register 50 */
#define MTU_MC65_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00651c6u)	/* Read Data and B65t Flip Register 51 */
#define MTU_MC65_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00651c8u)	/* Read Data and B65t Flip Register 52 */
#define MTU_MC65_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00651cau)	/* Read Data and B65t Flip Register 53 */
#define MTU_MC65_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00651ccu)	/* Read Data and B65t Flip Register 54 */
#define MTU_MC65_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00651ceu)	/* Read Data and B65t Flip Register 55 */
#define MTU_MC65_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00651d0u)	/* Read Data and B65t Flip Register 56 */
#define MTU_MC65_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00651d2u)	/* Read Data and B65t Flip Register 57 */
#define MTU_MC65_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00651d4u)	/* Read Data and B65t Flip Register 58 */
#define MTU_MC65_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00651d6u)	/* Read Data and B65t Flip Register 59 */
#define MTU_MC65_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006516cu)	/* Read Data and B65t Flip Register 6 */
#define MTU_MC65_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00651d8u)	/* Read Data and B65t Flip Register 60 */
#define MTU_MC65_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00651dau)	/* Read Data and B65t Flip Register 61 */
#define MTU_MC65_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00651dcu)	/* Read Data and B65t Flip Register 62 */
#define MTU_MC65_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00651deu)	/* Read Data and B65t Flip Register 63 */
#define MTU_MC65_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00651e0u)	/* Read Data and B65t Flip Register 64 */
#define MTU_MC65_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00651e2u)	/* Read Data and B65t Flip Register 65 */
#define MTU_MC65_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00651e4u)	/* Read Data and B65t Flip Register 66 */
#define MTU_MC65_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006516eu)	/* Read Data and B65t Flip Register 7 */
#define MTU_MC65_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065170u)	/* Read Data and B65t Flip Register 8 */
#define MTU_MC65_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065172u)	/* Read Data and B65t Flip Register 9 */
#define MTU_MC66_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065260u)	/* Read Data and B66t Flip Register 0 */
#define MTU_MC66_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065262u)	/* Read Data and B66t Flip Register 1 */
#define MTU_MC66_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065274u)	/* Read Data and B66t Flip Register 10 */
#define MTU_MC66_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065276u)	/* Read Data and B66t Flip Register 11 */
#define MTU_MC66_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065278u)	/* Read Data and B66t Flip Register 12 */
#define MTU_MC66_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006527au)	/* Read Data and B66t Flip Register 13 */
#define MTU_MC66_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006527cu)	/* Read Data and B66t Flip Register 14 */
#define MTU_MC66_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006527eu)	/* Read Data and B66t Flip Register 15 */
#define MTU_MC66_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065280u)	/* Read Data and B66t Flip Register 16 */
#define MTU_MC66_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065282u)	/* Read Data and B66t Flip Register 17 */
#define MTU_MC66_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065284u)	/* Read Data and B66t Flip Register 18 */
#define MTU_MC66_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065286u)	/* Read Data and B66t Flip Register 19 */
#define MTU_MC66_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065264u)	/* Read Data and B66t Flip Register 2 */
#define MTU_MC66_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065288u)	/* Read Data and B66t Flip Register 20 */
#define MTU_MC66_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006528au)	/* Read Data and B66t Flip Register 21 */
#define MTU_MC66_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006528cu)	/* Read Data and B66t Flip Register 22 */
#define MTU_MC66_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006528eu)	/* Read Data and B66t Flip Register 23 */
#define MTU_MC66_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065290u)	/* Read Data and B66t Flip Register 24 */
#define MTU_MC66_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065292u)	/* Read Data and B66t Flip Register 25 */
#define MTU_MC66_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065294u)	/* Read Data and B66t Flip Register 26 */
#define MTU_MC66_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065296u)	/* Read Data and B66t Flip Register 27 */
#define MTU_MC66_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065298u)	/* Read Data and B66t Flip Register 28 */
#define MTU_MC66_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006529au)	/* Read Data and B66t Flip Register 29 */
#define MTU_MC66_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065266u)	/* Read Data and B66t Flip Register 3 */
#define MTU_MC66_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006529cu)	/* Read Data and B66t Flip Register 30 */
#define MTU_MC66_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006529eu)	/* Read Data and B66t Flip Register 31 */
#define MTU_MC66_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00652a0u)	/* Read Data and B66t Flip Register 32 */
#define MTU_MC66_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00652a2u)	/* Read Data and B66t Flip Register 33 */
#define MTU_MC66_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00652a4u)	/* Read Data and B66t Flip Register 34 */
#define MTU_MC66_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00652a6u)	/* Read Data and B66t Flip Register 35 */
#define MTU_MC66_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00652a8u)	/* Read Data and B66t Flip Register 36 */
#define MTU_MC66_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00652aau)	/* Read Data and B66t Flip Register 37 */
#define MTU_MC66_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00652acu)	/* Read Data and B66t Flip Register 38 */
#define MTU_MC66_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00652aeu)	/* Read Data and B66t Flip Register 39 */
#define MTU_MC66_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065268u)	/* Read Data and B66t Flip Register 4 */
#define MTU_MC66_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00652b0u)	/* Read Data and B66t Flip Register 40 */
#define MTU_MC66_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00652b2u)	/* Read Data and B66t Flip Register 41 */
#define MTU_MC66_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00652b4u)	/* Read Data and B66t Flip Register 42 */
#define MTU_MC66_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00652b6u)	/* Read Data and B66t Flip Register 43 */
#define MTU_MC66_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00652b8u)	/* Read Data and B66t Flip Register 44 */
#define MTU_MC66_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00652bau)	/* Read Data and B66t Flip Register 45 */
#define MTU_MC66_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00652bcu)	/* Read Data and B66t Flip Register 46 */
#define MTU_MC66_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00652beu)	/* Read Data and B66t Flip Register 47 */
#define MTU_MC66_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00652c0u)	/* Read Data and B66t Flip Register 48 */
#define MTU_MC66_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00652c2u)	/* Read Data and B66t Flip Register 49 */
#define MTU_MC66_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006526au)	/* Read Data and B66t Flip Register 5 */
#define MTU_MC66_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00652c4u)	/* Read Data and B66t Flip Register 50 */
#define MTU_MC66_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00652c6u)	/* Read Data and B66t Flip Register 51 */
#define MTU_MC66_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00652c8u)	/* Read Data and B66t Flip Register 52 */
#define MTU_MC66_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00652cau)	/* Read Data and B66t Flip Register 53 */
#define MTU_MC66_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00652ccu)	/* Read Data and B66t Flip Register 54 */
#define MTU_MC66_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00652ceu)	/* Read Data and B66t Flip Register 55 */
#define MTU_MC66_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00652d0u)	/* Read Data and B66t Flip Register 56 */
#define MTU_MC66_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00652d2u)	/* Read Data and B66t Flip Register 57 */
#define MTU_MC66_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00652d4u)	/* Read Data and B66t Flip Register 58 */
#define MTU_MC66_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00652d6u)	/* Read Data and B66t Flip Register 59 */
#define MTU_MC66_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006526cu)	/* Read Data and B66t Flip Register 6 */
#define MTU_MC66_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00652d8u)	/* Read Data and B66t Flip Register 60 */
#define MTU_MC66_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00652dau)	/* Read Data and B66t Flip Register 61 */
#define MTU_MC66_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00652dcu)	/* Read Data and B66t Flip Register 62 */
#define MTU_MC66_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00652deu)	/* Read Data and B66t Flip Register 63 */
#define MTU_MC66_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00652e0u)	/* Read Data and B66t Flip Register 64 */
#define MTU_MC66_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00652e2u)	/* Read Data and B66t Flip Register 65 */
#define MTU_MC66_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00652e4u)	/* Read Data and B66t Flip Register 66 */
#define MTU_MC66_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006526eu)	/* Read Data and B66t Flip Register 7 */
#define MTU_MC66_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065270u)	/* Read Data and B66t Flip Register 8 */
#define MTU_MC66_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065272u)	/* Read Data and B66t Flip Register 9 */
#define MTU_MC67_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065360u)	/* Read Data and B67t Flip Register 0 */
#define MTU_MC67_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065362u)	/* Read Data and B67t Flip Register 1 */
#define MTU_MC67_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065374u)	/* Read Data and B67t Flip Register 10 */
#define MTU_MC67_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065376u)	/* Read Data and B67t Flip Register 11 */
#define MTU_MC67_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065378u)	/* Read Data and B67t Flip Register 12 */
#define MTU_MC67_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006537au)	/* Read Data and B67t Flip Register 13 */
#define MTU_MC67_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006537cu)	/* Read Data and B67t Flip Register 14 */
#define MTU_MC67_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006537eu)	/* Read Data and B67t Flip Register 15 */
#define MTU_MC67_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065380u)	/* Read Data and B67t Flip Register 16 */
#define MTU_MC67_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065382u)	/* Read Data and B67t Flip Register 17 */
#define MTU_MC67_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065384u)	/* Read Data and B67t Flip Register 18 */
#define MTU_MC67_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065386u)	/* Read Data and B67t Flip Register 19 */
#define MTU_MC67_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065364u)	/* Read Data and B67t Flip Register 2 */
#define MTU_MC67_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065388u)	/* Read Data and B67t Flip Register 20 */
#define MTU_MC67_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006538au)	/* Read Data and B67t Flip Register 21 */
#define MTU_MC67_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006538cu)	/* Read Data and B67t Flip Register 22 */
#define MTU_MC67_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006538eu)	/* Read Data and B67t Flip Register 23 */
#define MTU_MC67_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065390u)	/* Read Data and B67t Flip Register 24 */
#define MTU_MC67_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065392u)	/* Read Data and B67t Flip Register 25 */
#define MTU_MC67_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065394u)	/* Read Data and B67t Flip Register 26 */
#define MTU_MC67_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065396u)	/* Read Data and B67t Flip Register 27 */
#define MTU_MC67_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065398u)	/* Read Data and B67t Flip Register 28 */
#define MTU_MC67_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006539au)	/* Read Data and B67t Flip Register 29 */
#define MTU_MC67_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065366u)	/* Read Data and B67t Flip Register 3 */
#define MTU_MC67_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006539cu)	/* Read Data and B67t Flip Register 30 */
#define MTU_MC67_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006539eu)	/* Read Data and B67t Flip Register 31 */
#define MTU_MC67_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00653a0u)	/* Read Data and B67t Flip Register 32 */
#define MTU_MC67_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00653a2u)	/* Read Data and B67t Flip Register 33 */
#define MTU_MC67_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00653a4u)	/* Read Data and B67t Flip Register 34 */
#define MTU_MC67_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00653a6u)	/* Read Data and B67t Flip Register 35 */
#define MTU_MC67_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00653a8u)	/* Read Data and B67t Flip Register 36 */
#define MTU_MC67_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00653aau)	/* Read Data and B67t Flip Register 37 */
#define MTU_MC67_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00653acu)	/* Read Data and B67t Flip Register 38 */
#define MTU_MC67_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00653aeu)	/* Read Data and B67t Flip Register 39 */
#define MTU_MC67_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065368u)	/* Read Data and B67t Flip Register 4 */
#define MTU_MC67_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00653b0u)	/* Read Data and B67t Flip Register 40 */
#define MTU_MC67_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00653b2u)	/* Read Data and B67t Flip Register 41 */
#define MTU_MC67_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00653b4u)	/* Read Data and B67t Flip Register 42 */
#define MTU_MC67_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00653b6u)	/* Read Data and B67t Flip Register 43 */
#define MTU_MC67_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00653b8u)	/* Read Data and B67t Flip Register 44 */
#define MTU_MC67_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00653bau)	/* Read Data and B67t Flip Register 45 */
#define MTU_MC67_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00653bcu)	/* Read Data and B67t Flip Register 46 */
#define MTU_MC67_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00653beu)	/* Read Data and B67t Flip Register 47 */
#define MTU_MC67_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00653c0u)	/* Read Data and B67t Flip Register 48 */
#define MTU_MC67_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00653c2u)	/* Read Data and B67t Flip Register 49 */
#define MTU_MC67_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006536au)	/* Read Data and B67t Flip Register 5 */
#define MTU_MC67_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00653c4u)	/* Read Data and B67t Flip Register 50 */
#define MTU_MC67_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00653c6u)	/* Read Data and B67t Flip Register 51 */
#define MTU_MC67_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00653c8u)	/* Read Data and B67t Flip Register 52 */
#define MTU_MC67_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00653cau)	/* Read Data and B67t Flip Register 53 */
#define MTU_MC67_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00653ccu)	/* Read Data and B67t Flip Register 54 */
#define MTU_MC67_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00653ceu)	/* Read Data and B67t Flip Register 55 */
#define MTU_MC67_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00653d0u)	/* Read Data and B67t Flip Register 56 */
#define MTU_MC67_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00653d2u)	/* Read Data and B67t Flip Register 57 */
#define MTU_MC67_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00653d4u)	/* Read Data and B67t Flip Register 58 */
#define MTU_MC67_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00653d6u)	/* Read Data and B67t Flip Register 59 */
#define MTU_MC67_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006536cu)	/* Read Data and B67t Flip Register 6 */
#define MTU_MC67_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00653d8u)	/* Read Data and B67t Flip Register 60 */
#define MTU_MC67_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00653dau)	/* Read Data and B67t Flip Register 61 */
#define MTU_MC67_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00653dcu)	/* Read Data and B67t Flip Register 62 */
#define MTU_MC67_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00653deu)	/* Read Data and B67t Flip Register 63 */
#define MTU_MC67_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00653e0u)	/* Read Data and B67t Flip Register 64 */
#define MTU_MC67_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00653e2u)	/* Read Data and B67t Flip Register 65 */
#define MTU_MC67_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00653e4u)	/* Read Data and B67t Flip Register 66 */
#define MTU_MC67_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006536eu)	/* Read Data and B67t Flip Register 7 */
#define MTU_MC67_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065370u)	/* Read Data and B67t Flip Register 8 */
#define MTU_MC67_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065372u)	/* Read Data and B67t Flip Register 9 */
#define MTU_MC68_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065460u)	/* Read Data and B68t Flip Register 0 */
#define MTU_MC68_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065462u)	/* Read Data and B68t Flip Register 1 */
#define MTU_MC68_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065474u)	/* Read Data and B68t Flip Register 10 */
#define MTU_MC68_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065476u)	/* Read Data and B68t Flip Register 11 */
#define MTU_MC68_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065478u)	/* Read Data and B68t Flip Register 12 */
#define MTU_MC68_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006547au)	/* Read Data and B68t Flip Register 13 */
#define MTU_MC68_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006547cu)	/* Read Data and B68t Flip Register 14 */
#define MTU_MC68_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006547eu)	/* Read Data and B68t Flip Register 15 */
#define MTU_MC68_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065480u)	/* Read Data and B68t Flip Register 16 */
#define MTU_MC68_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065482u)	/* Read Data and B68t Flip Register 17 */
#define MTU_MC68_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065484u)	/* Read Data and B68t Flip Register 18 */
#define MTU_MC68_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065486u)	/* Read Data and B68t Flip Register 19 */
#define MTU_MC68_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065464u)	/* Read Data and B68t Flip Register 2 */
#define MTU_MC68_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065488u)	/* Read Data and B68t Flip Register 20 */
#define MTU_MC68_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006548au)	/* Read Data and B68t Flip Register 21 */
#define MTU_MC68_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006548cu)	/* Read Data and B68t Flip Register 22 */
#define MTU_MC68_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006548eu)	/* Read Data and B68t Flip Register 23 */
#define MTU_MC68_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065490u)	/* Read Data and B68t Flip Register 24 */
#define MTU_MC68_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065492u)	/* Read Data and B68t Flip Register 25 */
#define MTU_MC68_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065494u)	/* Read Data and B68t Flip Register 26 */
#define MTU_MC68_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065496u)	/* Read Data and B68t Flip Register 27 */
#define MTU_MC68_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065498u)	/* Read Data and B68t Flip Register 28 */
#define MTU_MC68_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006549au)	/* Read Data and B68t Flip Register 29 */
#define MTU_MC68_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065466u)	/* Read Data and B68t Flip Register 3 */
#define MTU_MC68_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006549cu)	/* Read Data and B68t Flip Register 30 */
#define MTU_MC68_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006549eu)	/* Read Data and B68t Flip Register 31 */
#define MTU_MC68_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00654a0u)	/* Read Data and B68t Flip Register 32 */
#define MTU_MC68_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00654a2u)	/* Read Data and B68t Flip Register 33 */
#define MTU_MC68_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00654a4u)	/* Read Data and B68t Flip Register 34 */
#define MTU_MC68_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00654a6u)	/* Read Data and B68t Flip Register 35 */
#define MTU_MC68_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00654a8u)	/* Read Data and B68t Flip Register 36 */
#define MTU_MC68_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00654aau)	/* Read Data and B68t Flip Register 37 */
#define MTU_MC68_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00654acu)	/* Read Data and B68t Flip Register 38 */
#define MTU_MC68_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00654aeu)	/* Read Data and B68t Flip Register 39 */
#define MTU_MC68_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065468u)	/* Read Data and B68t Flip Register 4 */
#define MTU_MC68_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00654b0u)	/* Read Data and B68t Flip Register 40 */
#define MTU_MC68_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00654b2u)	/* Read Data and B68t Flip Register 41 */
#define MTU_MC68_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00654b4u)	/* Read Data and B68t Flip Register 42 */
#define MTU_MC68_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00654b6u)	/* Read Data and B68t Flip Register 43 */
#define MTU_MC68_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00654b8u)	/* Read Data and B68t Flip Register 44 */
#define MTU_MC68_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00654bau)	/* Read Data and B68t Flip Register 45 */
#define MTU_MC68_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00654bcu)	/* Read Data and B68t Flip Register 46 */
#define MTU_MC68_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00654beu)	/* Read Data and B68t Flip Register 47 */
#define MTU_MC68_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00654c0u)	/* Read Data and B68t Flip Register 48 */
#define MTU_MC68_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00654c2u)	/* Read Data and B68t Flip Register 49 */
#define MTU_MC68_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006546au)	/* Read Data and B68t Flip Register 5 */
#define MTU_MC68_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00654c4u)	/* Read Data and B68t Flip Register 50 */
#define MTU_MC68_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00654c6u)	/* Read Data and B68t Flip Register 51 */
#define MTU_MC68_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00654c8u)	/* Read Data and B68t Flip Register 52 */
#define MTU_MC68_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00654cau)	/* Read Data and B68t Flip Register 53 */
#define MTU_MC68_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00654ccu)	/* Read Data and B68t Flip Register 54 */
#define MTU_MC68_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00654ceu)	/* Read Data and B68t Flip Register 55 */
#define MTU_MC68_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00654d0u)	/* Read Data and B68t Flip Register 56 */
#define MTU_MC68_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00654d2u)	/* Read Data and B68t Flip Register 57 */
#define MTU_MC68_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00654d4u)	/* Read Data and B68t Flip Register 58 */
#define MTU_MC68_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00654d6u)	/* Read Data and B68t Flip Register 59 */
#define MTU_MC68_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006546cu)	/* Read Data and B68t Flip Register 6 */
#define MTU_MC68_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00654d8u)	/* Read Data and B68t Flip Register 60 */
#define MTU_MC68_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00654dau)	/* Read Data and B68t Flip Register 61 */
#define MTU_MC68_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00654dcu)	/* Read Data and B68t Flip Register 62 */
#define MTU_MC68_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00654deu)	/* Read Data and B68t Flip Register 63 */
#define MTU_MC68_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00654e0u)	/* Read Data and B68t Flip Register 64 */
#define MTU_MC68_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00654e2u)	/* Read Data and B68t Flip Register 65 */
#define MTU_MC68_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00654e4u)	/* Read Data and B68t Flip Register 66 */
#define MTU_MC68_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006546eu)	/* Read Data and B68t Flip Register 7 */
#define MTU_MC68_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065470u)	/* Read Data and B68t Flip Register 8 */
#define MTU_MC68_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065472u)	/* Read Data and B68t Flip Register 9 */
#define MTU_MC69_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065560u)	/* Read Data and B69t Flip Register 0 */
#define MTU_MC69_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065562u)	/* Read Data and B69t Flip Register 1 */
#define MTU_MC69_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065574u)	/* Read Data and B69t Flip Register 10 */
#define MTU_MC69_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065576u)	/* Read Data and B69t Flip Register 11 */
#define MTU_MC69_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065578u)	/* Read Data and B69t Flip Register 12 */
#define MTU_MC69_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006557au)	/* Read Data and B69t Flip Register 13 */
#define MTU_MC69_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006557cu)	/* Read Data and B69t Flip Register 14 */
#define MTU_MC69_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006557eu)	/* Read Data and B69t Flip Register 15 */
#define MTU_MC69_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065580u)	/* Read Data and B69t Flip Register 16 */
#define MTU_MC69_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065582u)	/* Read Data and B69t Flip Register 17 */
#define MTU_MC69_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065584u)	/* Read Data and B69t Flip Register 18 */
#define MTU_MC69_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065586u)	/* Read Data and B69t Flip Register 19 */
#define MTU_MC69_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065564u)	/* Read Data and B69t Flip Register 2 */
#define MTU_MC69_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065588u)	/* Read Data and B69t Flip Register 20 */
#define MTU_MC69_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006558au)	/* Read Data and B69t Flip Register 21 */
#define MTU_MC69_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006558cu)	/* Read Data and B69t Flip Register 22 */
#define MTU_MC69_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006558eu)	/* Read Data and B69t Flip Register 23 */
#define MTU_MC69_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065590u)	/* Read Data and B69t Flip Register 24 */
#define MTU_MC69_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065592u)	/* Read Data and B69t Flip Register 25 */
#define MTU_MC69_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065594u)	/* Read Data and B69t Flip Register 26 */
#define MTU_MC69_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065596u)	/* Read Data and B69t Flip Register 27 */
#define MTU_MC69_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065598u)	/* Read Data and B69t Flip Register 28 */
#define MTU_MC69_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006559au)	/* Read Data and B69t Flip Register 29 */
#define MTU_MC69_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065566u)	/* Read Data and B69t Flip Register 3 */
#define MTU_MC69_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006559cu)	/* Read Data and B69t Flip Register 30 */
#define MTU_MC69_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006559eu)	/* Read Data and B69t Flip Register 31 */
#define MTU_MC69_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00655a0u)	/* Read Data and B69t Flip Register 32 */
#define MTU_MC69_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00655a2u)	/* Read Data and B69t Flip Register 33 */
#define MTU_MC69_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00655a4u)	/* Read Data and B69t Flip Register 34 */
#define MTU_MC69_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00655a6u)	/* Read Data and B69t Flip Register 35 */
#define MTU_MC69_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00655a8u)	/* Read Data and B69t Flip Register 36 */
#define MTU_MC69_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00655aau)	/* Read Data and B69t Flip Register 37 */
#define MTU_MC69_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00655acu)	/* Read Data and B69t Flip Register 38 */
#define MTU_MC69_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00655aeu)	/* Read Data and B69t Flip Register 39 */
#define MTU_MC69_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065568u)	/* Read Data and B69t Flip Register 4 */
#define MTU_MC69_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00655b0u)	/* Read Data and B69t Flip Register 40 */
#define MTU_MC69_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00655b2u)	/* Read Data and B69t Flip Register 41 */
#define MTU_MC69_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00655b4u)	/* Read Data and B69t Flip Register 42 */
#define MTU_MC69_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00655b6u)	/* Read Data and B69t Flip Register 43 */
#define MTU_MC69_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00655b8u)	/* Read Data and B69t Flip Register 44 */
#define MTU_MC69_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00655bau)	/* Read Data and B69t Flip Register 45 */
#define MTU_MC69_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00655bcu)	/* Read Data and B69t Flip Register 46 */
#define MTU_MC69_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00655beu)	/* Read Data and B69t Flip Register 47 */
#define MTU_MC69_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00655c0u)	/* Read Data and B69t Flip Register 48 */
#define MTU_MC69_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00655c2u)	/* Read Data and B69t Flip Register 49 */
#define MTU_MC69_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006556au)	/* Read Data and B69t Flip Register 5 */
#define MTU_MC69_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00655c4u)	/* Read Data and B69t Flip Register 50 */
#define MTU_MC69_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00655c6u)	/* Read Data and B69t Flip Register 51 */
#define MTU_MC69_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00655c8u)	/* Read Data and B69t Flip Register 52 */
#define MTU_MC69_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00655cau)	/* Read Data and B69t Flip Register 53 */
#define MTU_MC69_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00655ccu)	/* Read Data and B69t Flip Register 54 */
#define MTU_MC69_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00655ceu)	/* Read Data and B69t Flip Register 55 */
#define MTU_MC69_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00655d0u)	/* Read Data and B69t Flip Register 56 */
#define MTU_MC69_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00655d2u)	/* Read Data and B69t Flip Register 57 */
#define MTU_MC69_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00655d4u)	/* Read Data and B69t Flip Register 58 */
#define MTU_MC69_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00655d6u)	/* Read Data and B69t Flip Register 59 */
#define MTU_MC69_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006556cu)	/* Read Data and B69t Flip Register 6 */
#define MTU_MC69_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00655d8u)	/* Read Data and B69t Flip Register 60 */
#define MTU_MC69_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00655dau)	/* Read Data and B69t Flip Register 61 */
#define MTU_MC69_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00655dcu)	/* Read Data and B69t Flip Register 62 */
#define MTU_MC69_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00655deu)	/* Read Data and B69t Flip Register 63 */
#define MTU_MC69_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00655e0u)	/* Read Data and B69t Flip Register 64 */
#define MTU_MC69_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00655e2u)	/* Read Data and B69t Flip Register 65 */
#define MTU_MC69_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00655e4u)	/* Read Data and B69t Flip Register 66 */
#define MTU_MC69_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006556eu)	/* Read Data and B69t Flip Register 7 */
#define MTU_MC69_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065570u)	/* Read Data and B69t Flip Register 8 */
#define MTU_MC69_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065572u)	/* Read Data and B69t Flip Register 9 */
#define MTU_MC6_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061660u)	/* Read Data and B6t Flip Register 0 */
#define MTU_MC6_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061662u)	/* Read Data and B6t Flip Register 1 */
#define MTU_MC6_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061674u)	/* Read Data and B6t Flip Register 10 */
#define MTU_MC6_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061676u)	/* Read Data and B6t Flip Register 11 */
#define MTU_MC6_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061678u)	/* Read Data and B6t Flip Register 12 */
#define MTU_MC6_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006167au)	/* Read Data and B6t Flip Register 13 */
#define MTU_MC6_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006167cu)	/* Read Data and B6t Flip Register 14 */
#define MTU_MC6_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006167eu)	/* Read Data and B6t Flip Register 15 */
#define MTU_MC6_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061680u)	/* Read Data and B6t Flip Register 16 */
#define MTU_MC6_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061682u)	/* Read Data and B6t Flip Register 17 */
#define MTU_MC6_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061684u)	/* Read Data and B6t Flip Register 18 */
#define MTU_MC6_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061686u)	/* Read Data and B6t Flip Register 19 */
#define MTU_MC6_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061664u)	/* Read Data and B6t Flip Register 2 */
#define MTU_MC6_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061688u)	/* Read Data and B6t Flip Register 20 */
#define MTU_MC6_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006168au)	/* Read Data and B6t Flip Register 21 */
#define MTU_MC6_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006168cu)	/* Read Data and B6t Flip Register 22 */
#define MTU_MC6_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006168eu)	/* Read Data and B6t Flip Register 23 */
#define MTU_MC6_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061690u)	/* Read Data and B6t Flip Register 24 */
#define MTU_MC6_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061692u)	/* Read Data and B6t Flip Register 25 */
#define MTU_MC6_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061694u)	/* Read Data and B6t Flip Register 26 */
#define MTU_MC6_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061696u)	/* Read Data and B6t Flip Register 27 */
#define MTU_MC6_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061698u)	/* Read Data and B6t Flip Register 28 */
#define MTU_MC6_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006169au)	/* Read Data and B6t Flip Register 29 */
#define MTU_MC6_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061666u)	/* Read Data and B6t Flip Register 3 */
#define MTU_MC6_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006169cu)	/* Read Data and B6t Flip Register 30 */
#define MTU_MC6_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006169eu)	/* Read Data and B6t Flip Register 31 */
#define MTU_MC6_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00616a0u)	/* Read Data and B6t Flip Register 32 */
#define MTU_MC6_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00616a2u)	/* Read Data and B6t Flip Register 33 */
#define MTU_MC6_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00616a4u)	/* Read Data and B6t Flip Register 34 */
#define MTU_MC6_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00616a6u)	/* Read Data and B6t Flip Register 35 */
#define MTU_MC6_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00616a8u)	/* Read Data and B6t Flip Register 36 */
#define MTU_MC6_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00616aau)	/* Read Data and B6t Flip Register 37 */
#define MTU_MC6_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00616acu)	/* Read Data and B6t Flip Register 38 */
#define MTU_MC6_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00616aeu)	/* Read Data and B6t Flip Register 39 */
#define MTU_MC6_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061668u)	/* Read Data and B6t Flip Register 4 */
#define MTU_MC6_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00616b0u)	/* Read Data and B6t Flip Register 40 */
#define MTU_MC6_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00616b2u)	/* Read Data and B6t Flip Register 41 */
#define MTU_MC6_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00616b4u)	/* Read Data and B6t Flip Register 42 */
#define MTU_MC6_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00616b6u)	/* Read Data and B6t Flip Register 43 */
#define MTU_MC6_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00616b8u)	/* Read Data and B6t Flip Register 44 */
#define MTU_MC6_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00616bau)	/* Read Data and B6t Flip Register 45 */
#define MTU_MC6_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00616bcu)	/* Read Data and B6t Flip Register 46 */
#define MTU_MC6_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00616beu)	/* Read Data and B6t Flip Register 47 */
#define MTU_MC6_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00616c0u)	/* Read Data and B6t Flip Register 48 */
#define MTU_MC6_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00616c2u)	/* Read Data and B6t Flip Register 49 */
#define MTU_MC6_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006166au)	/* Read Data and B6t Flip Register 5 */
#define MTU_MC6_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00616c4u)	/* Read Data and B6t Flip Register 50 */
#define MTU_MC6_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00616c6u)	/* Read Data and B6t Flip Register 51 */
#define MTU_MC6_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00616c8u)	/* Read Data and B6t Flip Register 52 */
#define MTU_MC6_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00616cau)	/* Read Data and B6t Flip Register 53 */
#define MTU_MC6_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00616ccu)	/* Read Data and B6t Flip Register 54 */
#define MTU_MC6_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00616ceu)	/* Read Data and B6t Flip Register 55 */
#define MTU_MC6_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00616d0u)	/* Read Data and B6t Flip Register 56 */
#define MTU_MC6_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00616d2u)	/* Read Data and B6t Flip Register 57 */
#define MTU_MC6_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00616d4u)	/* Read Data and B6t Flip Register 58 */
#define MTU_MC6_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00616d6u)	/* Read Data and B6t Flip Register 59 */
#define MTU_MC6_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006166cu)	/* Read Data and B6t Flip Register 6 */
#define MTU_MC6_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00616d8u)	/* Read Data and B6t Flip Register 60 */
#define MTU_MC6_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00616dau)	/* Read Data and B6t Flip Register 61 */
#define MTU_MC6_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00616dcu)	/* Read Data and B6t Flip Register 62 */
#define MTU_MC6_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00616deu)	/* Read Data and B6t Flip Register 63 */
#define MTU_MC6_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00616e0u)	/* Read Data and B6t Flip Register 64 */
#define MTU_MC6_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00616e2u)	/* Read Data and B6t Flip Register 65 */
#define MTU_MC6_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00616e4u)	/* Read Data and B6t Flip Register 66 */
#define MTU_MC6_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006166eu)	/* Read Data and B6t Flip Register 7 */
#define MTU_MC6_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061670u)	/* Read Data and B6t Flip Register 8 */
#define MTU_MC6_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061672u)	/* Read Data and B6t Flip Register 9 */
#define MTU_MC70_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065660u)	/* Read Data and B70t Flip Register 0 */
#define MTU_MC70_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065662u)	/* Read Data and B70t Flip Register 1 */
#define MTU_MC70_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065674u)	/* Read Data and B70t Flip Register 10 */
#define MTU_MC70_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065676u)	/* Read Data and B70t Flip Register 11 */
#define MTU_MC70_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065678u)	/* Read Data and B70t Flip Register 12 */
#define MTU_MC70_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006567au)	/* Read Data and B70t Flip Register 13 */
#define MTU_MC70_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006567cu)	/* Read Data and B70t Flip Register 14 */
#define MTU_MC70_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006567eu)	/* Read Data and B70t Flip Register 15 */
#define MTU_MC70_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065680u)	/* Read Data and B70t Flip Register 16 */
#define MTU_MC70_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065682u)	/* Read Data and B70t Flip Register 17 */
#define MTU_MC70_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065684u)	/* Read Data and B70t Flip Register 18 */
#define MTU_MC70_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065686u)	/* Read Data and B70t Flip Register 19 */
#define MTU_MC70_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065664u)	/* Read Data and B70t Flip Register 2 */
#define MTU_MC70_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065688u)	/* Read Data and B70t Flip Register 20 */
#define MTU_MC70_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006568au)	/* Read Data and B70t Flip Register 21 */
#define MTU_MC70_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006568cu)	/* Read Data and B70t Flip Register 22 */
#define MTU_MC70_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006568eu)	/* Read Data and B70t Flip Register 23 */
#define MTU_MC70_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065690u)	/* Read Data and B70t Flip Register 24 */
#define MTU_MC70_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065692u)	/* Read Data and B70t Flip Register 25 */
#define MTU_MC70_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065694u)	/* Read Data and B70t Flip Register 26 */
#define MTU_MC70_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065696u)	/* Read Data and B70t Flip Register 27 */
#define MTU_MC70_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065698u)	/* Read Data and B70t Flip Register 28 */
#define MTU_MC70_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006569au)	/* Read Data and B70t Flip Register 29 */
#define MTU_MC70_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065666u)	/* Read Data and B70t Flip Register 3 */
#define MTU_MC70_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006569cu)	/* Read Data and B70t Flip Register 30 */
#define MTU_MC70_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006569eu)	/* Read Data and B70t Flip Register 31 */
#define MTU_MC70_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00656a0u)	/* Read Data and B70t Flip Register 32 */
#define MTU_MC70_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00656a2u)	/* Read Data and B70t Flip Register 33 */
#define MTU_MC70_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00656a4u)	/* Read Data and B70t Flip Register 34 */
#define MTU_MC70_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00656a6u)	/* Read Data and B70t Flip Register 35 */
#define MTU_MC70_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00656a8u)	/* Read Data and B70t Flip Register 36 */
#define MTU_MC70_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00656aau)	/* Read Data and B70t Flip Register 37 */
#define MTU_MC70_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00656acu)	/* Read Data and B70t Flip Register 38 */
#define MTU_MC70_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00656aeu)	/* Read Data and B70t Flip Register 39 */
#define MTU_MC70_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065668u)	/* Read Data and B70t Flip Register 4 */
#define MTU_MC70_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00656b0u)	/* Read Data and B70t Flip Register 40 */
#define MTU_MC70_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00656b2u)	/* Read Data and B70t Flip Register 41 */
#define MTU_MC70_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00656b4u)	/* Read Data and B70t Flip Register 42 */
#define MTU_MC70_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00656b6u)	/* Read Data and B70t Flip Register 43 */
#define MTU_MC70_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00656b8u)	/* Read Data and B70t Flip Register 44 */
#define MTU_MC70_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00656bau)	/* Read Data and B70t Flip Register 45 */
#define MTU_MC70_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00656bcu)	/* Read Data and B70t Flip Register 46 */
#define MTU_MC70_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00656beu)	/* Read Data and B70t Flip Register 47 */
#define MTU_MC70_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00656c0u)	/* Read Data and B70t Flip Register 48 */
#define MTU_MC70_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00656c2u)	/* Read Data and B70t Flip Register 49 */
#define MTU_MC70_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006566au)	/* Read Data and B70t Flip Register 5 */
#define MTU_MC70_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00656c4u)	/* Read Data and B70t Flip Register 50 */
#define MTU_MC70_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00656c6u)	/* Read Data and B70t Flip Register 51 */
#define MTU_MC70_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00656c8u)	/* Read Data and B70t Flip Register 52 */
#define MTU_MC70_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00656cau)	/* Read Data and B70t Flip Register 53 */
#define MTU_MC70_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00656ccu)	/* Read Data and B70t Flip Register 54 */
#define MTU_MC70_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00656ceu)	/* Read Data and B70t Flip Register 55 */
#define MTU_MC70_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00656d0u)	/* Read Data and B70t Flip Register 56 */
#define MTU_MC70_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00656d2u)	/* Read Data and B70t Flip Register 57 */
#define MTU_MC70_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00656d4u)	/* Read Data and B70t Flip Register 58 */
#define MTU_MC70_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00656d6u)	/* Read Data and B70t Flip Register 59 */
#define MTU_MC70_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006566cu)	/* Read Data and B70t Flip Register 6 */
#define MTU_MC70_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00656d8u)	/* Read Data and B70t Flip Register 60 */
#define MTU_MC70_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00656dau)	/* Read Data and B70t Flip Register 61 */
#define MTU_MC70_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00656dcu)	/* Read Data and B70t Flip Register 62 */
#define MTU_MC70_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00656deu)	/* Read Data and B70t Flip Register 63 */
#define MTU_MC70_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00656e0u)	/* Read Data and B70t Flip Register 64 */
#define MTU_MC70_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00656e2u)	/* Read Data and B70t Flip Register 65 */
#define MTU_MC70_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00656e4u)	/* Read Data and B70t Flip Register 66 */
#define MTU_MC70_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006566eu)	/* Read Data and B70t Flip Register 7 */
#define MTU_MC70_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065670u)	/* Read Data and B70t Flip Register 8 */
#define MTU_MC70_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065672u)	/* Read Data and B70t Flip Register 9 */
#define MTU_MC71_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065760u)	/* Read Data and B71t Flip Register 0 */
#define MTU_MC71_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065762u)	/* Read Data and B71t Flip Register 1 */
#define MTU_MC71_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065774u)	/* Read Data and B71t Flip Register 10 */
#define MTU_MC71_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065776u)	/* Read Data and B71t Flip Register 11 */
#define MTU_MC71_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065778u)	/* Read Data and B71t Flip Register 12 */
#define MTU_MC71_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006577au)	/* Read Data and B71t Flip Register 13 */
#define MTU_MC71_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006577cu)	/* Read Data and B71t Flip Register 14 */
#define MTU_MC71_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006577eu)	/* Read Data and B71t Flip Register 15 */
#define MTU_MC71_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065780u)	/* Read Data and B71t Flip Register 16 */
#define MTU_MC71_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065782u)	/* Read Data and B71t Flip Register 17 */
#define MTU_MC71_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065784u)	/* Read Data and B71t Flip Register 18 */
#define MTU_MC71_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065786u)	/* Read Data and B71t Flip Register 19 */
#define MTU_MC71_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065764u)	/* Read Data and B71t Flip Register 2 */
#define MTU_MC71_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065788u)	/* Read Data and B71t Flip Register 20 */
#define MTU_MC71_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006578au)	/* Read Data and B71t Flip Register 21 */
#define MTU_MC71_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006578cu)	/* Read Data and B71t Flip Register 22 */
#define MTU_MC71_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006578eu)	/* Read Data and B71t Flip Register 23 */
#define MTU_MC71_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065790u)	/* Read Data and B71t Flip Register 24 */
#define MTU_MC71_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065792u)	/* Read Data and B71t Flip Register 25 */
#define MTU_MC71_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065794u)	/* Read Data and B71t Flip Register 26 */
#define MTU_MC71_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065796u)	/* Read Data and B71t Flip Register 27 */
#define MTU_MC71_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065798u)	/* Read Data and B71t Flip Register 28 */
#define MTU_MC71_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006579au)	/* Read Data and B71t Flip Register 29 */
#define MTU_MC71_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065766u)	/* Read Data and B71t Flip Register 3 */
#define MTU_MC71_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006579cu)	/* Read Data and B71t Flip Register 30 */
#define MTU_MC71_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006579eu)	/* Read Data and B71t Flip Register 31 */
#define MTU_MC71_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00657a0u)	/* Read Data and B71t Flip Register 32 */
#define MTU_MC71_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00657a2u)	/* Read Data and B71t Flip Register 33 */
#define MTU_MC71_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00657a4u)	/* Read Data and B71t Flip Register 34 */
#define MTU_MC71_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00657a6u)	/* Read Data and B71t Flip Register 35 */
#define MTU_MC71_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00657a8u)	/* Read Data and B71t Flip Register 36 */
#define MTU_MC71_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00657aau)	/* Read Data and B71t Flip Register 37 */
#define MTU_MC71_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00657acu)	/* Read Data and B71t Flip Register 38 */
#define MTU_MC71_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00657aeu)	/* Read Data and B71t Flip Register 39 */
#define MTU_MC71_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065768u)	/* Read Data and B71t Flip Register 4 */
#define MTU_MC71_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00657b0u)	/* Read Data and B71t Flip Register 40 */
#define MTU_MC71_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00657b2u)	/* Read Data and B71t Flip Register 41 */
#define MTU_MC71_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00657b4u)	/* Read Data and B71t Flip Register 42 */
#define MTU_MC71_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00657b6u)	/* Read Data and B71t Flip Register 43 */
#define MTU_MC71_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00657b8u)	/* Read Data and B71t Flip Register 44 */
#define MTU_MC71_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00657bau)	/* Read Data and B71t Flip Register 45 */
#define MTU_MC71_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00657bcu)	/* Read Data and B71t Flip Register 46 */
#define MTU_MC71_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00657beu)	/* Read Data and B71t Flip Register 47 */
#define MTU_MC71_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00657c0u)	/* Read Data and B71t Flip Register 48 */
#define MTU_MC71_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00657c2u)	/* Read Data and B71t Flip Register 49 */
#define MTU_MC71_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006576au)	/* Read Data and B71t Flip Register 5 */
#define MTU_MC71_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00657c4u)	/* Read Data and B71t Flip Register 50 */
#define MTU_MC71_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00657c6u)	/* Read Data and B71t Flip Register 51 */
#define MTU_MC71_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00657c8u)	/* Read Data and B71t Flip Register 52 */
#define MTU_MC71_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00657cau)	/* Read Data and B71t Flip Register 53 */
#define MTU_MC71_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00657ccu)	/* Read Data and B71t Flip Register 54 */
#define MTU_MC71_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00657ceu)	/* Read Data and B71t Flip Register 55 */
#define MTU_MC71_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00657d0u)	/* Read Data and B71t Flip Register 56 */
#define MTU_MC71_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00657d2u)	/* Read Data and B71t Flip Register 57 */
#define MTU_MC71_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00657d4u)	/* Read Data and B71t Flip Register 58 */
#define MTU_MC71_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00657d6u)	/* Read Data and B71t Flip Register 59 */
#define MTU_MC71_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006576cu)	/* Read Data and B71t Flip Register 6 */
#define MTU_MC71_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00657d8u)	/* Read Data and B71t Flip Register 60 */
#define MTU_MC71_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00657dau)	/* Read Data and B71t Flip Register 61 */
#define MTU_MC71_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00657dcu)	/* Read Data and B71t Flip Register 62 */
#define MTU_MC71_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00657deu)	/* Read Data and B71t Flip Register 63 */
#define MTU_MC71_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00657e0u)	/* Read Data and B71t Flip Register 64 */
#define MTU_MC71_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00657e2u)	/* Read Data and B71t Flip Register 65 */
#define MTU_MC71_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00657e4u)	/* Read Data and B71t Flip Register 66 */
#define MTU_MC71_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006576eu)	/* Read Data and B71t Flip Register 7 */
#define MTU_MC71_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065770u)	/* Read Data and B71t Flip Register 8 */
#define MTU_MC71_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065772u)	/* Read Data and B71t Flip Register 9 */
#define MTU_MC72_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065860u)	/* Read Data and B72t Flip Register 0 */
#define MTU_MC72_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065862u)	/* Read Data and B72t Flip Register 1 */
#define MTU_MC72_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065874u)	/* Read Data and B72t Flip Register 10 */
#define MTU_MC72_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065876u)	/* Read Data and B72t Flip Register 11 */
#define MTU_MC72_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065878u)	/* Read Data and B72t Flip Register 12 */
#define MTU_MC72_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006587au)	/* Read Data and B72t Flip Register 13 */
#define MTU_MC72_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006587cu)	/* Read Data and B72t Flip Register 14 */
#define MTU_MC72_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006587eu)	/* Read Data and B72t Flip Register 15 */
#define MTU_MC72_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065880u)	/* Read Data and B72t Flip Register 16 */
#define MTU_MC72_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065882u)	/* Read Data and B72t Flip Register 17 */
#define MTU_MC72_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065884u)	/* Read Data and B72t Flip Register 18 */
#define MTU_MC72_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065886u)	/* Read Data and B72t Flip Register 19 */
#define MTU_MC72_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065864u)	/* Read Data and B72t Flip Register 2 */
#define MTU_MC72_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065888u)	/* Read Data and B72t Flip Register 20 */
#define MTU_MC72_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006588au)	/* Read Data and B72t Flip Register 21 */
#define MTU_MC72_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006588cu)	/* Read Data and B72t Flip Register 22 */
#define MTU_MC72_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006588eu)	/* Read Data and B72t Flip Register 23 */
#define MTU_MC72_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065890u)	/* Read Data and B72t Flip Register 24 */
#define MTU_MC72_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065892u)	/* Read Data and B72t Flip Register 25 */
#define MTU_MC72_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065894u)	/* Read Data and B72t Flip Register 26 */
#define MTU_MC72_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065896u)	/* Read Data and B72t Flip Register 27 */
#define MTU_MC72_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065898u)	/* Read Data and B72t Flip Register 28 */
#define MTU_MC72_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006589au)	/* Read Data and B72t Flip Register 29 */
#define MTU_MC72_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065866u)	/* Read Data and B72t Flip Register 3 */
#define MTU_MC72_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006589cu)	/* Read Data and B72t Flip Register 30 */
#define MTU_MC72_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006589eu)	/* Read Data and B72t Flip Register 31 */
#define MTU_MC72_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00658a0u)	/* Read Data and B72t Flip Register 32 */
#define MTU_MC72_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00658a2u)	/* Read Data and B72t Flip Register 33 */
#define MTU_MC72_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00658a4u)	/* Read Data and B72t Flip Register 34 */
#define MTU_MC72_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00658a6u)	/* Read Data and B72t Flip Register 35 */
#define MTU_MC72_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00658a8u)	/* Read Data and B72t Flip Register 36 */
#define MTU_MC72_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00658aau)	/* Read Data and B72t Flip Register 37 */
#define MTU_MC72_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00658acu)	/* Read Data and B72t Flip Register 38 */
#define MTU_MC72_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00658aeu)	/* Read Data and B72t Flip Register 39 */
#define MTU_MC72_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065868u)	/* Read Data and B72t Flip Register 4 */
#define MTU_MC72_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00658b0u)	/* Read Data and B72t Flip Register 40 */
#define MTU_MC72_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00658b2u)	/* Read Data and B72t Flip Register 41 */
#define MTU_MC72_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00658b4u)	/* Read Data and B72t Flip Register 42 */
#define MTU_MC72_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00658b6u)	/* Read Data and B72t Flip Register 43 */
#define MTU_MC72_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00658b8u)	/* Read Data and B72t Flip Register 44 */
#define MTU_MC72_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00658bau)	/* Read Data and B72t Flip Register 45 */
#define MTU_MC72_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00658bcu)	/* Read Data and B72t Flip Register 46 */
#define MTU_MC72_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00658beu)	/* Read Data and B72t Flip Register 47 */
#define MTU_MC72_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00658c0u)	/* Read Data and B72t Flip Register 48 */
#define MTU_MC72_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00658c2u)	/* Read Data and B72t Flip Register 49 */
#define MTU_MC72_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006586au)	/* Read Data and B72t Flip Register 5 */
#define MTU_MC72_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00658c4u)	/* Read Data and B72t Flip Register 50 */
#define MTU_MC72_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00658c6u)	/* Read Data and B72t Flip Register 51 */
#define MTU_MC72_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00658c8u)	/* Read Data and B72t Flip Register 52 */
#define MTU_MC72_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00658cau)	/* Read Data and B72t Flip Register 53 */
#define MTU_MC72_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00658ccu)	/* Read Data and B72t Flip Register 54 */
#define MTU_MC72_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00658ceu)	/* Read Data and B72t Flip Register 55 */
#define MTU_MC72_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00658d0u)	/* Read Data and B72t Flip Register 56 */
#define MTU_MC72_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00658d2u)	/* Read Data and B72t Flip Register 57 */
#define MTU_MC72_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00658d4u)	/* Read Data and B72t Flip Register 58 */
#define MTU_MC72_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00658d6u)	/* Read Data and B72t Flip Register 59 */
#define MTU_MC72_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006586cu)	/* Read Data and B72t Flip Register 6 */
#define MTU_MC72_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00658d8u)	/* Read Data and B72t Flip Register 60 */
#define MTU_MC72_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00658dau)	/* Read Data and B72t Flip Register 61 */
#define MTU_MC72_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00658dcu)	/* Read Data and B72t Flip Register 62 */
#define MTU_MC72_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00658deu)	/* Read Data and B72t Flip Register 63 */
#define MTU_MC72_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00658e0u)	/* Read Data and B72t Flip Register 64 */
#define MTU_MC72_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00658e2u)	/* Read Data and B72t Flip Register 65 */
#define MTU_MC72_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00658e4u)	/* Read Data and B72t Flip Register 66 */
#define MTU_MC72_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006586eu)	/* Read Data and B72t Flip Register 7 */
#define MTU_MC72_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065870u)	/* Read Data and B72t Flip Register 8 */
#define MTU_MC72_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065872u)	/* Read Data and B72t Flip Register 9 */
#define MTU_MC73_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065960u)	/* Read Data and B73t Flip Register 0 */
#define MTU_MC73_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065962u)	/* Read Data and B73t Flip Register 1 */
#define MTU_MC73_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065974u)	/* Read Data and B73t Flip Register 10 */
#define MTU_MC73_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065976u)	/* Read Data and B73t Flip Register 11 */
#define MTU_MC73_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065978u)	/* Read Data and B73t Flip Register 12 */
#define MTU_MC73_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006597au)	/* Read Data and B73t Flip Register 13 */
#define MTU_MC73_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006597cu)	/* Read Data and B73t Flip Register 14 */
#define MTU_MC73_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006597eu)	/* Read Data and B73t Flip Register 15 */
#define MTU_MC73_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065980u)	/* Read Data and B73t Flip Register 16 */
#define MTU_MC73_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065982u)	/* Read Data and B73t Flip Register 17 */
#define MTU_MC73_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065984u)	/* Read Data and B73t Flip Register 18 */
#define MTU_MC73_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065986u)	/* Read Data and B73t Flip Register 19 */
#define MTU_MC73_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065964u)	/* Read Data and B73t Flip Register 2 */
#define MTU_MC73_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065988u)	/* Read Data and B73t Flip Register 20 */
#define MTU_MC73_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006598au)	/* Read Data and B73t Flip Register 21 */
#define MTU_MC73_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006598cu)	/* Read Data and B73t Flip Register 22 */
#define MTU_MC73_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006598eu)	/* Read Data and B73t Flip Register 23 */
#define MTU_MC73_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065990u)	/* Read Data and B73t Flip Register 24 */
#define MTU_MC73_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065992u)	/* Read Data and B73t Flip Register 25 */
#define MTU_MC73_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065994u)	/* Read Data and B73t Flip Register 26 */
#define MTU_MC73_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065996u)	/* Read Data and B73t Flip Register 27 */
#define MTU_MC73_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065998u)	/* Read Data and B73t Flip Register 28 */
#define MTU_MC73_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006599au)	/* Read Data and B73t Flip Register 29 */
#define MTU_MC73_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065966u)	/* Read Data and B73t Flip Register 3 */
#define MTU_MC73_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006599cu)	/* Read Data and B73t Flip Register 30 */
#define MTU_MC73_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006599eu)	/* Read Data and B73t Flip Register 31 */
#define MTU_MC73_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00659a0u)	/* Read Data and B73t Flip Register 32 */
#define MTU_MC73_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00659a2u)	/* Read Data and B73t Flip Register 33 */
#define MTU_MC73_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00659a4u)	/* Read Data and B73t Flip Register 34 */
#define MTU_MC73_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00659a6u)	/* Read Data and B73t Flip Register 35 */
#define MTU_MC73_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00659a8u)	/* Read Data and B73t Flip Register 36 */
#define MTU_MC73_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00659aau)	/* Read Data and B73t Flip Register 37 */
#define MTU_MC73_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00659acu)	/* Read Data and B73t Flip Register 38 */
#define MTU_MC73_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00659aeu)	/* Read Data and B73t Flip Register 39 */
#define MTU_MC73_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065968u)	/* Read Data and B73t Flip Register 4 */
#define MTU_MC73_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00659b0u)	/* Read Data and B73t Flip Register 40 */
#define MTU_MC73_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00659b2u)	/* Read Data and B73t Flip Register 41 */
#define MTU_MC73_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00659b4u)	/* Read Data and B73t Flip Register 42 */
#define MTU_MC73_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00659b6u)	/* Read Data and B73t Flip Register 43 */
#define MTU_MC73_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00659b8u)	/* Read Data and B73t Flip Register 44 */
#define MTU_MC73_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00659bau)	/* Read Data and B73t Flip Register 45 */
#define MTU_MC73_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00659bcu)	/* Read Data and B73t Flip Register 46 */
#define MTU_MC73_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00659beu)	/* Read Data and B73t Flip Register 47 */
#define MTU_MC73_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00659c0u)	/* Read Data and B73t Flip Register 48 */
#define MTU_MC73_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00659c2u)	/* Read Data and B73t Flip Register 49 */
#define MTU_MC73_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006596au)	/* Read Data and B73t Flip Register 5 */
#define MTU_MC73_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00659c4u)	/* Read Data and B73t Flip Register 50 */
#define MTU_MC73_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00659c6u)	/* Read Data and B73t Flip Register 51 */
#define MTU_MC73_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00659c8u)	/* Read Data and B73t Flip Register 52 */
#define MTU_MC73_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00659cau)	/* Read Data and B73t Flip Register 53 */
#define MTU_MC73_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00659ccu)	/* Read Data and B73t Flip Register 54 */
#define MTU_MC73_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00659ceu)	/* Read Data and B73t Flip Register 55 */
#define MTU_MC73_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00659d0u)	/* Read Data and B73t Flip Register 56 */
#define MTU_MC73_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00659d2u)	/* Read Data and B73t Flip Register 57 */
#define MTU_MC73_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00659d4u)	/* Read Data and B73t Flip Register 58 */
#define MTU_MC73_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00659d6u)	/* Read Data and B73t Flip Register 59 */
#define MTU_MC73_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006596cu)	/* Read Data and B73t Flip Register 6 */
#define MTU_MC73_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00659d8u)	/* Read Data and B73t Flip Register 60 */
#define MTU_MC73_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00659dau)	/* Read Data and B73t Flip Register 61 */
#define MTU_MC73_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00659dcu)	/* Read Data and B73t Flip Register 62 */
#define MTU_MC73_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00659deu)	/* Read Data and B73t Flip Register 63 */
#define MTU_MC73_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00659e0u)	/* Read Data and B73t Flip Register 64 */
#define MTU_MC73_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00659e2u)	/* Read Data and B73t Flip Register 65 */
#define MTU_MC73_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00659e4u)	/* Read Data and B73t Flip Register 66 */
#define MTU_MC73_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006596eu)	/* Read Data and B73t Flip Register 7 */
#define MTU_MC73_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065970u)	/* Read Data and B73t Flip Register 8 */
#define MTU_MC73_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065972u)	/* Read Data and B73t Flip Register 9 */
#define MTU_MC74_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065a60u)	/* Read Data and B74t Flip Register 0 */
#define MTU_MC74_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065a62u)	/* Read Data and B74t Flip Register 1 */
#define MTU_MC74_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065a74u)	/* Read Data and B74t Flip Register 10 */
#define MTU_MC74_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065a76u)	/* Read Data and B74t Flip Register 11 */
#define MTU_MC74_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065a78u)	/* Read Data and B74t Flip Register 12 */
#define MTU_MC74_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0065a7au)	/* Read Data and B74t Flip Register 13 */
#define MTU_MC74_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0065a7cu)	/* Read Data and B74t Flip Register 14 */
#define MTU_MC74_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0065a7eu)	/* Read Data and B74t Flip Register 15 */
#define MTU_MC74_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065a80u)	/* Read Data and B74t Flip Register 16 */
#define MTU_MC74_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065a82u)	/* Read Data and B74t Flip Register 17 */
#define MTU_MC74_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065a84u)	/* Read Data and B74t Flip Register 18 */
#define MTU_MC74_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065a86u)	/* Read Data and B74t Flip Register 19 */
#define MTU_MC74_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065a64u)	/* Read Data and B74t Flip Register 2 */
#define MTU_MC74_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065a88u)	/* Read Data and B74t Flip Register 20 */
#define MTU_MC74_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0065a8au)	/* Read Data and B74t Flip Register 21 */
#define MTU_MC74_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0065a8cu)	/* Read Data and B74t Flip Register 22 */
#define MTU_MC74_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0065a8eu)	/* Read Data and B74t Flip Register 23 */
#define MTU_MC74_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065a90u)	/* Read Data and B74t Flip Register 24 */
#define MTU_MC74_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065a92u)	/* Read Data and B74t Flip Register 25 */
#define MTU_MC74_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065a94u)	/* Read Data and B74t Flip Register 26 */
#define MTU_MC74_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065a96u)	/* Read Data and B74t Flip Register 27 */
#define MTU_MC74_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065a98u)	/* Read Data and B74t Flip Register 28 */
#define MTU_MC74_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0065a9au)	/* Read Data and B74t Flip Register 29 */
#define MTU_MC74_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065a66u)	/* Read Data and B74t Flip Register 3 */
#define MTU_MC74_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0065a9cu)	/* Read Data and B74t Flip Register 30 */
#define MTU_MC74_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0065a9eu)	/* Read Data and B74t Flip Register 31 */
#define MTU_MC74_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0065aa0u)	/* Read Data and B74t Flip Register 32 */
#define MTU_MC74_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0065aa2u)	/* Read Data and B74t Flip Register 33 */
#define MTU_MC74_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0065aa4u)	/* Read Data and B74t Flip Register 34 */
#define MTU_MC74_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0065aa6u)	/* Read Data and B74t Flip Register 35 */
#define MTU_MC74_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0065aa8u)	/* Read Data and B74t Flip Register 36 */
#define MTU_MC74_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0065aaau)	/* Read Data and B74t Flip Register 37 */
#define MTU_MC74_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0065aacu)	/* Read Data and B74t Flip Register 38 */
#define MTU_MC74_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0065aaeu)	/* Read Data and B74t Flip Register 39 */
#define MTU_MC74_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065a68u)	/* Read Data and B74t Flip Register 4 */
#define MTU_MC74_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0065ab0u)	/* Read Data and B74t Flip Register 40 */
#define MTU_MC74_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0065ab2u)	/* Read Data and B74t Flip Register 41 */
#define MTU_MC74_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0065ab4u)	/* Read Data and B74t Flip Register 42 */
#define MTU_MC74_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0065ab6u)	/* Read Data and B74t Flip Register 43 */
#define MTU_MC74_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0065ab8u)	/* Read Data and B74t Flip Register 44 */
#define MTU_MC74_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0065abau)	/* Read Data and B74t Flip Register 45 */
#define MTU_MC74_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0065abcu)	/* Read Data and B74t Flip Register 46 */
#define MTU_MC74_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0065abeu)	/* Read Data and B74t Flip Register 47 */
#define MTU_MC74_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0065ac0u)	/* Read Data and B74t Flip Register 48 */
#define MTU_MC74_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0065ac2u)	/* Read Data and B74t Flip Register 49 */
#define MTU_MC74_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0065a6au)	/* Read Data and B74t Flip Register 5 */
#define MTU_MC74_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0065ac4u)	/* Read Data and B74t Flip Register 50 */
#define MTU_MC74_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0065ac6u)	/* Read Data and B74t Flip Register 51 */
#define MTU_MC74_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0065ac8u)	/* Read Data and B74t Flip Register 52 */
#define MTU_MC74_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0065acau)	/* Read Data and B74t Flip Register 53 */
#define MTU_MC74_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0065accu)	/* Read Data and B74t Flip Register 54 */
#define MTU_MC74_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0065aceu)	/* Read Data and B74t Flip Register 55 */
#define MTU_MC74_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0065ad0u)	/* Read Data and B74t Flip Register 56 */
#define MTU_MC74_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0065ad2u)	/* Read Data and B74t Flip Register 57 */
#define MTU_MC74_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0065ad4u)	/* Read Data and B74t Flip Register 58 */
#define MTU_MC74_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0065ad6u)	/* Read Data and B74t Flip Register 59 */
#define MTU_MC74_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0065a6cu)	/* Read Data and B74t Flip Register 6 */
#define MTU_MC74_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0065ad8u)	/* Read Data and B74t Flip Register 60 */
#define MTU_MC74_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0065adau)	/* Read Data and B74t Flip Register 61 */
#define MTU_MC74_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0065adcu)	/* Read Data and B74t Flip Register 62 */
#define MTU_MC74_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0065adeu)	/* Read Data and B74t Flip Register 63 */
#define MTU_MC74_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0065ae0u)	/* Read Data and B74t Flip Register 64 */
#define MTU_MC74_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0065ae2u)	/* Read Data and B74t Flip Register 65 */
#define MTU_MC74_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0065ae4u)	/* Read Data and B74t Flip Register 66 */
#define MTU_MC74_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0065a6eu)	/* Read Data and B74t Flip Register 7 */
#define MTU_MC74_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065a70u)	/* Read Data and B74t Flip Register 8 */
#define MTU_MC74_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065a72u)	/* Read Data and B74t Flip Register 9 */
#define MTU_MC75_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065b60u)	/* Read Data and B75t Flip Register 0 */
#define MTU_MC75_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065b62u)	/* Read Data and B75t Flip Register 1 */
#define MTU_MC75_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065b74u)	/* Read Data and B75t Flip Register 10 */
#define MTU_MC75_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065b76u)	/* Read Data and B75t Flip Register 11 */
#define MTU_MC75_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065b78u)	/* Read Data and B75t Flip Register 12 */
#define MTU_MC75_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0065b7au)	/* Read Data and B75t Flip Register 13 */
#define MTU_MC75_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0065b7cu)	/* Read Data and B75t Flip Register 14 */
#define MTU_MC75_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0065b7eu)	/* Read Data and B75t Flip Register 15 */
#define MTU_MC75_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065b80u)	/* Read Data and B75t Flip Register 16 */
#define MTU_MC75_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065b82u)	/* Read Data and B75t Flip Register 17 */
#define MTU_MC75_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065b84u)	/* Read Data and B75t Flip Register 18 */
#define MTU_MC75_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065b86u)	/* Read Data and B75t Flip Register 19 */
#define MTU_MC75_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065b64u)	/* Read Data and B75t Flip Register 2 */
#define MTU_MC75_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065b88u)	/* Read Data and B75t Flip Register 20 */
#define MTU_MC75_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0065b8au)	/* Read Data and B75t Flip Register 21 */
#define MTU_MC75_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0065b8cu)	/* Read Data and B75t Flip Register 22 */
#define MTU_MC75_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0065b8eu)	/* Read Data and B75t Flip Register 23 */
#define MTU_MC75_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065b90u)	/* Read Data and B75t Flip Register 24 */
#define MTU_MC75_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065b92u)	/* Read Data and B75t Flip Register 25 */
#define MTU_MC75_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065b94u)	/* Read Data and B75t Flip Register 26 */
#define MTU_MC75_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065b96u)	/* Read Data and B75t Flip Register 27 */
#define MTU_MC75_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065b98u)	/* Read Data and B75t Flip Register 28 */
#define MTU_MC75_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0065b9au)	/* Read Data and B75t Flip Register 29 */
#define MTU_MC75_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065b66u)	/* Read Data and B75t Flip Register 3 */
#define MTU_MC75_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0065b9cu)	/* Read Data and B75t Flip Register 30 */
#define MTU_MC75_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0065b9eu)	/* Read Data and B75t Flip Register 31 */
#define MTU_MC75_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0065ba0u)	/* Read Data and B75t Flip Register 32 */
#define MTU_MC75_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0065ba2u)	/* Read Data and B75t Flip Register 33 */
#define MTU_MC75_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0065ba4u)	/* Read Data and B75t Flip Register 34 */
#define MTU_MC75_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0065ba6u)	/* Read Data and B75t Flip Register 35 */
#define MTU_MC75_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0065ba8u)	/* Read Data and B75t Flip Register 36 */
#define MTU_MC75_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0065baau)	/* Read Data and B75t Flip Register 37 */
#define MTU_MC75_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0065bacu)	/* Read Data and B75t Flip Register 38 */
#define MTU_MC75_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0065baeu)	/* Read Data and B75t Flip Register 39 */
#define MTU_MC75_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065b68u)	/* Read Data and B75t Flip Register 4 */
#define MTU_MC75_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0065bb0u)	/* Read Data and B75t Flip Register 40 */
#define MTU_MC75_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0065bb2u)	/* Read Data and B75t Flip Register 41 */
#define MTU_MC75_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0065bb4u)	/* Read Data and B75t Flip Register 42 */
#define MTU_MC75_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0065bb6u)	/* Read Data and B75t Flip Register 43 */
#define MTU_MC75_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0065bb8u)	/* Read Data and B75t Flip Register 44 */
#define MTU_MC75_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0065bbau)	/* Read Data and B75t Flip Register 45 */
#define MTU_MC75_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0065bbcu)	/* Read Data and B75t Flip Register 46 */
#define MTU_MC75_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0065bbeu)	/* Read Data and B75t Flip Register 47 */
#define MTU_MC75_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0065bc0u)	/* Read Data and B75t Flip Register 48 */
#define MTU_MC75_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0065bc2u)	/* Read Data and B75t Flip Register 49 */
#define MTU_MC75_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0065b6au)	/* Read Data and B75t Flip Register 5 */
#define MTU_MC75_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0065bc4u)	/* Read Data and B75t Flip Register 50 */
#define MTU_MC75_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0065bc6u)	/* Read Data and B75t Flip Register 51 */
#define MTU_MC75_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0065bc8u)	/* Read Data and B75t Flip Register 52 */
#define MTU_MC75_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0065bcau)	/* Read Data and B75t Flip Register 53 */
#define MTU_MC75_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0065bccu)	/* Read Data and B75t Flip Register 54 */
#define MTU_MC75_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0065bceu)	/* Read Data and B75t Flip Register 55 */
#define MTU_MC75_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0065bd0u)	/* Read Data and B75t Flip Register 56 */
#define MTU_MC75_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0065bd2u)	/* Read Data and B75t Flip Register 57 */
#define MTU_MC75_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0065bd4u)	/* Read Data and B75t Flip Register 58 */
#define MTU_MC75_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0065bd6u)	/* Read Data and B75t Flip Register 59 */
#define MTU_MC75_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0065b6cu)	/* Read Data and B75t Flip Register 6 */
#define MTU_MC75_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0065bd8u)	/* Read Data and B75t Flip Register 60 */
#define MTU_MC75_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0065bdau)	/* Read Data and B75t Flip Register 61 */
#define MTU_MC75_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0065bdcu)	/* Read Data and B75t Flip Register 62 */
#define MTU_MC75_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0065bdeu)	/* Read Data and B75t Flip Register 63 */
#define MTU_MC75_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0065be0u)	/* Read Data and B75t Flip Register 64 */
#define MTU_MC75_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0065be2u)	/* Read Data and B75t Flip Register 65 */
#define MTU_MC75_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0065be4u)	/* Read Data and B75t Flip Register 66 */
#define MTU_MC75_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0065b6eu)	/* Read Data and B75t Flip Register 7 */
#define MTU_MC75_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065b70u)	/* Read Data and B75t Flip Register 8 */
#define MTU_MC75_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065b72u)	/* Read Data and B75t Flip Register 9 */
#define MTU_MC76_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065c60u)	/* Read Data and B76t Flip Register 0 */
#define MTU_MC76_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065c62u)	/* Read Data and B76t Flip Register 1 */
#define MTU_MC76_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065c74u)	/* Read Data and B76t Flip Register 10 */
#define MTU_MC76_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065c76u)	/* Read Data and B76t Flip Register 11 */
#define MTU_MC76_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065c78u)	/* Read Data and B76t Flip Register 12 */
#define MTU_MC76_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0065c7au)	/* Read Data and B76t Flip Register 13 */
#define MTU_MC76_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0065c7cu)	/* Read Data and B76t Flip Register 14 */
#define MTU_MC76_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0065c7eu)	/* Read Data and B76t Flip Register 15 */
#define MTU_MC76_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065c80u)	/* Read Data and B76t Flip Register 16 */
#define MTU_MC76_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065c82u)	/* Read Data and B76t Flip Register 17 */
#define MTU_MC76_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065c84u)	/* Read Data and B76t Flip Register 18 */
#define MTU_MC76_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065c86u)	/* Read Data and B76t Flip Register 19 */
#define MTU_MC76_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065c64u)	/* Read Data and B76t Flip Register 2 */
#define MTU_MC76_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065c88u)	/* Read Data and B76t Flip Register 20 */
#define MTU_MC76_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0065c8au)	/* Read Data and B76t Flip Register 21 */
#define MTU_MC76_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0065c8cu)	/* Read Data and B76t Flip Register 22 */
#define MTU_MC76_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0065c8eu)	/* Read Data and B76t Flip Register 23 */
#define MTU_MC76_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065c90u)	/* Read Data and B76t Flip Register 24 */
#define MTU_MC76_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065c92u)	/* Read Data and B76t Flip Register 25 */
#define MTU_MC76_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065c94u)	/* Read Data and B76t Flip Register 26 */
#define MTU_MC76_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065c96u)	/* Read Data and B76t Flip Register 27 */
#define MTU_MC76_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065c98u)	/* Read Data and B76t Flip Register 28 */
#define MTU_MC76_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0065c9au)	/* Read Data and B76t Flip Register 29 */
#define MTU_MC76_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065c66u)	/* Read Data and B76t Flip Register 3 */
#define MTU_MC76_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0065c9cu)	/* Read Data and B76t Flip Register 30 */
#define MTU_MC76_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0065c9eu)	/* Read Data and B76t Flip Register 31 */
#define MTU_MC76_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0065ca0u)	/* Read Data and B76t Flip Register 32 */
#define MTU_MC76_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0065ca2u)	/* Read Data and B76t Flip Register 33 */
#define MTU_MC76_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0065ca4u)	/* Read Data and B76t Flip Register 34 */
#define MTU_MC76_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0065ca6u)	/* Read Data and B76t Flip Register 35 */
#define MTU_MC76_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0065ca8u)	/* Read Data and B76t Flip Register 36 */
#define MTU_MC76_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0065caau)	/* Read Data and B76t Flip Register 37 */
#define MTU_MC76_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0065cacu)	/* Read Data and B76t Flip Register 38 */
#define MTU_MC76_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0065caeu)	/* Read Data and B76t Flip Register 39 */
#define MTU_MC76_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065c68u)	/* Read Data and B76t Flip Register 4 */
#define MTU_MC76_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0065cb0u)	/* Read Data and B76t Flip Register 40 */
#define MTU_MC76_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0065cb2u)	/* Read Data and B76t Flip Register 41 */
#define MTU_MC76_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0065cb4u)	/* Read Data and B76t Flip Register 42 */
#define MTU_MC76_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0065cb6u)	/* Read Data and B76t Flip Register 43 */
#define MTU_MC76_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0065cb8u)	/* Read Data and B76t Flip Register 44 */
#define MTU_MC76_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0065cbau)	/* Read Data and B76t Flip Register 45 */
#define MTU_MC76_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0065cbcu)	/* Read Data and B76t Flip Register 46 */
#define MTU_MC76_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0065cbeu)	/* Read Data and B76t Flip Register 47 */
#define MTU_MC76_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0065cc0u)	/* Read Data and B76t Flip Register 48 */
#define MTU_MC76_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0065cc2u)	/* Read Data and B76t Flip Register 49 */
#define MTU_MC76_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0065c6au)	/* Read Data and B76t Flip Register 5 */
#define MTU_MC76_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0065cc4u)	/* Read Data and B76t Flip Register 50 */
#define MTU_MC76_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0065cc6u)	/* Read Data and B76t Flip Register 51 */
#define MTU_MC76_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0065cc8u)	/* Read Data and B76t Flip Register 52 */
#define MTU_MC76_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0065ccau)	/* Read Data and B76t Flip Register 53 */
#define MTU_MC76_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0065cccu)	/* Read Data and B76t Flip Register 54 */
#define MTU_MC76_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0065cceu)	/* Read Data and B76t Flip Register 55 */
#define MTU_MC76_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0065cd0u)	/* Read Data and B76t Flip Register 56 */
#define MTU_MC76_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0065cd2u)	/* Read Data and B76t Flip Register 57 */
#define MTU_MC76_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0065cd4u)	/* Read Data and B76t Flip Register 58 */
#define MTU_MC76_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0065cd6u)	/* Read Data and B76t Flip Register 59 */
#define MTU_MC76_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0065c6cu)	/* Read Data and B76t Flip Register 6 */
#define MTU_MC76_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0065cd8u)	/* Read Data and B76t Flip Register 60 */
#define MTU_MC76_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0065cdau)	/* Read Data and B76t Flip Register 61 */
#define MTU_MC76_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0065cdcu)	/* Read Data and B76t Flip Register 62 */
#define MTU_MC76_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0065cdeu)	/* Read Data and B76t Flip Register 63 */
#define MTU_MC76_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0065ce0u)	/* Read Data and B76t Flip Register 64 */
#define MTU_MC76_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0065ce2u)	/* Read Data and B76t Flip Register 65 */
#define MTU_MC76_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0065ce4u)	/* Read Data and B76t Flip Register 66 */
#define MTU_MC76_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0065c6eu)	/* Read Data and B76t Flip Register 7 */
#define MTU_MC76_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065c70u)	/* Read Data and B76t Flip Register 8 */
#define MTU_MC76_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065c72u)	/* Read Data and B76t Flip Register 9 */
#define MTU_MC77_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065d60u)	/* Read Data and B77t Flip Register 0 */
#define MTU_MC77_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065d62u)	/* Read Data and B77t Flip Register 1 */
#define MTU_MC77_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065d74u)	/* Read Data and B77t Flip Register 10 */
#define MTU_MC77_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065d76u)	/* Read Data and B77t Flip Register 11 */
#define MTU_MC77_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065d78u)	/* Read Data and B77t Flip Register 12 */
#define MTU_MC77_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0065d7au)	/* Read Data and B77t Flip Register 13 */
#define MTU_MC77_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0065d7cu)	/* Read Data and B77t Flip Register 14 */
#define MTU_MC77_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0065d7eu)	/* Read Data and B77t Flip Register 15 */
#define MTU_MC77_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065d80u)	/* Read Data and B77t Flip Register 16 */
#define MTU_MC77_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065d82u)	/* Read Data and B77t Flip Register 17 */
#define MTU_MC77_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065d84u)	/* Read Data and B77t Flip Register 18 */
#define MTU_MC77_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065d86u)	/* Read Data and B77t Flip Register 19 */
#define MTU_MC77_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065d64u)	/* Read Data and B77t Flip Register 2 */
#define MTU_MC77_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065d88u)	/* Read Data and B77t Flip Register 20 */
#define MTU_MC77_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0065d8au)	/* Read Data and B77t Flip Register 21 */
#define MTU_MC77_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0065d8cu)	/* Read Data and B77t Flip Register 22 */
#define MTU_MC77_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0065d8eu)	/* Read Data and B77t Flip Register 23 */
#define MTU_MC77_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065d90u)	/* Read Data and B77t Flip Register 24 */
#define MTU_MC77_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065d92u)	/* Read Data and B77t Flip Register 25 */
#define MTU_MC77_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065d94u)	/* Read Data and B77t Flip Register 26 */
#define MTU_MC77_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065d96u)	/* Read Data and B77t Flip Register 27 */
#define MTU_MC77_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065d98u)	/* Read Data and B77t Flip Register 28 */
#define MTU_MC77_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0065d9au)	/* Read Data and B77t Flip Register 29 */
#define MTU_MC77_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065d66u)	/* Read Data and B77t Flip Register 3 */
#define MTU_MC77_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0065d9cu)	/* Read Data and B77t Flip Register 30 */
#define MTU_MC77_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0065d9eu)	/* Read Data and B77t Flip Register 31 */
#define MTU_MC77_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0065da0u)	/* Read Data and B77t Flip Register 32 */
#define MTU_MC77_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0065da2u)	/* Read Data and B77t Flip Register 33 */
#define MTU_MC77_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0065da4u)	/* Read Data and B77t Flip Register 34 */
#define MTU_MC77_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0065da6u)	/* Read Data and B77t Flip Register 35 */
#define MTU_MC77_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0065da8u)	/* Read Data and B77t Flip Register 36 */
#define MTU_MC77_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0065daau)	/* Read Data and B77t Flip Register 37 */
#define MTU_MC77_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0065dacu)	/* Read Data and B77t Flip Register 38 */
#define MTU_MC77_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0065daeu)	/* Read Data and B77t Flip Register 39 */
#define MTU_MC77_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065d68u)	/* Read Data and B77t Flip Register 4 */
#define MTU_MC77_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0065db0u)	/* Read Data and B77t Flip Register 40 */
#define MTU_MC77_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0065db2u)	/* Read Data and B77t Flip Register 41 */
#define MTU_MC77_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0065db4u)	/* Read Data and B77t Flip Register 42 */
#define MTU_MC77_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0065db6u)	/* Read Data and B77t Flip Register 43 */
#define MTU_MC77_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0065db8u)	/* Read Data and B77t Flip Register 44 */
#define MTU_MC77_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0065dbau)	/* Read Data and B77t Flip Register 45 */
#define MTU_MC77_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0065dbcu)	/* Read Data and B77t Flip Register 46 */
#define MTU_MC77_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0065dbeu)	/* Read Data and B77t Flip Register 47 */
#define MTU_MC77_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0065dc0u)	/* Read Data and B77t Flip Register 48 */
#define MTU_MC77_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0065dc2u)	/* Read Data and B77t Flip Register 49 */
#define MTU_MC77_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0065d6au)	/* Read Data and B77t Flip Register 5 */
#define MTU_MC77_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0065dc4u)	/* Read Data and B77t Flip Register 50 */
#define MTU_MC77_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0065dc6u)	/* Read Data and B77t Flip Register 51 */
#define MTU_MC77_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0065dc8u)	/* Read Data and B77t Flip Register 52 */
#define MTU_MC77_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0065dcau)	/* Read Data and B77t Flip Register 53 */
#define MTU_MC77_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0065dccu)	/* Read Data and B77t Flip Register 54 */
#define MTU_MC77_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0065dceu)	/* Read Data and B77t Flip Register 55 */
#define MTU_MC77_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0065dd0u)	/* Read Data and B77t Flip Register 56 */
#define MTU_MC77_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0065dd2u)	/* Read Data and B77t Flip Register 57 */
#define MTU_MC77_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0065dd4u)	/* Read Data and B77t Flip Register 58 */
#define MTU_MC77_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0065dd6u)	/* Read Data and B77t Flip Register 59 */
#define MTU_MC77_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0065d6cu)	/* Read Data and B77t Flip Register 6 */
#define MTU_MC77_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0065dd8u)	/* Read Data and B77t Flip Register 60 */
#define MTU_MC77_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0065ddau)	/* Read Data and B77t Flip Register 61 */
#define MTU_MC77_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0065ddcu)	/* Read Data and B77t Flip Register 62 */
#define MTU_MC77_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0065ddeu)	/* Read Data and B77t Flip Register 63 */
#define MTU_MC77_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0065de0u)	/* Read Data and B77t Flip Register 64 */
#define MTU_MC77_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0065de2u)	/* Read Data and B77t Flip Register 65 */
#define MTU_MC77_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0065de4u)	/* Read Data and B77t Flip Register 66 */
#define MTU_MC77_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0065d6eu)	/* Read Data and B77t Flip Register 7 */
#define MTU_MC77_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065d70u)	/* Read Data and B77t Flip Register 8 */
#define MTU_MC77_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065d72u)	/* Read Data and B77t Flip Register 9 */
#define MTU_MC78_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065e60u)	/* Read Data and B78t Flip Register 0 */
#define MTU_MC78_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065e62u)	/* Read Data and B78t Flip Register 1 */
#define MTU_MC78_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065e74u)	/* Read Data and B78t Flip Register 10 */
#define MTU_MC78_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065e76u)	/* Read Data and B78t Flip Register 11 */
#define MTU_MC78_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065e78u)	/* Read Data and B78t Flip Register 12 */
#define MTU_MC78_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0065e7au)	/* Read Data and B78t Flip Register 13 */
#define MTU_MC78_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0065e7cu)	/* Read Data and B78t Flip Register 14 */
#define MTU_MC78_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0065e7eu)	/* Read Data and B78t Flip Register 15 */
#define MTU_MC78_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065e80u)	/* Read Data and B78t Flip Register 16 */
#define MTU_MC78_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065e82u)	/* Read Data and B78t Flip Register 17 */
#define MTU_MC78_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065e84u)	/* Read Data and B78t Flip Register 18 */
#define MTU_MC78_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065e86u)	/* Read Data and B78t Flip Register 19 */
#define MTU_MC78_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065e64u)	/* Read Data and B78t Flip Register 2 */
#define MTU_MC78_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065e88u)	/* Read Data and B78t Flip Register 20 */
#define MTU_MC78_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0065e8au)	/* Read Data and B78t Flip Register 21 */
#define MTU_MC78_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0065e8cu)	/* Read Data and B78t Flip Register 22 */
#define MTU_MC78_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0065e8eu)	/* Read Data and B78t Flip Register 23 */
#define MTU_MC78_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065e90u)	/* Read Data and B78t Flip Register 24 */
#define MTU_MC78_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065e92u)	/* Read Data and B78t Flip Register 25 */
#define MTU_MC78_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065e94u)	/* Read Data and B78t Flip Register 26 */
#define MTU_MC78_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065e96u)	/* Read Data and B78t Flip Register 27 */
#define MTU_MC78_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065e98u)	/* Read Data and B78t Flip Register 28 */
#define MTU_MC78_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0065e9au)	/* Read Data and B78t Flip Register 29 */
#define MTU_MC78_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065e66u)	/* Read Data and B78t Flip Register 3 */
#define MTU_MC78_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0065e9cu)	/* Read Data and B78t Flip Register 30 */
#define MTU_MC78_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0065e9eu)	/* Read Data and B78t Flip Register 31 */
#define MTU_MC78_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0065ea0u)	/* Read Data and B78t Flip Register 32 */
#define MTU_MC78_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0065ea2u)	/* Read Data and B78t Flip Register 33 */
#define MTU_MC78_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0065ea4u)	/* Read Data and B78t Flip Register 34 */
#define MTU_MC78_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0065ea6u)	/* Read Data and B78t Flip Register 35 */
#define MTU_MC78_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0065ea8u)	/* Read Data and B78t Flip Register 36 */
#define MTU_MC78_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0065eaau)	/* Read Data and B78t Flip Register 37 */
#define MTU_MC78_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0065eacu)	/* Read Data and B78t Flip Register 38 */
#define MTU_MC78_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0065eaeu)	/* Read Data and B78t Flip Register 39 */
#define MTU_MC78_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065e68u)	/* Read Data and B78t Flip Register 4 */
#define MTU_MC78_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0065eb0u)	/* Read Data and B78t Flip Register 40 */
#define MTU_MC78_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0065eb2u)	/* Read Data and B78t Flip Register 41 */
#define MTU_MC78_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0065eb4u)	/* Read Data and B78t Flip Register 42 */
#define MTU_MC78_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0065eb6u)	/* Read Data and B78t Flip Register 43 */
#define MTU_MC78_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0065eb8u)	/* Read Data and B78t Flip Register 44 */
#define MTU_MC78_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0065ebau)	/* Read Data and B78t Flip Register 45 */
#define MTU_MC78_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0065ebcu)	/* Read Data and B78t Flip Register 46 */
#define MTU_MC78_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0065ebeu)	/* Read Data and B78t Flip Register 47 */
#define MTU_MC78_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0065ec0u)	/* Read Data and B78t Flip Register 48 */
#define MTU_MC78_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0065ec2u)	/* Read Data and B78t Flip Register 49 */
#define MTU_MC78_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0065e6au)	/* Read Data and B78t Flip Register 5 */
#define MTU_MC78_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0065ec4u)	/* Read Data and B78t Flip Register 50 */
#define MTU_MC78_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0065ec6u)	/* Read Data and B78t Flip Register 51 */
#define MTU_MC78_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0065ec8u)	/* Read Data and B78t Flip Register 52 */
#define MTU_MC78_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0065ecau)	/* Read Data and B78t Flip Register 53 */
#define MTU_MC78_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0065eccu)	/* Read Data and B78t Flip Register 54 */
#define MTU_MC78_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0065eceu)	/* Read Data and B78t Flip Register 55 */
#define MTU_MC78_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0065ed0u)	/* Read Data and B78t Flip Register 56 */
#define MTU_MC78_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0065ed2u)	/* Read Data and B78t Flip Register 57 */
#define MTU_MC78_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0065ed4u)	/* Read Data and B78t Flip Register 58 */
#define MTU_MC78_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0065ed6u)	/* Read Data and B78t Flip Register 59 */
#define MTU_MC78_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0065e6cu)	/* Read Data and B78t Flip Register 6 */
#define MTU_MC78_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0065ed8u)	/* Read Data and B78t Flip Register 60 */
#define MTU_MC78_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0065edau)	/* Read Data and B78t Flip Register 61 */
#define MTU_MC78_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0065edcu)	/* Read Data and B78t Flip Register 62 */
#define MTU_MC78_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0065edeu)	/* Read Data and B78t Flip Register 63 */
#define MTU_MC78_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0065ee0u)	/* Read Data and B78t Flip Register 64 */
#define MTU_MC78_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0065ee2u)	/* Read Data and B78t Flip Register 65 */
#define MTU_MC78_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0065ee4u)	/* Read Data and B78t Flip Register 66 */
#define MTU_MC78_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0065e6eu)	/* Read Data and B78t Flip Register 7 */
#define MTU_MC78_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065e70u)	/* Read Data and B78t Flip Register 8 */
#define MTU_MC78_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065e72u)	/* Read Data and B78t Flip Register 9 */
#define MTU_MC79_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0065f60u)	/* Read Data and B79t Flip Register 0 */
#define MTU_MC79_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0065f62u)	/* Read Data and B79t Flip Register 1 */
#define MTU_MC79_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0065f74u)	/* Read Data and B79t Flip Register 10 */
#define MTU_MC79_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0065f76u)	/* Read Data and B79t Flip Register 11 */
#define MTU_MC79_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0065f78u)	/* Read Data and B79t Flip Register 12 */
#define MTU_MC79_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0065f7au)	/* Read Data and B79t Flip Register 13 */
#define MTU_MC79_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0065f7cu)	/* Read Data and B79t Flip Register 14 */
#define MTU_MC79_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0065f7eu)	/* Read Data and B79t Flip Register 15 */
#define MTU_MC79_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0065f80u)	/* Read Data and B79t Flip Register 16 */
#define MTU_MC79_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0065f82u)	/* Read Data and B79t Flip Register 17 */
#define MTU_MC79_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0065f84u)	/* Read Data and B79t Flip Register 18 */
#define MTU_MC79_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0065f86u)	/* Read Data and B79t Flip Register 19 */
#define MTU_MC79_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0065f64u)	/* Read Data and B79t Flip Register 2 */
#define MTU_MC79_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0065f88u)	/* Read Data and B79t Flip Register 20 */
#define MTU_MC79_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0065f8au)	/* Read Data and B79t Flip Register 21 */
#define MTU_MC79_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0065f8cu)	/* Read Data and B79t Flip Register 22 */
#define MTU_MC79_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0065f8eu)	/* Read Data and B79t Flip Register 23 */
#define MTU_MC79_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0065f90u)	/* Read Data and B79t Flip Register 24 */
#define MTU_MC79_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0065f92u)	/* Read Data and B79t Flip Register 25 */
#define MTU_MC79_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0065f94u)	/* Read Data and B79t Flip Register 26 */
#define MTU_MC79_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0065f96u)	/* Read Data and B79t Flip Register 27 */
#define MTU_MC79_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0065f98u)	/* Read Data and B79t Flip Register 28 */
#define MTU_MC79_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0065f9au)	/* Read Data and B79t Flip Register 29 */
#define MTU_MC79_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0065f66u)	/* Read Data and B79t Flip Register 3 */
#define MTU_MC79_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0065f9cu)	/* Read Data and B79t Flip Register 30 */
#define MTU_MC79_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0065f9eu)	/* Read Data and B79t Flip Register 31 */
#define MTU_MC79_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0065fa0u)	/* Read Data and B79t Flip Register 32 */
#define MTU_MC79_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0065fa2u)	/* Read Data and B79t Flip Register 33 */
#define MTU_MC79_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0065fa4u)	/* Read Data and B79t Flip Register 34 */
#define MTU_MC79_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0065fa6u)	/* Read Data and B79t Flip Register 35 */
#define MTU_MC79_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0065fa8u)	/* Read Data and B79t Flip Register 36 */
#define MTU_MC79_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0065faau)	/* Read Data and B79t Flip Register 37 */
#define MTU_MC79_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0065facu)	/* Read Data and B79t Flip Register 38 */
#define MTU_MC79_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0065faeu)	/* Read Data and B79t Flip Register 39 */
#define MTU_MC79_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0065f68u)	/* Read Data and B79t Flip Register 4 */
#define MTU_MC79_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0065fb0u)	/* Read Data and B79t Flip Register 40 */
#define MTU_MC79_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0065fb2u)	/* Read Data and B79t Flip Register 41 */
#define MTU_MC79_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0065fb4u)	/* Read Data and B79t Flip Register 42 */
#define MTU_MC79_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0065fb6u)	/* Read Data and B79t Flip Register 43 */
#define MTU_MC79_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0065fb8u)	/* Read Data and B79t Flip Register 44 */
#define MTU_MC79_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0065fbau)	/* Read Data and B79t Flip Register 45 */
#define MTU_MC79_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0065fbcu)	/* Read Data and B79t Flip Register 46 */
#define MTU_MC79_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0065fbeu)	/* Read Data and B79t Flip Register 47 */
#define MTU_MC79_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0065fc0u)	/* Read Data and B79t Flip Register 48 */
#define MTU_MC79_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0065fc2u)	/* Read Data and B79t Flip Register 49 */
#define MTU_MC79_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0065f6au)	/* Read Data and B79t Flip Register 5 */
#define MTU_MC79_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0065fc4u)	/* Read Data and B79t Flip Register 50 */
#define MTU_MC79_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0065fc6u)	/* Read Data and B79t Flip Register 51 */
#define MTU_MC79_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0065fc8u)	/* Read Data and B79t Flip Register 52 */
#define MTU_MC79_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0065fcau)	/* Read Data and B79t Flip Register 53 */
#define MTU_MC79_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0065fccu)	/* Read Data and B79t Flip Register 54 */
#define MTU_MC79_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0065fceu)	/* Read Data and B79t Flip Register 55 */
#define MTU_MC79_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0065fd0u)	/* Read Data and B79t Flip Register 56 */
#define MTU_MC79_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0065fd2u)	/* Read Data and B79t Flip Register 57 */
#define MTU_MC79_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0065fd4u)	/* Read Data and B79t Flip Register 58 */
#define MTU_MC79_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0065fd6u)	/* Read Data and B79t Flip Register 59 */
#define MTU_MC79_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0065f6cu)	/* Read Data and B79t Flip Register 6 */
#define MTU_MC79_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0065fd8u)	/* Read Data and B79t Flip Register 60 */
#define MTU_MC79_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0065fdau)	/* Read Data and B79t Flip Register 61 */
#define MTU_MC79_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0065fdcu)	/* Read Data and B79t Flip Register 62 */
#define MTU_MC79_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0065fdeu)	/* Read Data and B79t Flip Register 63 */
#define MTU_MC79_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0065fe0u)	/* Read Data and B79t Flip Register 64 */
#define MTU_MC79_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0065fe2u)	/* Read Data and B79t Flip Register 65 */
#define MTU_MC79_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0065fe4u)	/* Read Data and B79t Flip Register 66 */
#define MTU_MC79_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0065f6eu)	/* Read Data and B79t Flip Register 7 */
#define MTU_MC79_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0065f70u)	/* Read Data and B79t Flip Register 8 */
#define MTU_MC79_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0065f72u)	/* Read Data and B79t Flip Register 9 */
#define MTU_MC7_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061760u)	/* Read Data and B7t Flip Register 0 */
#define MTU_MC7_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061762u)	/* Read Data and B7t Flip Register 1 */
#define MTU_MC7_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061774u)	/* Read Data and B7t Flip Register 10 */
#define MTU_MC7_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061776u)	/* Read Data and B7t Flip Register 11 */
#define MTU_MC7_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061778u)	/* Read Data and B7t Flip Register 12 */
#define MTU_MC7_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006177au)	/* Read Data and B7t Flip Register 13 */
#define MTU_MC7_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006177cu)	/* Read Data and B7t Flip Register 14 */
#define MTU_MC7_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006177eu)	/* Read Data and B7t Flip Register 15 */
#define MTU_MC7_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061780u)	/* Read Data and B7t Flip Register 16 */
#define MTU_MC7_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061782u)	/* Read Data and B7t Flip Register 17 */
#define MTU_MC7_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061784u)	/* Read Data and B7t Flip Register 18 */
#define MTU_MC7_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061786u)	/* Read Data and B7t Flip Register 19 */
#define MTU_MC7_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061764u)	/* Read Data and B7t Flip Register 2 */
#define MTU_MC7_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061788u)	/* Read Data and B7t Flip Register 20 */
#define MTU_MC7_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006178au)	/* Read Data and B7t Flip Register 21 */
#define MTU_MC7_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006178cu)	/* Read Data and B7t Flip Register 22 */
#define MTU_MC7_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006178eu)	/* Read Data and B7t Flip Register 23 */
#define MTU_MC7_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061790u)	/* Read Data and B7t Flip Register 24 */
#define MTU_MC7_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061792u)	/* Read Data and B7t Flip Register 25 */
#define MTU_MC7_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061794u)	/* Read Data and B7t Flip Register 26 */
#define MTU_MC7_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061796u)	/* Read Data and B7t Flip Register 27 */
#define MTU_MC7_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061798u)	/* Read Data and B7t Flip Register 28 */
#define MTU_MC7_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006179au)	/* Read Data and B7t Flip Register 29 */
#define MTU_MC7_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061766u)	/* Read Data and B7t Flip Register 3 */
#define MTU_MC7_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006179cu)	/* Read Data and B7t Flip Register 30 */
#define MTU_MC7_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006179eu)	/* Read Data and B7t Flip Register 31 */
#define MTU_MC7_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00617a0u)	/* Read Data and B7t Flip Register 32 */
#define MTU_MC7_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00617a2u)	/* Read Data and B7t Flip Register 33 */
#define MTU_MC7_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00617a4u)	/* Read Data and B7t Flip Register 34 */
#define MTU_MC7_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00617a6u)	/* Read Data and B7t Flip Register 35 */
#define MTU_MC7_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00617a8u)	/* Read Data and B7t Flip Register 36 */
#define MTU_MC7_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00617aau)	/* Read Data and B7t Flip Register 37 */
#define MTU_MC7_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00617acu)	/* Read Data and B7t Flip Register 38 */
#define MTU_MC7_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00617aeu)	/* Read Data and B7t Flip Register 39 */
#define MTU_MC7_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061768u)	/* Read Data and B7t Flip Register 4 */
#define MTU_MC7_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00617b0u)	/* Read Data and B7t Flip Register 40 */
#define MTU_MC7_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00617b2u)	/* Read Data and B7t Flip Register 41 */
#define MTU_MC7_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00617b4u)	/* Read Data and B7t Flip Register 42 */
#define MTU_MC7_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00617b6u)	/* Read Data and B7t Flip Register 43 */
#define MTU_MC7_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00617b8u)	/* Read Data and B7t Flip Register 44 */
#define MTU_MC7_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00617bau)	/* Read Data and B7t Flip Register 45 */
#define MTU_MC7_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00617bcu)	/* Read Data and B7t Flip Register 46 */
#define MTU_MC7_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00617beu)	/* Read Data and B7t Flip Register 47 */
#define MTU_MC7_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00617c0u)	/* Read Data and B7t Flip Register 48 */
#define MTU_MC7_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00617c2u)	/* Read Data and B7t Flip Register 49 */
#define MTU_MC7_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006176au)	/* Read Data and B7t Flip Register 5 */
#define MTU_MC7_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00617c4u)	/* Read Data and B7t Flip Register 50 */
#define MTU_MC7_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00617c6u)	/* Read Data and B7t Flip Register 51 */
#define MTU_MC7_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00617c8u)	/* Read Data and B7t Flip Register 52 */
#define MTU_MC7_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00617cau)	/* Read Data and B7t Flip Register 53 */
#define MTU_MC7_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00617ccu)	/* Read Data and B7t Flip Register 54 */
#define MTU_MC7_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00617ceu)	/* Read Data and B7t Flip Register 55 */
#define MTU_MC7_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00617d0u)	/* Read Data and B7t Flip Register 56 */
#define MTU_MC7_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00617d2u)	/* Read Data and B7t Flip Register 57 */
#define MTU_MC7_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00617d4u)	/* Read Data and B7t Flip Register 58 */
#define MTU_MC7_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00617d6u)	/* Read Data and B7t Flip Register 59 */
#define MTU_MC7_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006176cu)	/* Read Data and B7t Flip Register 6 */
#define MTU_MC7_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00617d8u)	/* Read Data and B7t Flip Register 60 */
#define MTU_MC7_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00617dau)	/* Read Data and B7t Flip Register 61 */
#define MTU_MC7_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00617dcu)	/* Read Data and B7t Flip Register 62 */
#define MTU_MC7_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00617deu)	/* Read Data and B7t Flip Register 63 */
#define MTU_MC7_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00617e0u)	/* Read Data and B7t Flip Register 64 */
#define MTU_MC7_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00617e2u)	/* Read Data and B7t Flip Register 65 */
#define MTU_MC7_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00617e4u)	/* Read Data and B7t Flip Register 66 */
#define MTU_MC7_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006176eu)	/* Read Data and B7t Flip Register 7 */
#define MTU_MC7_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061770u)	/* Read Data and B7t Flip Register 8 */
#define MTU_MC7_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061772u)	/* Read Data and B7t Flip Register 9 */
#define MTU_MC80_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066060u)	/* Read Data and B80t Flip Register 0 */
#define MTU_MC80_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066062u)	/* Read Data and B80t Flip Register 1 */
#define MTU_MC80_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066074u)	/* Read Data and B80t Flip Register 10 */
#define MTU_MC80_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066076u)	/* Read Data and B80t Flip Register 11 */
#define MTU_MC80_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066078u)	/* Read Data and B80t Flip Register 12 */
#define MTU_MC80_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006607au)	/* Read Data and B80t Flip Register 13 */
#define MTU_MC80_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006607cu)	/* Read Data and B80t Flip Register 14 */
#define MTU_MC80_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006607eu)	/* Read Data and B80t Flip Register 15 */
#define MTU_MC80_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066080u)	/* Read Data and B80t Flip Register 16 */
#define MTU_MC80_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066082u)	/* Read Data and B80t Flip Register 17 */
#define MTU_MC80_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066084u)	/* Read Data and B80t Flip Register 18 */
#define MTU_MC80_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066086u)	/* Read Data and B80t Flip Register 19 */
#define MTU_MC80_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066064u)	/* Read Data and B80t Flip Register 2 */
#define MTU_MC80_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066088u)	/* Read Data and B80t Flip Register 20 */
#define MTU_MC80_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006608au)	/* Read Data and B80t Flip Register 21 */
#define MTU_MC80_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006608cu)	/* Read Data and B80t Flip Register 22 */
#define MTU_MC80_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006608eu)	/* Read Data and B80t Flip Register 23 */
#define MTU_MC80_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066090u)	/* Read Data and B80t Flip Register 24 */
#define MTU_MC80_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066092u)	/* Read Data and B80t Flip Register 25 */
#define MTU_MC80_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066094u)	/* Read Data and B80t Flip Register 26 */
#define MTU_MC80_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066096u)	/* Read Data and B80t Flip Register 27 */
#define MTU_MC80_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066098u)	/* Read Data and B80t Flip Register 28 */
#define MTU_MC80_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006609au)	/* Read Data and B80t Flip Register 29 */
#define MTU_MC80_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066066u)	/* Read Data and B80t Flip Register 3 */
#define MTU_MC80_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006609cu)	/* Read Data and B80t Flip Register 30 */
#define MTU_MC80_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006609eu)	/* Read Data and B80t Flip Register 31 */
#define MTU_MC80_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00660a0u)	/* Read Data and B80t Flip Register 32 */
#define MTU_MC80_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00660a2u)	/* Read Data and B80t Flip Register 33 */
#define MTU_MC80_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00660a4u)	/* Read Data and B80t Flip Register 34 */
#define MTU_MC80_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00660a6u)	/* Read Data and B80t Flip Register 35 */
#define MTU_MC80_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00660a8u)	/* Read Data and B80t Flip Register 36 */
#define MTU_MC80_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00660aau)	/* Read Data and B80t Flip Register 37 */
#define MTU_MC80_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00660acu)	/* Read Data and B80t Flip Register 38 */
#define MTU_MC80_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00660aeu)	/* Read Data and B80t Flip Register 39 */
#define MTU_MC80_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066068u)	/* Read Data and B80t Flip Register 4 */
#define MTU_MC80_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00660b0u)	/* Read Data and B80t Flip Register 40 */
#define MTU_MC80_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00660b2u)	/* Read Data and B80t Flip Register 41 */
#define MTU_MC80_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00660b4u)	/* Read Data and B80t Flip Register 42 */
#define MTU_MC80_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00660b6u)	/* Read Data and B80t Flip Register 43 */
#define MTU_MC80_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00660b8u)	/* Read Data and B80t Flip Register 44 */
#define MTU_MC80_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00660bau)	/* Read Data and B80t Flip Register 45 */
#define MTU_MC80_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00660bcu)	/* Read Data and B80t Flip Register 46 */
#define MTU_MC80_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00660beu)	/* Read Data and B80t Flip Register 47 */
#define MTU_MC80_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00660c0u)	/* Read Data and B80t Flip Register 48 */
#define MTU_MC80_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00660c2u)	/* Read Data and B80t Flip Register 49 */
#define MTU_MC80_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006606au)	/* Read Data and B80t Flip Register 5 */
#define MTU_MC80_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00660c4u)	/* Read Data and B80t Flip Register 50 */
#define MTU_MC80_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00660c6u)	/* Read Data and B80t Flip Register 51 */
#define MTU_MC80_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00660c8u)	/* Read Data and B80t Flip Register 52 */
#define MTU_MC80_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00660cau)	/* Read Data and B80t Flip Register 53 */
#define MTU_MC80_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00660ccu)	/* Read Data and B80t Flip Register 54 */
#define MTU_MC80_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00660ceu)	/* Read Data and B80t Flip Register 55 */
#define MTU_MC80_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00660d0u)	/* Read Data and B80t Flip Register 56 */
#define MTU_MC80_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00660d2u)	/* Read Data and B80t Flip Register 57 */
#define MTU_MC80_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00660d4u)	/* Read Data and B80t Flip Register 58 */
#define MTU_MC80_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00660d6u)	/* Read Data and B80t Flip Register 59 */
#define MTU_MC80_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006606cu)	/* Read Data and B80t Flip Register 6 */
#define MTU_MC80_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00660d8u)	/* Read Data and B80t Flip Register 60 */
#define MTU_MC80_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00660dau)	/* Read Data and B80t Flip Register 61 */
#define MTU_MC80_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00660dcu)	/* Read Data and B80t Flip Register 62 */
#define MTU_MC80_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00660deu)	/* Read Data and B80t Flip Register 63 */
#define MTU_MC80_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00660e0u)	/* Read Data and B80t Flip Register 64 */
#define MTU_MC80_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00660e2u)	/* Read Data and B80t Flip Register 65 */
#define MTU_MC80_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00660e4u)	/* Read Data and B80t Flip Register 66 */
#define MTU_MC80_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006606eu)	/* Read Data and B80t Flip Register 7 */
#define MTU_MC80_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066070u)	/* Read Data and B80t Flip Register 8 */
#define MTU_MC80_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066072u)	/* Read Data and B80t Flip Register 9 */
#define MTU_MC81_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066160u)	/* Read Data and B81t Flip Register 0 */
#define MTU_MC81_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066162u)	/* Read Data and B81t Flip Register 1 */
#define MTU_MC81_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066174u)	/* Read Data and B81t Flip Register 10 */
#define MTU_MC81_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066176u)	/* Read Data and B81t Flip Register 11 */
#define MTU_MC81_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066178u)	/* Read Data and B81t Flip Register 12 */
#define MTU_MC81_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006617au)	/* Read Data and B81t Flip Register 13 */
#define MTU_MC81_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006617cu)	/* Read Data and B81t Flip Register 14 */
#define MTU_MC81_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006617eu)	/* Read Data and B81t Flip Register 15 */
#define MTU_MC81_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066180u)	/* Read Data and B81t Flip Register 16 */
#define MTU_MC81_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066182u)	/* Read Data and B81t Flip Register 17 */
#define MTU_MC81_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066184u)	/* Read Data and B81t Flip Register 18 */
#define MTU_MC81_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066186u)	/* Read Data and B81t Flip Register 19 */
#define MTU_MC81_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066164u)	/* Read Data and B81t Flip Register 2 */
#define MTU_MC81_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066188u)	/* Read Data and B81t Flip Register 20 */
#define MTU_MC81_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006618au)	/* Read Data and B81t Flip Register 21 */
#define MTU_MC81_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006618cu)	/* Read Data and B81t Flip Register 22 */
#define MTU_MC81_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006618eu)	/* Read Data and B81t Flip Register 23 */
#define MTU_MC81_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066190u)	/* Read Data and B81t Flip Register 24 */
#define MTU_MC81_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066192u)	/* Read Data and B81t Flip Register 25 */
#define MTU_MC81_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066194u)	/* Read Data and B81t Flip Register 26 */
#define MTU_MC81_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066196u)	/* Read Data and B81t Flip Register 27 */
#define MTU_MC81_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066198u)	/* Read Data and B81t Flip Register 28 */
#define MTU_MC81_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006619au)	/* Read Data and B81t Flip Register 29 */
#define MTU_MC81_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066166u)	/* Read Data and B81t Flip Register 3 */
#define MTU_MC81_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006619cu)	/* Read Data and B81t Flip Register 30 */
#define MTU_MC81_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006619eu)	/* Read Data and B81t Flip Register 31 */
#define MTU_MC81_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00661a0u)	/* Read Data and B81t Flip Register 32 */
#define MTU_MC81_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00661a2u)	/* Read Data and B81t Flip Register 33 */
#define MTU_MC81_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00661a4u)	/* Read Data and B81t Flip Register 34 */
#define MTU_MC81_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00661a6u)	/* Read Data and B81t Flip Register 35 */
#define MTU_MC81_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00661a8u)	/* Read Data and B81t Flip Register 36 */
#define MTU_MC81_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00661aau)	/* Read Data and B81t Flip Register 37 */
#define MTU_MC81_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00661acu)	/* Read Data and B81t Flip Register 38 */
#define MTU_MC81_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00661aeu)	/* Read Data and B81t Flip Register 39 */
#define MTU_MC81_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066168u)	/* Read Data and B81t Flip Register 4 */
#define MTU_MC81_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00661b0u)	/* Read Data and B81t Flip Register 40 */
#define MTU_MC81_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00661b2u)	/* Read Data and B81t Flip Register 41 */
#define MTU_MC81_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00661b4u)	/* Read Data and B81t Flip Register 42 */
#define MTU_MC81_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00661b6u)	/* Read Data and B81t Flip Register 43 */
#define MTU_MC81_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00661b8u)	/* Read Data and B81t Flip Register 44 */
#define MTU_MC81_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00661bau)	/* Read Data and B81t Flip Register 45 */
#define MTU_MC81_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00661bcu)	/* Read Data and B81t Flip Register 46 */
#define MTU_MC81_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00661beu)	/* Read Data and B81t Flip Register 47 */
#define MTU_MC81_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00661c0u)	/* Read Data and B81t Flip Register 48 */
#define MTU_MC81_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00661c2u)	/* Read Data and B81t Flip Register 49 */
#define MTU_MC81_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006616au)	/* Read Data and B81t Flip Register 5 */
#define MTU_MC81_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00661c4u)	/* Read Data and B81t Flip Register 50 */
#define MTU_MC81_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00661c6u)	/* Read Data and B81t Flip Register 51 */
#define MTU_MC81_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00661c8u)	/* Read Data and B81t Flip Register 52 */
#define MTU_MC81_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00661cau)	/* Read Data and B81t Flip Register 53 */
#define MTU_MC81_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00661ccu)	/* Read Data and B81t Flip Register 54 */
#define MTU_MC81_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00661ceu)	/* Read Data and B81t Flip Register 55 */
#define MTU_MC81_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00661d0u)	/* Read Data and B81t Flip Register 56 */
#define MTU_MC81_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00661d2u)	/* Read Data and B81t Flip Register 57 */
#define MTU_MC81_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00661d4u)	/* Read Data and B81t Flip Register 58 */
#define MTU_MC81_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00661d6u)	/* Read Data and B81t Flip Register 59 */
#define MTU_MC81_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006616cu)	/* Read Data and B81t Flip Register 6 */
#define MTU_MC81_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00661d8u)	/* Read Data and B81t Flip Register 60 */
#define MTU_MC81_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00661dau)	/* Read Data and B81t Flip Register 61 */
#define MTU_MC81_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00661dcu)	/* Read Data and B81t Flip Register 62 */
#define MTU_MC81_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00661deu)	/* Read Data and B81t Flip Register 63 */
#define MTU_MC81_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00661e0u)	/* Read Data and B81t Flip Register 64 */
#define MTU_MC81_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00661e2u)	/* Read Data and B81t Flip Register 65 */
#define MTU_MC81_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00661e4u)	/* Read Data and B81t Flip Register 66 */
#define MTU_MC81_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006616eu)	/* Read Data and B81t Flip Register 7 */
#define MTU_MC81_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066170u)	/* Read Data and B81t Flip Register 8 */
#define MTU_MC81_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066172u)	/* Read Data and B81t Flip Register 9 */
#define MTU_MC82_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066260u)	/* Read Data and B82t Flip Register 0 */
#define MTU_MC82_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066262u)	/* Read Data and B82t Flip Register 1 */
#define MTU_MC82_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066274u)	/* Read Data and B82t Flip Register 10 */
#define MTU_MC82_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066276u)	/* Read Data and B82t Flip Register 11 */
#define MTU_MC82_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066278u)	/* Read Data and B82t Flip Register 12 */
#define MTU_MC82_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006627au)	/* Read Data and B82t Flip Register 13 */
#define MTU_MC82_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006627cu)	/* Read Data and B82t Flip Register 14 */
#define MTU_MC82_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006627eu)	/* Read Data and B82t Flip Register 15 */
#define MTU_MC82_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066280u)	/* Read Data and B82t Flip Register 16 */
#define MTU_MC82_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066282u)	/* Read Data and B82t Flip Register 17 */
#define MTU_MC82_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066284u)	/* Read Data and B82t Flip Register 18 */
#define MTU_MC82_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066286u)	/* Read Data and B82t Flip Register 19 */
#define MTU_MC82_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066264u)	/* Read Data and B82t Flip Register 2 */
#define MTU_MC82_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066288u)	/* Read Data and B82t Flip Register 20 */
#define MTU_MC82_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006628au)	/* Read Data and B82t Flip Register 21 */
#define MTU_MC82_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006628cu)	/* Read Data and B82t Flip Register 22 */
#define MTU_MC82_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006628eu)	/* Read Data and B82t Flip Register 23 */
#define MTU_MC82_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066290u)	/* Read Data and B82t Flip Register 24 */
#define MTU_MC82_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066292u)	/* Read Data and B82t Flip Register 25 */
#define MTU_MC82_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066294u)	/* Read Data and B82t Flip Register 26 */
#define MTU_MC82_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066296u)	/* Read Data and B82t Flip Register 27 */
#define MTU_MC82_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066298u)	/* Read Data and B82t Flip Register 28 */
#define MTU_MC82_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006629au)	/* Read Data and B82t Flip Register 29 */
#define MTU_MC82_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066266u)	/* Read Data and B82t Flip Register 3 */
#define MTU_MC82_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006629cu)	/* Read Data and B82t Flip Register 30 */
#define MTU_MC82_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006629eu)	/* Read Data and B82t Flip Register 31 */
#define MTU_MC82_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00662a0u)	/* Read Data and B82t Flip Register 32 */
#define MTU_MC82_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00662a2u)	/* Read Data and B82t Flip Register 33 */
#define MTU_MC82_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00662a4u)	/* Read Data and B82t Flip Register 34 */
#define MTU_MC82_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00662a6u)	/* Read Data and B82t Flip Register 35 */
#define MTU_MC82_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00662a8u)	/* Read Data and B82t Flip Register 36 */
#define MTU_MC82_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00662aau)	/* Read Data and B82t Flip Register 37 */
#define MTU_MC82_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00662acu)	/* Read Data and B82t Flip Register 38 */
#define MTU_MC82_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00662aeu)	/* Read Data and B82t Flip Register 39 */
#define MTU_MC82_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066268u)	/* Read Data and B82t Flip Register 4 */
#define MTU_MC82_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00662b0u)	/* Read Data and B82t Flip Register 40 */
#define MTU_MC82_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00662b2u)	/* Read Data and B82t Flip Register 41 */
#define MTU_MC82_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00662b4u)	/* Read Data and B82t Flip Register 42 */
#define MTU_MC82_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00662b6u)	/* Read Data and B82t Flip Register 43 */
#define MTU_MC82_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00662b8u)	/* Read Data and B82t Flip Register 44 */
#define MTU_MC82_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00662bau)	/* Read Data and B82t Flip Register 45 */
#define MTU_MC82_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00662bcu)	/* Read Data and B82t Flip Register 46 */
#define MTU_MC82_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00662beu)	/* Read Data and B82t Flip Register 47 */
#define MTU_MC82_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00662c0u)	/* Read Data and B82t Flip Register 48 */
#define MTU_MC82_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00662c2u)	/* Read Data and B82t Flip Register 49 */
#define MTU_MC82_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006626au)	/* Read Data and B82t Flip Register 5 */
#define MTU_MC82_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00662c4u)	/* Read Data and B82t Flip Register 50 */
#define MTU_MC82_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00662c6u)	/* Read Data and B82t Flip Register 51 */
#define MTU_MC82_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00662c8u)	/* Read Data and B82t Flip Register 52 */
#define MTU_MC82_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00662cau)	/* Read Data and B82t Flip Register 53 */
#define MTU_MC82_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00662ccu)	/* Read Data and B82t Flip Register 54 */
#define MTU_MC82_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00662ceu)	/* Read Data and B82t Flip Register 55 */
#define MTU_MC82_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00662d0u)	/* Read Data and B82t Flip Register 56 */
#define MTU_MC82_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00662d2u)	/* Read Data and B82t Flip Register 57 */
#define MTU_MC82_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00662d4u)	/* Read Data and B82t Flip Register 58 */
#define MTU_MC82_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00662d6u)	/* Read Data and B82t Flip Register 59 */
#define MTU_MC82_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006626cu)	/* Read Data and B82t Flip Register 6 */
#define MTU_MC82_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00662d8u)	/* Read Data and B82t Flip Register 60 */
#define MTU_MC82_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00662dau)	/* Read Data and B82t Flip Register 61 */
#define MTU_MC82_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00662dcu)	/* Read Data and B82t Flip Register 62 */
#define MTU_MC82_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00662deu)	/* Read Data and B82t Flip Register 63 */
#define MTU_MC82_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00662e0u)	/* Read Data and B82t Flip Register 64 */
#define MTU_MC82_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00662e2u)	/* Read Data and B82t Flip Register 65 */
#define MTU_MC82_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00662e4u)	/* Read Data and B82t Flip Register 66 */
#define MTU_MC82_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006626eu)	/* Read Data and B82t Flip Register 7 */
#define MTU_MC82_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066270u)	/* Read Data and B82t Flip Register 8 */
#define MTU_MC82_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066272u)	/* Read Data and B82t Flip Register 9 */
#define MTU_MC83_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066360u)	/* Read Data and B83t Flip Register 0 */
#define MTU_MC83_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066362u)	/* Read Data and B83t Flip Register 1 */
#define MTU_MC83_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066374u)	/* Read Data and B83t Flip Register 10 */
#define MTU_MC83_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066376u)	/* Read Data and B83t Flip Register 11 */
#define MTU_MC83_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066378u)	/* Read Data and B83t Flip Register 12 */
#define MTU_MC83_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006637au)	/* Read Data and B83t Flip Register 13 */
#define MTU_MC83_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006637cu)	/* Read Data and B83t Flip Register 14 */
#define MTU_MC83_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006637eu)	/* Read Data and B83t Flip Register 15 */
#define MTU_MC83_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066380u)	/* Read Data and B83t Flip Register 16 */
#define MTU_MC83_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066382u)	/* Read Data and B83t Flip Register 17 */
#define MTU_MC83_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066384u)	/* Read Data and B83t Flip Register 18 */
#define MTU_MC83_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066386u)	/* Read Data and B83t Flip Register 19 */
#define MTU_MC83_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066364u)	/* Read Data and B83t Flip Register 2 */
#define MTU_MC83_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066388u)	/* Read Data and B83t Flip Register 20 */
#define MTU_MC83_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006638au)	/* Read Data and B83t Flip Register 21 */
#define MTU_MC83_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006638cu)	/* Read Data and B83t Flip Register 22 */
#define MTU_MC83_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006638eu)	/* Read Data and B83t Flip Register 23 */
#define MTU_MC83_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066390u)	/* Read Data and B83t Flip Register 24 */
#define MTU_MC83_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066392u)	/* Read Data and B83t Flip Register 25 */
#define MTU_MC83_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066394u)	/* Read Data and B83t Flip Register 26 */
#define MTU_MC83_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066396u)	/* Read Data and B83t Flip Register 27 */
#define MTU_MC83_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066398u)	/* Read Data and B83t Flip Register 28 */
#define MTU_MC83_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006639au)	/* Read Data and B83t Flip Register 29 */
#define MTU_MC83_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066366u)	/* Read Data and B83t Flip Register 3 */
#define MTU_MC83_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006639cu)	/* Read Data and B83t Flip Register 30 */
#define MTU_MC83_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006639eu)	/* Read Data and B83t Flip Register 31 */
#define MTU_MC83_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00663a0u)	/* Read Data and B83t Flip Register 32 */
#define MTU_MC83_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00663a2u)	/* Read Data and B83t Flip Register 33 */
#define MTU_MC83_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00663a4u)	/* Read Data and B83t Flip Register 34 */
#define MTU_MC83_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00663a6u)	/* Read Data and B83t Flip Register 35 */
#define MTU_MC83_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00663a8u)	/* Read Data and B83t Flip Register 36 */
#define MTU_MC83_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00663aau)	/* Read Data and B83t Flip Register 37 */
#define MTU_MC83_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00663acu)	/* Read Data and B83t Flip Register 38 */
#define MTU_MC83_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00663aeu)	/* Read Data and B83t Flip Register 39 */
#define MTU_MC83_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066368u)	/* Read Data and B83t Flip Register 4 */
#define MTU_MC83_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00663b0u)	/* Read Data and B83t Flip Register 40 */
#define MTU_MC83_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00663b2u)	/* Read Data and B83t Flip Register 41 */
#define MTU_MC83_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00663b4u)	/* Read Data and B83t Flip Register 42 */
#define MTU_MC83_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00663b6u)	/* Read Data and B83t Flip Register 43 */
#define MTU_MC83_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00663b8u)	/* Read Data and B83t Flip Register 44 */
#define MTU_MC83_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00663bau)	/* Read Data and B83t Flip Register 45 */
#define MTU_MC83_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00663bcu)	/* Read Data and B83t Flip Register 46 */
#define MTU_MC83_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00663beu)	/* Read Data and B83t Flip Register 47 */
#define MTU_MC83_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00663c0u)	/* Read Data and B83t Flip Register 48 */
#define MTU_MC83_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00663c2u)	/* Read Data and B83t Flip Register 49 */
#define MTU_MC83_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006636au)	/* Read Data and B83t Flip Register 5 */
#define MTU_MC83_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00663c4u)	/* Read Data and B83t Flip Register 50 */
#define MTU_MC83_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00663c6u)	/* Read Data and B83t Flip Register 51 */
#define MTU_MC83_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00663c8u)	/* Read Data and B83t Flip Register 52 */
#define MTU_MC83_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00663cau)	/* Read Data and B83t Flip Register 53 */
#define MTU_MC83_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00663ccu)	/* Read Data and B83t Flip Register 54 */
#define MTU_MC83_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00663ceu)	/* Read Data and B83t Flip Register 55 */
#define MTU_MC83_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00663d0u)	/* Read Data and B83t Flip Register 56 */
#define MTU_MC83_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00663d2u)	/* Read Data and B83t Flip Register 57 */
#define MTU_MC83_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00663d4u)	/* Read Data and B83t Flip Register 58 */
#define MTU_MC83_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00663d6u)	/* Read Data and B83t Flip Register 59 */
#define MTU_MC83_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006636cu)	/* Read Data and B83t Flip Register 6 */
#define MTU_MC83_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00663d8u)	/* Read Data and B83t Flip Register 60 */
#define MTU_MC83_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00663dau)	/* Read Data and B83t Flip Register 61 */
#define MTU_MC83_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00663dcu)	/* Read Data and B83t Flip Register 62 */
#define MTU_MC83_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00663deu)	/* Read Data and B83t Flip Register 63 */
#define MTU_MC83_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00663e0u)	/* Read Data and B83t Flip Register 64 */
#define MTU_MC83_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00663e2u)	/* Read Data and B83t Flip Register 65 */
#define MTU_MC83_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00663e4u)	/* Read Data and B83t Flip Register 66 */
#define MTU_MC83_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006636eu)	/* Read Data and B83t Flip Register 7 */
#define MTU_MC83_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066370u)	/* Read Data and B83t Flip Register 8 */
#define MTU_MC83_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066372u)	/* Read Data and B83t Flip Register 9 */
#define MTU_MC84_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066460u)	/* Read Data and B84t Flip Register 0 */
#define MTU_MC84_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066462u)	/* Read Data and B84t Flip Register 1 */
#define MTU_MC84_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066474u)	/* Read Data and B84t Flip Register 10 */
#define MTU_MC84_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066476u)	/* Read Data and B84t Flip Register 11 */
#define MTU_MC84_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066478u)	/* Read Data and B84t Flip Register 12 */
#define MTU_MC84_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006647au)	/* Read Data and B84t Flip Register 13 */
#define MTU_MC84_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006647cu)	/* Read Data and B84t Flip Register 14 */
#define MTU_MC84_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006647eu)	/* Read Data and B84t Flip Register 15 */
#define MTU_MC84_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066480u)	/* Read Data and B84t Flip Register 16 */
#define MTU_MC84_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066482u)	/* Read Data and B84t Flip Register 17 */
#define MTU_MC84_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066484u)	/* Read Data and B84t Flip Register 18 */
#define MTU_MC84_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066486u)	/* Read Data and B84t Flip Register 19 */
#define MTU_MC84_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066464u)	/* Read Data and B84t Flip Register 2 */
#define MTU_MC84_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066488u)	/* Read Data and B84t Flip Register 20 */
#define MTU_MC84_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006648au)	/* Read Data and B84t Flip Register 21 */
#define MTU_MC84_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006648cu)	/* Read Data and B84t Flip Register 22 */
#define MTU_MC84_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006648eu)	/* Read Data and B84t Flip Register 23 */
#define MTU_MC84_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066490u)	/* Read Data and B84t Flip Register 24 */
#define MTU_MC84_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066492u)	/* Read Data and B84t Flip Register 25 */
#define MTU_MC84_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066494u)	/* Read Data and B84t Flip Register 26 */
#define MTU_MC84_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066496u)	/* Read Data and B84t Flip Register 27 */
#define MTU_MC84_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066498u)	/* Read Data and B84t Flip Register 28 */
#define MTU_MC84_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006649au)	/* Read Data and B84t Flip Register 29 */
#define MTU_MC84_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066466u)	/* Read Data and B84t Flip Register 3 */
#define MTU_MC84_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006649cu)	/* Read Data and B84t Flip Register 30 */
#define MTU_MC84_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006649eu)	/* Read Data and B84t Flip Register 31 */
#define MTU_MC84_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00664a0u)	/* Read Data and B84t Flip Register 32 */
#define MTU_MC84_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00664a2u)	/* Read Data and B84t Flip Register 33 */
#define MTU_MC84_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00664a4u)	/* Read Data and B84t Flip Register 34 */
#define MTU_MC84_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00664a6u)	/* Read Data and B84t Flip Register 35 */
#define MTU_MC84_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00664a8u)	/* Read Data and B84t Flip Register 36 */
#define MTU_MC84_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00664aau)	/* Read Data and B84t Flip Register 37 */
#define MTU_MC84_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00664acu)	/* Read Data and B84t Flip Register 38 */
#define MTU_MC84_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00664aeu)	/* Read Data and B84t Flip Register 39 */
#define MTU_MC84_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066468u)	/* Read Data and B84t Flip Register 4 */
#define MTU_MC84_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00664b0u)	/* Read Data and B84t Flip Register 40 */
#define MTU_MC84_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00664b2u)	/* Read Data and B84t Flip Register 41 */
#define MTU_MC84_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00664b4u)	/* Read Data and B84t Flip Register 42 */
#define MTU_MC84_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00664b6u)	/* Read Data and B84t Flip Register 43 */
#define MTU_MC84_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00664b8u)	/* Read Data and B84t Flip Register 44 */
#define MTU_MC84_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00664bau)	/* Read Data and B84t Flip Register 45 */
#define MTU_MC84_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00664bcu)	/* Read Data and B84t Flip Register 46 */
#define MTU_MC84_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00664beu)	/* Read Data and B84t Flip Register 47 */
#define MTU_MC84_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00664c0u)	/* Read Data and B84t Flip Register 48 */
#define MTU_MC84_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00664c2u)	/* Read Data and B84t Flip Register 49 */
#define MTU_MC84_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006646au)	/* Read Data and B84t Flip Register 5 */
#define MTU_MC84_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00664c4u)	/* Read Data and B84t Flip Register 50 */
#define MTU_MC84_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00664c6u)	/* Read Data and B84t Flip Register 51 */
#define MTU_MC84_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00664c8u)	/* Read Data and B84t Flip Register 52 */
#define MTU_MC84_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00664cau)	/* Read Data and B84t Flip Register 53 */
#define MTU_MC84_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00664ccu)	/* Read Data and B84t Flip Register 54 */
#define MTU_MC84_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00664ceu)	/* Read Data and B84t Flip Register 55 */
#define MTU_MC84_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00664d0u)	/* Read Data and B84t Flip Register 56 */
#define MTU_MC84_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00664d2u)	/* Read Data and B84t Flip Register 57 */
#define MTU_MC84_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00664d4u)	/* Read Data and B84t Flip Register 58 */
#define MTU_MC84_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00664d6u)	/* Read Data and B84t Flip Register 59 */
#define MTU_MC84_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006646cu)	/* Read Data and B84t Flip Register 6 */
#define MTU_MC84_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00664d8u)	/* Read Data and B84t Flip Register 60 */
#define MTU_MC84_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00664dau)	/* Read Data and B84t Flip Register 61 */
#define MTU_MC84_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00664dcu)	/* Read Data and B84t Flip Register 62 */
#define MTU_MC84_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00664deu)	/* Read Data and B84t Flip Register 63 */
#define MTU_MC84_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00664e0u)	/* Read Data and B84t Flip Register 64 */
#define MTU_MC84_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00664e2u)	/* Read Data and B84t Flip Register 65 */
#define MTU_MC84_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00664e4u)	/* Read Data and B84t Flip Register 66 */
#define MTU_MC84_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006646eu)	/* Read Data and B84t Flip Register 7 */
#define MTU_MC84_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066470u)	/* Read Data and B84t Flip Register 8 */
#define MTU_MC84_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066472u)	/* Read Data and B84t Flip Register 9 */
#define MTU_MC85_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066560u)	/* Read Data and B85t Flip Register 0 */
#define MTU_MC85_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066562u)	/* Read Data and B85t Flip Register 1 */
#define MTU_MC85_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066574u)	/* Read Data and B85t Flip Register 10 */
#define MTU_MC85_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066576u)	/* Read Data and B85t Flip Register 11 */
#define MTU_MC85_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066578u)	/* Read Data and B85t Flip Register 12 */
#define MTU_MC85_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006657au)	/* Read Data and B85t Flip Register 13 */
#define MTU_MC85_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006657cu)	/* Read Data and B85t Flip Register 14 */
#define MTU_MC85_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006657eu)	/* Read Data and B85t Flip Register 15 */
#define MTU_MC85_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066580u)	/* Read Data and B85t Flip Register 16 */
#define MTU_MC85_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066582u)	/* Read Data and B85t Flip Register 17 */
#define MTU_MC85_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066584u)	/* Read Data and B85t Flip Register 18 */
#define MTU_MC85_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066586u)	/* Read Data and B85t Flip Register 19 */
#define MTU_MC85_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066564u)	/* Read Data and B85t Flip Register 2 */
#define MTU_MC85_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066588u)	/* Read Data and B85t Flip Register 20 */
#define MTU_MC85_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006658au)	/* Read Data and B85t Flip Register 21 */
#define MTU_MC85_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006658cu)	/* Read Data and B85t Flip Register 22 */
#define MTU_MC85_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006658eu)	/* Read Data and B85t Flip Register 23 */
#define MTU_MC85_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066590u)	/* Read Data and B85t Flip Register 24 */
#define MTU_MC85_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066592u)	/* Read Data and B85t Flip Register 25 */
#define MTU_MC85_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066594u)	/* Read Data and B85t Flip Register 26 */
#define MTU_MC85_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066596u)	/* Read Data and B85t Flip Register 27 */
#define MTU_MC85_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066598u)	/* Read Data and B85t Flip Register 28 */
#define MTU_MC85_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006659au)	/* Read Data and B85t Flip Register 29 */
#define MTU_MC85_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066566u)	/* Read Data and B85t Flip Register 3 */
#define MTU_MC85_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006659cu)	/* Read Data and B85t Flip Register 30 */
#define MTU_MC85_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006659eu)	/* Read Data and B85t Flip Register 31 */
#define MTU_MC85_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00665a0u)	/* Read Data and B85t Flip Register 32 */
#define MTU_MC85_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00665a2u)	/* Read Data and B85t Flip Register 33 */
#define MTU_MC85_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00665a4u)	/* Read Data and B85t Flip Register 34 */
#define MTU_MC85_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00665a6u)	/* Read Data and B85t Flip Register 35 */
#define MTU_MC85_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00665a8u)	/* Read Data and B85t Flip Register 36 */
#define MTU_MC85_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00665aau)	/* Read Data and B85t Flip Register 37 */
#define MTU_MC85_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00665acu)	/* Read Data and B85t Flip Register 38 */
#define MTU_MC85_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00665aeu)	/* Read Data and B85t Flip Register 39 */
#define MTU_MC85_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066568u)	/* Read Data and B85t Flip Register 4 */
#define MTU_MC85_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00665b0u)	/* Read Data and B85t Flip Register 40 */
#define MTU_MC85_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00665b2u)	/* Read Data and B85t Flip Register 41 */
#define MTU_MC85_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00665b4u)	/* Read Data and B85t Flip Register 42 */
#define MTU_MC85_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00665b6u)	/* Read Data and B85t Flip Register 43 */
#define MTU_MC85_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00665b8u)	/* Read Data and B85t Flip Register 44 */
#define MTU_MC85_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00665bau)	/* Read Data and B85t Flip Register 45 */
#define MTU_MC85_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00665bcu)	/* Read Data and B85t Flip Register 46 */
#define MTU_MC85_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00665beu)	/* Read Data and B85t Flip Register 47 */
#define MTU_MC85_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00665c0u)	/* Read Data and B85t Flip Register 48 */
#define MTU_MC85_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00665c2u)	/* Read Data and B85t Flip Register 49 */
#define MTU_MC85_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006656au)	/* Read Data and B85t Flip Register 5 */
#define MTU_MC85_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00665c4u)	/* Read Data and B85t Flip Register 50 */
#define MTU_MC85_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00665c6u)	/* Read Data and B85t Flip Register 51 */
#define MTU_MC85_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00665c8u)	/* Read Data and B85t Flip Register 52 */
#define MTU_MC85_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00665cau)	/* Read Data and B85t Flip Register 53 */
#define MTU_MC85_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00665ccu)	/* Read Data and B85t Flip Register 54 */
#define MTU_MC85_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00665ceu)	/* Read Data and B85t Flip Register 55 */
#define MTU_MC85_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00665d0u)	/* Read Data and B85t Flip Register 56 */
#define MTU_MC85_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00665d2u)	/* Read Data and B85t Flip Register 57 */
#define MTU_MC85_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00665d4u)	/* Read Data and B85t Flip Register 58 */
#define MTU_MC85_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00665d6u)	/* Read Data and B85t Flip Register 59 */
#define MTU_MC85_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006656cu)	/* Read Data and B85t Flip Register 6 */
#define MTU_MC85_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00665d8u)	/* Read Data and B85t Flip Register 60 */
#define MTU_MC85_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00665dau)	/* Read Data and B85t Flip Register 61 */
#define MTU_MC85_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00665dcu)	/* Read Data and B85t Flip Register 62 */
#define MTU_MC85_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00665deu)	/* Read Data and B85t Flip Register 63 */
#define MTU_MC85_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00665e0u)	/* Read Data and B85t Flip Register 64 */
#define MTU_MC85_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00665e2u)	/* Read Data and B85t Flip Register 65 */
#define MTU_MC85_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00665e4u)	/* Read Data and B85t Flip Register 66 */
#define MTU_MC85_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006656eu)	/* Read Data and B85t Flip Register 7 */
#define MTU_MC85_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066570u)	/* Read Data and B85t Flip Register 8 */
#define MTU_MC85_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066572u)	/* Read Data and B85t Flip Register 9 */
#define MTU_MC86_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066660u)	/* Read Data and B86t Flip Register 0 */
#define MTU_MC86_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066662u)	/* Read Data and B86t Flip Register 1 */
#define MTU_MC86_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066674u)	/* Read Data and B86t Flip Register 10 */
#define MTU_MC86_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066676u)	/* Read Data and B86t Flip Register 11 */
#define MTU_MC86_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066678u)	/* Read Data and B86t Flip Register 12 */
#define MTU_MC86_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006667au)	/* Read Data and B86t Flip Register 13 */
#define MTU_MC86_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006667cu)	/* Read Data and B86t Flip Register 14 */
#define MTU_MC86_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006667eu)	/* Read Data and B86t Flip Register 15 */
#define MTU_MC86_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066680u)	/* Read Data and B86t Flip Register 16 */
#define MTU_MC86_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066682u)	/* Read Data and B86t Flip Register 17 */
#define MTU_MC86_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066684u)	/* Read Data and B86t Flip Register 18 */
#define MTU_MC86_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066686u)	/* Read Data and B86t Flip Register 19 */
#define MTU_MC86_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066664u)	/* Read Data and B86t Flip Register 2 */
#define MTU_MC86_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066688u)	/* Read Data and B86t Flip Register 20 */
#define MTU_MC86_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006668au)	/* Read Data and B86t Flip Register 21 */
#define MTU_MC86_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006668cu)	/* Read Data and B86t Flip Register 22 */
#define MTU_MC86_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006668eu)	/* Read Data and B86t Flip Register 23 */
#define MTU_MC86_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066690u)	/* Read Data and B86t Flip Register 24 */
#define MTU_MC86_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066692u)	/* Read Data and B86t Flip Register 25 */
#define MTU_MC86_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066694u)	/* Read Data and B86t Flip Register 26 */
#define MTU_MC86_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066696u)	/* Read Data and B86t Flip Register 27 */
#define MTU_MC86_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066698u)	/* Read Data and B86t Flip Register 28 */
#define MTU_MC86_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006669au)	/* Read Data and B86t Flip Register 29 */
#define MTU_MC86_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066666u)	/* Read Data and B86t Flip Register 3 */
#define MTU_MC86_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006669cu)	/* Read Data and B86t Flip Register 30 */
#define MTU_MC86_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006669eu)	/* Read Data and B86t Flip Register 31 */
#define MTU_MC86_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00666a0u)	/* Read Data and B86t Flip Register 32 */
#define MTU_MC86_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00666a2u)	/* Read Data and B86t Flip Register 33 */
#define MTU_MC86_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00666a4u)	/* Read Data and B86t Flip Register 34 */
#define MTU_MC86_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00666a6u)	/* Read Data and B86t Flip Register 35 */
#define MTU_MC86_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00666a8u)	/* Read Data and B86t Flip Register 36 */
#define MTU_MC86_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00666aau)	/* Read Data and B86t Flip Register 37 */
#define MTU_MC86_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00666acu)	/* Read Data and B86t Flip Register 38 */
#define MTU_MC86_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00666aeu)	/* Read Data and B86t Flip Register 39 */
#define MTU_MC86_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066668u)	/* Read Data and B86t Flip Register 4 */
#define MTU_MC86_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00666b0u)	/* Read Data and B86t Flip Register 40 */
#define MTU_MC86_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00666b2u)	/* Read Data and B86t Flip Register 41 */
#define MTU_MC86_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00666b4u)	/* Read Data and B86t Flip Register 42 */
#define MTU_MC86_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00666b6u)	/* Read Data and B86t Flip Register 43 */
#define MTU_MC86_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00666b8u)	/* Read Data and B86t Flip Register 44 */
#define MTU_MC86_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00666bau)	/* Read Data and B86t Flip Register 45 */
#define MTU_MC86_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00666bcu)	/* Read Data and B86t Flip Register 46 */
#define MTU_MC86_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00666beu)	/* Read Data and B86t Flip Register 47 */
#define MTU_MC86_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00666c0u)	/* Read Data and B86t Flip Register 48 */
#define MTU_MC86_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00666c2u)	/* Read Data and B86t Flip Register 49 */
#define MTU_MC86_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006666au)	/* Read Data and B86t Flip Register 5 */
#define MTU_MC86_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00666c4u)	/* Read Data and B86t Flip Register 50 */
#define MTU_MC86_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00666c6u)	/* Read Data and B86t Flip Register 51 */
#define MTU_MC86_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00666c8u)	/* Read Data and B86t Flip Register 52 */
#define MTU_MC86_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00666cau)	/* Read Data and B86t Flip Register 53 */
#define MTU_MC86_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00666ccu)	/* Read Data and B86t Flip Register 54 */
#define MTU_MC86_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00666ceu)	/* Read Data and B86t Flip Register 55 */
#define MTU_MC86_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00666d0u)	/* Read Data and B86t Flip Register 56 */
#define MTU_MC86_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00666d2u)	/* Read Data and B86t Flip Register 57 */
#define MTU_MC86_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00666d4u)	/* Read Data and B86t Flip Register 58 */
#define MTU_MC86_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00666d6u)	/* Read Data and B86t Flip Register 59 */
#define MTU_MC86_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006666cu)	/* Read Data and B86t Flip Register 6 */
#define MTU_MC86_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00666d8u)	/* Read Data and B86t Flip Register 60 */
#define MTU_MC86_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00666dau)	/* Read Data and B86t Flip Register 61 */
#define MTU_MC86_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00666dcu)	/* Read Data and B86t Flip Register 62 */
#define MTU_MC86_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00666deu)	/* Read Data and B86t Flip Register 63 */
#define MTU_MC86_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00666e0u)	/* Read Data and B86t Flip Register 64 */
#define MTU_MC86_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00666e2u)	/* Read Data and B86t Flip Register 65 */
#define MTU_MC86_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00666e4u)	/* Read Data and B86t Flip Register 66 */
#define MTU_MC86_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006666eu)	/* Read Data and B86t Flip Register 7 */
#define MTU_MC86_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066670u)	/* Read Data and B86t Flip Register 8 */
#define MTU_MC86_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066672u)	/* Read Data and B86t Flip Register 9 */
#define MTU_MC87_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066760u)	/* Read Data and B87t Flip Register 0 */
#define MTU_MC87_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066762u)	/* Read Data and B87t Flip Register 1 */
#define MTU_MC87_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066774u)	/* Read Data and B87t Flip Register 10 */
#define MTU_MC87_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066776u)	/* Read Data and B87t Flip Register 11 */
#define MTU_MC87_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066778u)	/* Read Data and B87t Flip Register 12 */
#define MTU_MC87_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006677au)	/* Read Data and B87t Flip Register 13 */
#define MTU_MC87_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006677cu)	/* Read Data and B87t Flip Register 14 */
#define MTU_MC87_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006677eu)	/* Read Data and B87t Flip Register 15 */
#define MTU_MC87_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066780u)	/* Read Data and B87t Flip Register 16 */
#define MTU_MC87_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066782u)	/* Read Data and B87t Flip Register 17 */
#define MTU_MC87_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066784u)	/* Read Data and B87t Flip Register 18 */
#define MTU_MC87_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066786u)	/* Read Data and B87t Flip Register 19 */
#define MTU_MC87_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066764u)	/* Read Data and B87t Flip Register 2 */
#define MTU_MC87_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066788u)	/* Read Data and B87t Flip Register 20 */
#define MTU_MC87_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006678au)	/* Read Data and B87t Flip Register 21 */
#define MTU_MC87_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006678cu)	/* Read Data and B87t Flip Register 22 */
#define MTU_MC87_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006678eu)	/* Read Data and B87t Flip Register 23 */
#define MTU_MC87_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066790u)	/* Read Data and B87t Flip Register 24 */
#define MTU_MC87_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066792u)	/* Read Data and B87t Flip Register 25 */
#define MTU_MC87_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066794u)	/* Read Data and B87t Flip Register 26 */
#define MTU_MC87_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066796u)	/* Read Data and B87t Flip Register 27 */
#define MTU_MC87_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066798u)	/* Read Data and B87t Flip Register 28 */
#define MTU_MC87_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006679au)	/* Read Data and B87t Flip Register 29 */
#define MTU_MC87_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066766u)	/* Read Data and B87t Flip Register 3 */
#define MTU_MC87_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006679cu)	/* Read Data and B87t Flip Register 30 */
#define MTU_MC87_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006679eu)	/* Read Data and B87t Flip Register 31 */
#define MTU_MC87_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00667a0u)	/* Read Data and B87t Flip Register 32 */
#define MTU_MC87_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00667a2u)	/* Read Data and B87t Flip Register 33 */
#define MTU_MC87_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00667a4u)	/* Read Data and B87t Flip Register 34 */
#define MTU_MC87_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00667a6u)	/* Read Data and B87t Flip Register 35 */
#define MTU_MC87_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00667a8u)	/* Read Data and B87t Flip Register 36 */
#define MTU_MC87_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00667aau)	/* Read Data and B87t Flip Register 37 */
#define MTU_MC87_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00667acu)	/* Read Data and B87t Flip Register 38 */
#define MTU_MC87_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00667aeu)	/* Read Data and B87t Flip Register 39 */
#define MTU_MC87_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066768u)	/* Read Data and B87t Flip Register 4 */
#define MTU_MC87_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00667b0u)	/* Read Data and B87t Flip Register 40 */
#define MTU_MC87_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00667b2u)	/* Read Data and B87t Flip Register 41 */
#define MTU_MC87_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00667b4u)	/* Read Data and B87t Flip Register 42 */
#define MTU_MC87_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00667b6u)	/* Read Data and B87t Flip Register 43 */
#define MTU_MC87_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00667b8u)	/* Read Data and B87t Flip Register 44 */
#define MTU_MC87_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00667bau)	/* Read Data and B87t Flip Register 45 */
#define MTU_MC87_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00667bcu)	/* Read Data and B87t Flip Register 46 */
#define MTU_MC87_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00667beu)	/* Read Data and B87t Flip Register 47 */
#define MTU_MC87_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00667c0u)	/* Read Data and B87t Flip Register 48 */
#define MTU_MC87_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00667c2u)	/* Read Data and B87t Flip Register 49 */
#define MTU_MC87_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006676au)	/* Read Data and B87t Flip Register 5 */
#define MTU_MC87_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00667c4u)	/* Read Data and B87t Flip Register 50 */
#define MTU_MC87_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00667c6u)	/* Read Data and B87t Flip Register 51 */
#define MTU_MC87_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00667c8u)	/* Read Data and B87t Flip Register 52 */
#define MTU_MC87_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00667cau)	/* Read Data and B87t Flip Register 53 */
#define MTU_MC87_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00667ccu)	/* Read Data and B87t Flip Register 54 */
#define MTU_MC87_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00667ceu)	/* Read Data and B87t Flip Register 55 */
#define MTU_MC87_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00667d0u)	/* Read Data and B87t Flip Register 56 */
#define MTU_MC87_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00667d2u)	/* Read Data and B87t Flip Register 57 */
#define MTU_MC87_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00667d4u)	/* Read Data and B87t Flip Register 58 */
#define MTU_MC87_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00667d6u)	/* Read Data and B87t Flip Register 59 */
#define MTU_MC87_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006676cu)	/* Read Data and B87t Flip Register 6 */
#define MTU_MC87_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00667d8u)	/* Read Data and B87t Flip Register 60 */
#define MTU_MC87_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00667dau)	/* Read Data and B87t Flip Register 61 */
#define MTU_MC87_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00667dcu)	/* Read Data and B87t Flip Register 62 */
#define MTU_MC87_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00667deu)	/* Read Data and B87t Flip Register 63 */
#define MTU_MC87_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00667e0u)	/* Read Data and B87t Flip Register 64 */
#define MTU_MC87_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00667e2u)	/* Read Data and B87t Flip Register 65 */
#define MTU_MC87_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00667e4u)	/* Read Data and B87t Flip Register 66 */
#define MTU_MC87_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006676eu)	/* Read Data and B87t Flip Register 7 */
#define MTU_MC87_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066770u)	/* Read Data and B87t Flip Register 8 */
#define MTU_MC87_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066772u)	/* Read Data and B87t Flip Register 9 */
#define MTU_MC88_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066860u)	/* Read Data and B88t Flip Register 0 */
#define MTU_MC88_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066862u)	/* Read Data and B88t Flip Register 1 */
#define MTU_MC88_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066874u)	/* Read Data and B88t Flip Register 10 */
#define MTU_MC88_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066876u)	/* Read Data and B88t Flip Register 11 */
#define MTU_MC88_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066878u)	/* Read Data and B88t Flip Register 12 */
#define MTU_MC88_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006687au)	/* Read Data and B88t Flip Register 13 */
#define MTU_MC88_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006687cu)	/* Read Data and B88t Flip Register 14 */
#define MTU_MC88_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006687eu)	/* Read Data and B88t Flip Register 15 */
#define MTU_MC88_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066880u)	/* Read Data and B88t Flip Register 16 */
#define MTU_MC88_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066882u)	/* Read Data and B88t Flip Register 17 */
#define MTU_MC88_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066884u)	/* Read Data and B88t Flip Register 18 */
#define MTU_MC88_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066886u)	/* Read Data and B88t Flip Register 19 */
#define MTU_MC88_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066864u)	/* Read Data and B88t Flip Register 2 */
#define MTU_MC88_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066888u)	/* Read Data and B88t Flip Register 20 */
#define MTU_MC88_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006688au)	/* Read Data and B88t Flip Register 21 */
#define MTU_MC88_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006688cu)	/* Read Data and B88t Flip Register 22 */
#define MTU_MC88_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006688eu)	/* Read Data and B88t Flip Register 23 */
#define MTU_MC88_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066890u)	/* Read Data and B88t Flip Register 24 */
#define MTU_MC88_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066892u)	/* Read Data and B88t Flip Register 25 */
#define MTU_MC88_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066894u)	/* Read Data and B88t Flip Register 26 */
#define MTU_MC88_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066896u)	/* Read Data and B88t Flip Register 27 */
#define MTU_MC88_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066898u)	/* Read Data and B88t Flip Register 28 */
#define MTU_MC88_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006689au)	/* Read Data and B88t Flip Register 29 */
#define MTU_MC88_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066866u)	/* Read Data and B88t Flip Register 3 */
#define MTU_MC88_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006689cu)	/* Read Data and B88t Flip Register 30 */
#define MTU_MC88_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006689eu)	/* Read Data and B88t Flip Register 31 */
#define MTU_MC88_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00668a0u)	/* Read Data and B88t Flip Register 32 */
#define MTU_MC88_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00668a2u)	/* Read Data and B88t Flip Register 33 */
#define MTU_MC88_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00668a4u)	/* Read Data and B88t Flip Register 34 */
#define MTU_MC88_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00668a6u)	/* Read Data and B88t Flip Register 35 */
#define MTU_MC88_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00668a8u)	/* Read Data and B88t Flip Register 36 */
#define MTU_MC88_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00668aau)	/* Read Data and B88t Flip Register 37 */
#define MTU_MC88_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00668acu)	/* Read Data and B88t Flip Register 38 */
#define MTU_MC88_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00668aeu)	/* Read Data and B88t Flip Register 39 */
#define MTU_MC88_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066868u)	/* Read Data and B88t Flip Register 4 */
#define MTU_MC88_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00668b0u)	/* Read Data and B88t Flip Register 40 */
#define MTU_MC88_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00668b2u)	/* Read Data and B88t Flip Register 41 */
#define MTU_MC88_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00668b4u)	/* Read Data and B88t Flip Register 42 */
#define MTU_MC88_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00668b6u)	/* Read Data and B88t Flip Register 43 */
#define MTU_MC88_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00668b8u)	/* Read Data and B88t Flip Register 44 */
#define MTU_MC88_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00668bau)	/* Read Data and B88t Flip Register 45 */
#define MTU_MC88_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00668bcu)	/* Read Data and B88t Flip Register 46 */
#define MTU_MC88_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00668beu)	/* Read Data and B88t Flip Register 47 */
#define MTU_MC88_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00668c0u)	/* Read Data and B88t Flip Register 48 */
#define MTU_MC88_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00668c2u)	/* Read Data and B88t Flip Register 49 */
#define MTU_MC88_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006686au)	/* Read Data and B88t Flip Register 5 */
#define MTU_MC88_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00668c4u)	/* Read Data and B88t Flip Register 50 */
#define MTU_MC88_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00668c6u)	/* Read Data and B88t Flip Register 51 */
#define MTU_MC88_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00668c8u)	/* Read Data and B88t Flip Register 52 */
#define MTU_MC88_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00668cau)	/* Read Data and B88t Flip Register 53 */
#define MTU_MC88_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00668ccu)	/* Read Data and B88t Flip Register 54 */
#define MTU_MC88_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00668ceu)	/* Read Data and B88t Flip Register 55 */
#define MTU_MC88_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00668d0u)	/* Read Data and B88t Flip Register 56 */
#define MTU_MC88_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00668d2u)	/* Read Data and B88t Flip Register 57 */
#define MTU_MC88_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00668d4u)	/* Read Data and B88t Flip Register 58 */
#define MTU_MC88_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00668d6u)	/* Read Data and B88t Flip Register 59 */
#define MTU_MC88_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006686cu)	/* Read Data and B88t Flip Register 6 */
#define MTU_MC88_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00668d8u)	/* Read Data and B88t Flip Register 60 */
#define MTU_MC88_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00668dau)	/* Read Data and B88t Flip Register 61 */
#define MTU_MC88_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00668dcu)	/* Read Data and B88t Flip Register 62 */
#define MTU_MC88_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00668deu)	/* Read Data and B88t Flip Register 63 */
#define MTU_MC88_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00668e0u)	/* Read Data and B88t Flip Register 64 */
#define MTU_MC88_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00668e2u)	/* Read Data and B88t Flip Register 65 */
#define MTU_MC88_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00668e4u)	/* Read Data and B88t Flip Register 66 */
#define MTU_MC88_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006686eu)	/* Read Data and B88t Flip Register 7 */
#define MTU_MC88_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066870u)	/* Read Data and B88t Flip Register 8 */
#define MTU_MC88_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066872u)	/* Read Data and B88t Flip Register 9 */
#define MTU_MC89_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066960u)	/* Read Data and B89t Flip Register 0 */
#define MTU_MC89_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066962u)	/* Read Data and B89t Flip Register 1 */
#define MTU_MC89_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066974u)	/* Read Data and B89t Flip Register 10 */
#define MTU_MC89_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066976u)	/* Read Data and B89t Flip Register 11 */
#define MTU_MC89_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066978u)	/* Read Data and B89t Flip Register 12 */
#define MTU_MC89_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006697au)	/* Read Data and B89t Flip Register 13 */
#define MTU_MC89_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006697cu)	/* Read Data and B89t Flip Register 14 */
#define MTU_MC89_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006697eu)	/* Read Data and B89t Flip Register 15 */
#define MTU_MC89_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066980u)	/* Read Data and B89t Flip Register 16 */
#define MTU_MC89_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066982u)	/* Read Data and B89t Flip Register 17 */
#define MTU_MC89_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066984u)	/* Read Data and B89t Flip Register 18 */
#define MTU_MC89_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066986u)	/* Read Data and B89t Flip Register 19 */
#define MTU_MC89_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066964u)	/* Read Data and B89t Flip Register 2 */
#define MTU_MC89_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066988u)	/* Read Data and B89t Flip Register 20 */
#define MTU_MC89_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006698au)	/* Read Data and B89t Flip Register 21 */
#define MTU_MC89_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006698cu)	/* Read Data and B89t Flip Register 22 */
#define MTU_MC89_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006698eu)	/* Read Data and B89t Flip Register 23 */
#define MTU_MC89_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066990u)	/* Read Data and B89t Flip Register 24 */
#define MTU_MC89_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066992u)	/* Read Data and B89t Flip Register 25 */
#define MTU_MC89_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066994u)	/* Read Data and B89t Flip Register 26 */
#define MTU_MC89_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066996u)	/* Read Data and B89t Flip Register 27 */
#define MTU_MC89_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066998u)	/* Read Data and B89t Flip Register 28 */
#define MTU_MC89_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006699au)	/* Read Data and B89t Flip Register 29 */
#define MTU_MC89_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066966u)	/* Read Data and B89t Flip Register 3 */
#define MTU_MC89_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006699cu)	/* Read Data and B89t Flip Register 30 */
#define MTU_MC89_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006699eu)	/* Read Data and B89t Flip Register 31 */
#define MTU_MC89_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00669a0u)	/* Read Data and B89t Flip Register 32 */
#define MTU_MC89_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00669a2u)	/* Read Data and B89t Flip Register 33 */
#define MTU_MC89_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00669a4u)	/* Read Data and B89t Flip Register 34 */
#define MTU_MC89_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00669a6u)	/* Read Data and B89t Flip Register 35 */
#define MTU_MC89_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00669a8u)	/* Read Data and B89t Flip Register 36 */
#define MTU_MC89_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00669aau)	/* Read Data and B89t Flip Register 37 */
#define MTU_MC89_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00669acu)	/* Read Data and B89t Flip Register 38 */
#define MTU_MC89_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00669aeu)	/* Read Data and B89t Flip Register 39 */
#define MTU_MC89_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066968u)	/* Read Data and B89t Flip Register 4 */
#define MTU_MC89_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00669b0u)	/* Read Data and B89t Flip Register 40 */
#define MTU_MC89_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00669b2u)	/* Read Data and B89t Flip Register 41 */
#define MTU_MC89_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00669b4u)	/* Read Data and B89t Flip Register 42 */
#define MTU_MC89_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00669b6u)	/* Read Data and B89t Flip Register 43 */
#define MTU_MC89_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00669b8u)	/* Read Data and B89t Flip Register 44 */
#define MTU_MC89_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00669bau)	/* Read Data and B89t Flip Register 45 */
#define MTU_MC89_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00669bcu)	/* Read Data and B89t Flip Register 46 */
#define MTU_MC89_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00669beu)	/* Read Data and B89t Flip Register 47 */
#define MTU_MC89_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00669c0u)	/* Read Data and B89t Flip Register 48 */
#define MTU_MC89_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00669c2u)	/* Read Data and B89t Flip Register 49 */
#define MTU_MC89_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006696au)	/* Read Data and B89t Flip Register 5 */
#define MTU_MC89_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00669c4u)	/* Read Data and B89t Flip Register 50 */
#define MTU_MC89_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00669c6u)	/* Read Data and B89t Flip Register 51 */
#define MTU_MC89_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00669c8u)	/* Read Data and B89t Flip Register 52 */
#define MTU_MC89_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00669cau)	/* Read Data and B89t Flip Register 53 */
#define MTU_MC89_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00669ccu)	/* Read Data and B89t Flip Register 54 */
#define MTU_MC89_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00669ceu)	/* Read Data and B89t Flip Register 55 */
#define MTU_MC89_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00669d0u)	/* Read Data and B89t Flip Register 56 */
#define MTU_MC89_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00669d2u)	/* Read Data and B89t Flip Register 57 */
#define MTU_MC89_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00669d4u)	/* Read Data and B89t Flip Register 58 */
#define MTU_MC89_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00669d6u)	/* Read Data and B89t Flip Register 59 */
#define MTU_MC89_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006696cu)	/* Read Data and B89t Flip Register 6 */
#define MTU_MC89_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00669d8u)	/* Read Data and B89t Flip Register 60 */
#define MTU_MC89_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00669dau)	/* Read Data and B89t Flip Register 61 */
#define MTU_MC89_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00669dcu)	/* Read Data and B89t Flip Register 62 */
#define MTU_MC89_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00669deu)	/* Read Data and B89t Flip Register 63 */
#define MTU_MC89_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00669e0u)	/* Read Data and B89t Flip Register 64 */
#define MTU_MC89_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00669e2u)	/* Read Data and B89t Flip Register 65 */
#define MTU_MC89_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00669e4u)	/* Read Data and B89t Flip Register 66 */
#define MTU_MC89_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006696eu)	/* Read Data and B89t Flip Register 7 */
#define MTU_MC89_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066970u)	/* Read Data and B89t Flip Register 8 */
#define MTU_MC89_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066972u)	/* Read Data and B89t Flip Register 9 */
#define MTU_MC8_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061860u)	/* Read Data and B8t Flip Register 0 */
#define MTU_MC8_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061862u)	/* Read Data and B8t Flip Register 1 */
#define MTU_MC8_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061874u)	/* Read Data and B8t Flip Register 10 */
#define MTU_MC8_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061876u)	/* Read Data and B8t Flip Register 11 */
#define MTU_MC8_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061878u)	/* Read Data and B8t Flip Register 12 */
#define MTU_MC8_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006187au)	/* Read Data and B8t Flip Register 13 */
#define MTU_MC8_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006187cu)	/* Read Data and B8t Flip Register 14 */
#define MTU_MC8_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006187eu)	/* Read Data and B8t Flip Register 15 */
#define MTU_MC8_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061880u)	/* Read Data and B8t Flip Register 16 */
#define MTU_MC8_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061882u)	/* Read Data and B8t Flip Register 17 */
#define MTU_MC8_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061884u)	/* Read Data and B8t Flip Register 18 */
#define MTU_MC8_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061886u)	/* Read Data and B8t Flip Register 19 */
#define MTU_MC8_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061864u)	/* Read Data and B8t Flip Register 2 */
#define MTU_MC8_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061888u)	/* Read Data and B8t Flip Register 20 */
#define MTU_MC8_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006188au)	/* Read Data and B8t Flip Register 21 */
#define MTU_MC8_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006188cu)	/* Read Data and B8t Flip Register 22 */
#define MTU_MC8_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006188eu)	/* Read Data and B8t Flip Register 23 */
#define MTU_MC8_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061890u)	/* Read Data and B8t Flip Register 24 */
#define MTU_MC8_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061892u)	/* Read Data and B8t Flip Register 25 */
#define MTU_MC8_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061894u)	/* Read Data and B8t Flip Register 26 */
#define MTU_MC8_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061896u)	/* Read Data and B8t Flip Register 27 */
#define MTU_MC8_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061898u)	/* Read Data and B8t Flip Register 28 */
#define MTU_MC8_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006189au)	/* Read Data and B8t Flip Register 29 */
#define MTU_MC8_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061866u)	/* Read Data and B8t Flip Register 3 */
#define MTU_MC8_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006189cu)	/* Read Data and B8t Flip Register 30 */
#define MTU_MC8_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006189eu)	/* Read Data and B8t Flip Register 31 */
#define MTU_MC8_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00618a0u)	/* Read Data and B8t Flip Register 32 */
#define MTU_MC8_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00618a2u)	/* Read Data and B8t Flip Register 33 */
#define MTU_MC8_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00618a4u)	/* Read Data and B8t Flip Register 34 */
#define MTU_MC8_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00618a6u)	/* Read Data and B8t Flip Register 35 */
#define MTU_MC8_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00618a8u)	/* Read Data and B8t Flip Register 36 */
#define MTU_MC8_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00618aau)	/* Read Data and B8t Flip Register 37 */
#define MTU_MC8_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00618acu)	/* Read Data and B8t Flip Register 38 */
#define MTU_MC8_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00618aeu)	/* Read Data and B8t Flip Register 39 */
#define MTU_MC8_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061868u)	/* Read Data and B8t Flip Register 4 */
#define MTU_MC8_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00618b0u)	/* Read Data and B8t Flip Register 40 */
#define MTU_MC8_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00618b2u)	/* Read Data and B8t Flip Register 41 */
#define MTU_MC8_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00618b4u)	/* Read Data and B8t Flip Register 42 */
#define MTU_MC8_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00618b6u)	/* Read Data and B8t Flip Register 43 */
#define MTU_MC8_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00618b8u)	/* Read Data and B8t Flip Register 44 */
#define MTU_MC8_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00618bau)	/* Read Data and B8t Flip Register 45 */
#define MTU_MC8_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00618bcu)	/* Read Data and B8t Flip Register 46 */
#define MTU_MC8_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00618beu)	/* Read Data and B8t Flip Register 47 */
#define MTU_MC8_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00618c0u)	/* Read Data and B8t Flip Register 48 */
#define MTU_MC8_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00618c2u)	/* Read Data and B8t Flip Register 49 */
#define MTU_MC8_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006186au)	/* Read Data and B8t Flip Register 5 */
#define MTU_MC8_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00618c4u)	/* Read Data and B8t Flip Register 50 */
#define MTU_MC8_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00618c6u)	/* Read Data and B8t Flip Register 51 */
#define MTU_MC8_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00618c8u)	/* Read Data and B8t Flip Register 52 */
#define MTU_MC8_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00618cau)	/* Read Data and B8t Flip Register 53 */
#define MTU_MC8_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00618ccu)	/* Read Data and B8t Flip Register 54 */
#define MTU_MC8_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00618ceu)	/* Read Data and B8t Flip Register 55 */
#define MTU_MC8_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00618d0u)	/* Read Data and B8t Flip Register 56 */
#define MTU_MC8_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00618d2u)	/* Read Data and B8t Flip Register 57 */
#define MTU_MC8_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00618d4u)	/* Read Data and B8t Flip Register 58 */
#define MTU_MC8_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00618d6u)	/* Read Data and B8t Flip Register 59 */
#define MTU_MC8_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006186cu)	/* Read Data and B8t Flip Register 6 */
#define MTU_MC8_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00618d8u)	/* Read Data and B8t Flip Register 60 */
#define MTU_MC8_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00618dau)	/* Read Data and B8t Flip Register 61 */
#define MTU_MC8_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00618dcu)	/* Read Data and B8t Flip Register 62 */
#define MTU_MC8_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00618deu)	/* Read Data and B8t Flip Register 63 */
#define MTU_MC8_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00618e0u)	/* Read Data and B8t Flip Register 64 */
#define MTU_MC8_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00618e2u)	/* Read Data and B8t Flip Register 65 */
#define MTU_MC8_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00618e4u)	/* Read Data and B8t Flip Register 66 */
#define MTU_MC8_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006186eu)	/* Read Data and B8t Flip Register 7 */
#define MTU_MC8_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061870u)	/* Read Data and B8t Flip Register 8 */
#define MTU_MC8_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061872u)	/* Read Data and B8t Flip Register 9 */
#define MTU_MC90_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066a60u)	/* Read Data and B90t Flip Register 0 */
#define MTU_MC90_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066a62u)	/* Read Data and B90t Flip Register 1 */
#define MTU_MC90_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066a74u)	/* Read Data and B90t Flip Register 10 */
#define MTU_MC90_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066a76u)	/* Read Data and B90t Flip Register 11 */
#define MTU_MC90_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066a78u)	/* Read Data and B90t Flip Register 12 */
#define MTU_MC90_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0066a7au)	/* Read Data and B90t Flip Register 13 */
#define MTU_MC90_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0066a7cu)	/* Read Data and B90t Flip Register 14 */
#define MTU_MC90_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0066a7eu)	/* Read Data and B90t Flip Register 15 */
#define MTU_MC90_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066a80u)	/* Read Data and B90t Flip Register 16 */
#define MTU_MC90_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066a82u)	/* Read Data and B90t Flip Register 17 */
#define MTU_MC90_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066a84u)	/* Read Data and B90t Flip Register 18 */
#define MTU_MC90_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066a86u)	/* Read Data and B90t Flip Register 19 */
#define MTU_MC90_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066a64u)	/* Read Data and B90t Flip Register 2 */
#define MTU_MC90_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066a88u)	/* Read Data and B90t Flip Register 20 */
#define MTU_MC90_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0066a8au)	/* Read Data and B90t Flip Register 21 */
#define MTU_MC90_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0066a8cu)	/* Read Data and B90t Flip Register 22 */
#define MTU_MC90_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0066a8eu)	/* Read Data and B90t Flip Register 23 */
#define MTU_MC90_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066a90u)	/* Read Data and B90t Flip Register 24 */
#define MTU_MC90_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066a92u)	/* Read Data and B90t Flip Register 25 */
#define MTU_MC90_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066a94u)	/* Read Data and B90t Flip Register 26 */
#define MTU_MC90_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066a96u)	/* Read Data and B90t Flip Register 27 */
#define MTU_MC90_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066a98u)	/* Read Data and B90t Flip Register 28 */
#define MTU_MC90_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0066a9au)	/* Read Data and B90t Flip Register 29 */
#define MTU_MC90_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066a66u)	/* Read Data and B90t Flip Register 3 */
#define MTU_MC90_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0066a9cu)	/* Read Data and B90t Flip Register 30 */
#define MTU_MC90_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0066a9eu)	/* Read Data and B90t Flip Register 31 */
#define MTU_MC90_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0066aa0u)	/* Read Data and B90t Flip Register 32 */
#define MTU_MC90_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0066aa2u)	/* Read Data and B90t Flip Register 33 */
#define MTU_MC90_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0066aa4u)	/* Read Data and B90t Flip Register 34 */
#define MTU_MC90_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0066aa6u)	/* Read Data and B90t Flip Register 35 */
#define MTU_MC90_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0066aa8u)	/* Read Data and B90t Flip Register 36 */
#define MTU_MC90_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0066aaau)	/* Read Data and B90t Flip Register 37 */
#define MTU_MC90_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0066aacu)	/* Read Data and B90t Flip Register 38 */
#define MTU_MC90_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0066aaeu)	/* Read Data and B90t Flip Register 39 */
#define MTU_MC90_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066a68u)	/* Read Data and B90t Flip Register 4 */
#define MTU_MC90_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0066ab0u)	/* Read Data and B90t Flip Register 40 */
#define MTU_MC90_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0066ab2u)	/* Read Data and B90t Flip Register 41 */
#define MTU_MC90_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0066ab4u)	/* Read Data and B90t Flip Register 42 */
#define MTU_MC90_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0066ab6u)	/* Read Data and B90t Flip Register 43 */
#define MTU_MC90_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0066ab8u)	/* Read Data and B90t Flip Register 44 */
#define MTU_MC90_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0066abau)	/* Read Data and B90t Flip Register 45 */
#define MTU_MC90_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0066abcu)	/* Read Data and B90t Flip Register 46 */
#define MTU_MC90_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0066abeu)	/* Read Data and B90t Flip Register 47 */
#define MTU_MC90_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0066ac0u)	/* Read Data and B90t Flip Register 48 */
#define MTU_MC90_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0066ac2u)	/* Read Data and B90t Flip Register 49 */
#define MTU_MC90_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0066a6au)	/* Read Data and B90t Flip Register 5 */
#define MTU_MC90_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0066ac4u)	/* Read Data and B90t Flip Register 50 */
#define MTU_MC90_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0066ac6u)	/* Read Data and B90t Flip Register 51 */
#define MTU_MC90_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0066ac8u)	/* Read Data and B90t Flip Register 52 */
#define MTU_MC90_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0066acau)	/* Read Data and B90t Flip Register 53 */
#define MTU_MC90_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0066accu)	/* Read Data and B90t Flip Register 54 */
#define MTU_MC90_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0066aceu)	/* Read Data and B90t Flip Register 55 */
#define MTU_MC90_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0066ad0u)	/* Read Data and B90t Flip Register 56 */
#define MTU_MC90_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0066ad2u)	/* Read Data and B90t Flip Register 57 */
#define MTU_MC90_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0066ad4u)	/* Read Data and B90t Flip Register 58 */
#define MTU_MC90_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0066ad6u)	/* Read Data and B90t Flip Register 59 */
#define MTU_MC90_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0066a6cu)	/* Read Data and B90t Flip Register 6 */
#define MTU_MC90_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0066ad8u)	/* Read Data and B90t Flip Register 60 */
#define MTU_MC90_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0066adau)	/* Read Data and B90t Flip Register 61 */
#define MTU_MC90_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0066adcu)	/* Read Data and B90t Flip Register 62 */
#define MTU_MC90_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0066adeu)	/* Read Data and B90t Flip Register 63 */
#define MTU_MC90_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0066ae0u)	/* Read Data and B90t Flip Register 64 */
#define MTU_MC90_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0066ae2u)	/* Read Data and B90t Flip Register 65 */
#define MTU_MC90_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0066ae4u)	/* Read Data and B90t Flip Register 66 */
#define MTU_MC90_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0066a6eu)	/* Read Data and B90t Flip Register 7 */
#define MTU_MC90_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066a70u)	/* Read Data and B90t Flip Register 8 */
#define MTU_MC90_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066a72u)	/* Read Data and B90t Flip Register 9 */
#define MTU_MC91_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066b60u)	/* Read Data and B91t Flip Register 0 */
#define MTU_MC91_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066b62u)	/* Read Data and B91t Flip Register 1 */
#define MTU_MC91_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066b74u)	/* Read Data and B91t Flip Register 10 */
#define MTU_MC91_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066b76u)	/* Read Data and B91t Flip Register 11 */
#define MTU_MC91_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066b78u)	/* Read Data and B91t Flip Register 12 */
#define MTU_MC91_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0066b7au)	/* Read Data and B91t Flip Register 13 */
#define MTU_MC91_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0066b7cu)	/* Read Data and B91t Flip Register 14 */
#define MTU_MC91_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0066b7eu)	/* Read Data and B91t Flip Register 15 */
#define MTU_MC91_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066b80u)	/* Read Data and B91t Flip Register 16 */
#define MTU_MC91_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066b82u)	/* Read Data and B91t Flip Register 17 */
#define MTU_MC91_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066b84u)	/* Read Data and B91t Flip Register 18 */
#define MTU_MC91_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066b86u)	/* Read Data and B91t Flip Register 19 */
#define MTU_MC91_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066b64u)	/* Read Data and B91t Flip Register 2 */
#define MTU_MC91_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066b88u)	/* Read Data and B91t Flip Register 20 */
#define MTU_MC91_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0066b8au)	/* Read Data and B91t Flip Register 21 */
#define MTU_MC91_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0066b8cu)	/* Read Data and B91t Flip Register 22 */
#define MTU_MC91_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0066b8eu)	/* Read Data and B91t Flip Register 23 */
#define MTU_MC91_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066b90u)	/* Read Data and B91t Flip Register 24 */
#define MTU_MC91_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066b92u)	/* Read Data and B91t Flip Register 25 */
#define MTU_MC91_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066b94u)	/* Read Data and B91t Flip Register 26 */
#define MTU_MC91_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066b96u)	/* Read Data and B91t Flip Register 27 */
#define MTU_MC91_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066b98u)	/* Read Data and B91t Flip Register 28 */
#define MTU_MC91_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0066b9au)	/* Read Data and B91t Flip Register 29 */
#define MTU_MC91_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066b66u)	/* Read Data and B91t Flip Register 3 */
#define MTU_MC91_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0066b9cu)	/* Read Data and B91t Flip Register 30 */
#define MTU_MC91_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0066b9eu)	/* Read Data and B91t Flip Register 31 */
#define MTU_MC91_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0066ba0u)	/* Read Data and B91t Flip Register 32 */
#define MTU_MC91_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0066ba2u)	/* Read Data and B91t Flip Register 33 */
#define MTU_MC91_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0066ba4u)	/* Read Data and B91t Flip Register 34 */
#define MTU_MC91_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0066ba6u)	/* Read Data and B91t Flip Register 35 */
#define MTU_MC91_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0066ba8u)	/* Read Data and B91t Flip Register 36 */
#define MTU_MC91_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0066baau)	/* Read Data and B91t Flip Register 37 */
#define MTU_MC91_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0066bacu)	/* Read Data and B91t Flip Register 38 */
#define MTU_MC91_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0066baeu)	/* Read Data and B91t Flip Register 39 */
#define MTU_MC91_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066b68u)	/* Read Data and B91t Flip Register 4 */
#define MTU_MC91_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0066bb0u)	/* Read Data and B91t Flip Register 40 */
#define MTU_MC91_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0066bb2u)	/* Read Data and B91t Flip Register 41 */
#define MTU_MC91_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0066bb4u)	/* Read Data and B91t Flip Register 42 */
#define MTU_MC91_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0066bb6u)	/* Read Data and B91t Flip Register 43 */
#define MTU_MC91_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0066bb8u)	/* Read Data and B91t Flip Register 44 */
#define MTU_MC91_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0066bbau)	/* Read Data and B91t Flip Register 45 */
#define MTU_MC91_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0066bbcu)	/* Read Data and B91t Flip Register 46 */
#define MTU_MC91_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0066bbeu)	/* Read Data and B91t Flip Register 47 */
#define MTU_MC91_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0066bc0u)	/* Read Data and B91t Flip Register 48 */
#define MTU_MC91_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0066bc2u)	/* Read Data and B91t Flip Register 49 */
#define MTU_MC91_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0066b6au)	/* Read Data and B91t Flip Register 5 */
#define MTU_MC91_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0066bc4u)	/* Read Data and B91t Flip Register 50 */
#define MTU_MC91_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0066bc6u)	/* Read Data and B91t Flip Register 51 */
#define MTU_MC91_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0066bc8u)	/* Read Data and B91t Flip Register 52 */
#define MTU_MC91_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0066bcau)	/* Read Data and B91t Flip Register 53 */
#define MTU_MC91_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0066bccu)	/* Read Data and B91t Flip Register 54 */
#define MTU_MC91_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0066bceu)	/* Read Data and B91t Flip Register 55 */
#define MTU_MC91_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0066bd0u)	/* Read Data and B91t Flip Register 56 */
#define MTU_MC91_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0066bd2u)	/* Read Data and B91t Flip Register 57 */
#define MTU_MC91_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0066bd4u)	/* Read Data and B91t Flip Register 58 */
#define MTU_MC91_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0066bd6u)	/* Read Data and B91t Flip Register 59 */
#define MTU_MC91_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0066b6cu)	/* Read Data and B91t Flip Register 6 */
#define MTU_MC91_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0066bd8u)	/* Read Data and B91t Flip Register 60 */
#define MTU_MC91_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0066bdau)	/* Read Data and B91t Flip Register 61 */
#define MTU_MC91_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0066bdcu)	/* Read Data and B91t Flip Register 62 */
#define MTU_MC91_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0066bdeu)	/* Read Data and B91t Flip Register 63 */
#define MTU_MC91_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0066be0u)	/* Read Data and B91t Flip Register 64 */
#define MTU_MC91_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0066be2u)	/* Read Data and B91t Flip Register 65 */
#define MTU_MC91_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0066be4u)	/* Read Data and B91t Flip Register 66 */
#define MTU_MC91_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0066b6eu)	/* Read Data and B91t Flip Register 7 */
#define MTU_MC91_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066b70u)	/* Read Data and B91t Flip Register 8 */
#define MTU_MC91_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066b72u)	/* Read Data and B91t Flip Register 9 */
#define MTU_MC92_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066c60u)	/* Read Data and B92t Flip Register 0 */
#define MTU_MC92_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066c62u)	/* Read Data and B92t Flip Register 1 */
#define MTU_MC92_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066c74u)	/* Read Data and B92t Flip Register 10 */
#define MTU_MC92_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066c76u)	/* Read Data and B92t Flip Register 11 */
#define MTU_MC92_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066c78u)	/* Read Data and B92t Flip Register 12 */
#define MTU_MC92_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0066c7au)	/* Read Data and B92t Flip Register 13 */
#define MTU_MC92_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0066c7cu)	/* Read Data and B92t Flip Register 14 */
#define MTU_MC92_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0066c7eu)	/* Read Data and B92t Flip Register 15 */
#define MTU_MC92_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066c80u)	/* Read Data and B92t Flip Register 16 */
#define MTU_MC92_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066c82u)	/* Read Data and B92t Flip Register 17 */
#define MTU_MC92_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066c84u)	/* Read Data and B92t Flip Register 18 */
#define MTU_MC92_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066c86u)	/* Read Data and B92t Flip Register 19 */
#define MTU_MC92_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066c64u)	/* Read Data and B92t Flip Register 2 */
#define MTU_MC92_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066c88u)	/* Read Data and B92t Flip Register 20 */
#define MTU_MC92_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0066c8au)	/* Read Data and B92t Flip Register 21 */
#define MTU_MC92_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0066c8cu)	/* Read Data and B92t Flip Register 22 */
#define MTU_MC92_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0066c8eu)	/* Read Data and B92t Flip Register 23 */
#define MTU_MC92_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066c90u)	/* Read Data and B92t Flip Register 24 */
#define MTU_MC92_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066c92u)	/* Read Data and B92t Flip Register 25 */
#define MTU_MC92_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066c94u)	/* Read Data and B92t Flip Register 26 */
#define MTU_MC92_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066c96u)	/* Read Data and B92t Flip Register 27 */
#define MTU_MC92_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066c98u)	/* Read Data and B92t Flip Register 28 */
#define MTU_MC92_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0066c9au)	/* Read Data and B92t Flip Register 29 */
#define MTU_MC92_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066c66u)	/* Read Data and B92t Flip Register 3 */
#define MTU_MC92_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0066c9cu)	/* Read Data and B92t Flip Register 30 */
#define MTU_MC92_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0066c9eu)	/* Read Data and B92t Flip Register 31 */
#define MTU_MC92_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0066ca0u)	/* Read Data and B92t Flip Register 32 */
#define MTU_MC92_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0066ca2u)	/* Read Data and B92t Flip Register 33 */
#define MTU_MC92_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0066ca4u)	/* Read Data and B92t Flip Register 34 */
#define MTU_MC92_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0066ca6u)	/* Read Data and B92t Flip Register 35 */
#define MTU_MC92_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0066ca8u)	/* Read Data and B92t Flip Register 36 */
#define MTU_MC92_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0066caau)	/* Read Data and B92t Flip Register 37 */
#define MTU_MC92_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0066cacu)	/* Read Data and B92t Flip Register 38 */
#define MTU_MC92_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0066caeu)	/* Read Data and B92t Flip Register 39 */
#define MTU_MC92_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066c68u)	/* Read Data and B92t Flip Register 4 */
#define MTU_MC92_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0066cb0u)	/* Read Data and B92t Flip Register 40 */
#define MTU_MC92_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0066cb2u)	/* Read Data and B92t Flip Register 41 */
#define MTU_MC92_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0066cb4u)	/* Read Data and B92t Flip Register 42 */
#define MTU_MC92_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0066cb6u)	/* Read Data and B92t Flip Register 43 */
#define MTU_MC92_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0066cb8u)	/* Read Data and B92t Flip Register 44 */
#define MTU_MC92_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0066cbau)	/* Read Data and B92t Flip Register 45 */
#define MTU_MC92_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0066cbcu)	/* Read Data and B92t Flip Register 46 */
#define MTU_MC92_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0066cbeu)	/* Read Data and B92t Flip Register 47 */
#define MTU_MC92_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0066cc0u)	/* Read Data and B92t Flip Register 48 */
#define MTU_MC92_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0066cc2u)	/* Read Data and B92t Flip Register 49 */
#define MTU_MC92_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0066c6au)	/* Read Data and B92t Flip Register 5 */
#define MTU_MC92_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0066cc4u)	/* Read Data and B92t Flip Register 50 */
#define MTU_MC92_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0066cc6u)	/* Read Data and B92t Flip Register 51 */
#define MTU_MC92_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0066cc8u)	/* Read Data and B92t Flip Register 52 */
#define MTU_MC92_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0066ccau)	/* Read Data and B92t Flip Register 53 */
#define MTU_MC92_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0066cccu)	/* Read Data and B92t Flip Register 54 */
#define MTU_MC92_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0066cceu)	/* Read Data and B92t Flip Register 55 */
#define MTU_MC92_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0066cd0u)	/* Read Data and B92t Flip Register 56 */
#define MTU_MC92_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0066cd2u)	/* Read Data and B92t Flip Register 57 */
#define MTU_MC92_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0066cd4u)	/* Read Data and B92t Flip Register 58 */
#define MTU_MC92_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0066cd6u)	/* Read Data and B92t Flip Register 59 */
#define MTU_MC92_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0066c6cu)	/* Read Data and B92t Flip Register 6 */
#define MTU_MC92_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0066cd8u)	/* Read Data and B92t Flip Register 60 */
#define MTU_MC92_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0066cdau)	/* Read Data and B92t Flip Register 61 */
#define MTU_MC92_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0066cdcu)	/* Read Data and B92t Flip Register 62 */
#define MTU_MC92_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0066cdeu)	/* Read Data and B92t Flip Register 63 */
#define MTU_MC92_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0066ce0u)	/* Read Data and B92t Flip Register 64 */
#define MTU_MC92_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0066ce2u)	/* Read Data and B92t Flip Register 65 */
#define MTU_MC92_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0066ce4u)	/* Read Data and B92t Flip Register 66 */
#define MTU_MC92_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0066c6eu)	/* Read Data and B92t Flip Register 7 */
#define MTU_MC92_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066c70u)	/* Read Data and B92t Flip Register 8 */
#define MTU_MC92_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066c72u)	/* Read Data and B92t Flip Register 9 */
#define MTU_MC93_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066d60u)	/* Read Data and B93t Flip Register 0 */
#define MTU_MC93_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066d62u)	/* Read Data and B93t Flip Register 1 */
#define MTU_MC93_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066d74u)	/* Read Data and B93t Flip Register 10 */
#define MTU_MC93_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066d76u)	/* Read Data and B93t Flip Register 11 */
#define MTU_MC93_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066d78u)	/* Read Data and B93t Flip Register 12 */
#define MTU_MC93_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0066d7au)	/* Read Data and B93t Flip Register 13 */
#define MTU_MC93_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0066d7cu)	/* Read Data and B93t Flip Register 14 */
#define MTU_MC93_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0066d7eu)	/* Read Data and B93t Flip Register 15 */
#define MTU_MC93_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066d80u)	/* Read Data and B93t Flip Register 16 */
#define MTU_MC93_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066d82u)	/* Read Data and B93t Flip Register 17 */
#define MTU_MC93_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066d84u)	/* Read Data and B93t Flip Register 18 */
#define MTU_MC93_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066d86u)	/* Read Data and B93t Flip Register 19 */
#define MTU_MC93_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066d64u)	/* Read Data and B93t Flip Register 2 */
#define MTU_MC93_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066d88u)	/* Read Data and B93t Flip Register 20 */
#define MTU_MC93_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0066d8au)	/* Read Data and B93t Flip Register 21 */
#define MTU_MC93_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0066d8cu)	/* Read Data and B93t Flip Register 22 */
#define MTU_MC93_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0066d8eu)	/* Read Data and B93t Flip Register 23 */
#define MTU_MC93_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066d90u)	/* Read Data and B93t Flip Register 24 */
#define MTU_MC93_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066d92u)	/* Read Data and B93t Flip Register 25 */
#define MTU_MC93_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066d94u)	/* Read Data and B93t Flip Register 26 */
#define MTU_MC93_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066d96u)	/* Read Data and B93t Flip Register 27 */
#define MTU_MC93_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066d98u)	/* Read Data and B93t Flip Register 28 */
#define MTU_MC93_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0066d9au)	/* Read Data and B93t Flip Register 29 */
#define MTU_MC93_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066d66u)	/* Read Data and B93t Flip Register 3 */
#define MTU_MC93_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0066d9cu)	/* Read Data and B93t Flip Register 30 */
#define MTU_MC93_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0066d9eu)	/* Read Data and B93t Flip Register 31 */
#define MTU_MC93_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0066da0u)	/* Read Data and B93t Flip Register 32 */
#define MTU_MC93_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0066da2u)	/* Read Data and B93t Flip Register 33 */
#define MTU_MC93_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0066da4u)	/* Read Data and B93t Flip Register 34 */
#define MTU_MC93_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0066da6u)	/* Read Data and B93t Flip Register 35 */
#define MTU_MC93_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0066da8u)	/* Read Data and B93t Flip Register 36 */
#define MTU_MC93_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0066daau)	/* Read Data and B93t Flip Register 37 */
#define MTU_MC93_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0066dacu)	/* Read Data and B93t Flip Register 38 */
#define MTU_MC93_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0066daeu)	/* Read Data and B93t Flip Register 39 */
#define MTU_MC93_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066d68u)	/* Read Data and B93t Flip Register 4 */
#define MTU_MC93_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0066db0u)	/* Read Data and B93t Flip Register 40 */
#define MTU_MC93_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0066db2u)	/* Read Data and B93t Flip Register 41 */
#define MTU_MC93_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0066db4u)	/* Read Data and B93t Flip Register 42 */
#define MTU_MC93_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0066db6u)	/* Read Data and B93t Flip Register 43 */
#define MTU_MC93_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0066db8u)	/* Read Data and B93t Flip Register 44 */
#define MTU_MC93_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0066dbau)	/* Read Data and B93t Flip Register 45 */
#define MTU_MC93_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0066dbcu)	/* Read Data and B93t Flip Register 46 */
#define MTU_MC93_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0066dbeu)	/* Read Data and B93t Flip Register 47 */
#define MTU_MC93_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0066dc0u)	/* Read Data and B93t Flip Register 48 */
#define MTU_MC93_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0066dc2u)	/* Read Data and B93t Flip Register 49 */
#define MTU_MC93_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0066d6au)	/* Read Data and B93t Flip Register 5 */
#define MTU_MC93_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0066dc4u)	/* Read Data and B93t Flip Register 50 */
#define MTU_MC93_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0066dc6u)	/* Read Data and B93t Flip Register 51 */
#define MTU_MC93_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0066dc8u)	/* Read Data and B93t Flip Register 52 */
#define MTU_MC93_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0066dcau)	/* Read Data and B93t Flip Register 53 */
#define MTU_MC93_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0066dccu)	/* Read Data and B93t Flip Register 54 */
#define MTU_MC93_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0066dceu)	/* Read Data and B93t Flip Register 55 */
#define MTU_MC93_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0066dd0u)	/* Read Data and B93t Flip Register 56 */
#define MTU_MC93_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0066dd2u)	/* Read Data and B93t Flip Register 57 */
#define MTU_MC93_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0066dd4u)	/* Read Data and B93t Flip Register 58 */
#define MTU_MC93_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0066dd6u)	/* Read Data and B93t Flip Register 59 */
#define MTU_MC93_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0066d6cu)	/* Read Data and B93t Flip Register 6 */
#define MTU_MC93_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0066dd8u)	/* Read Data and B93t Flip Register 60 */
#define MTU_MC93_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0066ddau)	/* Read Data and B93t Flip Register 61 */
#define MTU_MC93_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0066ddcu)	/* Read Data and B93t Flip Register 62 */
#define MTU_MC93_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0066ddeu)	/* Read Data and B93t Flip Register 63 */
#define MTU_MC93_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0066de0u)	/* Read Data and B93t Flip Register 64 */
#define MTU_MC93_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0066de2u)	/* Read Data and B93t Flip Register 65 */
#define MTU_MC93_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0066de4u)	/* Read Data and B93t Flip Register 66 */
#define MTU_MC93_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0066d6eu)	/* Read Data and B93t Flip Register 7 */
#define MTU_MC93_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066d70u)	/* Read Data and B93t Flip Register 8 */
#define MTU_MC93_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066d72u)	/* Read Data and B93t Flip Register 9 */
#define MTU_MC94_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066e60u)	/* Read Data and B94t Flip Register 0 */
#define MTU_MC94_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066e62u)	/* Read Data and B94t Flip Register 1 */
#define MTU_MC94_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066e74u)	/* Read Data and B94t Flip Register 10 */
#define MTU_MC94_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066e76u)	/* Read Data and B94t Flip Register 11 */
#define MTU_MC94_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066e78u)	/* Read Data and B94t Flip Register 12 */
#define MTU_MC94_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0066e7au)	/* Read Data and B94t Flip Register 13 */
#define MTU_MC94_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0066e7cu)	/* Read Data and B94t Flip Register 14 */
#define MTU_MC94_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0066e7eu)	/* Read Data and B94t Flip Register 15 */
#define MTU_MC94_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066e80u)	/* Read Data and B94t Flip Register 16 */
#define MTU_MC94_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066e82u)	/* Read Data and B94t Flip Register 17 */
#define MTU_MC94_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066e84u)	/* Read Data and B94t Flip Register 18 */
#define MTU_MC94_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066e86u)	/* Read Data and B94t Flip Register 19 */
#define MTU_MC94_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066e64u)	/* Read Data and B94t Flip Register 2 */
#define MTU_MC94_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066e88u)	/* Read Data and B94t Flip Register 20 */
#define MTU_MC94_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0066e8au)	/* Read Data and B94t Flip Register 21 */
#define MTU_MC94_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0066e8cu)	/* Read Data and B94t Flip Register 22 */
#define MTU_MC94_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0066e8eu)	/* Read Data and B94t Flip Register 23 */
#define MTU_MC94_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066e90u)	/* Read Data and B94t Flip Register 24 */
#define MTU_MC94_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066e92u)	/* Read Data and B94t Flip Register 25 */
#define MTU_MC94_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066e94u)	/* Read Data and B94t Flip Register 26 */
#define MTU_MC94_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066e96u)	/* Read Data and B94t Flip Register 27 */
#define MTU_MC94_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066e98u)	/* Read Data and B94t Flip Register 28 */
#define MTU_MC94_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0066e9au)	/* Read Data and B94t Flip Register 29 */
#define MTU_MC94_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066e66u)	/* Read Data and B94t Flip Register 3 */
#define MTU_MC94_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0066e9cu)	/* Read Data and B94t Flip Register 30 */
#define MTU_MC94_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0066e9eu)	/* Read Data and B94t Flip Register 31 */
#define MTU_MC94_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0066ea0u)	/* Read Data and B94t Flip Register 32 */
#define MTU_MC94_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0066ea2u)	/* Read Data and B94t Flip Register 33 */
#define MTU_MC94_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0066ea4u)	/* Read Data and B94t Flip Register 34 */
#define MTU_MC94_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0066ea6u)	/* Read Data and B94t Flip Register 35 */
#define MTU_MC94_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0066ea8u)	/* Read Data and B94t Flip Register 36 */
#define MTU_MC94_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0066eaau)	/* Read Data and B94t Flip Register 37 */
#define MTU_MC94_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0066eacu)	/* Read Data and B94t Flip Register 38 */
#define MTU_MC94_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0066eaeu)	/* Read Data and B94t Flip Register 39 */
#define MTU_MC94_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066e68u)	/* Read Data and B94t Flip Register 4 */
#define MTU_MC94_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0066eb0u)	/* Read Data and B94t Flip Register 40 */
#define MTU_MC94_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0066eb2u)	/* Read Data and B94t Flip Register 41 */
#define MTU_MC94_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0066eb4u)	/* Read Data and B94t Flip Register 42 */
#define MTU_MC94_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0066eb6u)	/* Read Data and B94t Flip Register 43 */
#define MTU_MC94_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0066eb8u)	/* Read Data and B94t Flip Register 44 */
#define MTU_MC94_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0066ebau)	/* Read Data and B94t Flip Register 45 */
#define MTU_MC94_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0066ebcu)	/* Read Data and B94t Flip Register 46 */
#define MTU_MC94_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0066ebeu)	/* Read Data and B94t Flip Register 47 */
#define MTU_MC94_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0066ec0u)	/* Read Data and B94t Flip Register 48 */
#define MTU_MC94_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0066ec2u)	/* Read Data and B94t Flip Register 49 */
#define MTU_MC94_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0066e6au)	/* Read Data and B94t Flip Register 5 */
#define MTU_MC94_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0066ec4u)	/* Read Data and B94t Flip Register 50 */
#define MTU_MC94_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0066ec6u)	/* Read Data and B94t Flip Register 51 */
#define MTU_MC94_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0066ec8u)	/* Read Data and B94t Flip Register 52 */
#define MTU_MC94_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0066ecau)	/* Read Data and B94t Flip Register 53 */
#define MTU_MC94_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0066eccu)	/* Read Data and B94t Flip Register 54 */
#define MTU_MC94_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0066eceu)	/* Read Data and B94t Flip Register 55 */
#define MTU_MC94_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0066ed0u)	/* Read Data and B94t Flip Register 56 */
#define MTU_MC94_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0066ed2u)	/* Read Data and B94t Flip Register 57 */
#define MTU_MC94_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0066ed4u)	/* Read Data and B94t Flip Register 58 */
#define MTU_MC94_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0066ed6u)	/* Read Data and B94t Flip Register 59 */
#define MTU_MC94_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0066e6cu)	/* Read Data and B94t Flip Register 6 */
#define MTU_MC94_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0066ed8u)	/* Read Data and B94t Flip Register 60 */
#define MTU_MC94_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0066edau)	/* Read Data and B94t Flip Register 61 */
#define MTU_MC94_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0066edcu)	/* Read Data and B94t Flip Register 62 */
#define MTU_MC94_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0066edeu)	/* Read Data and B94t Flip Register 63 */
#define MTU_MC94_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0066ee0u)	/* Read Data and B94t Flip Register 64 */
#define MTU_MC94_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0066ee2u)	/* Read Data and B94t Flip Register 65 */
#define MTU_MC94_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0066ee4u)	/* Read Data and B94t Flip Register 66 */
#define MTU_MC94_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0066e6eu)	/* Read Data and B94t Flip Register 7 */
#define MTU_MC94_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066e70u)	/* Read Data and B94t Flip Register 8 */
#define MTU_MC94_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066e72u)	/* Read Data and B94t Flip Register 9 */
#define MTU_MC95_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0066f60u)	/* Read Data and B95t Flip Register 0 */
#define MTU_MC95_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0066f62u)	/* Read Data and B95t Flip Register 1 */
#define MTU_MC95_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0066f74u)	/* Read Data and B95t Flip Register 10 */
#define MTU_MC95_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0066f76u)	/* Read Data and B95t Flip Register 11 */
#define MTU_MC95_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0066f78u)	/* Read Data and B95t Flip Register 12 */
#define MTU_MC95_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf0066f7au)	/* Read Data and B95t Flip Register 13 */
#define MTU_MC95_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf0066f7cu)	/* Read Data and B95t Flip Register 14 */
#define MTU_MC95_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf0066f7eu)	/* Read Data and B95t Flip Register 15 */
#define MTU_MC95_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0066f80u)	/* Read Data and B95t Flip Register 16 */
#define MTU_MC95_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0066f82u)	/* Read Data and B95t Flip Register 17 */
#define MTU_MC95_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0066f84u)	/* Read Data and B95t Flip Register 18 */
#define MTU_MC95_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0066f86u)	/* Read Data and B95t Flip Register 19 */
#define MTU_MC95_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0066f64u)	/* Read Data and B95t Flip Register 2 */
#define MTU_MC95_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0066f88u)	/* Read Data and B95t Flip Register 20 */
#define MTU_MC95_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf0066f8au)	/* Read Data and B95t Flip Register 21 */
#define MTU_MC95_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf0066f8cu)	/* Read Data and B95t Flip Register 22 */
#define MTU_MC95_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf0066f8eu)	/* Read Data and B95t Flip Register 23 */
#define MTU_MC95_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0066f90u)	/* Read Data and B95t Flip Register 24 */
#define MTU_MC95_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0066f92u)	/* Read Data and B95t Flip Register 25 */
#define MTU_MC95_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0066f94u)	/* Read Data and B95t Flip Register 26 */
#define MTU_MC95_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0066f96u)	/* Read Data and B95t Flip Register 27 */
#define MTU_MC95_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0066f98u)	/* Read Data and B95t Flip Register 28 */
#define MTU_MC95_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf0066f9au)	/* Read Data and B95t Flip Register 29 */
#define MTU_MC95_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0066f66u)	/* Read Data and B95t Flip Register 3 */
#define MTU_MC95_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf0066f9cu)	/* Read Data and B95t Flip Register 30 */
#define MTU_MC95_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf0066f9eu)	/* Read Data and B95t Flip Register 31 */
#define MTU_MC95_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf0066fa0u)	/* Read Data and B95t Flip Register 32 */
#define MTU_MC95_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf0066fa2u)	/* Read Data and B95t Flip Register 33 */
#define MTU_MC95_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf0066fa4u)	/* Read Data and B95t Flip Register 34 */
#define MTU_MC95_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf0066fa6u)	/* Read Data and B95t Flip Register 35 */
#define MTU_MC95_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf0066fa8u)	/* Read Data and B95t Flip Register 36 */
#define MTU_MC95_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf0066faau)	/* Read Data and B95t Flip Register 37 */
#define MTU_MC95_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf0066facu)	/* Read Data and B95t Flip Register 38 */
#define MTU_MC95_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf0066faeu)	/* Read Data and B95t Flip Register 39 */
#define MTU_MC95_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0066f68u)	/* Read Data and B95t Flip Register 4 */
#define MTU_MC95_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf0066fb0u)	/* Read Data and B95t Flip Register 40 */
#define MTU_MC95_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf0066fb2u)	/* Read Data and B95t Flip Register 41 */
#define MTU_MC95_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf0066fb4u)	/* Read Data and B95t Flip Register 42 */
#define MTU_MC95_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf0066fb6u)	/* Read Data and B95t Flip Register 43 */
#define MTU_MC95_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf0066fb8u)	/* Read Data and B95t Flip Register 44 */
#define MTU_MC95_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf0066fbau)	/* Read Data and B95t Flip Register 45 */
#define MTU_MC95_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf0066fbcu)	/* Read Data and B95t Flip Register 46 */
#define MTU_MC95_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf0066fbeu)	/* Read Data and B95t Flip Register 47 */
#define MTU_MC95_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf0066fc0u)	/* Read Data and B95t Flip Register 48 */
#define MTU_MC95_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf0066fc2u)	/* Read Data and B95t Flip Register 49 */
#define MTU_MC95_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf0066f6au)	/* Read Data and B95t Flip Register 5 */
#define MTU_MC95_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf0066fc4u)	/* Read Data and B95t Flip Register 50 */
#define MTU_MC95_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf0066fc6u)	/* Read Data and B95t Flip Register 51 */
#define MTU_MC95_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf0066fc8u)	/* Read Data and B95t Flip Register 52 */
#define MTU_MC95_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf0066fcau)	/* Read Data and B95t Flip Register 53 */
#define MTU_MC95_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf0066fccu)	/* Read Data and B95t Flip Register 54 */
#define MTU_MC95_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf0066fceu)	/* Read Data and B95t Flip Register 55 */
#define MTU_MC95_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf0066fd0u)	/* Read Data and B95t Flip Register 56 */
#define MTU_MC95_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf0066fd2u)	/* Read Data and B95t Flip Register 57 */
#define MTU_MC95_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf0066fd4u)	/* Read Data and B95t Flip Register 58 */
#define MTU_MC95_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf0066fd6u)	/* Read Data and B95t Flip Register 59 */
#define MTU_MC95_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf0066f6cu)	/* Read Data and B95t Flip Register 6 */
#define MTU_MC95_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf0066fd8u)	/* Read Data and B95t Flip Register 60 */
#define MTU_MC95_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf0066fdau)	/* Read Data and B95t Flip Register 61 */
#define MTU_MC95_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf0066fdcu)	/* Read Data and B95t Flip Register 62 */
#define MTU_MC95_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf0066fdeu)	/* Read Data and B95t Flip Register 63 */
#define MTU_MC95_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf0066fe0u)	/* Read Data and B95t Flip Register 64 */
#define MTU_MC95_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf0066fe2u)	/* Read Data and B95t Flip Register 65 */
#define MTU_MC95_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf0066fe4u)	/* Read Data and B95t Flip Register 66 */
#define MTU_MC95_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf0066f6eu)	/* Read Data and B95t Flip Register 7 */
#define MTU_MC95_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0066f70u)	/* Read Data and B95t Flip Register 8 */
#define MTU_MC95_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0066f72u)	/* Read Data and B95t Flip Register 9 */
#define MTU_MC9_RDBFL0	(*( MTU_MC0_RDBFL0_type *) 0xf0061960u)	/* Read Data and B9t Flip Register 0 */
#define MTU_MC9_RDBFL1	(*( MTU_MC0_RDBFL0_type *) 0xf0061962u)	/* Read Data and B9t Flip Register 1 */
#define MTU_MC9_RDBFL10	(*( MTU_MC0_RDBFL0_type *) 0xf0061974u)	/* Read Data and B9t Flip Register 10 */
#define MTU_MC9_RDBFL11	(*( MTU_MC0_RDBFL0_type *) 0xf0061976u)	/* Read Data and B9t Flip Register 11 */
#define MTU_MC9_RDBFL12	(*( MTU_MC0_RDBFL0_type *) 0xf0061978u)	/* Read Data and B9t Flip Register 12 */
#define MTU_MC9_RDBFL13	(*( MTU_MC0_RDBFL0_type *) 0xf006197au)	/* Read Data and B9t Flip Register 13 */
#define MTU_MC9_RDBFL14	(*( MTU_MC0_RDBFL0_type *) 0xf006197cu)	/* Read Data and B9t Flip Register 14 */
#define MTU_MC9_RDBFL15	(*( MTU_MC0_RDBFL0_type *) 0xf006197eu)	/* Read Data and B9t Flip Register 15 */
#define MTU_MC9_RDBFL16	(*( MTU_MC0_RDBFL0_type *) 0xf0061980u)	/* Read Data and B9t Flip Register 16 */
#define MTU_MC9_RDBFL17	(*( MTU_MC0_RDBFL0_type *) 0xf0061982u)	/* Read Data and B9t Flip Register 17 */
#define MTU_MC9_RDBFL18	(*( MTU_MC0_RDBFL0_type *) 0xf0061984u)	/* Read Data and B9t Flip Register 18 */
#define MTU_MC9_RDBFL19	(*( MTU_MC0_RDBFL0_type *) 0xf0061986u)	/* Read Data and B9t Flip Register 19 */
#define MTU_MC9_RDBFL2	(*( MTU_MC0_RDBFL0_type *) 0xf0061964u)	/* Read Data and B9t Flip Register 2 */
#define MTU_MC9_RDBFL20	(*( MTU_MC0_RDBFL0_type *) 0xf0061988u)	/* Read Data and B9t Flip Register 20 */
#define MTU_MC9_RDBFL21	(*( MTU_MC0_RDBFL0_type *) 0xf006198au)	/* Read Data and B9t Flip Register 21 */
#define MTU_MC9_RDBFL22	(*( MTU_MC0_RDBFL0_type *) 0xf006198cu)	/* Read Data and B9t Flip Register 22 */
#define MTU_MC9_RDBFL23	(*( MTU_MC0_RDBFL0_type *) 0xf006198eu)	/* Read Data and B9t Flip Register 23 */
#define MTU_MC9_RDBFL24	(*( MTU_MC0_RDBFL0_type *) 0xf0061990u)	/* Read Data and B9t Flip Register 24 */
#define MTU_MC9_RDBFL25	(*( MTU_MC0_RDBFL0_type *) 0xf0061992u)	/* Read Data and B9t Flip Register 25 */
#define MTU_MC9_RDBFL26	(*( MTU_MC0_RDBFL0_type *) 0xf0061994u)	/* Read Data and B9t Flip Register 26 */
#define MTU_MC9_RDBFL27	(*( MTU_MC0_RDBFL0_type *) 0xf0061996u)	/* Read Data and B9t Flip Register 27 */
#define MTU_MC9_RDBFL28	(*( MTU_MC0_RDBFL0_type *) 0xf0061998u)	/* Read Data and B9t Flip Register 28 */
#define MTU_MC9_RDBFL29	(*( MTU_MC0_RDBFL0_type *) 0xf006199au)	/* Read Data and B9t Flip Register 29 */
#define MTU_MC9_RDBFL3	(*( MTU_MC0_RDBFL0_type *) 0xf0061966u)	/* Read Data and B9t Flip Register 3 */
#define MTU_MC9_RDBFL30	(*( MTU_MC0_RDBFL0_type *) 0xf006199cu)	/* Read Data and B9t Flip Register 30 */
#define MTU_MC9_RDBFL31	(*( MTU_MC0_RDBFL0_type *) 0xf006199eu)	/* Read Data and B9t Flip Register 31 */
#define MTU_MC9_RDBFL32	(*( MTU_MC0_RDBFL0_type *) 0xf00619a0u)	/* Read Data and B9t Flip Register 32 */
#define MTU_MC9_RDBFL33	(*( MTU_MC0_RDBFL0_type *) 0xf00619a2u)	/* Read Data and B9t Flip Register 33 */
#define MTU_MC9_RDBFL34	(*( MTU_MC0_RDBFL0_type *) 0xf00619a4u)	/* Read Data and B9t Flip Register 34 */
#define MTU_MC9_RDBFL35	(*( MTU_MC0_RDBFL0_type *) 0xf00619a6u)	/* Read Data and B9t Flip Register 35 */
#define MTU_MC9_RDBFL36	(*( MTU_MC0_RDBFL0_type *) 0xf00619a8u)	/* Read Data and B9t Flip Register 36 */
#define MTU_MC9_RDBFL37	(*( MTU_MC0_RDBFL0_type *) 0xf00619aau)	/* Read Data and B9t Flip Register 37 */
#define MTU_MC9_RDBFL38	(*( MTU_MC0_RDBFL0_type *) 0xf00619acu)	/* Read Data and B9t Flip Register 38 */
#define MTU_MC9_RDBFL39	(*( MTU_MC0_RDBFL0_type *) 0xf00619aeu)	/* Read Data and B9t Flip Register 39 */
#define MTU_MC9_RDBFL4	(*( MTU_MC0_RDBFL0_type *) 0xf0061968u)	/* Read Data and B9t Flip Register 4 */
#define MTU_MC9_RDBFL40	(*( MTU_MC0_RDBFL0_type *) 0xf00619b0u)	/* Read Data and B9t Flip Register 40 */
#define MTU_MC9_RDBFL41	(*( MTU_MC0_RDBFL0_type *) 0xf00619b2u)	/* Read Data and B9t Flip Register 41 */
#define MTU_MC9_RDBFL42	(*( MTU_MC0_RDBFL0_type *) 0xf00619b4u)	/* Read Data and B9t Flip Register 42 */
#define MTU_MC9_RDBFL43	(*( MTU_MC0_RDBFL0_type *) 0xf00619b6u)	/* Read Data and B9t Flip Register 43 */
#define MTU_MC9_RDBFL44	(*( MTU_MC0_RDBFL0_type *) 0xf00619b8u)	/* Read Data and B9t Flip Register 44 */
#define MTU_MC9_RDBFL45	(*( MTU_MC0_RDBFL0_type *) 0xf00619bau)	/* Read Data and B9t Flip Register 45 */
#define MTU_MC9_RDBFL46	(*( MTU_MC0_RDBFL0_type *) 0xf00619bcu)	/* Read Data and B9t Flip Register 46 */
#define MTU_MC9_RDBFL47	(*( MTU_MC0_RDBFL0_type *) 0xf00619beu)	/* Read Data and B9t Flip Register 47 */
#define MTU_MC9_RDBFL48	(*( MTU_MC0_RDBFL0_type *) 0xf00619c0u)	/* Read Data and B9t Flip Register 48 */
#define MTU_MC9_RDBFL49	(*( MTU_MC0_RDBFL0_type *) 0xf00619c2u)	/* Read Data and B9t Flip Register 49 */
#define MTU_MC9_RDBFL5	(*( MTU_MC0_RDBFL0_type *) 0xf006196au)	/* Read Data and B9t Flip Register 5 */
#define MTU_MC9_RDBFL50	(*( MTU_MC0_RDBFL0_type *) 0xf00619c4u)	/* Read Data and B9t Flip Register 50 */
#define MTU_MC9_RDBFL51	(*( MTU_MC0_RDBFL0_type *) 0xf00619c6u)	/* Read Data and B9t Flip Register 51 */
#define MTU_MC9_RDBFL52	(*( MTU_MC0_RDBFL0_type *) 0xf00619c8u)	/* Read Data and B9t Flip Register 52 */
#define MTU_MC9_RDBFL53	(*( MTU_MC0_RDBFL0_type *) 0xf00619cau)	/* Read Data and B9t Flip Register 53 */
#define MTU_MC9_RDBFL54	(*( MTU_MC0_RDBFL0_type *) 0xf00619ccu)	/* Read Data and B9t Flip Register 54 */
#define MTU_MC9_RDBFL55	(*( MTU_MC0_RDBFL0_type *) 0xf00619ceu)	/* Read Data and B9t Flip Register 55 */
#define MTU_MC9_RDBFL56	(*( MTU_MC0_RDBFL0_type *) 0xf00619d0u)	/* Read Data and B9t Flip Register 56 */
#define MTU_MC9_RDBFL57	(*( MTU_MC0_RDBFL0_type *) 0xf00619d2u)	/* Read Data and B9t Flip Register 57 */
#define MTU_MC9_RDBFL58	(*( MTU_MC0_RDBFL0_type *) 0xf00619d4u)	/* Read Data and B9t Flip Register 58 */
#define MTU_MC9_RDBFL59	(*( MTU_MC0_RDBFL0_type *) 0xf00619d6u)	/* Read Data and B9t Flip Register 59 */
#define MTU_MC9_RDBFL6	(*( MTU_MC0_RDBFL0_type *) 0xf006196cu)	/* Read Data and B9t Flip Register 6 */
#define MTU_MC9_RDBFL60	(*( MTU_MC0_RDBFL0_type *) 0xf00619d8u)	/* Read Data and B9t Flip Register 60 */
#define MTU_MC9_RDBFL61	(*( MTU_MC0_RDBFL0_type *) 0xf00619dau)	/* Read Data and B9t Flip Register 61 */
#define MTU_MC9_RDBFL62	(*( MTU_MC0_RDBFL0_type *) 0xf00619dcu)	/* Read Data and B9t Flip Register 62 */
#define MTU_MC9_RDBFL63	(*( MTU_MC0_RDBFL0_type *) 0xf00619deu)	/* Read Data and B9t Flip Register 63 */
#define MTU_MC9_RDBFL64	(*( MTU_MC0_RDBFL0_type *) 0xf00619e0u)	/* Read Data and B9t Flip Register 64 */
#define MTU_MC9_RDBFL65	(*( MTU_MC0_RDBFL0_type *) 0xf00619e2u)	/* Read Data and B9t Flip Register 65 */
#define MTU_MC9_RDBFL66	(*( MTU_MC0_RDBFL0_type *) 0xf00619e4u)	/* Read Data and B9t Flip Register 66 */
#define MTU_MC9_RDBFL7	(*( MTU_MC0_RDBFL0_type *) 0xf006196eu)	/* Read Data and B9t Flip Register 7 */
#define MTU_MC9_RDBFL8	(*( MTU_MC0_RDBFL0_type *) 0xf0061970u)	/* Read Data and B9t Flip Register 8 */
#define MTU_MC9_RDBFL9	(*( MTU_MC0_RDBFL0_type *) 0xf0061972u)	/* Read Data and B9t Flip Register 9 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int REV_ID         : 16;	/* Revision Identifier */
	} B;
	short S;
	unsigned short US;

} MTU_MC0_REVID_type;
#define MTU_MC0_REVID	(*( MTU_MC0_REVID_type *) 0xf006100cu)	/* Rev0sion ID Register */
#define MTU_MC10_REVID	(*( MTU_MC0_REVID_type *) 0xf0061a0cu)	/* Rev10sion ID Register */
#define MTU_MC11_REVID	(*( MTU_MC0_REVID_type *) 0xf0061b0cu)	/* Rev11sion ID Register */
#define MTU_MC12_REVID	(*( MTU_MC0_REVID_type *) 0xf0061c0cu)	/* Rev12sion ID Register */
#define MTU_MC13_REVID	(*( MTU_MC0_REVID_type *) 0xf0061d0cu)	/* Rev13sion ID Register */
#define MTU_MC14_REVID	(*( MTU_MC0_REVID_type *) 0xf0061e0cu)	/* Rev14sion ID Register */
#define MTU_MC15_REVID	(*( MTU_MC0_REVID_type *) 0xf0061f0cu)	/* Rev15sion ID Register */
#define MTU_MC16_REVID	(*( MTU_MC0_REVID_type *) 0xf006200cu)	/* Rev16sion ID Register */
#define MTU_MC17_REVID	(*( MTU_MC0_REVID_type *) 0xf006210cu)	/* Rev17sion ID Register */
#define MTU_MC18_REVID	(*( MTU_MC0_REVID_type *) 0xf006220cu)	/* Rev18sion ID Register */
#define MTU_MC19_REVID	(*( MTU_MC0_REVID_type *) 0xf006230cu)	/* Rev19sion ID Register */
#define MTU_MC1_REVID	(*( MTU_MC0_REVID_type *) 0xf006110cu)	/* Rev1sion ID Register */
#define MTU_MC20_REVID	(*( MTU_MC0_REVID_type *) 0xf006240cu)	/* Rev20sion ID Register */
#define MTU_MC21_REVID	(*( MTU_MC0_REVID_type *) 0xf006250cu)	/* Rev21sion ID Register */
#define MTU_MC22_REVID	(*( MTU_MC0_REVID_type *) 0xf006260cu)	/* Rev22sion ID Register */
#define MTU_MC23_REVID	(*( MTU_MC0_REVID_type *) 0xf006270cu)	/* Rev23sion ID Register */
#define MTU_MC24_REVID	(*( MTU_MC0_REVID_type *) 0xf006280cu)	/* Rev24sion ID Register */
#define MTU_MC25_REVID	(*( MTU_MC0_REVID_type *) 0xf006290cu)	/* Rev25sion ID Register */
#define MTU_MC26_REVID	(*( MTU_MC0_REVID_type *) 0xf0062a0cu)	/* Rev26sion ID Register */
#define MTU_MC27_REVID	(*( MTU_MC0_REVID_type *) 0xf0062b0cu)	/* Rev27sion ID Register */
#define MTU_MC28_REVID	(*( MTU_MC0_REVID_type *) 0xf0062c0cu)	/* Rev28sion ID Register */
#define MTU_MC29_REVID	(*( MTU_MC0_REVID_type *) 0xf0062d0cu)	/* Rev29sion ID Register */
#define MTU_MC2_REVID	(*( MTU_MC0_REVID_type *) 0xf006120cu)	/* Rev2sion ID Register */
#define MTU_MC30_REVID	(*( MTU_MC0_REVID_type *) 0xf0062e0cu)	/* Rev30sion ID Register */
#define MTU_MC31_REVID	(*( MTU_MC0_REVID_type *) 0xf0062f0cu)	/* Rev31sion ID Register */
#define MTU_MC32_REVID	(*( MTU_MC0_REVID_type *) 0xf006300cu)	/* Rev32sion ID Register */
#define MTU_MC33_REVID	(*( MTU_MC0_REVID_type *) 0xf006310cu)	/* Rev33sion ID Register */
#define MTU_MC34_REVID	(*( MTU_MC0_REVID_type *) 0xf006320cu)	/* Rev34sion ID Register */
#define MTU_MC35_REVID	(*( MTU_MC0_REVID_type *) 0xf006330cu)	/* Rev35sion ID Register */
#define MTU_MC36_REVID	(*( MTU_MC0_REVID_type *) 0xf006340cu)	/* Rev36sion ID Register */
#define MTU_MC37_REVID	(*( MTU_MC0_REVID_type *) 0xf006350cu)	/* Rev37sion ID Register */
#define MTU_MC38_REVID	(*( MTU_MC0_REVID_type *) 0xf006360cu)	/* Rev38sion ID Register */
#define MTU_MC39_REVID	(*( MTU_MC0_REVID_type *) 0xf006370cu)	/* Rev39sion ID Register */
#define MTU_MC3_REVID	(*( MTU_MC0_REVID_type *) 0xf006130cu)	/* Rev3sion ID Register */
#define MTU_MC40_REVID	(*( MTU_MC0_REVID_type *) 0xf006380cu)	/* Rev40sion ID Register */
#define MTU_MC41_REVID	(*( MTU_MC0_REVID_type *) 0xf006390cu)	/* Rev41sion ID Register */
#define MTU_MC42_REVID	(*( MTU_MC0_REVID_type *) 0xf0063a0cu)	/* Rev42sion ID Register */
#define MTU_MC43_REVID	(*( MTU_MC0_REVID_type *) 0xf0063b0cu)	/* Rev43sion ID Register */
#define MTU_MC44_REVID	(*( MTU_MC0_REVID_type *) 0xf0063c0cu)	/* Rev44sion ID Register */
#define MTU_MC45_REVID	(*( MTU_MC0_REVID_type *) 0xf0063d0cu)	/* Rev45sion ID Register */
#define MTU_MC46_REVID	(*( MTU_MC0_REVID_type *) 0xf0063e0cu)	/* Rev46sion ID Register */
#define MTU_MC47_REVID	(*( MTU_MC0_REVID_type *) 0xf0063f0cu)	/* Rev47sion ID Register */
#define MTU_MC48_REVID	(*( MTU_MC0_REVID_type *) 0xf006400cu)	/* Rev48sion ID Register */
#define MTU_MC49_REVID	(*( MTU_MC0_REVID_type *) 0xf006410cu)	/* Rev49sion ID Register */
#define MTU_MC4_REVID	(*( MTU_MC0_REVID_type *) 0xf006140cu)	/* Rev4sion ID Register */
#define MTU_MC50_REVID	(*( MTU_MC0_REVID_type *) 0xf006420cu)	/* Rev50sion ID Register */
#define MTU_MC51_REVID	(*( MTU_MC0_REVID_type *) 0xf006430cu)	/* Rev51sion ID Register */
#define MTU_MC52_REVID	(*( MTU_MC0_REVID_type *) 0xf006440cu)	/* Rev52sion ID Register */
#define MTU_MC53_REVID	(*( MTU_MC0_REVID_type *) 0xf006450cu)	/* Rev53sion ID Register */
#define MTU_MC54_REVID	(*( MTU_MC0_REVID_type *) 0xf006460cu)	/* Rev54sion ID Register */
#define MTU_MC55_REVID	(*( MTU_MC0_REVID_type *) 0xf006470cu)	/* Rev55sion ID Register */
#define MTU_MC56_REVID	(*( MTU_MC0_REVID_type *) 0xf006480cu)	/* Rev56sion ID Register */
#define MTU_MC57_REVID	(*( MTU_MC0_REVID_type *) 0xf006490cu)	/* Rev57sion ID Register */
#define MTU_MC58_REVID	(*( MTU_MC0_REVID_type *) 0xf0064a0cu)	/* Rev58sion ID Register */
#define MTU_MC59_REVID	(*( MTU_MC0_REVID_type *) 0xf0064b0cu)	/* Rev59sion ID Register */
#define MTU_MC5_REVID	(*( MTU_MC0_REVID_type *) 0xf006150cu)	/* Rev5sion ID Register */
#define MTU_MC60_REVID	(*( MTU_MC0_REVID_type *) 0xf0064c0cu)	/* Rev60sion ID Register */
#define MTU_MC61_REVID	(*( MTU_MC0_REVID_type *) 0xf0064d0cu)	/* Rev61sion ID Register */
#define MTU_MC62_REVID	(*( MTU_MC0_REVID_type *) 0xf0064e0cu)	/* Rev62sion ID Register */
#define MTU_MC63_REVID	(*( MTU_MC0_REVID_type *) 0xf0064f0cu)	/* Rev63sion ID Register */
#define MTU_MC64_REVID	(*( MTU_MC0_REVID_type *) 0xf006500cu)	/* Rev64sion ID Register */
#define MTU_MC65_REVID	(*( MTU_MC0_REVID_type *) 0xf006510cu)	/* Rev65sion ID Register */
#define MTU_MC66_REVID	(*( MTU_MC0_REVID_type *) 0xf006520cu)	/* Rev66sion ID Register */
#define MTU_MC67_REVID	(*( MTU_MC0_REVID_type *) 0xf006530cu)	/* Rev67sion ID Register */
#define MTU_MC68_REVID	(*( MTU_MC0_REVID_type *) 0xf006540cu)	/* Rev68sion ID Register */
#define MTU_MC69_REVID	(*( MTU_MC0_REVID_type *) 0xf006550cu)	/* Rev69sion ID Register */
#define MTU_MC6_REVID	(*( MTU_MC0_REVID_type *) 0xf006160cu)	/* Rev6sion ID Register */
#define MTU_MC70_REVID	(*( MTU_MC0_REVID_type *) 0xf006560cu)	/* Rev70sion ID Register */
#define MTU_MC71_REVID	(*( MTU_MC0_REVID_type *) 0xf006570cu)	/* Rev71sion ID Register */
#define MTU_MC72_REVID	(*( MTU_MC0_REVID_type *) 0xf006580cu)	/* Rev72sion ID Register */
#define MTU_MC73_REVID	(*( MTU_MC0_REVID_type *) 0xf006590cu)	/* Rev73sion ID Register */
#define MTU_MC74_REVID	(*( MTU_MC0_REVID_type *) 0xf0065a0cu)	/* Rev74sion ID Register */
#define MTU_MC75_REVID	(*( MTU_MC0_REVID_type *) 0xf0065b0cu)	/* Rev75sion ID Register */
#define MTU_MC76_REVID	(*( MTU_MC0_REVID_type *) 0xf0065c0cu)	/* Rev76sion ID Register */
#define MTU_MC77_REVID	(*( MTU_MC0_REVID_type *) 0xf0065d0cu)	/* Rev77sion ID Register */
#define MTU_MC78_REVID	(*( MTU_MC0_REVID_type *) 0xf0065e0cu)	/* Rev78sion ID Register */
#define MTU_MC79_REVID	(*( MTU_MC0_REVID_type *) 0xf0065f0cu)	/* Rev79sion ID Register */
#define MTU_MC7_REVID	(*( MTU_MC0_REVID_type *) 0xf006170cu)	/* Rev7sion ID Register */
#define MTU_MC80_REVID	(*( MTU_MC0_REVID_type *) 0xf006600cu)	/* Rev80sion ID Register */
#define MTU_MC81_REVID	(*( MTU_MC0_REVID_type *) 0xf006610cu)	/* Rev81sion ID Register */
#define MTU_MC82_REVID	(*( MTU_MC0_REVID_type *) 0xf006620cu)	/* Rev82sion ID Register */
#define MTU_MC83_REVID	(*( MTU_MC0_REVID_type *) 0xf006630cu)	/* Rev83sion ID Register */
#define MTU_MC84_REVID	(*( MTU_MC0_REVID_type *) 0xf006640cu)	/* Rev84sion ID Register */
#define MTU_MC85_REVID	(*( MTU_MC0_REVID_type *) 0xf006650cu)	/* Rev85sion ID Register */
#define MTU_MC86_REVID	(*( MTU_MC0_REVID_type *) 0xf006660cu)	/* Rev86sion ID Register */
#define MTU_MC87_REVID	(*( MTU_MC0_REVID_type *) 0xf006670cu)	/* Rev87sion ID Register */
#define MTU_MC88_REVID	(*( MTU_MC0_REVID_type *) 0xf006680cu)	/* Rev88sion ID Register */
#define MTU_MC89_REVID	(*( MTU_MC0_REVID_type *) 0xf006690cu)	/* Rev89sion ID Register */
#define MTU_MC8_REVID	(*( MTU_MC0_REVID_type *) 0xf006180cu)	/* Rev8sion ID Register */
#define MTU_MC90_REVID	(*( MTU_MC0_REVID_type *) 0xf0066a0cu)	/* Rev90sion ID Register */
#define MTU_MC91_REVID	(*( MTU_MC0_REVID_type *) 0xf0066b0cu)	/* Rev91sion ID Register */
#define MTU_MC92_REVID	(*( MTU_MC0_REVID_type *) 0xf0066c0cu)	/* Rev92sion ID Register */
#define MTU_MC93_REVID	(*( MTU_MC0_REVID_type *) 0xf0066d0cu)	/* Rev93sion ID Register */
#define MTU_MC94_REVID	(*( MTU_MC0_REVID_type *) 0xf0066e0cu)	/* Rev94sion ID Register */
#define MTU_MC95_REVID	(*( MTU_MC0_REVID_type *) 0xf0066f0cu)	/* Rev95sion ID Register */
#define MTU_MC9_REVID	(*( MTU_MC0_REVID_type *) 0xf006190cu)	/* Rev9sion ID Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CPU0_DMEM_DONE : 1;	/* CPU0 DMEM Test Done Status */
		/* const */ unsigned int CPU0_DTAG_DONE : 1;	/* CPU0 DTAG Test Done Status */
		/* const */ unsigned int CPU0_PMEM_DONE : 1;	/* CPU0 PMEM Test Done Status */
		/* const */ unsigned int CPU0_PTAG_DONE : 1;	/* CPU0 PTAG Test Done Status */
		/* const */ unsigned int CPU0_DLMU_STBY_DONE: 1;	/* CPU0 STANDBY DLMU Test Done Status */
		/* const */ unsigned int CPU1_DMEM_DONE : 1;	/* CPU1 DMEM Test Done Status */
		/* const */ unsigned int CPU1_DTAG_DONE : 1;	/* CPU1 DTAG Test Done Status */
		/* const */ unsigned int CPU1_PMEM_DONE : 1;	/* CPU1 PMEM Test Done Status */
		/* const */ unsigned int CPU1_PTAG_DONE : 1;	/* CPU1 PTAG Test Done Status */
		/* const */ unsigned int CPU1_DLMU_STBY_DONE: 1;	/* CPU1 STANDBY DLMU Test Done Status */
		/* const */ unsigned int CPU2_DMEM_DONE : 1;	/* CPU2 DMEM Test Done Status */
		/* const */ unsigned int CPU2_DTAG_DONE : 1;	/* CPU2 DTAG Test Done Status */
		/* const */ unsigned int CPU2_PMEM_DONE : 1;	/* CPU2 PMEM Test Done Status */
		/* const */ unsigned int CPU2_PTAG_DONE : 1;	/* CPU2 PTAG Test Done Status */
		/* const */ unsigned int CPU2_DLMU_DONE : 1;	/* CPU2 DLMU memory Test Done Status */
		/* const */ unsigned int MEM15DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM16DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM17DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM18DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM19DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM20DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM21DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM22DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM23DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM24DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM25DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM26DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM27DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM28DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM29DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int LMU00_DONE     : 1;	/* LMU00 Test Done Status */
		/* const */ unsigned int LMU10_DONE     : 1;	/* LMU10 Test Done Status */
	} B;
	int I;
	unsigned int U;

} MTU_MEMDONE0_type;
#define MTU_MEMDONE0	(*( MTU_MEMDONE0_type *) 0xf0060050u)	/* Memory Test Done Status Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MEM0DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM1DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int CPU0_DMEM1_DONE: 1;	/* CPU0 DMEM1 Test Done Status */
		/* const */ unsigned int CPU1_DMEM1_DONE: 1;	/* CPU1 DMEM1 Test Done Status */
		/* const */ unsigned int R4             : 1;	/* Reserved - Res */
		/* const */ unsigned int R5             : 1;	/* Reserved - Res */
		/* const */ unsigned int MEM6DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM7DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int R8             : 1;	/* Reserved - Res */
		/* const */ unsigned int SADMA_DONE     : 1;	/* SADMA Test Done Status */
		/* const */ unsigned int MEM10DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MCDS_DONE      : 1;	/* MCDS memory Test Done Status */
		/* const */ unsigned int EMEM0_DONE     : 1;	/* EMEM0 Test Done Status */
		/* const */ unsigned int EMEM1_DONE     : 1;	/* EMEM1 Test Done Status */
		/* const */ unsigned int MEM14DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM15DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int EMEM_XTM_DONE  : 1;	/* EMEM XTM memory Test Done Status */
		/* const */ unsigned int SPU_BUFFER0_DONE: 1;	/* SPU BUFFER0 Test Done Status */
		/* const */ unsigned int SPU_BUFFER1_DONE: 1;	/* SPU BUFFER1 Test Done Status */
		/* const */ unsigned int SPU_CONFIG0_DONE: 1;	/* SPU CONFIG0 memory Test Done Status */
		/* const */ unsigned int SPU_CONFIG1_DONE: 1;	/* SPU CONFIG1 memory Test Done Status */
		/* const */ unsigned int MEM21DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM22DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM23DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM24DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM25DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM26DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM27DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM28DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM29DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MCAN10_DONE    : 1;	/* MCAN10 memory Test Done Status */
		/* const */ unsigned int MCAN20_DONE    : 1;	/* MCAN20 memory Test Done Status */
	} B;
	int I;
	unsigned int U;

} MTU_MEMDONE1_type;
#define MTU_MEMDONE1	(*( MTU_MEMDONE1_type *) 0xf0060054u)	/* Memory Test Done Status Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MEM0DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM1DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int ERAY_OBF0_DONE : 1;	/* ERAY OBF0 Test Done Status */
		/* const */ unsigned int MEM3DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int ERAY_TBF_IBF0_DONE: 1;	/* ERAY TBF IBF0 memory Test Done Status */
		/* const */ unsigned int MEM5DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int ERAY_MBF0_DONE : 1;	/* ERAY MBF0 memory Test Done Status */
		/* const */ unsigned int MEM7DONE       : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int R8             : 1;	/* Reserved - Res */
		/* const */ unsigned int R9             : 1;	/* Reserved - Res */
		/* const */ unsigned int R10            : 1;	/* Reserved - Res */
		/* const */ unsigned int R11            : 1;	/* Reserved - Res */
		/* const */ unsigned int R12            : 1;	/* Reserved - Res */
		/* const */ unsigned int SCR_XRAM_DONE  : 1;	/* SCR XRAM Test Done Status */
		/* const */ unsigned int SCR_RAMINT_DONE: 1;	/* SCR Internal RAM Test Done Status */
		/* const */ unsigned int MEM15DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM16DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM17DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int GIGETH_RX_DONE : 1;	/* Gigabit Ethernet RX memoryTest Done Status */
		/* const */ unsigned int GIGETH_TX_DONE : 1;	/* Gigabit Ethernet TX memoryTest Done Status */
		/* const */ unsigned int MEM20DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int HSPDM_RAM_DONE : 1;	/* HDSPDM RAM Test Done Status */
		/* const */ unsigned int MEM22DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int MEM23DONE      : 1;	/* Memory SSH MSTATUS.DONE */
		/* const */ unsigned int SPU_FFT00_RAM_DONE: 1;	/* SPU FFT00 RAM Test Done Status */
		/* const */ unsigned int SPU_FFT01_RAM_DONE: 1;	/* SPU FFT01 RAM Test Done Status */
		/* const */ unsigned int SPU_FFT10_RAM_DONE: 1;	/* SPU FFT10 RAM Test Done Status */
		/* const */ unsigned int SPU_FFT11_RAM_DONE: 1;	/* SPU FFT11 RAM Test Done Status */
		/* const */ unsigned int SPU_FFT20_RAM_DONE: 1;	/* SPU FFT20 RAM Test Done Status */
		/* const */ unsigned int SPU_FFT21_RAM_DONE: 1;	/* SPU FFT21 RAM Test Done Status */
		/* const */ unsigned int SPU_FFT30_RAM_DONE: 1;	/* SPU FFT30 RAM Test Done Status */
		/* const */ unsigned int SPU_FFT31_RAM_DONE: 1;	/* SPU FFT31 RAM Test Done Status */
	} B;
	int I;
	unsigned int U;

} MTU_MEMDONE2_type;
#define MTU_MEMDONE2	(*( MTU_MEMDONE2_type *) 0xf0060058u)	/* Memory Test Done Status Register 2 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CPU0_DMEM_FDA  : 1;	/* CPU0 DMEM Test FDA Status */
		/* const */ unsigned int CPU0_DTAG_FDA  : 1;	/* CPU0 DTAG Test FDA Status */
		/* const */ unsigned int CPU0_PMEM_FDA  : 1;	/* CPU0 PMEM Test FDA Status */
		/* const */ unsigned int CPU0_PTAG_FDA  : 1;	/* CPU0 PTAG Test FDA Status */
		/* const */ unsigned int CPU0_DLMU_STBY_FDA: 1;	/* CPU0 STANDBY DLMU Test FDA Status */
		/* const */ unsigned int CPU1_DMEM_FDA  : 1;	/* CPU1 DMEM Test FDA Status */
		/* const */ unsigned int CPU1_DTAG_FDA  : 1;	/* CPU1 DTAG Test FDA Status */
		/* const */ unsigned int CPU1_PMEM_FDA  : 1;	/* CPU1 PMEM Test FDA Status */
		/* const */ unsigned int CPU1_PTAG_FDA  : 1;	/* CPU1 PTAG Test FDA Status */
		/* const */ unsigned int CPU1_DLMU_STBY_FDA: 1;	/* CPU1 STANDBY DLMU Test FDA Status */
		/* const */ unsigned int CPU2_DMEM_FDA  : 1;	/* CPU2 DMEM Test FDA Status */
		/* const */ unsigned int CPU2_DTAG_FDA  : 1;	/* CPU2 DTAG Test FDA Status */
		/* const */ unsigned int CPU2_PMEM_FDA  : 1;	/* CPU2 PMEM Test FDA Status */
		/* const */ unsigned int CPU2_PTAG_FDA  : 1;	/* CPU2 PTAG Test FDA Status */
		/* const */ unsigned int CPU2_DLMU_FDA  : 1;	/* CPU2 DLMU memory Test FDA Status */
		/* const */ unsigned int MEM15FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM16FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM17FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM18FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM19FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM20FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM21FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM22FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM23FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM24FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM25FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM26FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM27FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM28FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM29FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int LMU00_FDA      : 1;	/* LMU00 Test FDA Status */
		/* const */ unsigned int LMU10_FDA      : 1;	/* LMU10 Test FDA Status */
	} B;
	int I;
	unsigned int U;

} MTU_MEMFDA0_type;
#define MTU_MEMFDA0	(*( MTU_MEMFDA0_type *) 0xf0060060u)	/* Memory Test FDA Status Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MEM0FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM1FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int CPU0_DMEM1_FDA : 1;	/* CPU0 DMEM1 Test FDA Status */
		/* const */ unsigned int CPU1_DMEM1_FDA : 1;	/* CPU1 DMEM1 Test FDA Status */
		/* const */ unsigned int R4             : 2;	/* Reserved - Res */
		/* const */ unsigned int MEM6FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM7FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int R8             : 1;	/* Reserved - Res */
		/* const */ unsigned int SADMA_FDA      : 1;	/* SADMA Test FDA Status */
		/* const */ unsigned int MEM10FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MCDS_FDA       : 1;	/* MCDS memory Test FDA Status */
		/* const */ unsigned int EMEM0_FDA      : 1;	/* EMEM0 Test FDA Status */
		/* const */ unsigned int EMEM1_FDA      : 1;	/* EMEM1 Test FDA Status */
		/* const */ unsigned int EMEM2_FDA      : 1;	/* EMEM2 Test FDA Status */
		/* const */ unsigned int EMEM3_FDA      : 1;	/* EMEM3 Test FDA Status */
		/* const */ unsigned int EMEM_XTM_FDA   : 1;	/* EMEM XTM memory Test FDA Status */
		/* const */ unsigned int SPU_BUFFER0_FDA: 1;	/* SPU BUFFER0 Test FDA Status */
		/* const */ unsigned int SPU_BUFFER1_FDA: 1;	/* SPU BUFFER1 Test FDA Status */
		/* const */ unsigned int SPU_CONFIG0_FDA: 1;	/* SPU CONFIG0 memory Test FDA Status */
		/* const */ unsigned int SPU_CONFIG1_FDA: 1;	/* SPU CONFIG1 memory Test FDA Status */
		/* const */ unsigned int MEM21FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM22FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM23FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM24FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM25FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM26FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM27FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM28FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM29FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MCAN10_FDA     : 1;	/* MCAN10 memory Test FDA Status */
		/* const */ unsigned int MCAN20_FDA     : 1;	/* MCAN20 memory Test FDA Status */
	} B;
	int I;
	unsigned int U;

} MTU_MEMFDA1_type;
#define MTU_MEMFDA1	(*( MTU_MEMFDA1_type *) 0xf0060064u)	/* Memory Test FDA Status Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int MEM0FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM1FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int ERAY_OBF0_FDA  : 1;	/* ERAY OBF0 Test FDA Status */
		/* const */ unsigned int MEM3FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int ERAY_TBF_IBF0_FDA: 1;	/* ERAY TBF IBF0 memory Test FDA Status */
		/* const */ unsigned int MEM5FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int ERAY_MBF0_FDA  : 1;	/* ERAY MBF0 memory Test FDA Status */
		/* const */ unsigned int MEM7FDA        : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int R8             : 1;	/* Reserved - Res */
		/* const */ unsigned int R9             : 1;	/* Reserved - Res */
		/* const */ unsigned int R10            : 1;	/* Reserved - Res */
		/* const */ unsigned int R11            : 1;	/* Reserved - Res */
		/* const */ unsigned int R12            : 1;	/* Reserved - Res */
		/* const */ unsigned int SCR_XRAM_FDA   : 1;	/* SCR XRAM Test FDA Status */
		/* const */ unsigned int SCR_RAMINT_FDA : 1;	/* SCR Internal RAM Test FDA Status */
		/* const */ unsigned int MEM15FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM16FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM17FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int GIGETH_RX_FDA  : 1;	/* Gigabit Ethernet RX memory Test FDA Status */
		/* const */ unsigned int GIGETH_TX_FDA  : 1;	/* Gigabit Ethernet TX SSH memory Test FDA Status */
		/* const */ unsigned int MEM20FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int HSPDM_RAM_FDA  : 1;	/* HDSPDM RAM Test FDA Status */
		/* const */ unsigned int MEM22FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int MEM23FDA       : 1;	/* Memory SSH MSTATUS.FDA */
		/* const */ unsigned int SPU_FFT00_RAM_FDA: 1;	/* SPU FFT00 RAM Test FDA Status */
		/* const */ unsigned int SPU_FFT01_RAM_FDA: 1;	/* SPU FFT01 RAM Test FDA Status */
		/* const */ unsigned int SPU_FFT10_RAM_FDA: 1;	/* SPU FFT10 RAM Test FDA Status */
		/* const */ unsigned int SPU_FFT11_RAM_FDA: 1;	/* SPU FFT11 RAM Test FDA Status */
		/* const */ unsigned int SPU_FFT20_RAM_FDA: 1;	/* SPU FFT20 RAM Test FDA Status */
		/* const */ unsigned int SPU_FFT21_RAM_FDA: 1;	/* SPU FFT21 RAM Test FDA Status */
		/* const */ unsigned int SPU_FFT30_RAM_FDA: 1;	/* SPU FFT30 RAM Test FDA Status */
		/* const */ unsigned int SPU_FFT31_RAM_FDA: 1;	/* SPU FFT31 RAM Test FDA Status */
	} B;
	int I;
	unsigned int U;

} MTU_MEMFDA2_type;
#define MTU_MEMFDA2	(*( MTU_MEMFDA2_type *) 0xf0060068u)	/* Memory Test FDA Status Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU0_DCMAP     : 1;	/* CPU0 DCache Mapping */
		/* const */ unsigned int CPU0_DTMAP     : 1;	/* CPU0 DTAG Mapping */
		unsigned int CPU0_PCMAP     : 1;	/* CPU0 PCACHE Mapping */
		/* const */ unsigned int CPU0_PTMAP     : 1;	/* CPU0 PTAG Mapping */
		/* const */ unsigned int R4             : 1;	/* Reserved - Res */
		unsigned int CPU1_DCMAP     : 1;	/* CPU1 DCache Mapping */
		/* const */ unsigned int CPU1_DTMAP     : 1;	/* CPU1 DTAG Mapping */
		unsigned int CPU1_PCMAP     : 1;	/* CPU1 PCACHE Mapping */
		/* const */ unsigned int CPU1_PTMAP     : 1;	/* CPU1 PTAG Mapping */
		/* const */ unsigned int R9             : 1;	/* Reserved - Res */
		unsigned int CPU2_DCMAP     : 1;	/* CPU2 DCache Mapping */
		/* const */ unsigned int CPU2_DTMAP     : 1;	/* CPU2 DTAG Mapping */
		unsigned int CPU2_PCMAP     : 1;	/* CPU2 PCACHE Mapping */
		/* const */ unsigned int CPU2_PTMAP     : 1;	/* CPU2 PTAG Mapping */
		/* const */ unsigned int R14            : 1;	/* Reserved - Res */
		unsigned int MEM15MAP       : 1;	/* MEM15 Mapping Enable */
		unsigned int MEM16MAP       : 1;	/* MEM16 Mapping Enable */
		unsigned int MEM17MAP       : 1;	/* MEM17 Mapping Enable */
		unsigned int MEM18MAP       : 1;	/* MEM18 Mapping Enable */
		/* const */ unsigned int R19            : 1;	/* Reserved - Res */
		unsigned int MEM20MAP       : 1;	/* MEM20 Mapping Enable */
		unsigned int MEM21MAP       : 1;	/* MEM21 Mapping Enable */
		unsigned int MEM22MAP       : 1;	/* MEM22 Mapping Enable */
		unsigned int MEM23MAP       : 1;	/* MEM23 Mapping Enable */
		/* const */ unsigned int R24            : 1;	/* Reserved - Res */
		unsigned int MEM25MAP       : 1;	/* MEM25 Mapping Enable */
		unsigned int MEM26MAP       : 1;	/* MEM26 Mapping Enable */
		unsigned int MEM27MAP       : 1;	/* MEM27 Mapping Enable */
		unsigned int MEM28MAP       : 1;	/* MEM28 Mapping Enable */
		/* const */ unsigned int R29            : 3;	/* Reserved - Res */
	} B;
	int I;
	unsigned int U;

} MTU_MEMMAP_type;
#define MTU_MEMMAP	(*( MTU_MEMMAP_type *) 0xf006001cu)	/* Memory Mapping Enable Register */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int CPU0_DMEM_AIU  : 1;	/* CPU0 DMEM Partial AutoInitialize of Cache Partition Underway */
		/* const */ unsigned int CPU0_DTAG_AIU  : 1;	/* CPU0 DTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int CPU0_PMEM_AIU  : 1;	/* CPU0 PMEM Partial AutoInitialize of Cache Partition Underway */
		/* const */ unsigned int CPU0_PTAG_AIU  : 1;	/* CPU0 PTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int R4             : 1;	/* Reserved - Res */
		/* const */ unsigned int CPU1_DMEM_AIU  : 1;	/* CPU1 DMEM Partial AutoInitialize of Cache Partition Underway */
		/* const */ unsigned int CPU1_DTAG_AIU  : 1;	/* CPU1 DTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int CPU1_PMEM_AIU  : 1;	/* CPU1 PMEM Partial AutoInitialize of Cache Partition Underway */
		/* const */ unsigned int CPU1_PTAG_AIU  : 1;	/* CPU1 PTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int R9             : 1;	/* Reserved - Res */
		/* const */ unsigned int CPU2_DMEM_AIU  : 1;	/* CPU2 DMEM Partial AutoInitialize of Cache Partition Underway */
		/* const */ unsigned int CPU2_DTAG_AIU  : 1;	/* CPU2 DTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int CPU2_PMEM_AIU  : 1;	/* CPU2 PMEM Partial AutoInitialize of Cache Partition Underway */
		/* const */ unsigned int CPU2_PTAG_AIU  : 1;	/* CPU2 PTAG MBIST AutoInitialize Underway */
		/* const */ unsigned int R14            : 1;	/* Reserved - Res */
		/* const */ unsigned int MEM15AIU       : 1;	/* Memory 15 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM16AIU       : 1;	/* Memory 16 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM17AIU       : 1;	/* Memory 17 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM18AIU       : 1;	/* Memory 18 MBIST AutoInitialize Underway */
		/* const */ unsigned int R19            : 1;	/* Reserved - Res */
		/* const */ unsigned int MEM20AIU       : 1;	/* Memory 20 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM21AIU       : 1;	/* Memory 21 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM22AIU       : 1;	/* Memory 22 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM23AIU       : 1;	/* Memory 23 MBIST AutoInitialize Underway */
		/* const */ unsigned int R24            : 1;	/* Reserved - Res */
		/* const */ unsigned int MEM25AIU       : 1;	/* Memory 25 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM26AIU       : 1;	/* Memory 26 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM27AIU       : 1;	/* Memory 27 MBIST AutoInitialize Underway */
		/* const */ unsigned int MEM28AIU       : 1;	/* Memory 28 MBIST AutoInitialize Underway */
		/* const */ unsigned int R29            : 3;	/* Reserved - Res */
	} B;
	int I;
	unsigned int U;

} MTU_MEMSTAT0_type;
#define MTU_MEMSTAT0	(*( MTU_MEMSTAT0_type *) 0xf0060038u)	/* Memory Status Register 0 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Res0           : 2;	/* Reserved - Res */
		/* const */ unsigned int CPU0_DMEM1_AIU : 1;	/* CPU0 DMEM1 Partial AutoInitialize of Cache Partition Underway */
		/* const */ unsigned int CPU1_DMEM1_AIU : 1;	/* CPU1 DMEM1 Partial AutoInitialize of Cache Partition Underway */
		/* const */ unsigned int R4             : 1;	/* Reserved - Res */
		/* const */ unsigned int R5             : 3;	/* Reserved - Res */
		/* const */ unsigned int R8             : 1;	/* Reserved - Res */
		/* const */ unsigned int Res9           : 23;	/* Reserved - Res */
	} B;
	int I;
	unsigned int U;

} MTU_MEMSTAT1_type;
#define MTU_MEMSTAT1	(*( MTU_MEMSTAT1_type *) 0xf006003cu)	/* Memory Status Register 1 */

typedef volatile union
{
	struct
	{ 
		/* const */ unsigned int Res0           : 2;	/* Reserved - Res */
		/* const */ unsigned int R2             : 2;	/* Reserved - Res */
		/* const */ unsigned int R4             : 1;	/* Reserved - Res */
		/* const */ unsigned int R5             : 3;	/* Reserved - Res */
		/* const */ unsigned int R8             : 1;	/* Reserved - Res */
		/* const */ unsigned int Res9           : 1;	/* Reserved - Res */
		/* const */ unsigned int R10            : 1;	/* Reserved - Res */
		/* const */ unsigned int R11            : 1;	/* Reserved - Res */
		/* const */ unsigned int R12            : 1;	/* Reserved - Res */
		/* const */ unsigned int Res13          : 19;	/* Reserved - Res */
	} B;
	int I;
	unsigned int U;

} MTU_MEMSTAT2_type;
#define MTU_MEMSTAT2	(*( MTU_MEMSTAT2_type *) 0xf0060040u)	/* Memory Status Register 2 */

typedef volatile union
{
	struct
	{ 
		unsigned int CPU0_DMEM_EN   : 1;	/* CPU0 DMEM SSH instance Enable */
		unsigned int CPU0_DTAG_EN   : 1;	/* CPU0 DTAG SSH instance Enable */
		unsigned int CPU0_PMEM_EN   : 1;	/* CPU0 PMEM SSH instance Enable */
		unsigned int CPU0_PTAG_EN   : 1;	/* CPU0 PTAG SSH instance Enable */
		unsigned int CPU0_DLMU_STBY_EN: 1;	/* CPU0 STANDBY DLMU SSH instance Enable */
		unsigned int CPU1_DMEM_EN   : 1;	/* CPU1 DMEM SSH instance Enable */
		unsigned int CPU1_DTAG_EN   : 1;	/* CPU1 DTAG SSH instance Enable */
		unsigned int CPU1_PMEM_EN   : 1;	/* CPU1 PMEM SSH instance Enable */
		unsigned int CPU1_PTAG_EN   : 1;	/* CPU1 PTAG SSH instance Enable */
		unsigned int CPU1_DLMU_STBY_EN: 1;	/* CPU1 STANDBY DLMU SSH instance Enable */
		unsigned int CPU2_DMEM_EN   : 1;	/* CPU2 DMEM SSH instance Enable */
		unsigned int CPU2_DTAG_EN   : 1;	/* CPU2 DTAG SSH instance Enable */
		unsigned int CPU2_PMEM_EN   : 1;	/* CPU2 PMEM SSH instance Enable */
		unsigned int CPU2_PTAG_EN   : 1;	/* CPU2 PTAG SSH instance Enable */
		unsigned int CPU2_DLMU_EN   : 1;	/* CPU2 DLMU memory SSH instance Enable */
		unsigned int MEM15EN        : 1;	/* Memory 15 SSH instance Enable */
		unsigned int MEM16EN        : 1;	/* Memory 16 SSH instance Enable */
		unsigned int MEM17EN        : 1;	/* Memory 17 SSH instance Enable */
		unsigned int MEM18EN        : 1;	/* Memory 18 SSH instance Enable */
		unsigned int MEM19EN        : 1;	/* Memory 19 SSH instance Enable */
		unsigned int MEM20EN        : 1;	/* Memory 20 SSH instance Enable */
		unsigned int MEM21EN        : 1;	/* Memory 21 SSH instance Enable */
		unsigned int MEM22EN        : 1;	/* Memory 22 SSH instance Enable */
		unsigned int MEM23EN        : 1;	/* Memory 23 SSH instance Enable */
		unsigned int MEM24EN        : 1;	/* Memory 24 SSH instance Enable */
		unsigned int MEM25EN        : 1;	/* Memory 25 SSH instance Enable */
		unsigned int MEM26EN        : 1;	/* Memory 26 SSH instance Enable */
		unsigned int MEM27EN        : 1;	/* Memory 27 SSH instance Enable */
		unsigned int MEM28EN        : 1;	/* Memory 28 SSH instance Enable */
		unsigned int MEM29EN        : 1;	/* Memory 29 SSH instance Enable */
		unsigned int LMU00_EN       : 1;	/* LMU00 SSH instance Enable */
		unsigned int LMU10_EN       : 1;	/* LMU10 SSH instance Enable */
	} B;
	int I;
	unsigned int U;

} MTU_MEMTEST0_type;
#define MTU_MEMTEST0	(*( MTU_MEMTEST0_type *) 0xf0060010u)	/* Memory MBIST Enable Register 0 */

typedef volatile union
{
	struct
	{ 
		unsigned int MEM0EN         : 1;	/* Memory 0 SSH instance Enable */
		unsigned int MEM1EN         : 1;	/* Memory 1 SSH instance Enable */
		unsigned int CPU0_DMEM1_EN  : 1;	/* CPU0 DMEM1 SSH instance Enable */
		unsigned int CPU1_DMEM1_EN  : 1;	/* CPU1 DMEM1 SSH instance Enable */
		/* const */ unsigned int R4             : 1;	/* Reserved - Res */
		/* const */ unsigned int R5             : 1;	/* Reserved - Res */
		unsigned int MEM6EN         : 1;	/* Memory 6 SSH instance Enable */
		unsigned int MEM7EN         : 1;	/* Memory 7 SSH instance Enable */
		unsigned int R8             : 1;	/* Reserved - Res */
		unsigned int SADMA_EN       : 1;	/* SADMA SSH instance Enable */
		unsigned int MEM10EN        : 1;	/* Memory 10 SSH instance Enable */
		unsigned int MCDS_EN        : 1;	/* MCDS memory SSH instance Enable */
		unsigned int EMEM0_EN       : 1;	/* EMEM0 SSH instance Enable */
		unsigned int EMEM1_EN       : 1;	/* EMEM1 SSH instance Enable */
		unsigned int MEM14EN        : 1;	/* Memory 14 SSH instance Enable */
		unsigned int MEM15EN        : 1;	/* Memory 15 SSH instance Enable */
		unsigned int EMEM_XTM_EN    : 1;	/* EMEM XTM memory SSH instance Enable */
		unsigned int SPU_BUFFER0_EN : 1;	/* SPU BUFFER0 SSH instance Enable */
		unsigned int SPU_BUFFER1_EN : 1;	/* SPU BUFFER1 SSH instance Enable */
		unsigned int SPU_CONFIG0_EN : 1;	/* SPU CONFIG0 memory SSH instance Enable */
		unsigned int SPU_CONFIG1_EN : 1;	/* SPU CONFIG1 memory SSH instance Enable */
		unsigned int MEM21EN        : 1;	/* Memory 21 SSH instance Enable */
		unsigned int MEM22EN        : 1;	/* Memory 22 SSH instance Enable */
		unsigned int MEM23EN        : 1;	/* Memory 23 SSH instance Enable */
		unsigned int MEM24EN        : 1;	/* Memory 24 SSH instance Enable */
		unsigned int MEM25EN        : 1;	/* Memory 25 SSH instance Enable */
		unsigned int MEM26EN        : 1;	/* Memory 26 SSH instance Enable */
		unsigned int MEM27EN        : 1;	/* Memory 27 SSH instance Enable */
		unsigned int MEM28EN        : 1;	/* Memory 28 SSH instance Enable */
		unsigned int MEM29EN        : 1;	/* Memory 29 SSH instance Enable */
		unsigned int MCAN10_EN      : 1;	/* MCAN10 memory SSH instance Enable */
		unsigned int MCAN20_EN      : 1;	/* MCAN20 memory SSH instance Enable */
	} B;
	int I;
	unsigned int U;

} MTU_MEMTEST1_type;
#define MTU_MEMTEST1	(*( MTU_MEMTEST1_type *) 0xf0060014u)	/* Memory MBIST Enable Register 1 */

typedef volatile union
{
	struct
	{ 
		unsigned int MEM0EN         : 1;	/* Memory 0 SSH instance Enable */
		unsigned int MEM1EN         : 1;	/* Memory 1 SSH instance Enable */
		unsigned int ERAY_OBF0_EN   : 1;	/* ERAY OBF0 SSH instance Enable */
		unsigned int MEM3EN         : 1;	/* Memory 3 SSH instance Enable */
		unsigned int ERAY_TBF_IBF0_EN: 1;	/* ERAY TBF IBF0 memory SSH instance Enable */
		unsigned int MEM5EN         : 1;	/* Memory 5 SSH instance Enable */
		unsigned int ERAY_MBF0_EN   : 1;	/* ERAY MBF0 memory SSH instance Enable */
		unsigned int MEM7EN         : 1;	/* Memory 7 SSH instance Enable */
		unsigned int R8             : 1;	/* Reserved - Res */
		unsigned int R9             : 1;	/* Reserved - Res */
		unsigned int R10            : 1;	/* Reserved - Res */
		unsigned int R11            : 1;	/* Reserved - Res */
		unsigned int R12            : 1;	/* Reserved - Res */
		unsigned int SCR_XRAM_EN    : 1;	/* SCR XRAM SSH instance Enable */
		unsigned int SCR_RAMINT_EN  : 1;	/* SCR Internal RAM SSH instance Enable */
		unsigned int MEM15EN        : 1;	/* Memory 15 SSH instance Enable */
		unsigned int MEM16EN        : 1;	/* Memory 16 SSH instance Enable */
		unsigned int MEM17EN        : 1;	/* Memory 17 SSH instance Enable */
		unsigned int GIGETH_RX_EN   : 1;	/* Gigabit Ethernet RX SSH instance Enable */
		unsigned int GIGETH_TX_EN   : 1;	/* Gigabit Ethernet TX SSH instance Enable */
		unsigned int MEM20EN        : 1;	/* Memory 20 SSH instance Enable */
		unsigned int HSPDM_RAM_EN   : 1;	/* HDSPDM RAM SSH instance Enable */
		unsigned int MEM22EN        : 1;	/* Memory 22 SSH instance Enable */
		unsigned int MEM23EN        : 1;	/* Memory 23 SSH instance Enable */
		unsigned int SPU_FFT00_RAM_EN: 1;	/* SPU FFT00 RAM SSH instance Enable */
		unsigned int SPU_FFT01_RAM_EN: 1;	/* SPU FFT01 RAM SSH instance Enable */
		unsigned int SPU_FFT10_RAM_EN: 1;	/* SPU FFT10 RAM SSH instance Enable */
		unsigned int SPU_FFT11_RAM_EN: 1;	/* SPU FFT11 RAM SSH instance Enable */
		unsigned int SPU_FFT20_RAM_EN: 1;	/* SPU FFT20 RAM SSH instance Enable */
		unsigned int SPU_FFT21_RAM_EN: 1;	/* SPU FFT21 RAM SSH instance Enable */
		unsigned int SPU_FFT30_RAM_EN: 1;	/* SPU FFT30 RAM SSH instance Enable */
		unsigned int SPU_FFT31_RAM_EN: 1;	/* SPU FFT31 RAM SSH instance Enable */
	} B;
	int I;
	unsigned int U;

} MTU_MEMTEST2_type;
#define MTU_MEMTEST2	(*( MTU_MEMTEST2_type *) 0xf0060018u)	/* Memory MBIST Enable Register 2 */

#endif /*_REGTC35X_H*/
